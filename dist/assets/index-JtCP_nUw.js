var A2 = (t, e) => () => (e || t((e = { exports: {} }).exports, e), e.exports);
var Uq = A2((hs, Qr) => {
  function C2(t, e) {
    for (var n = 0; n < e.length; n++) {
      const r = e[n];
      if (typeof r != "string" && !Array.isArray(r)) {
        for (const a in r)
          if (a !== "default" && !(a in t)) {
            const o = Object.getOwnPropertyDescriptor(r, a);
            o &&
              Object.defineProperty(
                t,
                a,
                o.get ? o : { enumerable: !0, get: () => r[a] }
              );
          }
      }
    }
    return Object.freeze(
      Object.defineProperty(t, Symbol.toStringTag, { value: "Module" })
    );
  }
  (function () {
    const e = document.createElement("link").relList;
    if (e && e.supports && e.supports("modulepreload")) return;
    for (const a of document.querySelectorAll('link[rel="modulepreload"]'))
      r(a);
    new MutationObserver((a) => {
      for (const o of a)
        if (o.type === "childList")
          for (const u of o.addedNodes)
            u.tagName === "LINK" && u.rel === "modulepreload" && r(u);
    }).observe(document, { childList: !0, subtree: !0 });
    function n(a) {
      const o = {};
      return (
        a.integrity && (o.integrity = a.integrity),
        a.referrerPolicy && (o.referrerPolicy = a.referrerPolicy),
        a.crossOrigin === "use-credentials"
          ? (o.credentials = "include")
          : a.crossOrigin === "anonymous"
          ? (o.credentials = "omit")
          : (o.credentials = "same-origin"),
        o
      );
    }
    function r(a) {
      if (a.ep) return;
      a.ep = !0;
      const o = n(a);
      fetch(a.href, o);
    }
  })();
  function nu(t) {
    return t &&
      t.__esModule &&
      Object.prototype.hasOwnProperty.call(t, "default")
      ? t.default
      : t;
  }
  var qA = { exports: {} },
    jm = {},
    KA = { exports: {} },
    Tn = {};
  /**
   * @license React
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */ var Lf = Symbol.for("react.element"),
    T2 = Symbol.for("react.portal"),
    I2 = Symbol.for("react.fragment"),
    P2 = Symbol.for("react.strict_mode"),
    R2 = Symbol.for("react.profiler"),
    O2 = Symbol.for("react.provider"),
    N2 = Symbol.for("react.context"),
    L2 = Symbol.for("react.forward_ref"),
    D2 = Symbol.for("react.suspense"),
    M2 = Symbol.for("react.memo"),
    j2 = Symbol.for("react.lazy"),
    q_ = Symbol.iterator;
  function F2(t) {
    return t === null || typeof t != "object"
      ? null
      : ((t = (q_ && t[q_]) || t["@@iterator"]),
        typeof t == "function" ? t : null);
  }
  var QA = {
      isMounted: function () {
        return !1;
      },
      enqueueForceUpdate: function () {},
      enqueueReplaceState: function () {},
      enqueueSetState: function () {},
    },
    ZA = Object.assign,
    JA = {};
  function Ch(t, e, n) {
    (this.props = t),
      (this.context = e),
      (this.refs = JA),
      (this.updater = n || QA);
  }
  Ch.prototype.isReactComponent = {};
  Ch.prototype.setState = function (t, e) {
    if (typeof t != "object" && typeof t != "function" && t != null)
      throw Error(
        "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
      );
    this.updater.enqueueSetState(this, t, e, "setState");
  };
  Ch.prototype.forceUpdate = function (t) {
    this.updater.enqueueForceUpdate(this, t, "forceUpdate");
  };
  function eC() {}
  eC.prototype = Ch.prototype;
  function k0(t, e, n) {
    (this.props = t),
      (this.context = e),
      (this.refs = JA),
      (this.updater = n || QA);
  }
  var A0 = (k0.prototype = new eC());
  A0.constructor = k0;
  ZA(A0, Ch.prototype);
  A0.isPureReactComponent = !0;
  var K_ = Array.isArray,
    tC = Object.prototype.hasOwnProperty,
    C0 = { current: null },
    nC = { key: !0, ref: !0, __self: !0, __source: !0 };
  function rC(t, e, n) {
    var r,
      a = {},
      o = null,
      u = null;
    if (e != null)
      for (r in (e.ref !== void 0 && (u = e.ref),
      e.key !== void 0 && (o = "" + e.key),
      e))
        tC.call(e, r) && !nC.hasOwnProperty(r) && (a[r] = e[r]);
    var g = arguments.length - 2;
    if (g === 1) a.children = n;
    else if (1 < g) {
      for (var x = Array(g), E = 0; E < g; E++) x[E] = arguments[E + 2];
      a.children = x;
    }
    if (t && t.defaultProps)
      for (r in ((g = t.defaultProps), g)) a[r] === void 0 && (a[r] = g[r]);
    return {
      $$typeof: Lf,
      type: t,
      key: o,
      ref: u,
      props: a,
      _owner: C0.current,
    };
  }
  function z2(t, e) {
    return {
      $$typeof: Lf,
      type: t.type,
      key: e,
      ref: t.ref,
      props: t.props,
      _owner: t._owner,
    };
  }
  function T0(t) {
    return typeof t == "object" && t !== null && t.$$typeof === Lf;
  }
  function V2(t) {
    var e = { "=": "=0", ":": "=2" };
    return (
      "$" +
      t.replace(/[=:]/g, function (n) {
        return e[n];
      })
    );
  }
  var Q_ = /\/+/g;
  function Sy(t, e) {
    return typeof t == "object" && t !== null && t.key != null
      ? V2("" + t.key)
      : e.toString(36);
  }
  function cg(t, e, n, r, a) {
    var o = typeof t;
    (o === "undefined" || o === "boolean") && (t = null);
    var u = !1;
    if (t === null) u = !0;
    else
      switch (o) {
        case "string":
        case "number":
          u = !0;
          break;
        case "object":
          switch (t.$$typeof) {
            case Lf:
            case T2:
              u = !0;
          }
      }
    if (u)
      return (
        (u = t),
        (a = a(u)),
        (t = r === "" ? "." + Sy(u, 0) : r),
        K_(a)
          ? ((n = ""),
            t != null && (n = t.replace(Q_, "$&/") + "/"),
            cg(a, e, n, "", function (E) {
              return E;
            }))
          : a != null &&
            (T0(a) &&
              (a = z2(
                a,
                n +
                  (!a.key || (u && u.key === a.key)
                    ? ""
                    : ("" + a.key).replace(Q_, "$&/") + "/") +
                  t
              )),
            e.push(a)),
        1
      );
    if (((u = 0), (r = r === "" ? "." : r + ":"), K_(t)))
      for (var g = 0; g < t.length; g++) {
        o = t[g];
        var x = r + Sy(o, g);
        u += cg(o, e, n, x, a);
      }
    else if (((x = F2(t)), typeof x == "function"))
      for (t = x.call(t), g = 0; !(o = t.next()).done; )
        (o = o.value), (x = r + Sy(o, g++)), (u += cg(o, e, n, x, a));
    else if (o === "object")
      throw (
        ((e = String(t)),
        Error(
          "Objects are not valid as a React child (found: " +
            (e === "[object Object]"
              ? "object with keys {" + Object.keys(t).join(", ") + "}"
              : e) +
            "). If you meant to render a collection of children, use an array instead."
        ))
      );
    return u;
  }
  function Tp(t, e, n) {
    if (t == null) return t;
    var r = [],
      a = 0;
    return (
      cg(t, r, "", "", function (o) {
        return e.call(n, o, a++);
      }),
      r
    );
  }
  function $2(t) {
    if (t._status === -1) {
      var e = t._result;
      (e = e()),
        e.then(
          function (n) {
            (t._status === 0 || t._status === -1) &&
              ((t._status = 1), (t._result = n));
          },
          function (n) {
            (t._status === 0 || t._status === -1) &&
              ((t._status = 2), (t._result = n));
          }
        ),
        t._status === -1 && ((t._status = 0), (t._result = e));
    }
    if (t._status === 1) return t._result.default;
    throw t._result;
  }
  var fs = { current: null },
    ug = { transition: null },
    B2 = {
      ReactCurrentDispatcher: fs,
      ReactCurrentBatchConfig: ug,
      ReactCurrentOwner: C0,
    };
  Tn.Children = {
    map: Tp,
    forEach: function (t, e, n) {
      Tp(
        t,
        function () {
          e.apply(this, arguments);
        },
        n
      );
    },
    count: function (t) {
      var e = 0;
      return (
        Tp(t, function () {
          e++;
        }),
        e
      );
    },
    toArray: function (t) {
      return (
        Tp(t, function (e) {
          return e;
        }) || []
      );
    },
    only: function (t) {
      if (!T0(t))
        throw Error(
          "React.Children.only expected to receive a single React element child."
        );
      return t;
    },
  };
  Tn.Component = Ch;
  Tn.Fragment = I2;
  Tn.Profiler = R2;
  Tn.PureComponent = k0;
  Tn.StrictMode = P2;
  Tn.Suspense = D2;
  Tn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = B2;
  Tn.cloneElement = function (t, e, n) {
    if (t == null)
      throw Error(
        "React.cloneElement(...): The argument must be a React element, but you passed " +
          t +
          "."
      );
    var r = ZA({}, t.props),
      a = t.key,
      o = t.ref,
      u = t._owner;
    if (e != null) {
      if (
        (e.ref !== void 0 && ((o = e.ref), (u = C0.current)),
        e.key !== void 0 && (a = "" + e.key),
        t.type && t.type.defaultProps)
      )
        var g = t.type.defaultProps;
      for (x in e)
        tC.call(e, x) &&
          !nC.hasOwnProperty(x) &&
          (r[x] = e[x] === void 0 && g !== void 0 ? g[x] : e[x]);
    }
    var x = arguments.length - 2;
    if (x === 1) r.children = n;
    else if (1 < x) {
      g = Array(x);
      for (var E = 0; E < x; E++) g[E] = arguments[E + 2];
      r.children = g;
    }
    return { $$typeof: Lf, type: t.type, key: a, ref: o, props: r, _owner: u };
  };
  Tn.createContext = function (t) {
    return (
      (t = {
        $$typeof: N2,
        _currentValue: t,
        _currentValue2: t,
        _threadCount: 0,
        Provider: null,
        Consumer: null,
        _defaultValue: null,
        _globalName: null,
      }),
      (t.Provider = { $$typeof: O2, _context: t }),
      (t.Consumer = t)
    );
  };
  Tn.createElement = rC;
  Tn.createFactory = function (t) {
    var e = rC.bind(null, t);
    return (e.type = t), e;
  };
  Tn.createRef = function () {
    return { current: null };
  };
  Tn.forwardRef = function (t) {
    return { $$typeof: L2, render: t };
  };
  Tn.isValidElement = T0;
  Tn.lazy = function (t) {
    return { $$typeof: j2, _payload: { _status: -1, _result: t }, _init: $2 };
  };
  Tn.memo = function (t, e) {
    return { $$typeof: M2, type: t, compare: e === void 0 ? null : e };
  };
  Tn.startTransition = function (t) {
    var e = ug.transition;
    ug.transition = {};
    try {
      t();
    } finally {
      ug.transition = e;
    }
  };
  Tn.unstable_act = function () {
    throw Error("act(...) is not supported in production builds of React.");
  };
  Tn.useCallback = function (t, e) {
    return fs.current.useCallback(t, e);
  };
  Tn.useContext = function (t) {
    return fs.current.useContext(t);
  };
  Tn.useDebugValue = function () {};
  Tn.useDeferredValue = function (t) {
    return fs.current.useDeferredValue(t);
  };
  Tn.useEffect = function (t, e) {
    return fs.current.useEffect(t, e);
  };
  Tn.useId = function () {
    return fs.current.useId();
  };
  Tn.useImperativeHandle = function (t, e, n) {
    return fs.current.useImperativeHandle(t, e, n);
  };
  Tn.useInsertionEffect = function (t, e) {
    return fs.current.useInsertionEffect(t, e);
  };
  Tn.useLayoutEffect = function (t, e) {
    return fs.current.useLayoutEffect(t, e);
  };
  Tn.useMemo = function (t, e) {
    return fs.current.useMemo(t, e);
  };
  Tn.useReducer = function (t, e, n) {
    return fs.current.useReducer(t, e, n);
  };
  Tn.useRef = function (t) {
    return fs.current.useRef(t);
  };
  Tn.useState = function (t) {
    return fs.current.useState(t);
  };
  Tn.useSyncExternalStore = function (t, e, n) {
    return fs.current.useSyncExternalStore(t, e, n);
  };
  Tn.useTransition = function () {
    return fs.current.useTransition();
  };
  Tn.version = "18.2.0";
  KA.exports = Tn;
  var ue = KA.exports;
  const nr = nu(ue),
    H2 = C2({ __proto__: null, default: nr }, [ue]);
  /**
   * @license React
   * react-jsx-runtime.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */ var W2 = ue,
    U2 = Symbol.for("react.element"),
    X2 = Symbol.for("react.fragment"),
    Y2 = Object.prototype.hasOwnProperty,
    G2 =
      W2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    q2 = { key: !0, ref: !0, __self: !0, __source: !0 };
  function iC(t, e, n) {
    var r,
      a = {},
      o = null,
      u = null;
    n !== void 0 && (o = "" + n),
      e.key !== void 0 && (o = "" + e.key),
      e.ref !== void 0 && (u = e.ref);
    for (r in e) Y2.call(e, r) && !q2.hasOwnProperty(r) && (a[r] = e[r]);
    if (t && t.defaultProps)
      for (r in ((e = t.defaultProps), e)) a[r] === void 0 && (a[r] = e[r]);
    return {
      $$typeof: U2,
      type: t,
      key: o,
      ref: u,
      props: a,
      _owner: G2.current,
    };
  }
  jm.Fragment = X2;
  jm.jsx = iC;
  jm.jsxs = iC;
  qA.exports = jm;
  var P = qA.exports,
    Tx = {},
    sC = { exports: {} },
    Xs = {},
    aC = { exports: {} },
    oC = {};
  /**
   * @license React
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */ (function (t) {
    function e(we, Xe) {
      var Oe = we.length;
      we.push(Xe);
      e: for (; 0 < Oe; ) {
        var Ye = (Oe - 1) >>> 1,
          Re = we[Ye];
        if (0 < a(Re, Xe)) (we[Ye] = Xe), (we[Oe] = Re), (Oe = Ye);
        else break e;
      }
    }
    function n(we) {
      return we.length === 0 ? null : we[0];
    }
    function r(we) {
      if (we.length === 0) return null;
      var Xe = we[0],
        Oe = we.pop();
      if (Oe !== Xe) {
        we[0] = Oe;
        e: for (var Ye = 0, Re = we.length, $e = Re >>> 1; Ye < $e; ) {
          var Fe = 2 * (Ye + 1) - 1,
            ct = we[Fe],
            de = Fe + 1,
            yt = we[de];
          if (0 > a(ct, Oe))
            de < Re && 0 > a(yt, ct)
              ? ((we[Ye] = yt), (we[de] = Oe), (Ye = de))
              : ((we[Ye] = ct), (we[Fe] = Oe), (Ye = Fe));
          else if (de < Re && 0 > a(yt, Oe))
            (we[Ye] = yt), (we[de] = Oe), (Ye = de);
          else break e;
        }
      }
      return Xe;
    }
    function a(we, Xe) {
      var Oe = we.sortIndex - Xe.sortIndex;
      return Oe !== 0 ? Oe : we.id - Xe.id;
    }
    if (
      typeof performance == "object" &&
      typeof performance.now == "function"
    ) {
      var o = performance;
      t.unstable_now = function () {
        return o.now();
      };
    } else {
      var u = Date,
        g = u.now();
      t.unstable_now = function () {
        return u.now() - g;
      };
    }
    var x = [],
      E = [],
      L = 1,
      z = null,
      B = 3,
      ae = !1,
      se = !1,
      le = !1,
      he = typeof setTimeout == "function" ? setTimeout : null,
      oe = typeof clearTimeout == "function" ? clearTimeout : null,
      F = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" &&
      navigator.scheduling !== void 0 &&
      navigator.scheduling.isInputPending !== void 0 &&
      navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function ce(we) {
      for (var Xe = n(E); Xe !== null; ) {
        if (Xe.callback === null) r(E);
        else if (Xe.startTime <= we)
          r(E), (Xe.sortIndex = Xe.expirationTime), e(x, Xe);
        else break;
        Xe = n(E);
      }
    }
    function ye(we) {
      if (((le = !1), ce(we), !se))
        if (n(x) !== null) (se = !0), Ie(C);
        else {
          var Xe = n(E);
          Xe !== null && Lt(ye, Xe.startTime - we);
        }
    }
    function C(we, Xe) {
      (se = !1), le && ((le = !1), oe(tt), (tt = -1)), (ae = !0);
      var Oe = B;
      try {
        for (
          ce(Xe), z = n(x);
          z !== null && (!(z.expirationTime > Xe) || (we && !pt()));

        ) {
          var Ye = z.callback;
          if (typeof Ye == "function") {
            (z.callback = null), (B = z.priorityLevel);
            var Re = Ye(z.expirationTime <= Xe);
            (Xe = t.unstable_now()),
              typeof Re == "function" ? (z.callback = Re) : z === n(x) && r(x),
              ce(Xe);
          } else r(x);
          z = n(x);
        }
        if (z !== null) var $e = !0;
        else {
          var Fe = n(E);
          Fe !== null && Lt(ye, Fe.startTime - Xe), ($e = !1);
        }
        return $e;
      } finally {
        (z = null), (B = Oe), (ae = !1);
      }
    }
    var ke = !1,
      je = null,
      tt = -1,
      Ct = 5,
      xt = -1;
    function pt() {
      return !(t.unstable_now() - xt < Ct);
    }
    function Mt() {
      if (je !== null) {
        var we = t.unstable_now();
        xt = we;
        var Xe = !0;
        try {
          Xe = je(!0, we);
        } finally {
          Xe ? Vt() : ((ke = !1), (je = null));
        }
      } else ke = !1;
    }
    var Vt;
    if (typeof F == "function")
      Vt = function () {
        F(Mt);
      };
    else if (typeof MessageChannel < "u") {
      var It = new MessageChannel(),
        ht = It.port2;
      (It.port1.onmessage = Mt),
        (Vt = function () {
          ht.postMessage(null);
        });
    } else
      Vt = function () {
        he(Mt, 0);
      };
    function Ie(we) {
      (je = we), ke || ((ke = !0), Vt());
    }
    function Lt(we, Xe) {
      tt = he(function () {
        we(t.unstable_now());
      }, Xe);
    }
    (t.unstable_IdlePriority = 5),
      (t.unstable_ImmediatePriority = 1),
      (t.unstable_LowPriority = 4),
      (t.unstable_NormalPriority = 3),
      (t.unstable_Profiling = null),
      (t.unstable_UserBlockingPriority = 2),
      (t.unstable_cancelCallback = function (we) {
        we.callback = null;
      }),
      (t.unstable_continueExecution = function () {
        se || ae || ((se = !0), Ie(C));
      }),
      (t.unstable_forceFrameRate = function (we) {
        0 > we || 125 < we
          ? console.error(
              "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
            )
          : (Ct = 0 < we ? Math.floor(1e3 / we) : 5);
      }),
      (t.unstable_getCurrentPriorityLevel = function () {
        return B;
      }),
      (t.unstable_getFirstCallbackNode = function () {
        return n(x);
      }),
      (t.unstable_next = function (we) {
        switch (B) {
          case 1:
          case 2:
          case 3:
            var Xe = 3;
            break;
          default:
            Xe = B;
        }
        var Oe = B;
        B = Xe;
        try {
          return we();
        } finally {
          B = Oe;
        }
      }),
      (t.unstable_pauseExecution = function () {}),
      (t.unstable_requestPaint = function () {}),
      (t.unstable_runWithPriority = function (we, Xe) {
        switch (we) {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            break;
          default:
            we = 3;
        }
        var Oe = B;
        B = we;
        try {
          return Xe();
        } finally {
          B = Oe;
        }
      }),
      (t.unstable_scheduleCallback = function (we, Xe, Oe) {
        var Ye = t.unstable_now();
        switch (
          (typeof Oe == "object" && Oe !== null
            ? ((Oe = Oe.delay),
              (Oe = typeof Oe == "number" && 0 < Oe ? Ye + Oe : Ye))
            : (Oe = Ye),
          we)
        ) {
          case 1:
            var Re = -1;
            break;
          case 2:
            Re = 250;
            break;
          case 5:
            Re = 1073741823;
            break;
          case 4:
            Re = 1e4;
            break;
          default:
            Re = 5e3;
        }
        return (
          (Re = Oe + Re),
          (we = {
            id: L++,
            callback: Xe,
            priorityLevel: we,
            startTime: Oe,
            expirationTime: Re,
            sortIndex: -1,
          }),
          Oe > Ye
            ? ((we.sortIndex = Oe),
              e(E, we),
              n(x) === null &&
                we === n(E) &&
                (le ? (oe(tt), (tt = -1)) : (le = !0), Lt(ye, Oe - Ye)))
            : ((we.sortIndex = Re), e(x, we), se || ae || ((se = !0), Ie(C))),
          we
        );
      }),
      (t.unstable_shouldYield = pt),
      (t.unstable_wrapCallback = function (we) {
        var Xe = B;
        return function () {
          var Oe = B;
          B = Xe;
          try {
            return we.apply(this, arguments);
          } finally {
            B = Oe;
          }
        };
      });
  })(oC);
  aC.exports = oC;
  var K2 = aC.exports;
  /**
   * @license React
   * react-dom.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */ var lC = ue,
    Ws = K2;
  function lt(t) {
    for (
      var e = "https://reactjs.org/docs/error-decoder.html?invariant=" + t,
        n = 1;
      n < arguments.length;
      n++
    )
      e += "&args[]=" + encodeURIComponent(arguments[n]);
    return (
      "Minified React error #" +
      t +
      "; visit " +
      e +
      " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    );
  }
  var cC = new Set(),
    Ud = {};
  function ru(t, e) {
    lh(t, e), lh(t + "Capture", e);
  }
  function lh(t, e) {
    for (Ud[t] = e, t = 0; t < e.length; t++) cC.add(e[t]);
  }
  var Vo = !(
      typeof window > "u" ||
      typeof window.document > "u" ||
      typeof window.document.createElement > "u"
    ),
    Ix = Object.prototype.hasOwnProperty,
    Q2 =
      /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    Z_ = {},
    J_ = {};
  function Z2(t) {
    return Ix.call(J_, t)
      ? !0
      : Ix.call(Z_, t)
      ? !1
      : Q2.test(t)
      ? (J_[t] = !0)
      : ((Z_[t] = !0), !1);
  }
  function J2(t, e, n, r) {
    if (n !== null && n.type === 0) return !1;
    switch (typeof e) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return r
          ? !1
          : n !== null
          ? !n.acceptsBooleans
          : ((t = t.toLowerCase().slice(0, 5)), t !== "data-" && t !== "aria-");
      default:
        return !1;
    }
  }
  function eD(t, e, n, r) {
    if (e === null || typeof e > "u" || J2(t, e, n, r)) return !0;
    if (r) return !1;
    if (n !== null)
      switch (n.type) {
        case 3:
          return !e;
        case 4:
          return e === !1;
        case 5:
          return isNaN(e);
        case 6:
          return isNaN(e) || 1 > e;
      }
    return !1;
  }
  function ps(t, e, n, r, a, o, u) {
    (this.acceptsBooleans = e === 2 || e === 3 || e === 4),
      (this.attributeName = r),
      (this.attributeNamespace = a),
      (this.mustUseProperty = n),
      (this.propertyName = t),
      (this.type = e),
      (this.sanitizeURL = o),
      (this.removeEmptyString = u);
  }
  var Mi = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
    .split(" ")
    .forEach(function (t) {
      Mi[t] = new ps(t, 0, !1, t, null, !1, !1);
    });
  [
    ["acceptCharset", "accept-charset"],
    ["className", "class"],
    ["htmlFor", "for"],
    ["httpEquiv", "http-equiv"],
  ].forEach(function (t) {
    var e = t[0];
    Mi[e] = new ps(e, 1, !1, t[1], null, !1, !1);
  });
  ["contentEditable", "draggable", "spellCheck", "value"].forEach(function (t) {
    Mi[t] = new ps(t, 2, !1, t.toLowerCase(), null, !1, !1);
  });
  [
    "autoReverse",
    "externalResourcesRequired",
    "focusable",
    "preserveAlpha",
  ].forEach(function (t) {
    Mi[t] = new ps(t, 2, !1, t, null, !1, !1);
  });
  "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
    .split(" ")
    .forEach(function (t) {
      Mi[t] = new ps(t, 3, !1, t.toLowerCase(), null, !1, !1);
    });
  ["checked", "multiple", "muted", "selected"].forEach(function (t) {
    Mi[t] = new ps(t, 3, !0, t, null, !1, !1);
  });
  ["capture", "download"].forEach(function (t) {
    Mi[t] = new ps(t, 4, !1, t, null, !1, !1);
  });
  ["cols", "rows", "size", "span"].forEach(function (t) {
    Mi[t] = new ps(t, 6, !1, t, null, !1, !1);
  });
  ["rowSpan", "start"].forEach(function (t) {
    Mi[t] = new ps(t, 5, !1, t.toLowerCase(), null, !1, !1);
  });
  var I0 = /[\-:]([a-z])/g;
  function P0(t) {
    return t[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
    .split(" ")
    .forEach(function (t) {
      var e = t.replace(I0, P0);
      Mi[e] = new ps(e, 1, !1, t, null, !1, !1);
    });
  "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
    .split(" ")
    .forEach(function (t) {
      var e = t.replace(I0, P0);
      Mi[e] = new ps(e, 1, !1, t, "http://www.w3.org/1999/xlink", !1, !1);
    });
  ["xml:base", "xml:lang", "xml:space"].forEach(function (t) {
    var e = t.replace(I0, P0);
    Mi[e] = new ps(e, 1, !1, t, "http://www.w3.org/XML/1998/namespace", !1, !1);
  });
  ["tabIndex", "crossOrigin"].forEach(function (t) {
    Mi[t] = new ps(t, 1, !1, t.toLowerCase(), null, !1, !1);
  });
  Mi.xlinkHref = new ps(
    "xlinkHref",
    1,
    !1,
    "xlink:href",
    "http://www.w3.org/1999/xlink",
    !0,
    !1
  );
  ["src", "href", "action", "formAction"].forEach(function (t) {
    Mi[t] = new ps(t, 1, !1, t.toLowerCase(), null, !0, !0);
  });
  function R0(t, e, n, r) {
    var a = Mi.hasOwnProperty(e) ? Mi[e] : null;
    (a !== null
      ? a.type !== 0
      : r ||
        !(2 < e.length) ||
        (e[0] !== "o" && e[0] !== "O") ||
        (e[1] !== "n" && e[1] !== "N")) &&
      (eD(e, n, a, r) && (n = null),
      r || a === null
        ? Z2(e) &&
          (n === null ? t.removeAttribute(e) : t.setAttribute(e, "" + n))
        : a.mustUseProperty
        ? (t[a.propertyName] = n === null ? (a.type === 3 ? !1 : "") : n)
        : ((e = a.attributeName),
          (r = a.attributeNamespace),
          n === null
            ? t.removeAttribute(e)
            : ((a = a.type),
              (n = a === 3 || (a === 4 && n === !0) ? "" : "" + n),
              r ? t.setAttributeNS(r, e, n) : t.setAttribute(e, n))));
  }
  var Ko = lC.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    Ip = Symbol.for("react.element"),
    Lu = Symbol.for("react.portal"),
    Du = Symbol.for("react.fragment"),
    O0 = Symbol.for("react.strict_mode"),
    Px = Symbol.for("react.profiler"),
    uC = Symbol.for("react.provider"),
    hC = Symbol.for("react.context"),
    N0 = Symbol.for("react.forward_ref"),
    Rx = Symbol.for("react.suspense"),
    Ox = Symbol.for("react.suspense_list"),
    L0 = Symbol.for("react.memo"),
    fl = Symbol.for("react.lazy"),
    dC = Symbol.for("react.offscreen"),
    eS = Symbol.iterator;
  function Jh(t) {
    return t === null || typeof t != "object"
      ? null
      : ((t = (eS && t[eS]) || t["@@iterator"]),
        typeof t == "function" ? t : null);
  }
  var Tr = Object.assign,
    Ey;
  function pd(t) {
    if (Ey === void 0)
      try {
        throw Error();
      } catch (n) {
        var e = n.stack.trim().match(/\n( *(at )?)/);
        Ey = (e && e[1]) || "";
      }
    return (
      `
` +
      Ey +
      t
    );
  }
  var ky = !1;
  function Ay(t, e) {
    if (!t || ky) return "";
    ky = !0;
    var n = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (e)
        if (
          ((e = function () {
            throw Error();
          }),
          Object.defineProperty(e.prototype, "props", {
            set: function () {
              throw Error();
            },
          }),
          typeof Reflect == "object" && Reflect.construct)
        ) {
          try {
            Reflect.construct(e, []);
          } catch (E) {
            var r = E;
          }
          Reflect.construct(t, [], e);
        } else {
          try {
            e.call();
          } catch (E) {
            r = E;
          }
          t.call(e.prototype);
        }
      else {
        try {
          throw Error();
        } catch (E) {
          r = E;
        }
        t();
      }
    } catch (E) {
      if (E && r && typeof E.stack == "string") {
        for (
          var a = E.stack.split(`
`),
            o = r.stack.split(`
`),
            u = a.length - 1,
            g = o.length - 1;
          1 <= u && 0 <= g && a[u] !== o[g];

        )
          g--;
        for (; 1 <= u && 0 <= g; u--, g--)
          if (a[u] !== o[g]) {
            if (u !== 1 || g !== 1)
              do
                if ((u--, g--, 0 > g || a[u] !== o[g])) {
                  var x =
                    `
` + a[u].replace(" at new ", " at ");
                  return (
                    t.displayName &&
                      x.includes("<anonymous>") &&
                      (x = x.replace("<anonymous>", t.displayName)),
                    x
                  );
                }
              while (1 <= u && 0 <= g);
            break;
          }
      }
    } finally {
      (ky = !1), (Error.prepareStackTrace = n);
    }
    return (t = t ? t.displayName || t.name : "") ? pd(t) : "";
  }
  function tD(t) {
    switch (t.tag) {
      case 5:
        return pd(t.type);
      case 16:
        return pd("Lazy");
      case 13:
        return pd("Suspense");
      case 19:
        return pd("SuspenseList");
      case 0:
      case 2:
      case 15:
        return (t = Ay(t.type, !1)), t;
      case 11:
        return (t = Ay(t.type.render, !1)), t;
      case 1:
        return (t = Ay(t.type, !0)), t;
      default:
        return "";
    }
  }
  function Nx(t) {
    if (t == null) return null;
    if (typeof t == "function") return t.displayName || t.name || null;
    if (typeof t == "string") return t;
    switch (t) {
      case Du:
        return "Fragment";
      case Lu:
        return "Portal";
      case Px:
        return "Profiler";
      case O0:
        return "StrictMode";
      case Rx:
        return "Suspense";
      case Ox:
        return "SuspenseList";
    }
    if (typeof t == "object")
      switch (t.$$typeof) {
        case hC:
          return (t.displayName || "Context") + ".Consumer";
        case uC:
          return (t._context.displayName || "Context") + ".Provider";
        case N0:
          var e = t.render;
          return (
            (t = t.displayName),
            t ||
              ((t = e.displayName || e.name || ""),
              (t = t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")),
            t
          );
        case L0:
          return (
            (e = t.displayName || null), e !== null ? e : Nx(t.type) || "Memo"
          );
        case fl:
          (e = t._payload), (t = t._init);
          try {
            return Nx(t(e));
          } catch {}
      }
    return null;
  }
  function nD(t) {
    var e = t.type;
    switch (t.tag) {
      case 24:
        return "Cache";
      case 9:
        return (e.displayName || "Context") + ".Consumer";
      case 10:
        return (e._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return (
          (t = e.render),
          (t = t.displayName || t.name || ""),
          e.displayName || (t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")
        );
      case 7:
        return "Fragment";
      case 5:
        return e;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return Nx(e);
      case 8:
        return e === O0 ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof e == "function") return e.displayName || e.name || null;
        if (typeof e == "string") return e;
    }
    return null;
  }
  function Ul(t) {
    switch (typeof t) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return t;
      case "object":
        return t;
      default:
        return "";
    }
  }
  function fC(t) {
    var e = t.type;
    return (
      (t = t.nodeName) &&
      t.toLowerCase() === "input" &&
      (e === "checkbox" || e === "radio")
    );
  }
  function rD(t) {
    var e = fC(t) ? "checked" : "value",
      n = Object.getOwnPropertyDescriptor(t.constructor.prototype, e),
      r = "" + t[e];
    if (
      !t.hasOwnProperty(e) &&
      typeof n < "u" &&
      typeof n.get == "function" &&
      typeof n.set == "function"
    ) {
      var a = n.get,
        o = n.set;
      return (
        Object.defineProperty(t, e, {
          configurable: !0,
          get: function () {
            return a.call(this);
          },
          set: function (u) {
            (r = "" + u), o.call(this, u);
          },
        }),
        Object.defineProperty(t, e, { enumerable: n.enumerable }),
        {
          getValue: function () {
            return r;
          },
          setValue: function (u) {
            r = "" + u;
          },
          stopTracking: function () {
            (t._valueTracker = null), delete t[e];
          },
        }
      );
    }
  }
  function Pp(t) {
    t._valueTracker || (t._valueTracker = rD(t));
  }
  function pC(t) {
    if (!t) return !1;
    var e = t._valueTracker;
    if (!e) return !0;
    var n = e.getValue(),
      r = "";
    return (
      t && (r = fC(t) ? (t.checked ? "true" : "false") : t.value),
      (t = r),
      t !== n ? (e.setValue(t), !0) : !1
    );
  }
  function Dg(t) {
    if (
      ((t = t || (typeof document < "u" ? document : void 0)), typeof t > "u")
    )
      return null;
    try {
      return t.activeElement || t.body;
    } catch {
      return t.body;
    }
  }
  function Lx(t, e) {
    var n = e.checked;
    return Tr({}, e, {
      defaultChecked: void 0,
      defaultValue: void 0,
      value: void 0,
      checked: n ?? t._wrapperState.initialChecked,
    });
  }
  function tS(t, e) {
    var n = e.defaultValue == null ? "" : e.defaultValue,
      r = e.checked != null ? e.checked : e.defaultChecked;
    (n = Ul(e.value != null ? e.value : n)),
      (t._wrapperState = {
        initialChecked: r,
        initialValue: n,
        controlled:
          e.type === "checkbox" || e.type === "radio"
            ? e.checked != null
            : e.value != null,
      });
  }
  function gC(t, e) {
    (e = e.checked), e != null && R0(t, "checked", e, !1);
  }
  function Dx(t, e) {
    gC(t, e);
    var n = Ul(e.value),
      r = e.type;
    if (n != null)
      r === "number"
        ? ((n === 0 && t.value === "") || t.value != n) && (t.value = "" + n)
        : t.value !== "" + n && (t.value = "" + n);
    else if (r === "submit" || r === "reset") {
      t.removeAttribute("value");
      return;
    }
    e.hasOwnProperty("value")
      ? Mx(t, e.type, n)
      : e.hasOwnProperty("defaultValue") && Mx(t, e.type, Ul(e.defaultValue)),
      e.checked == null &&
        e.defaultChecked != null &&
        (t.defaultChecked = !!e.defaultChecked);
  }
  function nS(t, e, n) {
    if (e.hasOwnProperty("value") || e.hasOwnProperty("defaultValue")) {
      var r = e.type;
      if (
        !(
          (r !== "submit" && r !== "reset") ||
          (e.value !== void 0 && e.value !== null)
        )
      )
        return;
      (e = "" + t._wrapperState.initialValue),
        n || e === t.value || (t.value = e),
        (t.defaultValue = e);
    }
    (n = t.name),
      n !== "" && (t.name = ""),
      (t.defaultChecked = !!t._wrapperState.initialChecked),
      n !== "" && (t.name = n);
  }
  function Mx(t, e, n) {
    (e !== "number" || Dg(t.ownerDocument) !== t) &&
      (n == null
        ? (t.defaultValue = "" + t._wrapperState.initialValue)
        : t.defaultValue !== "" + n && (t.defaultValue = "" + n));
  }
  var gd = Array.isArray;
  function Qu(t, e, n, r) {
    if (((t = t.options), e)) {
      e = {};
      for (var a = 0; a < n.length; a++) e["$" + n[a]] = !0;
      for (n = 0; n < t.length; n++)
        (a = e.hasOwnProperty("$" + t[n].value)),
          t[n].selected !== a && (t[n].selected = a),
          a && r && (t[n].defaultSelected = !0);
    } else {
      for (n = "" + Ul(n), e = null, a = 0; a < t.length; a++) {
        if (t[a].value === n) {
          (t[a].selected = !0), r && (t[a].defaultSelected = !0);
          return;
        }
        e !== null || t[a].disabled || (e = t[a]);
      }
      e !== null && (e.selected = !0);
    }
  }
  function jx(t, e) {
    if (e.dangerouslySetInnerHTML != null) throw Error(lt(91));
    return Tr({}, e, {
      value: void 0,
      defaultValue: void 0,
      children: "" + t._wrapperState.initialValue,
    });
  }
  function rS(t, e) {
    var n = e.value;
    if (n == null) {
      if (((n = e.children), (e = e.defaultValue), n != null)) {
        if (e != null) throw Error(lt(92));
        if (gd(n)) {
          if (1 < n.length) throw Error(lt(93));
          n = n[0];
        }
        e = n;
      }
      e == null && (e = ""), (n = e);
    }
    t._wrapperState = { initialValue: Ul(n) };
  }
  function mC(t, e) {
    var n = Ul(e.value),
      r = Ul(e.defaultValue);
    n != null &&
      ((n = "" + n),
      n !== t.value && (t.value = n),
      e.defaultValue == null && t.defaultValue !== n && (t.defaultValue = n)),
      r != null && (t.defaultValue = "" + r);
  }
  function iS(t) {
    var e = t.textContent;
    e === t._wrapperState.initialValue &&
      e !== "" &&
      e !== null &&
      (t.value = e);
  }
  function vC(t) {
    switch (t) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function Fx(t, e) {
    return t == null || t === "http://www.w3.org/1999/xhtml"
      ? vC(e)
      : t === "http://www.w3.org/2000/svg" && e === "foreignObject"
      ? "http://www.w3.org/1999/xhtml"
      : t;
  }
  var Rp,
    yC = (function (t) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
        ? function (e, n, r, a) {
            MSApp.execUnsafeLocalFunction(function () {
              return t(e, n, r, a);
            });
          }
        : t;
    })(function (t, e) {
      if (t.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in t)
        t.innerHTML = e;
      else {
        for (
          Rp = Rp || document.createElement("div"),
            Rp.innerHTML = "<svg>" + e.valueOf().toString() + "</svg>",
            e = Rp.firstChild;
          t.firstChild;

        )
          t.removeChild(t.firstChild);
        for (; e.firstChild; ) t.appendChild(e.firstChild);
      }
    });
  function Xd(t, e) {
    if (e) {
      var n = t.firstChild;
      if (n && n === t.lastChild && n.nodeType === 3) {
        n.nodeValue = e;
        return;
      }
    }
    t.textContent = e;
  }
  var kd = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0,
    },
    iD = ["Webkit", "ms", "Moz", "O"];
  Object.keys(kd).forEach(function (t) {
    iD.forEach(function (e) {
      (e = e + t.charAt(0).toUpperCase() + t.substring(1)), (kd[e] = kd[t]);
    });
  });
  function xC(t, e, n) {
    return e == null || typeof e == "boolean" || e === ""
      ? ""
      : n || typeof e != "number" || e === 0 || (kd.hasOwnProperty(t) && kd[t])
      ? ("" + e).trim()
      : e + "px";
  }
  function bC(t, e) {
    t = t.style;
    for (var n in e)
      if (e.hasOwnProperty(n)) {
        var r = n.indexOf("--") === 0,
          a = xC(n, e[n], r);
        n === "float" && (n = "cssFloat"), r ? t.setProperty(n, a) : (t[n] = a);
      }
  }
  var sD = Tr(
    { menuitem: !0 },
    {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0,
    }
  );
  function zx(t, e) {
    if (e) {
      if (sD[t] && (e.children != null || e.dangerouslySetInnerHTML != null))
        throw Error(lt(137, t));
      if (e.dangerouslySetInnerHTML != null) {
        if (e.children != null) throw Error(lt(60));
        if (
          typeof e.dangerouslySetInnerHTML != "object" ||
          !("__html" in e.dangerouslySetInnerHTML)
        )
          throw Error(lt(61));
      }
      if (e.style != null && typeof e.style != "object") throw Error(lt(62));
    }
  }
  function Vx(t, e) {
    if (t.indexOf("-") === -1) return typeof e.is == "string";
    switch (t) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var $x = null;
  function D0(t) {
    return (
      (t = t.target || t.srcElement || window),
      t.correspondingUseElement && (t = t.correspondingUseElement),
      t.nodeType === 3 ? t.parentNode : t
    );
  }
  var Bx = null,
    Zu = null,
    Ju = null;
  function sS(t) {
    if ((t = jf(t))) {
      if (typeof Bx != "function") throw Error(lt(280));
      var e = t.stateNode;
      e && ((e = Bm(e)), Bx(t.stateNode, t.type, e));
    }
  }
  function wC(t) {
    Zu ? (Ju ? Ju.push(t) : (Ju = [t])) : (Zu = t);
  }
  function _C() {
    if (Zu) {
      var t = Zu,
        e = Ju;
      if (((Ju = Zu = null), sS(t), e)) for (t = 0; t < e.length; t++) sS(e[t]);
    }
  }
  function SC(t, e) {
    return t(e);
  }
  function EC() {}
  var Cy = !1;
  function kC(t, e, n) {
    if (Cy) return t(e, n);
    Cy = !0;
    try {
      return SC(t, e, n);
    } finally {
      (Cy = !1), (Zu !== null || Ju !== null) && (EC(), _C());
    }
  }
  function Yd(t, e) {
    var n = t.stateNode;
    if (n === null) return null;
    var r = Bm(n);
    if (r === null) return null;
    n = r[e];
    e: switch (e) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (r = !r.disabled) ||
          ((t = t.type),
          (r = !(
            t === "button" ||
            t === "input" ||
            t === "select" ||
            t === "textarea"
          ))),
          (t = !r);
        break e;
      default:
        t = !1;
    }
    if (t) return null;
    if (n && typeof n != "function") throw Error(lt(231, e, typeof n));
    return n;
  }
  var Hx = !1;
  if (Vo)
    try {
      var ed = {};
      Object.defineProperty(ed, "passive", {
        get: function () {
          Hx = !0;
        },
      }),
        window.addEventListener("test", ed, ed),
        window.removeEventListener("test", ed, ed);
    } catch {
      Hx = !1;
    }
  function aD(t, e, n, r, a, o, u, g, x) {
    var E = Array.prototype.slice.call(arguments, 3);
    try {
      e.apply(n, E);
    } catch (L) {
      this.onError(L);
    }
  }
  var Ad = !1,
    Mg = null,
    jg = !1,
    Wx = null,
    oD = {
      onError: function (t) {
        (Ad = !0), (Mg = t);
      },
    };
  function lD(t, e, n, r, a, o, u, g, x) {
    (Ad = !1), (Mg = null), aD.apply(oD, arguments);
  }
  function cD(t, e, n, r, a, o, u, g, x) {
    if ((lD.apply(this, arguments), Ad)) {
      if (Ad) {
        var E = Mg;
        (Ad = !1), (Mg = null);
      } else throw Error(lt(198));
      jg || ((jg = !0), (Wx = E));
    }
  }
  function iu(t) {
    var e = t,
      n = t;
    if (t.alternate) for (; e.return; ) e = e.return;
    else {
      t = e;
      do (e = t), e.flags & 4098 && (n = e.return), (t = e.return);
      while (t);
    }
    return e.tag === 3 ? n : null;
  }
  function AC(t) {
    if (t.tag === 13) {
      var e = t.memoizedState;
      if (
        (e === null && ((t = t.alternate), t !== null && (e = t.memoizedState)),
        e !== null)
      )
        return e.dehydrated;
    }
    return null;
  }
  function aS(t) {
    if (iu(t) !== t) throw Error(lt(188));
  }
  function uD(t) {
    var e = t.alternate;
    if (!e) {
      if (((e = iu(t)), e === null)) throw Error(lt(188));
      return e !== t ? null : t;
    }
    for (var n = t, r = e; ; ) {
      var a = n.return;
      if (a === null) break;
      var o = a.alternate;
      if (o === null) {
        if (((r = a.return), r !== null)) {
          n = r;
          continue;
        }
        break;
      }
      if (a.child === o.child) {
        for (o = a.child; o; ) {
          if (o === n) return aS(a), t;
          if (o === r) return aS(a), e;
          o = o.sibling;
        }
        throw Error(lt(188));
      }
      if (n.return !== r.return) (n = a), (r = o);
      else {
        for (var u = !1, g = a.child; g; ) {
          if (g === n) {
            (u = !0), (n = a), (r = o);
            break;
          }
          if (g === r) {
            (u = !0), (r = a), (n = o);
            break;
          }
          g = g.sibling;
        }
        if (!u) {
          for (g = o.child; g; ) {
            if (g === n) {
              (u = !0), (n = o), (r = a);
              break;
            }
            if (g === r) {
              (u = !0), (r = o), (n = a);
              break;
            }
            g = g.sibling;
          }
          if (!u) throw Error(lt(189));
        }
      }
      if (n.alternate !== r) throw Error(lt(190));
    }
    if (n.tag !== 3) throw Error(lt(188));
    return n.stateNode.current === n ? t : e;
  }
  function CC(t) {
    return (t = uD(t)), t !== null ? TC(t) : null;
  }
  function TC(t) {
    if (t.tag === 5 || t.tag === 6) return t;
    for (t = t.child; t !== null; ) {
      var e = TC(t);
      if (e !== null) return e;
      t = t.sibling;
    }
    return null;
  }
  var IC = Ws.unstable_scheduleCallback,
    oS = Ws.unstable_cancelCallback,
    hD = Ws.unstable_shouldYield,
    dD = Ws.unstable_requestPaint,
    zr = Ws.unstable_now,
    fD = Ws.unstable_getCurrentPriorityLevel,
    M0 = Ws.unstable_ImmediatePriority,
    PC = Ws.unstable_UserBlockingPriority,
    Fg = Ws.unstable_NormalPriority,
    pD = Ws.unstable_LowPriority,
    RC = Ws.unstable_IdlePriority,
    Fm = null,
    ro = null;
  function gD(t) {
    if (ro && typeof ro.onCommitFiberRoot == "function")
      try {
        ro.onCommitFiberRoot(Fm, t, void 0, (t.current.flags & 128) === 128);
      } catch {}
  }
  var Ea = Math.clz32 ? Math.clz32 : yD,
    mD = Math.log,
    vD = Math.LN2;
  function yD(t) {
    return (t >>>= 0), t === 0 ? 32 : (31 - ((mD(t) / vD) | 0)) | 0;
  }
  var Op = 64,
    Np = 4194304;
  function md(t) {
    switch (t & -t) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return t & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return t & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return t;
    }
  }
  function zg(t, e) {
    var n = t.pendingLanes;
    if (n === 0) return 0;
    var r = 0,
      a = t.suspendedLanes,
      o = t.pingedLanes,
      u = n & 268435455;
    if (u !== 0) {
      var g = u & ~a;
      g !== 0 ? (r = md(g)) : ((o &= u), o !== 0 && (r = md(o)));
    } else (u = n & ~a), u !== 0 ? (r = md(u)) : o !== 0 && (r = md(o));
    if (r === 0) return 0;
    if (
      e !== 0 &&
      e !== r &&
      !(e & a) &&
      ((a = r & -r), (o = e & -e), a >= o || (a === 16 && (o & 4194240) !== 0))
    )
      return e;
    if ((r & 4 && (r |= n & 16), (e = t.entangledLanes), e !== 0))
      for (t = t.entanglements, e &= r; 0 < e; )
        (n = 31 - Ea(e)), (a = 1 << n), (r |= t[n]), (e &= ~a);
    return r;
  }
  function xD(t, e) {
    switch (t) {
      case 1:
      case 2:
      case 4:
        return e + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return e + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function bD(t, e) {
    for (
      var n = t.suspendedLanes,
        r = t.pingedLanes,
        a = t.expirationTimes,
        o = t.pendingLanes;
      0 < o;

    ) {
      var u = 31 - Ea(o),
        g = 1 << u,
        x = a[u];
      x === -1
        ? (!(g & n) || g & r) && (a[u] = xD(g, e))
        : x <= e && (t.expiredLanes |= g),
        (o &= ~g);
    }
  }
  function Ux(t) {
    return (
      (t = t.pendingLanes & -1073741825),
      t !== 0 ? t : t & 1073741824 ? 1073741824 : 0
    );
  }
  function OC() {
    var t = Op;
    return (Op <<= 1), !(Op & 4194240) && (Op = 64), t;
  }
  function Ty(t) {
    for (var e = [], n = 0; 31 > n; n++) e.push(t);
    return e;
  }
  function Df(t, e, n) {
    (t.pendingLanes |= e),
      e !== 536870912 && ((t.suspendedLanes = 0), (t.pingedLanes = 0)),
      (t = t.eventTimes),
      (e = 31 - Ea(e)),
      (t[e] = n);
  }
  function wD(t, e) {
    var n = t.pendingLanes & ~e;
    (t.pendingLanes = e),
      (t.suspendedLanes = 0),
      (t.pingedLanes = 0),
      (t.expiredLanes &= e),
      (t.mutableReadLanes &= e),
      (t.entangledLanes &= e),
      (e = t.entanglements);
    var r = t.eventTimes;
    for (t = t.expirationTimes; 0 < n; ) {
      var a = 31 - Ea(n),
        o = 1 << a;
      (e[a] = 0), (r[a] = -1), (t[a] = -1), (n &= ~o);
    }
  }
  function j0(t, e) {
    var n = (t.entangledLanes |= e);
    for (t = t.entanglements; n; ) {
      var r = 31 - Ea(n),
        a = 1 << r;
      (a & e) | (t[r] & e) && (t[r] |= e), (n &= ~a);
    }
  }
  var Qn = 0;
  function NC(t) {
    return (
      (t &= -t), 1 < t ? (4 < t ? (t & 268435455 ? 16 : 536870912) : 4) : 1
    );
  }
  var LC,
    F0,
    DC,
    MC,
    jC,
    Xx = !1,
    Lp = [],
    Il = null,
    Pl = null,
    Rl = null,
    Gd = new Map(),
    qd = new Map(),
    vl = [],
    _D =
      "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
        " "
      );
  function lS(t, e) {
    switch (t) {
      case "focusin":
      case "focusout":
        Il = null;
        break;
      case "dragenter":
      case "dragleave":
        Pl = null;
        break;
      case "mouseover":
      case "mouseout":
        Rl = null;
        break;
      case "pointerover":
      case "pointerout":
        Gd.delete(e.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        qd.delete(e.pointerId);
    }
  }
  function td(t, e, n, r, a, o) {
    return t === null || t.nativeEvent !== o
      ? ((t = {
          blockedOn: e,
          domEventName: n,
          eventSystemFlags: r,
          nativeEvent: o,
          targetContainers: [a],
        }),
        e !== null && ((e = jf(e)), e !== null && F0(e)),
        t)
      : ((t.eventSystemFlags |= r),
        (e = t.targetContainers),
        a !== null && e.indexOf(a) === -1 && e.push(a),
        t);
  }
  function SD(t, e, n, r, a) {
    switch (e) {
      case "focusin":
        return (Il = td(Il, t, e, n, r, a)), !0;
      case "dragenter":
        return (Pl = td(Pl, t, e, n, r, a)), !0;
      case "mouseover":
        return (Rl = td(Rl, t, e, n, r, a)), !0;
      case "pointerover":
        var o = a.pointerId;
        return Gd.set(o, td(Gd.get(o) || null, t, e, n, r, a)), !0;
      case "gotpointercapture":
        return (
          (o = a.pointerId), qd.set(o, td(qd.get(o) || null, t, e, n, r, a)), !0
        );
    }
    return !1;
  }
  function FC(t) {
    var e = Cc(t.target);
    if (e !== null) {
      var n = iu(e);
      if (n !== null) {
        if (((e = n.tag), e === 13)) {
          if (((e = AC(n)), e !== null)) {
            (t.blockedOn = e),
              jC(t.priority, function () {
                DC(n);
              });
            return;
          }
        } else if (e === 3 && n.stateNode.current.memoizedState.isDehydrated) {
          t.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
          return;
        }
      }
    }
    t.blockedOn = null;
  }
  function hg(t) {
    if (t.blockedOn !== null) return !1;
    for (var e = t.targetContainers; 0 < e.length; ) {
      var n = Yx(t.domEventName, t.eventSystemFlags, e[0], t.nativeEvent);
      if (n === null) {
        n = t.nativeEvent;
        var r = new n.constructor(n.type, n);
        ($x = r), n.target.dispatchEvent(r), ($x = null);
      } else return (e = jf(n)), e !== null && F0(e), (t.blockedOn = n), !1;
      e.shift();
    }
    return !0;
  }
  function cS(t, e, n) {
    hg(t) && n.delete(e);
  }
  function ED() {
    (Xx = !1),
      Il !== null && hg(Il) && (Il = null),
      Pl !== null && hg(Pl) && (Pl = null),
      Rl !== null && hg(Rl) && (Rl = null),
      Gd.forEach(cS),
      qd.forEach(cS);
  }
  function nd(t, e) {
    t.blockedOn === e &&
      ((t.blockedOn = null),
      Xx ||
        ((Xx = !0),
        Ws.unstable_scheduleCallback(Ws.unstable_NormalPriority, ED)));
  }
  function Kd(t) {
    function e(a) {
      return nd(a, t);
    }
    if (0 < Lp.length) {
      nd(Lp[0], t);
      for (var n = 1; n < Lp.length; n++) {
        var r = Lp[n];
        r.blockedOn === t && (r.blockedOn = null);
      }
    }
    for (
      Il !== null && nd(Il, t),
        Pl !== null && nd(Pl, t),
        Rl !== null && nd(Rl, t),
        Gd.forEach(e),
        qd.forEach(e),
        n = 0;
      n < vl.length;
      n++
    )
      (r = vl[n]), r.blockedOn === t && (r.blockedOn = null);
    for (; 0 < vl.length && ((n = vl[0]), n.blockedOn === null); )
      FC(n), n.blockedOn === null && vl.shift();
  }
  var eh = Ko.ReactCurrentBatchConfig,
    Vg = !0;
  function kD(t, e, n, r) {
    var a = Qn,
      o = eh.transition;
    eh.transition = null;
    try {
      (Qn = 1), z0(t, e, n, r);
    } finally {
      (Qn = a), (eh.transition = o);
    }
  }
  function AD(t, e, n, r) {
    var a = Qn,
      o = eh.transition;
    eh.transition = null;
    try {
      (Qn = 4), z0(t, e, n, r);
    } finally {
      (Qn = a), (eh.transition = o);
    }
  }
  function z0(t, e, n, r) {
    if (Vg) {
      var a = Yx(t, e, n, r);
      if (a === null) Fy(t, e, r, $g, n), lS(t, r);
      else if (SD(a, t, e, n, r)) r.stopPropagation();
      else if ((lS(t, r), e & 4 && -1 < _D.indexOf(t))) {
        for (; a !== null; ) {
          var o = jf(a);
          if (
            (o !== null && LC(o),
            (o = Yx(t, e, n, r)),
            o === null && Fy(t, e, r, $g, n),
            o === a)
          )
            break;
          a = o;
        }
        a !== null && r.stopPropagation();
      } else Fy(t, e, r, null, n);
    }
  }
  var $g = null;
  function Yx(t, e, n, r) {
    if ((($g = null), (t = D0(r)), (t = Cc(t)), t !== null))
      if (((e = iu(t)), e === null)) t = null;
      else if (((n = e.tag), n === 13)) {
        if (((t = AC(e)), t !== null)) return t;
        t = null;
      } else if (n === 3) {
        if (e.stateNode.current.memoizedState.isDehydrated)
          return e.tag === 3 ? e.stateNode.containerInfo : null;
        t = null;
      } else e !== t && (t = null);
    return ($g = t), null;
  }
  function zC(t) {
    switch (t) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (fD()) {
          case M0:
            return 1;
          case PC:
            return 4;
          case Fg:
          case pD:
            return 16;
          case RC:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var kl = null,
    V0 = null,
    dg = null;
  function VC() {
    if (dg) return dg;
    var t,
      e = V0,
      n = e.length,
      r,
      a = "value" in kl ? kl.value : kl.textContent,
      o = a.length;
    for (t = 0; t < n && e[t] === a[t]; t++);
    var u = n - t;
    for (r = 1; r <= u && e[n - r] === a[o - r]; r++);
    return (dg = a.slice(t, 1 < r ? 1 - r : void 0));
  }
  function fg(t) {
    var e = t.keyCode;
    return (
      "charCode" in t
        ? ((t = t.charCode), t === 0 && e === 13 && (t = 13))
        : (t = e),
      t === 10 && (t = 13),
      32 <= t || t === 13 ? t : 0
    );
  }
  function Dp() {
    return !0;
  }
  function uS() {
    return !1;
  }
  function Ys(t) {
    function e(n, r, a, o, u) {
      (this._reactName = n),
        (this._targetInst = a),
        (this.type = r),
        (this.nativeEvent = o),
        (this.target = u),
        (this.currentTarget = null);
      for (var g in t)
        t.hasOwnProperty(g) && ((n = t[g]), (this[g] = n ? n(o) : o[g]));
      return (
        (this.isDefaultPrevented = (
          o.defaultPrevented != null ? o.defaultPrevented : o.returnValue === !1
        )
          ? Dp
          : uS),
        (this.isPropagationStopped = uS),
        this
      );
    }
    return (
      Tr(e.prototype, {
        preventDefault: function () {
          this.defaultPrevented = !0;
          var n = this.nativeEvent;
          n &&
            (n.preventDefault
              ? n.preventDefault()
              : typeof n.returnValue != "unknown" && (n.returnValue = !1),
            (this.isDefaultPrevented = Dp));
        },
        stopPropagation: function () {
          var n = this.nativeEvent;
          n &&
            (n.stopPropagation
              ? n.stopPropagation()
              : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0),
            (this.isPropagationStopped = Dp));
        },
        persist: function () {},
        isPersistent: Dp,
      }),
      e
    );
  }
  var Th = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function (t) {
        return t.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0,
    },
    $0 = Ys(Th),
    Mf = Tr({}, Th, { view: 0, detail: 0 }),
    CD = Ys(Mf),
    Iy,
    Py,
    rd,
    zm = Tr({}, Mf, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: B0,
      button: 0,
      buttons: 0,
      relatedTarget: function (t) {
        return t.relatedTarget === void 0
          ? t.fromElement === t.srcElement
            ? t.toElement
            : t.fromElement
          : t.relatedTarget;
      },
      movementX: function (t) {
        return "movementX" in t
          ? t.movementX
          : (t !== rd &&
              (rd && t.type === "mousemove"
                ? ((Iy = t.screenX - rd.screenX), (Py = t.screenY - rd.screenY))
                : (Py = Iy = 0),
              (rd = t)),
            Iy);
      },
      movementY: function (t) {
        return "movementY" in t ? t.movementY : Py;
      },
    }),
    hS = Ys(zm),
    TD = Tr({}, zm, { dataTransfer: 0 }),
    ID = Ys(TD),
    PD = Tr({}, Mf, { relatedTarget: 0 }),
    Ry = Ys(PD),
    RD = Tr({}, Th, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
    OD = Ys(RD),
    ND = Tr({}, Th, {
      clipboardData: function (t) {
        return "clipboardData" in t ? t.clipboardData : window.clipboardData;
      },
    }),
    LD = Ys(ND),
    DD = Tr({}, Th, { data: 0 }),
    dS = Ys(DD),
    MD = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified",
    },
    jD = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta",
    },
    FD = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey",
    };
  function zD(t) {
    var e = this.nativeEvent;
    return e.getModifierState
      ? e.getModifierState(t)
      : (t = FD[t])
      ? !!e[t]
      : !1;
  }
  function B0() {
    return zD;
  }
  var VD = Tr({}, Mf, {
      key: function (t) {
        if (t.key) {
          var e = MD[t.key] || t.key;
          if (e !== "Unidentified") return e;
        }
        return t.type === "keypress"
          ? ((t = fg(t)), t === 13 ? "Enter" : String.fromCharCode(t))
          : t.type === "keydown" || t.type === "keyup"
          ? jD[t.keyCode] || "Unidentified"
          : "";
      },
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: B0,
      charCode: function (t) {
        return t.type === "keypress" ? fg(t) : 0;
      },
      keyCode: function (t) {
        return t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0;
      },
      which: function (t) {
        return t.type === "keypress"
          ? fg(t)
          : t.type === "keydown" || t.type === "keyup"
          ? t.keyCode
          : 0;
      },
    }),
    $D = Ys(VD),
    BD = Tr({}, zm, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0,
    }),
    fS = Ys(BD),
    HD = Tr({}, Mf, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: B0,
    }),
    WD = Ys(HD),
    UD = Tr({}, Th, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
    XD = Ys(UD),
    YD = Tr({}, zm, {
      deltaX: function (t) {
        return "deltaX" in t
          ? t.deltaX
          : "wheelDeltaX" in t
          ? -t.wheelDeltaX
          : 0;
      },
      deltaY: function (t) {
        return "deltaY" in t
          ? t.deltaY
          : "wheelDeltaY" in t
          ? -t.wheelDeltaY
          : "wheelDelta" in t
          ? -t.wheelDelta
          : 0;
      },
      deltaZ: 0,
      deltaMode: 0,
    }),
    GD = Ys(YD),
    qD = [9, 13, 27, 32],
    H0 = Vo && "CompositionEvent" in window,
    Cd = null;
  Vo && "documentMode" in document && (Cd = document.documentMode);
  var KD = Vo && "TextEvent" in window && !Cd,
    $C = Vo && (!H0 || (Cd && 8 < Cd && 11 >= Cd)),
    pS = " ",
    gS = !1;
  function BC(t, e) {
    switch (t) {
      case "keyup":
        return qD.indexOf(e.keyCode) !== -1;
      case "keydown":
        return e.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function HC(t) {
    return (t = t.detail), typeof t == "object" && "data" in t ? t.data : null;
  }
  var Mu = !1;
  function QD(t, e) {
    switch (t) {
      case "compositionend":
        return HC(e);
      case "keypress":
        return e.which !== 32 ? null : ((gS = !0), pS);
      case "textInput":
        return (t = e.data), t === pS && gS ? null : t;
      default:
        return null;
    }
  }
  function ZD(t, e) {
    if (Mu)
      return t === "compositionend" || (!H0 && BC(t, e))
        ? ((t = VC()), (dg = V0 = kl = null), (Mu = !1), t)
        : null;
    switch (t) {
      case "paste":
        return null;
      case "keypress":
        if (!(e.ctrlKey || e.altKey || e.metaKey) || (e.ctrlKey && e.altKey)) {
          if (e.char && 1 < e.char.length) return e.char;
          if (e.which) return String.fromCharCode(e.which);
        }
        return null;
      case "compositionend":
        return $C && e.locale !== "ko" ? null : e.data;
      default:
        return null;
    }
  }
  var JD = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0,
  };
  function mS(t) {
    var e = t && t.nodeName && t.nodeName.toLowerCase();
    return e === "input" ? !!JD[t.type] : e === "textarea";
  }
  function WC(t, e, n, r) {
    wC(r),
      (e = Bg(e, "onChange")),
      0 < e.length &&
        ((n = new $0("onChange", "change", null, n, r)),
        t.push({ event: n, listeners: e }));
  }
  var Td = null,
    Qd = null;
  function eM(t) {
    tT(t, 0);
  }
  function Vm(t) {
    var e = zu(t);
    if (pC(e)) return t;
  }
  function tM(t, e) {
    if (t === "change") return e;
  }
  var UC = !1;
  if (Vo) {
    var Oy;
    if (Vo) {
      var Ny = "oninput" in document;
      if (!Ny) {
        var vS = document.createElement("div");
        vS.setAttribute("oninput", "return;"),
          (Ny = typeof vS.oninput == "function");
      }
      Oy = Ny;
    } else Oy = !1;
    UC = Oy && (!document.documentMode || 9 < document.documentMode);
  }
  function yS() {
    Td && (Td.detachEvent("onpropertychange", XC), (Qd = Td = null));
  }
  function XC(t) {
    if (t.propertyName === "value" && Vm(Qd)) {
      var e = [];
      WC(e, Qd, t, D0(t)), kC(eM, e);
    }
  }
  function nM(t, e, n) {
    t === "focusin"
      ? (yS(), (Td = e), (Qd = n), Td.attachEvent("onpropertychange", XC))
      : t === "focusout" && yS();
  }
  function rM(t) {
    if (t === "selectionchange" || t === "keyup" || t === "keydown")
      return Vm(Qd);
  }
  function iM(t, e) {
    if (t === "click") return Vm(e);
  }
  function sM(t, e) {
    if (t === "input" || t === "change") return Vm(e);
  }
  function aM(t, e) {
    return (t === e && (t !== 0 || 1 / t === 1 / e)) || (t !== t && e !== e);
  }
  var Ia = typeof Object.is == "function" ? Object.is : aM;
  function Zd(t, e) {
    if (Ia(t, e)) return !0;
    if (
      typeof t != "object" ||
      t === null ||
      typeof e != "object" ||
      e === null
    )
      return !1;
    var n = Object.keys(t),
      r = Object.keys(e);
    if (n.length !== r.length) return !1;
    for (r = 0; r < n.length; r++) {
      var a = n[r];
      if (!Ix.call(e, a) || !Ia(t[a], e[a])) return !1;
    }
    return !0;
  }
  function xS(t) {
    for (; t && t.firstChild; ) t = t.firstChild;
    return t;
  }
  function bS(t, e) {
    var n = xS(t);
    t = 0;
    for (var r; n; ) {
      if (n.nodeType === 3) {
        if (((r = t + n.textContent.length), t <= e && r >= e))
          return { node: n, offset: e - t };
        t = r;
      }
      e: {
        for (; n; ) {
          if (n.nextSibling) {
            n = n.nextSibling;
            break e;
          }
          n = n.parentNode;
        }
        n = void 0;
      }
      n = xS(n);
    }
  }
  function YC(t, e) {
    return t && e
      ? t === e
        ? !0
        : t && t.nodeType === 3
        ? !1
        : e && e.nodeType === 3
        ? YC(t, e.parentNode)
        : "contains" in t
        ? t.contains(e)
        : t.compareDocumentPosition
        ? !!(t.compareDocumentPosition(e) & 16)
        : !1
      : !1;
  }
  function GC() {
    for (var t = window, e = Dg(); e instanceof t.HTMLIFrameElement; ) {
      try {
        var n = typeof e.contentWindow.location.href == "string";
      } catch {
        n = !1;
      }
      if (n) t = e.contentWindow;
      else break;
      e = Dg(t.document);
    }
    return e;
  }
  function W0(t) {
    var e = t && t.nodeName && t.nodeName.toLowerCase();
    return (
      e &&
      ((e === "input" &&
        (t.type === "text" ||
          t.type === "search" ||
          t.type === "tel" ||
          t.type === "url" ||
          t.type === "password")) ||
        e === "textarea" ||
        t.contentEditable === "true")
    );
  }
  function oM(t) {
    var e = GC(),
      n = t.focusedElem,
      r = t.selectionRange;
    if (
      e !== n &&
      n &&
      n.ownerDocument &&
      YC(n.ownerDocument.documentElement, n)
    ) {
      if (r !== null && W0(n)) {
        if (
          ((e = r.start),
          (t = r.end),
          t === void 0 && (t = e),
          "selectionStart" in n)
        )
          (n.selectionStart = e),
            (n.selectionEnd = Math.min(t, n.value.length));
        else if (
          ((t = ((e = n.ownerDocument || document) && e.defaultView) || window),
          t.getSelection)
        ) {
          t = t.getSelection();
          var a = n.textContent.length,
            o = Math.min(r.start, a);
          (r = r.end === void 0 ? o : Math.min(r.end, a)),
            !t.extend && o > r && ((a = r), (r = o), (o = a)),
            (a = bS(n, o));
          var u = bS(n, r);
          a &&
            u &&
            (t.rangeCount !== 1 ||
              t.anchorNode !== a.node ||
              t.anchorOffset !== a.offset ||
              t.focusNode !== u.node ||
              t.focusOffset !== u.offset) &&
            ((e = e.createRange()),
            e.setStart(a.node, a.offset),
            t.removeAllRanges(),
            o > r
              ? (t.addRange(e), t.extend(u.node, u.offset))
              : (e.setEnd(u.node, u.offset), t.addRange(e)));
        }
      }
      for (e = [], t = n; (t = t.parentNode); )
        t.nodeType === 1 &&
          e.push({ element: t, left: t.scrollLeft, top: t.scrollTop });
      for (typeof n.focus == "function" && n.focus(), n = 0; n < e.length; n++)
        (t = e[n]),
          (t.element.scrollLeft = t.left),
          (t.element.scrollTop = t.top);
    }
  }
  var lM = Vo && "documentMode" in document && 11 >= document.documentMode,
    ju = null,
    Gx = null,
    Id = null,
    qx = !1;
  function wS(t, e, n) {
    var r =
      n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
    qx ||
      ju == null ||
      ju !== Dg(r) ||
      ((r = ju),
      "selectionStart" in r && W0(r)
        ? (r = { start: r.selectionStart, end: r.selectionEnd })
        : ((r = (
            (r.ownerDocument && r.ownerDocument.defaultView) ||
            window
          ).getSelection()),
          (r = {
            anchorNode: r.anchorNode,
            anchorOffset: r.anchorOffset,
            focusNode: r.focusNode,
            focusOffset: r.focusOffset,
          })),
      (Id && Zd(Id, r)) ||
        ((Id = r),
        (r = Bg(Gx, "onSelect")),
        0 < r.length &&
          ((e = new $0("onSelect", "select", null, e, n)),
          t.push({ event: e, listeners: r }),
          (e.target = ju))));
  }
  function Mp(t, e) {
    var n = {};
    return (
      (n[t.toLowerCase()] = e.toLowerCase()),
      (n["Webkit" + t] = "webkit" + e),
      (n["Moz" + t] = "moz" + e),
      n
    );
  }
  var Fu = {
      animationend: Mp("Animation", "AnimationEnd"),
      animationiteration: Mp("Animation", "AnimationIteration"),
      animationstart: Mp("Animation", "AnimationStart"),
      transitionend: Mp("Transition", "TransitionEnd"),
    },
    Ly = {},
    qC = {};
  Vo &&
    ((qC = document.createElement("div").style),
    "AnimationEvent" in window ||
      (delete Fu.animationend.animation,
      delete Fu.animationiteration.animation,
      delete Fu.animationstart.animation),
    "TransitionEvent" in window || delete Fu.transitionend.transition);
  function $m(t) {
    if (Ly[t]) return Ly[t];
    if (!Fu[t]) return t;
    var e = Fu[t],
      n;
    for (n in e) if (e.hasOwnProperty(n) && n in qC) return (Ly[t] = e[n]);
    return t;
  }
  var KC = $m("animationend"),
    QC = $m("animationiteration"),
    ZC = $m("animationstart"),
    JC = $m("transitionend"),
    eT = new Map(),
    _S =
      "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
        " "
      );
  function Jl(t, e) {
    eT.set(t, e), ru(e, [t]);
  }
  for (var Dy = 0; Dy < _S.length; Dy++) {
    var My = _S[Dy],
      cM = My.toLowerCase(),
      uM = My[0].toUpperCase() + My.slice(1);
    Jl(cM, "on" + uM);
  }
  Jl(KC, "onAnimationEnd");
  Jl(QC, "onAnimationIteration");
  Jl(ZC, "onAnimationStart");
  Jl("dblclick", "onDoubleClick");
  Jl("focusin", "onFocus");
  Jl("focusout", "onBlur");
  Jl(JC, "onTransitionEnd");
  lh("onMouseEnter", ["mouseout", "mouseover"]);
  lh("onMouseLeave", ["mouseout", "mouseover"]);
  lh("onPointerEnter", ["pointerout", "pointerover"]);
  lh("onPointerLeave", ["pointerout", "pointerover"]);
  ru(
    "onChange",
    "change click focusin focusout input keydown keyup selectionchange".split(
      " "
    )
  );
  ru(
    "onSelect",
    "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
      " "
    )
  );
  ru("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
  ru(
    "onCompositionEnd",
    "compositionend focusout keydown keypress keyup mousedown".split(" ")
  );
  ru(
    "onCompositionStart",
    "compositionstart focusout keydown keypress keyup mousedown".split(" ")
  );
  ru(
    "onCompositionUpdate",
    "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
  );
  var vd =
      "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
        " "
      ),
    hM = new Set(
      "cancel close invalid load scroll toggle".split(" ").concat(vd)
    );
  function SS(t, e, n) {
    var r = t.type || "unknown-event";
    (t.currentTarget = n), cD(r, e, void 0, t), (t.currentTarget = null);
  }
  function tT(t, e) {
    e = (e & 4) !== 0;
    for (var n = 0; n < t.length; n++) {
      var r = t[n],
        a = r.event;
      r = r.listeners;
      e: {
        var o = void 0;
        if (e)
          for (var u = r.length - 1; 0 <= u; u--) {
            var g = r[u],
              x = g.instance,
              E = g.currentTarget;
            if (((g = g.listener), x !== o && a.isPropagationStopped()))
              break e;
            SS(a, g, E), (o = x);
          }
        else
          for (u = 0; u < r.length; u++) {
            if (
              ((g = r[u]),
              (x = g.instance),
              (E = g.currentTarget),
              (g = g.listener),
              x !== o && a.isPropagationStopped())
            )
              break e;
            SS(a, g, E), (o = x);
          }
      }
    }
    if (jg) throw ((t = Wx), (jg = !1), (Wx = null), t);
  }
  function dr(t, e) {
    var n = e[eb];
    n === void 0 && (n = e[eb] = new Set());
    var r = t + "__bubble";
    n.has(r) || (nT(e, t, 2, !1), n.add(r));
  }
  function jy(t, e, n) {
    var r = 0;
    e && (r |= 4), nT(n, t, r, e);
  }
  var jp = "_reactListening" + Math.random().toString(36).slice(2);
  function Jd(t) {
    if (!t[jp]) {
      (t[jp] = !0),
        cC.forEach(function (n) {
          n !== "selectionchange" && (hM.has(n) || jy(n, !1, t), jy(n, !0, t));
        });
      var e = t.nodeType === 9 ? t : t.ownerDocument;
      e === null || e[jp] || ((e[jp] = !0), jy("selectionchange", !1, e));
    }
  }
  function nT(t, e, n, r) {
    switch (zC(e)) {
      case 1:
        var a = kD;
        break;
      case 4:
        a = AD;
        break;
      default:
        a = z0;
    }
    (n = a.bind(null, e, n, t)),
      (a = void 0),
      !Hx ||
        (e !== "touchstart" && e !== "touchmove" && e !== "wheel") ||
        (a = !0),
      r
        ? a !== void 0
          ? t.addEventListener(e, n, { capture: !0, passive: a })
          : t.addEventListener(e, n, !0)
        : a !== void 0
        ? t.addEventListener(e, n, { passive: a })
        : t.addEventListener(e, n, !1);
  }
  function Fy(t, e, n, r, a) {
    var o = r;
    if (!(e & 1) && !(e & 2) && r !== null)
      e: for (;;) {
        if (r === null) return;
        var u = r.tag;
        if (u === 3 || u === 4) {
          var g = r.stateNode.containerInfo;
          if (g === a || (g.nodeType === 8 && g.parentNode === a)) break;
          if (u === 4)
            for (u = r.return; u !== null; ) {
              var x = u.tag;
              if (
                (x === 3 || x === 4) &&
                ((x = u.stateNode.containerInfo),
                x === a || (x.nodeType === 8 && x.parentNode === a))
              )
                return;
              u = u.return;
            }
          for (; g !== null; ) {
            if (((u = Cc(g)), u === null)) return;
            if (((x = u.tag), x === 5 || x === 6)) {
              r = o = u;
              continue e;
            }
            g = g.parentNode;
          }
        }
        r = r.return;
      }
    kC(function () {
      var E = o,
        L = D0(n),
        z = [];
      e: {
        var B = eT.get(t);
        if (B !== void 0) {
          var ae = $0,
            se = t;
          switch (t) {
            case "keypress":
              if (fg(n) === 0) break e;
            case "keydown":
            case "keyup":
              ae = $D;
              break;
            case "focusin":
              (se = "focus"), (ae = Ry);
              break;
            case "focusout":
              (se = "blur"), (ae = Ry);
              break;
            case "beforeblur":
            case "afterblur":
              ae = Ry;
              break;
            case "click":
              if (n.button === 2) break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              ae = hS;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              ae = ID;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              ae = WD;
              break;
            case KC:
            case QC:
            case ZC:
              ae = OD;
              break;
            case JC:
              ae = XD;
              break;
            case "scroll":
              ae = CD;
              break;
            case "wheel":
              ae = GD;
              break;
            case "copy":
            case "cut":
            case "paste":
              ae = LD;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              ae = fS;
          }
          var le = (e & 4) !== 0,
            he = !le && t === "scroll",
            oe = le ? (B !== null ? B + "Capture" : null) : B;
          le = [];
          for (var F = E, ce; F !== null; ) {
            ce = F;
            var ye = ce.stateNode;
            if (
              (ce.tag === 5 &&
                ye !== null &&
                ((ce = ye),
                oe !== null &&
                  ((ye = Yd(F, oe)), ye != null && le.push(ef(F, ye, ce)))),
              he)
            )
              break;
            F = F.return;
          }
          0 < le.length &&
            ((B = new ae(B, se, null, n, L)),
            z.push({ event: B, listeners: le }));
        }
      }
      if (!(e & 7)) {
        e: {
          if (
            ((B = t === "mouseover" || t === "pointerover"),
            (ae = t === "mouseout" || t === "pointerout"),
            B &&
              n !== $x &&
              (se = n.relatedTarget || n.fromElement) &&
              (Cc(se) || se[$o]))
          )
            break e;
          if (
            (ae || B) &&
            ((B =
              L.window === L
                ? L
                : (B = L.ownerDocument)
                ? B.defaultView || B.parentWindow
                : window),
            ae
              ? ((se = n.relatedTarget || n.toElement),
                (ae = E),
                (se = se ? Cc(se) : null),
                se !== null &&
                  ((he = iu(se)),
                  se !== he || (se.tag !== 5 && se.tag !== 6)) &&
                  (se = null))
              : ((ae = null), (se = E)),
            ae !== se)
          ) {
            if (
              ((le = hS),
              (ye = "onMouseLeave"),
              (oe = "onMouseEnter"),
              (F = "mouse"),
              (t === "pointerout" || t === "pointerover") &&
                ((le = fS),
                (ye = "onPointerLeave"),
                (oe = "onPointerEnter"),
                (F = "pointer")),
              (he = ae == null ? B : zu(ae)),
              (ce = se == null ? B : zu(se)),
              (B = new le(ye, F + "leave", ae, n, L)),
              (B.target = he),
              (B.relatedTarget = ce),
              (ye = null),
              Cc(L) === E &&
                ((le = new le(oe, F + "enter", se, n, L)),
                (le.target = ce),
                (le.relatedTarget = he),
                (ye = le)),
              (he = ye),
              ae && se)
            )
              t: {
                for (le = ae, oe = se, F = 0, ce = le; ce; ce = ku(ce)) F++;
                for (ce = 0, ye = oe; ye; ye = ku(ye)) ce++;
                for (; 0 < F - ce; ) (le = ku(le)), F--;
                for (; 0 < ce - F; ) (oe = ku(oe)), ce--;
                for (; F--; ) {
                  if (le === oe || (oe !== null && le === oe.alternate))
                    break t;
                  (le = ku(le)), (oe = ku(oe));
                }
                le = null;
              }
            else le = null;
            ae !== null && ES(z, B, ae, le, !1),
              se !== null && he !== null && ES(z, he, se, le, !0);
          }
        }
        e: {
          if (
            ((B = E ? zu(E) : window),
            (ae = B.nodeName && B.nodeName.toLowerCase()),
            ae === "select" || (ae === "input" && B.type === "file"))
          )
            var C = tM;
          else if (mS(B))
            if (UC) C = sM;
            else {
              C = rM;
              var ke = nM;
            }
          else
            (ae = B.nodeName) &&
              ae.toLowerCase() === "input" &&
              (B.type === "checkbox" || B.type === "radio") &&
              (C = iM);
          if (C && (C = C(t, E))) {
            WC(z, C, n, L);
            break e;
          }
          ke && ke(t, B, E),
            t === "focusout" &&
              (ke = B._wrapperState) &&
              ke.controlled &&
              B.type === "number" &&
              Mx(B, "number", B.value);
        }
        switch (((ke = E ? zu(E) : window), t)) {
          case "focusin":
            (mS(ke) || ke.contentEditable === "true") &&
              ((ju = ke), (Gx = E), (Id = null));
            break;
          case "focusout":
            Id = Gx = ju = null;
            break;
          case "mousedown":
            qx = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            (qx = !1), wS(z, n, L);
            break;
          case "selectionchange":
            if (lM) break;
          case "keydown":
          case "keyup":
            wS(z, n, L);
        }
        var je;
        if (H0)
          e: {
            switch (t) {
              case "compositionstart":
                var tt = "onCompositionStart";
                break e;
              case "compositionend":
                tt = "onCompositionEnd";
                break e;
              case "compositionupdate":
                tt = "onCompositionUpdate";
                break e;
            }
            tt = void 0;
          }
        else
          Mu
            ? BC(t, n) && (tt = "onCompositionEnd")
            : t === "keydown" &&
              n.keyCode === 229 &&
              (tt = "onCompositionStart");
        tt &&
          ($C &&
            n.locale !== "ko" &&
            (Mu || tt !== "onCompositionStart"
              ? tt === "onCompositionEnd" && Mu && (je = VC())
              : ((kl = L),
                (V0 = "value" in kl ? kl.value : kl.textContent),
                (Mu = !0))),
          (ke = Bg(E, tt)),
          0 < ke.length &&
            ((tt = new dS(tt, t, null, n, L)),
            z.push({ event: tt, listeners: ke }),
            je
              ? (tt.data = je)
              : ((je = HC(n)), je !== null && (tt.data = je)))),
          (je = KD ? QD(t, n) : ZD(t, n)) &&
            ((E = Bg(E, "onBeforeInput")),
            0 < E.length &&
              ((L = new dS("onBeforeInput", "beforeinput", null, n, L)),
              z.push({ event: L, listeners: E }),
              (L.data = je)));
      }
      tT(z, e);
    });
  }
  function ef(t, e, n) {
    return { instance: t, listener: e, currentTarget: n };
  }
  function Bg(t, e) {
    for (var n = e + "Capture", r = []; t !== null; ) {
      var a = t,
        o = a.stateNode;
      a.tag === 5 &&
        o !== null &&
        ((a = o),
        (o = Yd(t, n)),
        o != null && r.unshift(ef(t, o, a)),
        (o = Yd(t, e)),
        o != null && r.push(ef(t, o, a))),
        (t = t.return);
    }
    return r;
  }
  function ku(t) {
    if (t === null) return null;
    do t = t.return;
    while (t && t.tag !== 5);
    return t || null;
  }
  function ES(t, e, n, r, a) {
    for (var o = e._reactName, u = []; n !== null && n !== r; ) {
      var g = n,
        x = g.alternate,
        E = g.stateNode;
      if (x !== null && x === r) break;
      g.tag === 5 &&
        E !== null &&
        ((g = E),
        a
          ? ((x = Yd(n, o)), x != null && u.unshift(ef(n, x, g)))
          : a || ((x = Yd(n, o)), x != null && u.push(ef(n, x, g)))),
        (n = n.return);
    }
    u.length !== 0 && t.push({ event: e, listeners: u });
  }
  var dM = /\r\n?/g,
    fM = /\u0000|\uFFFD/g;
  function kS(t) {
    return (typeof t == "string" ? t : "" + t)
      .replace(
        dM,
        `
`
      )
      .replace(fM, "");
  }
  function Fp(t, e, n) {
    if (((e = kS(e)), kS(t) !== e && n)) throw Error(lt(425));
  }
  function Hg() {}
  var Kx = null,
    Qx = null;
  function Zx(t, e) {
    return (
      t === "textarea" ||
      t === "noscript" ||
      typeof e.children == "string" ||
      typeof e.children == "number" ||
      (typeof e.dangerouslySetInnerHTML == "object" &&
        e.dangerouslySetInnerHTML !== null &&
        e.dangerouslySetInnerHTML.__html != null)
    );
  }
  var Jx = typeof setTimeout == "function" ? setTimeout : void 0,
    pM = typeof clearTimeout == "function" ? clearTimeout : void 0,
    AS = typeof Promise == "function" ? Promise : void 0,
    gM =
      typeof queueMicrotask == "function"
        ? queueMicrotask
        : typeof AS < "u"
        ? function (t) {
            return AS.resolve(null).then(t).catch(mM);
          }
        : Jx;
  function mM(t) {
    setTimeout(function () {
      throw t;
    });
  }
  function zy(t, e) {
    var n = e,
      r = 0;
    do {
      var a = n.nextSibling;
      if ((t.removeChild(n), a && a.nodeType === 8))
        if (((n = a.data), n === "/$")) {
          if (r === 0) {
            t.removeChild(a), Kd(e);
            return;
          }
          r--;
        } else (n !== "$" && n !== "$?" && n !== "$!") || r++;
      n = a;
    } while (n);
    Kd(e);
  }
  function Ol(t) {
    for (; t != null; t = t.nextSibling) {
      var e = t.nodeType;
      if (e === 1 || e === 3) break;
      if (e === 8) {
        if (((e = t.data), e === "$" || e === "$!" || e === "$?")) break;
        if (e === "/$") return null;
      }
    }
    return t;
  }
  function CS(t) {
    t = t.previousSibling;
    for (var e = 0; t; ) {
      if (t.nodeType === 8) {
        var n = t.data;
        if (n === "$" || n === "$!" || n === "$?") {
          if (e === 0) return t;
          e--;
        } else n === "/$" && e++;
      }
      t = t.previousSibling;
    }
    return null;
  }
  var Ih = Math.random().toString(36).slice(2),
    Qa = "__reactFiber$" + Ih,
    tf = "__reactProps$" + Ih,
    $o = "__reactContainer$" + Ih,
    eb = "__reactEvents$" + Ih,
    vM = "__reactListeners$" + Ih,
    yM = "__reactHandles$" + Ih;
  function Cc(t) {
    var e = t[Qa];
    if (e) return e;
    for (var n = t.parentNode; n; ) {
      if ((e = n[$o] || n[Qa])) {
        if (
          ((n = e.alternate),
          e.child !== null || (n !== null && n.child !== null))
        )
          for (t = CS(t); t !== null; ) {
            if ((n = t[Qa])) return n;
            t = CS(t);
          }
        return e;
      }
      (t = n), (n = t.parentNode);
    }
    return null;
  }
  function jf(t) {
    return (
      (t = t[Qa] || t[$o]),
      !t || (t.tag !== 5 && t.tag !== 6 && t.tag !== 13 && t.tag !== 3)
        ? null
        : t
    );
  }
  function zu(t) {
    if (t.tag === 5 || t.tag === 6) return t.stateNode;
    throw Error(lt(33));
  }
  function Bm(t) {
    return t[tf] || null;
  }
  var tb = [],
    Vu = -1;
  function ec(t) {
    return { current: t };
  }
  function gr(t) {
    0 > Vu || ((t.current = tb[Vu]), (tb[Vu] = null), Vu--);
  }
  function cr(t, e) {
    Vu++, (tb[Vu] = t.current), (t.current = e);
  }
  var Xl = {},
    Qi = ec(Xl),
    Is = ec(!1),
    Vc = Xl;
  function ch(t, e) {
    var n = t.type.contextTypes;
    if (!n) return Xl;
    var r = t.stateNode;
    if (r && r.__reactInternalMemoizedUnmaskedChildContext === e)
      return r.__reactInternalMemoizedMaskedChildContext;
    var a = {},
      o;
    for (o in n) a[o] = e[o];
    return (
      r &&
        ((t = t.stateNode),
        (t.__reactInternalMemoizedUnmaskedChildContext = e),
        (t.__reactInternalMemoizedMaskedChildContext = a)),
      a
    );
  }
  function Ps(t) {
    return (t = t.childContextTypes), t != null;
  }
  function Wg() {
    gr(Is), gr(Qi);
  }
  function TS(t, e, n) {
    if (Qi.current !== Xl) throw Error(lt(168));
    cr(Qi, e), cr(Is, n);
  }
  function rT(t, e, n) {
    var r = t.stateNode;
    if (((e = e.childContextTypes), typeof r.getChildContext != "function"))
      return n;
    r = r.getChildContext();
    for (var a in r) if (!(a in e)) throw Error(lt(108, nD(t) || "Unknown", a));
    return Tr({}, n, r);
  }
  function Ug(t) {
    return (
      (t =
        ((t = t.stateNode) && t.__reactInternalMemoizedMergedChildContext) ||
        Xl),
      (Vc = Qi.current),
      cr(Qi, t),
      cr(Is, Is.current),
      !0
    );
  }
  function IS(t, e, n) {
    var r = t.stateNode;
    if (!r) throw Error(lt(169));
    n
      ? ((t = rT(t, e, Vc)),
        (r.__reactInternalMemoizedMergedChildContext = t),
        gr(Is),
        gr(Qi),
        cr(Qi, t))
      : gr(Is),
      cr(Is, n);
  }
  var To = null,
    Hm = !1,
    Vy = !1;
  function iT(t) {
    To === null ? (To = [t]) : To.push(t);
  }
  function xM(t) {
    (Hm = !0), iT(t);
  }
  function tc() {
    if (!Vy && To !== null) {
      Vy = !0;
      var t = 0,
        e = Qn;
      try {
        var n = To;
        for (Qn = 1; t < n.length; t++) {
          var r = n[t];
          do r = r(!0);
          while (r !== null);
        }
        (To = null), (Hm = !1);
      } catch (a) {
        throw (To !== null && (To = To.slice(t + 1)), IC(M0, tc), a);
      } finally {
        (Qn = e), (Vy = !1);
      }
    }
    return null;
  }
  var $u = [],
    Bu = 0,
    Xg = null,
    Yg = 0,
    na = [],
    ra = 0,
    $c = null,
    Po = 1,
    Ro = "";
  function wc(t, e) {
    ($u[Bu++] = Yg), ($u[Bu++] = Xg), (Xg = t), (Yg = e);
  }
  function sT(t, e, n) {
    (na[ra++] = Po), (na[ra++] = Ro), (na[ra++] = $c), ($c = t);
    var r = Po;
    t = Ro;
    var a = 32 - Ea(r) - 1;
    (r &= ~(1 << a)), (n += 1);
    var o = 32 - Ea(e) + a;
    if (30 < o) {
      var u = a - (a % 5);
      (o = (r & ((1 << u) - 1)).toString(32)),
        (r >>= u),
        (a -= u),
        (Po = (1 << (32 - Ea(e) + a)) | (n << a) | r),
        (Ro = o + t);
    } else (Po = (1 << o) | (n << a) | r), (Ro = t);
  }
  function U0(t) {
    t.return !== null && (wc(t, 1), sT(t, 1, 0));
  }
  function X0(t) {
    for (; t === Xg; )
      (Xg = $u[--Bu]), ($u[Bu] = null), (Yg = $u[--Bu]), ($u[Bu] = null);
    for (; t === $c; )
      ($c = na[--ra]),
        (na[ra] = null),
        (Ro = na[--ra]),
        (na[ra] = null),
        (Po = na[--ra]),
        (na[ra] = null);
  }
  var Bs = null,
    zs = null,
    br = !1,
    Sa = null;
  function aT(t, e) {
    var n = sa(5, null, null, 0);
    (n.elementType = "DELETED"),
      (n.stateNode = e),
      (n.return = t),
      (e = t.deletions),
      e === null ? ((t.deletions = [n]), (t.flags |= 16)) : e.push(n);
  }
  function PS(t, e) {
    switch (t.tag) {
      case 5:
        var n = t.type;
        return (
          (e =
            e.nodeType !== 1 || n.toLowerCase() !== e.nodeName.toLowerCase()
              ? null
              : e),
          e !== null
            ? ((t.stateNode = e), (Bs = t), (zs = Ol(e.firstChild)), !0)
            : !1
        );
      case 6:
        return (
          (e = t.pendingProps === "" || e.nodeType !== 3 ? null : e),
          e !== null ? ((t.stateNode = e), (Bs = t), (zs = null), !0) : !1
        );
      case 13:
        return (
          (e = e.nodeType !== 8 ? null : e),
          e !== null
            ? ((n = $c !== null ? { id: Po, overflow: Ro } : null),
              (t.memoizedState = {
                dehydrated: e,
                treeContext: n,
                retryLane: 1073741824,
              }),
              (n = sa(18, null, null, 0)),
              (n.stateNode = e),
              (n.return = t),
              (t.child = n),
              (Bs = t),
              (zs = null),
              !0)
            : !1
        );
      default:
        return !1;
    }
  }
  function nb(t) {
    return (t.mode & 1) !== 0 && (t.flags & 128) === 0;
  }
  function rb(t) {
    if (br) {
      var e = zs;
      if (e) {
        var n = e;
        if (!PS(t, e)) {
          if (nb(t)) throw Error(lt(418));
          e = Ol(n.nextSibling);
          var r = Bs;
          e && PS(t, e)
            ? aT(r, n)
            : ((t.flags = (t.flags & -4097) | 2), (br = !1), (Bs = t));
        }
      } else {
        if (nb(t)) throw Error(lt(418));
        (t.flags = (t.flags & -4097) | 2), (br = !1), (Bs = t);
      }
    }
  }
  function RS(t) {
    for (
      t = t.return;
      t !== null && t.tag !== 5 && t.tag !== 3 && t.tag !== 13;

    )
      t = t.return;
    Bs = t;
  }
  function zp(t) {
    if (t !== Bs) return !1;
    if (!br) return RS(t), (br = !0), !1;
    var e;
    if (
      ((e = t.tag !== 3) &&
        !(e = t.tag !== 5) &&
        ((e = t.type),
        (e = e !== "head" && e !== "body" && !Zx(t.type, t.memoizedProps))),
      e && (e = zs))
    ) {
      if (nb(t)) throw (oT(), Error(lt(418)));
      for (; e; ) aT(t, e), (e = Ol(e.nextSibling));
    }
    if ((RS(t), t.tag === 13)) {
      if (((t = t.memoizedState), (t = t !== null ? t.dehydrated : null), !t))
        throw Error(lt(317));
      e: {
        for (t = t.nextSibling, e = 0; t; ) {
          if (t.nodeType === 8) {
            var n = t.data;
            if (n === "/$") {
              if (e === 0) {
                zs = Ol(t.nextSibling);
                break e;
              }
              e--;
            } else (n !== "$" && n !== "$!" && n !== "$?") || e++;
          }
          t = t.nextSibling;
        }
        zs = null;
      }
    } else zs = Bs ? Ol(t.stateNode.nextSibling) : null;
    return !0;
  }
  function oT() {
    for (var t = zs; t; ) t = Ol(t.nextSibling);
  }
  function uh() {
    (zs = Bs = null), (br = !1);
  }
  function Y0(t) {
    Sa === null ? (Sa = [t]) : Sa.push(t);
  }
  var bM = Ko.ReactCurrentBatchConfig;
  function wa(t, e) {
    if (t && t.defaultProps) {
      (e = Tr({}, e)), (t = t.defaultProps);
      for (var n in t) e[n] === void 0 && (e[n] = t[n]);
      return e;
    }
    return e;
  }
  var Gg = ec(null),
    qg = null,
    Hu = null,
    G0 = null;
  function q0() {
    G0 = Hu = qg = null;
  }
  function K0(t) {
    var e = Gg.current;
    gr(Gg), (t._currentValue = e);
  }
  function ib(t, e, n) {
    for (; t !== null; ) {
      var r = t.alternate;
      if (
        ((t.childLanes & e) !== e
          ? ((t.childLanes |= e), r !== null && (r.childLanes |= e))
          : r !== null && (r.childLanes & e) !== e && (r.childLanes |= e),
        t === n)
      )
        break;
      t = t.return;
    }
  }
  function th(t, e) {
    (qg = t),
      (G0 = Hu = null),
      (t = t.dependencies),
      t !== null &&
        t.firstContext !== null &&
        (t.lanes & e && (As = !0), (t.firstContext = null));
  }
  function la(t) {
    var e = t._currentValue;
    if (G0 !== t)
      if (((t = { context: t, memoizedValue: e, next: null }), Hu === null)) {
        if (qg === null) throw Error(lt(308));
        (Hu = t), (qg.dependencies = { lanes: 0, firstContext: t });
      } else Hu = Hu.next = t;
    return e;
  }
  var Tc = null;
  function Q0(t) {
    Tc === null ? (Tc = [t]) : Tc.push(t);
  }
  function lT(t, e, n, r) {
    var a = e.interleaved;
    return (
      a === null ? ((n.next = n), Q0(e)) : ((n.next = a.next), (a.next = n)),
      (e.interleaved = n),
      Bo(t, r)
    );
  }
  function Bo(t, e) {
    t.lanes |= e;
    var n = t.alternate;
    for (n !== null && (n.lanes |= e), n = t, t = t.return; t !== null; )
      (t.childLanes |= e),
        (n = t.alternate),
        n !== null && (n.childLanes |= e),
        (n = t),
        (t = t.return);
    return n.tag === 3 ? n.stateNode : null;
  }
  var pl = !1;
  function Z0(t) {
    t.updateQueue = {
      baseState: t.memoizedState,
      firstBaseUpdate: null,
      lastBaseUpdate: null,
      shared: { pending: null, interleaved: null, lanes: 0 },
      effects: null,
    };
  }
  function cT(t, e) {
    (t = t.updateQueue),
      e.updateQueue === t &&
        (e.updateQueue = {
          baseState: t.baseState,
          firstBaseUpdate: t.firstBaseUpdate,
          lastBaseUpdate: t.lastBaseUpdate,
          shared: t.shared,
          effects: t.effects,
        });
  }
  function jo(t, e) {
    return {
      eventTime: t,
      lane: e,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
    };
  }
  function Nl(t, e, n) {
    var r = t.updateQueue;
    if (r === null) return null;
    if (((r = r.shared), Fn & 2)) {
      var a = r.pending;
      return (
        a === null ? (e.next = e) : ((e.next = a.next), (a.next = e)),
        (r.pending = e),
        Bo(t, n)
      );
    }
    return (
      (a = r.interleaved),
      a === null ? ((e.next = e), Q0(r)) : ((e.next = a.next), (a.next = e)),
      (r.interleaved = e),
      Bo(t, n)
    );
  }
  function pg(t, e, n) {
    if (
      ((e = e.updateQueue), e !== null && ((e = e.shared), (n & 4194240) !== 0))
    ) {
      var r = e.lanes;
      (r &= t.pendingLanes), (n |= r), (e.lanes = n), j0(t, n);
    }
  }
  function OS(t, e) {
    var n = t.updateQueue,
      r = t.alternate;
    if (r !== null && ((r = r.updateQueue), n === r)) {
      var a = null,
        o = null;
      if (((n = n.firstBaseUpdate), n !== null)) {
        do {
          var u = {
            eventTime: n.eventTime,
            lane: n.lane,
            tag: n.tag,
            payload: n.payload,
            callback: n.callback,
            next: null,
          };
          o === null ? (a = o = u) : (o = o.next = u), (n = n.next);
        } while (n !== null);
        o === null ? (a = o = e) : (o = o.next = e);
      } else a = o = e;
      (n = {
        baseState: r.baseState,
        firstBaseUpdate: a,
        lastBaseUpdate: o,
        shared: r.shared,
        effects: r.effects,
      }),
        (t.updateQueue = n);
      return;
    }
    (t = n.lastBaseUpdate),
      t === null ? (n.firstBaseUpdate = e) : (t.next = e),
      (n.lastBaseUpdate = e);
  }
  function Kg(t, e, n, r) {
    var a = t.updateQueue;
    pl = !1;
    var o = a.firstBaseUpdate,
      u = a.lastBaseUpdate,
      g = a.shared.pending;
    if (g !== null) {
      a.shared.pending = null;
      var x = g,
        E = x.next;
      (x.next = null), u === null ? (o = E) : (u.next = E), (u = x);
      var L = t.alternate;
      L !== null &&
        ((L = L.updateQueue),
        (g = L.lastBaseUpdate),
        g !== u &&
          (g === null ? (L.firstBaseUpdate = E) : (g.next = E),
          (L.lastBaseUpdate = x)));
    }
    if (o !== null) {
      var z = a.baseState;
      (u = 0), (L = E = x = null), (g = o);
      do {
        var B = g.lane,
          ae = g.eventTime;
        if ((r & B) === B) {
          L !== null &&
            (L = L.next =
              {
                eventTime: ae,
                lane: 0,
                tag: g.tag,
                payload: g.payload,
                callback: g.callback,
                next: null,
              });
          e: {
            var se = t,
              le = g;
            switch (((B = e), (ae = n), le.tag)) {
              case 1:
                if (((se = le.payload), typeof se == "function")) {
                  z = se.call(ae, z, B);
                  break e;
                }
                z = se;
                break e;
              case 3:
                se.flags = (se.flags & -65537) | 128;
              case 0:
                if (
                  ((se = le.payload),
                  (B = typeof se == "function" ? se.call(ae, z, B) : se),
                  B == null)
                )
                  break e;
                z = Tr({}, z, B);
                break e;
              case 2:
                pl = !0;
            }
          }
          g.callback !== null &&
            g.lane !== 0 &&
            ((t.flags |= 64),
            (B = a.effects),
            B === null ? (a.effects = [g]) : B.push(g));
        } else
          (ae = {
            eventTime: ae,
            lane: B,
            tag: g.tag,
            payload: g.payload,
            callback: g.callback,
            next: null,
          }),
            L === null ? ((E = L = ae), (x = z)) : (L = L.next = ae),
            (u |= B);
        if (((g = g.next), g === null)) {
          if (((g = a.shared.pending), g === null)) break;
          (B = g),
            (g = B.next),
            (B.next = null),
            (a.lastBaseUpdate = B),
            (a.shared.pending = null);
        }
      } while (!0);
      if (
        (L === null && (x = z),
        (a.baseState = x),
        (a.firstBaseUpdate = E),
        (a.lastBaseUpdate = L),
        (e = a.shared.interleaved),
        e !== null)
      ) {
        a = e;
        do (u |= a.lane), (a = a.next);
        while (a !== e);
      } else o === null && (a.shared.lanes = 0);
      (Hc |= u), (t.lanes = u), (t.memoizedState = z);
    }
  }
  function NS(t, e, n) {
    if (((t = e.effects), (e.effects = null), t !== null))
      for (e = 0; e < t.length; e++) {
        var r = t[e],
          a = r.callback;
        if (a !== null) {
          if (((r.callback = null), (r = n), typeof a != "function"))
            throw Error(lt(191, a));
          a.call(r);
        }
      }
  }
  var uT = new lC.Component().refs;
  function sb(t, e, n, r) {
    (e = t.memoizedState),
      (n = n(r, e)),
      (n = n == null ? e : Tr({}, e, n)),
      (t.memoizedState = n),
      t.lanes === 0 && (t.updateQueue.baseState = n);
  }
  var Wm = {
    isMounted: function (t) {
      return (t = t._reactInternals) ? iu(t) === t : !1;
    },
    enqueueSetState: function (t, e, n) {
      t = t._reactInternals;
      var r = ds(),
        a = Dl(t),
        o = jo(r, a);
      (o.payload = e),
        n != null && (o.callback = n),
        (e = Nl(t, o, a)),
        e !== null && (ka(e, t, a, r), pg(e, t, a));
    },
    enqueueReplaceState: function (t, e, n) {
      t = t._reactInternals;
      var r = ds(),
        a = Dl(t),
        o = jo(r, a);
      (o.tag = 1),
        (o.payload = e),
        n != null && (o.callback = n),
        (e = Nl(t, o, a)),
        e !== null && (ka(e, t, a, r), pg(e, t, a));
    },
    enqueueForceUpdate: function (t, e) {
      t = t._reactInternals;
      var n = ds(),
        r = Dl(t),
        a = jo(n, r);
      (a.tag = 2),
        e != null && (a.callback = e),
        (e = Nl(t, a, r)),
        e !== null && (ka(e, t, r, n), pg(e, t, r));
    },
  };
  function LS(t, e, n, r, a, o, u) {
    return (
      (t = t.stateNode),
      typeof t.shouldComponentUpdate == "function"
        ? t.shouldComponentUpdate(r, o, u)
        : e.prototype && e.prototype.isPureReactComponent
        ? !Zd(n, r) || !Zd(a, o)
        : !0
    );
  }
  function hT(t, e, n) {
    var r = !1,
      a = Xl,
      o = e.contextType;
    return (
      typeof o == "object" && o !== null
        ? (o = la(o))
        : ((a = Ps(e) ? Vc : Qi.current),
          (r = e.contextTypes),
          (o = (r = r != null) ? ch(t, a) : Xl)),
      (e = new e(n, o)),
      (t.memoizedState =
        e.state !== null && e.state !== void 0 ? e.state : null),
      (e.updater = Wm),
      (t.stateNode = e),
      (e._reactInternals = t),
      r &&
        ((t = t.stateNode),
        (t.__reactInternalMemoizedUnmaskedChildContext = a),
        (t.__reactInternalMemoizedMaskedChildContext = o)),
      e
    );
  }
  function DS(t, e, n, r) {
    (t = e.state),
      typeof e.componentWillReceiveProps == "function" &&
        e.componentWillReceiveProps(n, r),
      typeof e.UNSAFE_componentWillReceiveProps == "function" &&
        e.UNSAFE_componentWillReceiveProps(n, r),
      e.state !== t && Wm.enqueueReplaceState(e, e.state, null);
  }
  function ab(t, e, n, r) {
    var a = t.stateNode;
    (a.props = n), (a.state = t.memoizedState), (a.refs = uT), Z0(t);
    var o = e.contextType;
    typeof o == "object" && o !== null
      ? (a.context = la(o))
      : ((o = Ps(e) ? Vc : Qi.current), (a.context = ch(t, o))),
      (a.state = t.memoizedState),
      (o = e.getDerivedStateFromProps),
      typeof o == "function" && (sb(t, e, o, n), (a.state = t.memoizedState)),
      typeof e.getDerivedStateFromProps == "function" ||
        typeof a.getSnapshotBeforeUpdate == "function" ||
        (typeof a.UNSAFE_componentWillMount != "function" &&
          typeof a.componentWillMount != "function") ||
        ((e = a.state),
        typeof a.componentWillMount == "function" && a.componentWillMount(),
        typeof a.UNSAFE_componentWillMount == "function" &&
          a.UNSAFE_componentWillMount(),
        e !== a.state && Wm.enqueueReplaceState(a, a.state, null),
        Kg(t, n, a, r),
        (a.state = t.memoizedState)),
      typeof a.componentDidMount == "function" && (t.flags |= 4194308);
  }
  function id(t, e, n) {
    if (
      ((t = n.ref),
      t !== null && typeof t != "function" && typeof t != "object")
    ) {
      if (n._owner) {
        if (((n = n._owner), n)) {
          if (n.tag !== 1) throw Error(lt(309));
          var r = n.stateNode;
        }
        if (!r) throw Error(lt(147, t));
        var a = r,
          o = "" + t;
        return e !== null &&
          e.ref !== null &&
          typeof e.ref == "function" &&
          e.ref._stringRef === o
          ? e.ref
          : ((e = function (u) {
              var g = a.refs;
              g === uT && (g = a.refs = {}),
                u === null ? delete g[o] : (g[o] = u);
            }),
            (e._stringRef = o),
            e);
      }
      if (typeof t != "string") throw Error(lt(284));
      if (!n._owner) throw Error(lt(290, t));
    }
    return t;
  }
  function Vp(t, e) {
    throw (
      ((t = Object.prototype.toString.call(e)),
      Error(
        lt(
          31,
          t === "[object Object]"
            ? "object with keys {" + Object.keys(e).join(", ") + "}"
            : t
        )
      ))
    );
  }
  function MS(t) {
    var e = t._init;
    return e(t._payload);
  }
  function dT(t) {
    function e(oe, F) {
      if (t) {
        var ce = oe.deletions;
        ce === null ? ((oe.deletions = [F]), (oe.flags |= 16)) : ce.push(F);
      }
    }
    function n(oe, F) {
      if (!t) return null;
      for (; F !== null; ) e(oe, F), (F = F.sibling);
      return null;
    }
    function r(oe, F) {
      for (oe = new Map(); F !== null; )
        F.key !== null ? oe.set(F.key, F) : oe.set(F.index, F), (F = F.sibling);
      return oe;
    }
    function a(oe, F) {
      return (oe = Ml(oe, F)), (oe.index = 0), (oe.sibling = null), oe;
    }
    function o(oe, F, ce) {
      return (
        (oe.index = ce),
        t
          ? ((ce = oe.alternate),
            ce !== null
              ? ((ce = ce.index), ce < F ? ((oe.flags |= 2), F) : ce)
              : ((oe.flags |= 2), F))
          : ((oe.flags |= 1048576), F)
      );
    }
    function u(oe) {
      return t && oe.alternate === null && (oe.flags |= 2), oe;
    }
    function g(oe, F, ce, ye) {
      return F === null || F.tag !== 6
        ? ((F = Yy(ce, oe.mode, ye)), (F.return = oe), F)
        : ((F = a(F, ce)), (F.return = oe), F);
    }
    function x(oe, F, ce, ye) {
      var C = ce.type;
      return C === Du
        ? L(oe, F, ce.props.children, ye, ce.key)
        : F !== null &&
          (F.elementType === C ||
            (typeof C == "object" &&
              C !== null &&
              C.$$typeof === fl &&
              MS(C) === F.type))
        ? ((ye = a(F, ce.props)),
          (ye.ref = id(oe, F, ce)),
          (ye.return = oe),
          ye)
        : ((ye = bg(ce.type, ce.key, ce.props, null, oe.mode, ye)),
          (ye.ref = id(oe, F, ce)),
          (ye.return = oe),
          ye);
    }
    function E(oe, F, ce, ye) {
      return F === null ||
        F.tag !== 4 ||
        F.stateNode.containerInfo !== ce.containerInfo ||
        F.stateNode.implementation !== ce.implementation
        ? ((F = Gy(ce, oe.mode, ye)), (F.return = oe), F)
        : ((F = a(F, ce.children || [])), (F.return = oe), F);
    }
    function L(oe, F, ce, ye, C) {
      return F === null || F.tag !== 7
        ? ((F = Lc(ce, oe.mode, ye, C)), (F.return = oe), F)
        : ((F = a(F, ce)), (F.return = oe), F);
    }
    function z(oe, F, ce) {
      if ((typeof F == "string" && F !== "") || typeof F == "number")
        return (F = Yy("" + F, oe.mode, ce)), (F.return = oe), F;
      if (typeof F == "object" && F !== null) {
        switch (F.$$typeof) {
          case Ip:
            return (
              (ce = bg(F.type, F.key, F.props, null, oe.mode, ce)),
              (ce.ref = id(oe, null, F)),
              (ce.return = oe),
              ce
            );
          case Lu:
            return (F = Gy(F, oe.mode, ce)), (F.return = oe), F;
          case fl:
            var ye = F._init;
            return z(oe, ye(F._payload), ce);
        }
        if (gd(F) || Jh(F))
          return (F = Lc(F, oe.mode, ce, null)), (F.return = oe), F;
        Vp(oe, F);
      }
      return null;
    }
    function B(oe, F, ce, ye) {
      var C = F !== null ? F.key : null;
      if ((typeof ce == "string" && ce !== "") || typeof ce == "number")
        return C !== null ? null : g(oe, F, "" + ce, ye);
      if (typeof ce == "object" && ce !== null) {
        switch (ce.$$typeof) {
          case Ip:
            return ce.key === C ? x(oe, F, ce, ye) : null;
          case Lu:
            return ce.key === C ? E(oe, F, ce, ye) : null;
          case fl:
            return (C = ce._init), B(oe, F, C(ce._payload), ye);
        }
        if (gd(ce) || Jh(ce)) return C !== null ? null : L(oe, F, ce, ye, null);
        Vp(oe, ce);
      }
      return null;
    }
    function ae(oe, F, ce, ye, C) {
      if ((typeof ye == "string" && ye !== "") || typeof ye == "number")
        return (oe = oe.get(ce) || null), g(F, oe, "" + ye, C);
      if (typeof ye == "object" && ye !== null) {
        switch (ye.$$typeof) {
          case Ip:
            return (
              (oe = oe.get(ye.key === null ? ce : ye.key) || null),
              x(F, oe, ye, C)
            );
          case Lu:
            return (
              (oe = oe.get(ye.key === null ? ce : ye.key) || null),
              E(F, oe, ye, C)
            );
          case fl:
            var ke = ye._init;
            return ae(oe, F, ce, ke(ye._payload), C);
        }
        if (gd(ye) || Jh(ye))
          return (oe = oe.get(ce) || null), L(F, oe, ye, C, null);
        Vp(F, ye);
      }
      return null;
    }
    function se(oe, F, ce, ye) {
      for (
        var C = null, ke = null, je = F, tt = (F = 0), Ct = null;
        je !== null && tt < ce.length;
        tt++
      ) {
        je.index > tt ? ((Ct = je), (je = null)) : (Ct = je.sibling);
        var xt = B(oe, je, ce[tt], ye);
        if (xt === null) {
          je === null && (je = Ct);
          break;
        }
        t && je && xt.alternate === null && e(oe, je),
          (F = o(xt, F, tt)),
          ke === null ? (C = xt) : (ke.sibling = xt),
          (ke = xt),
          (je = Ct);
      }
      if (tt === ce.length) return n(oe, je), br && wc(oe, tt), C;
      if (je === null) {
        for (; tt < ce.length; tt++)
          (je = z(oe, ce[tt], ye)),
            je !== null &&
              ((F = o(je, F, tt)),
              ke === null ? (C = je) : (ke.sibling = je),
              (ke = je));
        return br && wc(oe, tt), C;
      }
      for (je = r(oe, je); tt < ce.length; tt++)
        (Ct = ae(je, oe, tt, ce[tt], ye)),
          Ct !== null &&
            (t &&
              Ct.alternate !== null &&
              je.delete(Ct.key === null ? tt : Ct.key),
            (F = o(Ct, F, tt)),
            ke === null ? (C = Ct) : (ke.sibling = Ct),
            (ke = Ct));
      return (
        t &&
          je.forEach(function (pt) {
            return e(oe, pt);
          }),
        br && wc(oe, tt),
        C
      );
    }
    function le(oe, F, ce, ye) {
      var C = Jh(ce);
      if (typeof C != "function") throw Error(lt(150));
      if (((ce = C.call(ce)), ce == null)) throw Error(lt(151));
      for (
        var ke = (C = null), je = F, tt = (F = 0), Ct = null, xt = ce.next();
        je !== null && !xt.done;
        tt++, xt = ce.next()
      ) {
        je.index > tt ? ((Ct = je), (je = null)) : (Ct = je.sibling);
        var pt = B(oe, je, xt.value, ye);
        if (pt === null) {
          je === null && (je = Ct);
          break;
        }
        t && je && pt.alternate === null && e(oe, je),
          (F = o(pt, F, tt)),
          ke === null ? (C = pt) : (ke.sibling = pt),
          (ke = pt),
          (je = Ct);
      }
      if (xt.done) return n(oe, je), br && wc(oe, tt), C;
      if (je === null) {
        for (; !xt.done; tt++, xt = ce.next())
          (xt = z(oe, xt.value, ye)),
            xt !== null &&
              ((F = o(xt, F, tt)),
              ke === null ? (C = xt) : (ke.sibling = xt),
              (ke = xt));
        return br && wc(oe, tt), C;
      }
      for (je = r(oe, je); !xt.done; tt++, xt = ce.next())
        (xt = ae(je, oe, tt, xt.value, ye)),
          xt !== null &&
            (t &&
              xt.alternate !== null &&
              je.delete(xt.key === null ? tt : xt.key),
            (F = o(xt, F, tt)),
            ke === null ? (C = xt) : (ke.sibling = xt),
            (ke = xt));
      return (
        t &&
          je.forEach(function (Mt) {
            return e(oe, Mt);
          }),
        br && wc(oe, tt),
        C
      );
    }
    function he(oe, F, ce, ye) {
      if (
        (typeof ce == "object" &&
          ce !== null &&
          ce.type === Du &&
          ce.key === null &&
          (ce = ce.props.children),
        typeof ce == "object" && ce !== null)
      ) {
        switch (ce.$$typeof) {
          case Ip:
            e: {
              for (var C = ce.key, ke = F; ke !== null; ) {
                if (ke.key === C) {
                  if (((C = ce.type), C === Du)) {
                    if (ke.tag === 7) {
                      n(oe, ke.sibling),
                        (F = a(ke, ce.props.children)),
                        (F.return = oe),
                        (oe = F);
                      break e;
                    }
                  } else if (
                    ke.elementType === C ||
                    (typeof C == "object" &&
                      C !== null &&
                      C.$$typeof === fl &&
                      MS(C) === ke.type)
                  ) {
                    n(oe, ke.sibling),
                      (F = a(ke, ce.props)),
                      (F.ref = id(oe, ke, ce)),
                      (F.return = oe),
                      (oe = F);
                    break e;
                  }
                  n(oe, ke);
                  break;
                } else e(oe, ke);
                ke = ke.sibling;
              }
              ce.type === Du
                ? ((F = Lc(ce.props.children, oe.mode, ye, ce.key)),
                  (F.return = oe),
                  (oe = F))
                : ((ye = bg(ce.type, ce.key, ce.props, null, oe.mode, ye)),
                  (ye.ref = id(oe, F, ce)),
                  (ye.return = oe),
                  (oe = ye));
            }
            return u(oe);
          case Lu:
            e: {
              for (ke = ce.key; F !== null; ) {
                if (F.key === ke)
                  if (
                    F.tag === 4 &&
                    F.stateNode.containerInfo === ce.containerInfo &&
                    F.stateNode.implementation === ce.implementation
                  ) {
                    n(oe, F.sibling),
                      (F = a(F, ce.children || [])),
                      (F.return = oe),
                      (oe = F);
                    break e;
                  } else {
                    n(oe, F);
                    break;
                  }
                else e(oe, F);
                F = F.sibling;
              }
              (F = Gy(ce, oe.mode, ye)), (F.return = oe), (oe = F);
            }
            return u(oe);
          case fl:
            return (ke = ce._init), he(oe, F, ke(ce._payload), ye);
        }
        if (gd(ce)) return se(oe, F, ce, ye);
        if (Jh(ce)) return le(oe, F, ce, ye);
        Vp(oe, ce);
      }
      return (typeof ce == "string" && ce !== "") || typeof ce == "number"
        ? ((ce = "" + ce),
          F !== null && F.tag === 6
            ? (n(oe, F.sibling), (F = a(F, ce)), (F.return = oe), (oe = F))
            : (n(oe, F), (F = Yy(ce, oe.mode, ye)), (F.return = oe), (oe = F)),
          u(oe))
        : n(oe, F);
    }
    return he;
  }
  var hh = dT(!0),
    fT = dT(!1),
    Ff = {},
    io = ec(Ff),
    nf = ec(Ff),
    rf = ec(Ff);
  function Ic(t) {
    if (t === Ff) throw Error(lt(174));
    return t;
  }
  function J0(t, e) {
    switch ((cr(rf, e), cr(nf, t), cr(io, Ff), (t = e.nodeType), t)) {
      case 9:
      case 11:
        e = (e = e.documentElement) ? e.namespaceURI : Fx(null, "");
        break;
      default:
        (t = t === 8 ? e.parentNode : e),
          (e = t.namespaceURI || null),
          (t = t.tagName),
          (e = Fx(e, t));
    }
    gr(io), cr(io, e);
  }
  function dh() {
    gr(io), gr(nf), gr(rf);
  }
  function pT(t) {
    Ic(rf.current);
    var e = Ic(io.current),
      n = Fx(e, t.type);
    e !== n && (cr(nf, t), cr(io, n));
  }
  function ew(t) {
    nf.current === t && (gr(io), gr(nf));
  }
  var Ar = ec(0);
  function Qg(t) {
    for (var e = t; e !== null; ) {
      if (e.tag === 13) {
        var n = e.memoizedState;
        if (
          n !== null &&
          ((n = n.dehydrated), n === null || n.data === "$?" || n.data === "$!")
        )
          return e;
      } else if (e.tag === 19 && e.memoizedProps.revealOrder !== void 0) {
        if (e.flags & 128) return e;
      } else if (e.child !== null) {
        (e.child.return = e), (e = e.child);
        continue;
      }
      if (e === t) break;
      for (; e.sibling === null; ) {
        if (e.return === null || e.return === t) return null;
        e = e.return;
      }
      (e.sibling.return = e.return), (e = e.sibling);
    }
    return null;
  }
  var $y = [];
  function tw() {
    for (var t = 0; t < $y.length; t++)
      $y[t]._workInProgressVersionPrimary = null;
    $y.length = 0;
  }
  var gg = Ko.ReactCurrentDispatcher,
    By = Ko.ReactCurrentBatchConfig,
    Bc = 0,
    Cr = null,
    si = null,
    mi = null,
    Zg = !1,
    Pd = !1,
    sf = 0,
    wM = 0;
  function Hi() {
    throw Error(lt(321));
  }
  function nw(t, e) {
    if (e === null) return !1;
    for (var n = 0; n < e.length && n < t.length; n++)
      if (!Ia(t[n], e[n])) return !1;
    return !0;
  }
  function rw(t, e, n, r, a, o) {
    if (
      ((Bc = o),
      (Cr = e),
      (e.memoizedState = null),
      (e.updateQueue = null),
      (e.lanes = 0),
      (gg.current = t === null || t.memoizedState === null ? kM : AM),
      (t = n(r, a)),
      Pd)
    ) {
      o = 0;
      do {
        if (((Pd = !1), (sf = 0), 25 <= o)) throw Error(lt(301));
        (o += 1),
          (mi = si = null),
          (e.updateQueue = null),
          (gg.current = CM),
          (t = n(r, a));
      } while (Pd);
    }
    if (
      ((gg.current = Jg),
      (e = si !== null && si.next !== null),
      (Bc = 0),
      (mi = si = Cr = null),
      (Zg = !1),
      e)
    )
      throw Error(lt(300));
    return t;
  }
  function iw() {
    var t = sf !== 0;
    return (sf = 0), t;
  }
  function qa() {
    var t = {
      memoizedState: null,
      baseState: null,
      baseQueue: null,
      queue: null,
      next: null,
    };
    return mi === null ? (Cr.memoizedState = mi = t) : (mi = mi.next = t), mi;
  }
  function ca() {
    if (si === null) {
      var t = Cr.alternate;
      t = t !== null ? t.memoizedState : null;
    } else t = si.next;
    var e = mi === null ? Cr.memoizedState : mi.next;
    if (e !== null) (mi = e), (si = t);
    else {
      if (t === null) throw Error(lt(310));
      (si = t),
        (t = {
          memoizedState: si.memoizedState,
          baseState: si.baseState,
          baseQueue: si.baseQueue,
          queue: si.queue,
          next: null,
        }),
        mi === null ? (Cr.memoizedState = mi = t) : (mi = mi.next = t);
    }
    return mi;
  }
  function af(t, e) {
    return typeof e == "function" ? e(t) : e;
  }
  function Hy(t) {
    var e = ca(),
      n = e.queue;
    if (n === null) throw Error(lt(311));
    n.lastRenderedReducer = t;
    var r = si,
      a = r.baseQueue,
      o = n.pending;
    if (o !== null) {
      if (a !== null) {
        var u = a.next;
        (a.next = o.next), (o.next = u);
      }
      (r.baseQueue = a = o), (n.pending = null);
    }
    if (a !== null) {
      (o = a.next), (r = r.baseState);
      var g = (u = null),
        x = null,
        E = o;
      do {
        var L = E.lane;
        if ((Bc & L) === L)
          x !== null &&
            (x = x.next =
              {
                lane: 0,
                action: E.action,
                hasEagerState: E.hasEagerState,
                eagerState: E.eagerState,
                next: null,
              }),
            (r = E.hasEagerState ? E.eagerState : t(r, E.action));
        else {
          var z = {
            lane: L,
            action: E.action,
            hasEagerState: E.hasEagerState,
            eagerState: E.eagerState,
            next: null,
          };
          x === null ? ((g = x = z), (u = r)) : (x = x.next = z),
            (Cr.lanes |= L),
            (Hc |= L);
        }
        E = E.next;
      } while (E !== null && E !== o);
      x === null ? (u = r) : (x.next = g),
        Ia(r, e.memoizedState) || (As = !0),
        (e.memoizedState = r),
        (e.baseState = u),
        (e.baseQueue = x),
        (n.lastRenderedState = r);
    }
    if (((t = n.interleaved), t !== null)) {
      a = t;
      do (o = a.lane), (Cr.lanes |= o), (Hc |= o), (a = a.next);
      while (a !== t);
    } else a === null && (n.lanes = 0);
    return [e.memoizedState, n.dispatch];
  }
  function Wy(t) {
    var e = ca(),
      n = e.queue;
    if (n === null) throw Error(lt(311));
    n.lastRenderedReducer = t;
    var r = n.dispatch,
      a = n.pending,
      o = e.memoizedState;
    if (a !== null) {
      n.pending = null;
      var u = (a = a.next);
      do (o = t(o, u.action)), (u = u.next);
      while (u !== a);
      Ia(o, e.memoizedState) || (As = !0),
        (e.memoizedState = o),
        e.baseQueue === null && (e.baseState = o),
        (n.lastRenderedState = o);
    }
    return [o, r];
  }
  function gT() {}
  function mT(t, e) {
    var n = Cr,
      r = ca(),
      a = e(),
      o = !Ia(r.memoizedState, a);
    if (
      (o && ((r.memoizedState = a), (As = !0)),
      (r = r.queue),
      sw(xT.bind(null, n, r, t), [t]),
      r.getSnapshot !== e || o || (mi !== null && mi.memoizedState.tag & 1))
    ) {
      if (
        ((n.flags |= 2048),
        of(9, yT.bind(null, n, r, a, e), void 0, null),
        vi === null)
      )
        throw Error(lt(349));
      Bc & 30 || vT(n, e, a);
    }
    return a;
  }
  function vT(t, e, n) {
    (t.flags |= 16384),
      (t = { getSnapshot: e, value: n }),
      (e = Cr.updateQueue),
      e === null
        ? ((e = { lastEffect: null, stores: null }),
          (Cr.updateQueue = e),
          (e.stores = [t]))
        : ((n = e.stores), n === null ? (e.stores = [t]) : n.push(t));
  }
  function yT(t, e, n, r) {
    (e.value = n), (e.getSnapshot = r), bT(e) && wT(t);
  }
  function xT(t, e, n) {
    return n(function () {
      bT(e) && wT(t);
    });
  }
  function bT(t) {
    var e = t.getSnapshot;
    t = t.value;
    try {
      var n = e();
      return !Ia(t, n);
    } catch {
      return !0;
    }
  }
  function wT(t) {
    var e = Bo(t, 1);
    e !== null && ka(e, t, 1, -1);
  }
  function jS(t) {
    var e = qa();
    return (
      typeof t == "function" && (t = t()),
      (e.memoizedState = e.baseState = t),
      (t = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: af,
        lastRenderedState: t,
      }),
      (e.queue = t),
      (t = t.dispatch = EM.bind(null, Cr, t)),
      [e.memoizedState, t]
    );
  }
  function of(t, e, n, r) {
    return (
      (t = { tag: t, create: e, destroy: n, deps: r, next: null }),
      (e = Cr.updateQueue),
      e === null
        ? ((e = { lastEffect: null, stores: null }),
          (Cr.updateQueue = e),
          (e.lastEffect = t.next = t))
        : ((n = e.lastEffect),
          n === null
            ? (e.lastEffect = t.next = t)
            : ((r = n.next), (n.next = t), (t.next = r), (e.lastEffect = t))),
      t
    );
  }
  function _T() {
    return ca().memoizedState;
  }
  function mg(t, e, n, r) {
    var a = qa();
    (Cr.flags |= t),
      (a.memoizedState = of(1 | e, n, void 0, r === void 0 ? null : r));
  }
  function Um(t, e, n, r) {
    var a = ca();
    r = r === void 0 ? null : r;
    var o = void 0;
    if (si !== null) {
      var u = si.memoizedState;
      if (((o = u.destroy), r !== null && nw(r, u.deps))) {
        a.memoizedState = of(e, n, o, r);
        return;
      }
    }
    (Cr.flags |= t), (a.memoizedState = of(1 | e, n, o, r));
  }
  function FS(t, e) {
    return mg(8390656, 8, t, e);
  }
  function sw(t, e) {
    return Um(2048, 8, t, e);
  }
  function ST(t, e) {
    return Um(4, 2, t, e);
  }
  function ET(t, e) {
    return Um(4, 4, t, e);
  }
  function kT(t, e) {
    if (typeof e == "function")
      return (
        (t = t()),
        e(t),
        function () {
          e(null);
        }
      );
    if (e != null)
      return (
        (t = t()),
        (e.current = t),
        function () {
          e.current = null;
        }
      );
  }
  function AT(t, e, n) {
    return (
      (n = n != null ? n.concat([t]) : null), Um(4, 4, kT.bind(null, e, t), n)
    );
  }
  function aw() {}
  function CT(t, e) {
    var n = ca();
    e = e === void 0 ? null : e;
    var r = n.memoizedState;
    return r !== null && e !== null && nw(e, r[1])
      ? r[0]
      : ((n.memoizedState = [t, e]), t);
  }
  function TT(t, e) {
    var n = ca();
    e = e === void 0 ? null : e;
    var r = n.memoizedState;
    return r !== null && e !== null && nw(e, r[1])
      ? r[0]
      : ((t = t()), (n.memoizedState = [t, e]), t);
  }
  function IT(t, e, n) {
    return Bc & 21
      ? (Ia(n, e) ||
          ((n = OC()), (Cr.lanes |= n), (Hc |= n), (t.baseState = !0)),
        e)
      : (t.baseState && ((t.baseState = !1), (As = !0)), (t.memoizedState = n));
  }
  function _M(t, e) {
    var n = Qn;
    (Qn = n !== 0 && 4 > n ? n : 4), t(!0);
    var r = By.transition;
    By.transition = {};
    try {
      t(!1), e();
    } finally {
      (Qn = n), (By.transition = r);
    }
  }
  function PT() {
    return ca().memoizedState;
  }
  function SM(t, e, n) {
    var r = Dl(t);
    if (
      ((n = {
        lane: r,
        action: n,
        hasEagerState: !1,
        eagerState: null,
        next: null,
      }),
      RT(t))
    )
      OT(e, n);
    else if (((n = lT(t, e, n, r)), n !== null)) {
      var a = ds();
      ka(n, t, r, a), NT(n, e, r);
    }
  }
  function EM(t, e, n) {
    var r = Dl(t),
      a = {
        lane: r,
        action: n,
        hasEagerState: !1,
        eagerState: null,
        next: null,
      };
    if (RT(t)) OT(e, a);
    else {
      var o = t.alternate;
      if (
        t.lanes === 0 &&
        (o === null || o.lanes === 0) &&
        ((o = e.lastRenderedReducer), o !== null)
      )
        try {
          var u = e.lastRenderedState,
            g = o(u, n);
          if (((a.hasEagerState = !0), (a.eagerState = g), Ia(g, u))) {
            var x = e.interleaved;
            x === null
              ? ((a.next = a), Q0(e))
              : ((a.next = x.next), (x.next = a)),
              (e.interleaved = a);
            return;
          }
        } catch {
        } finally {
        }
      (n = lT(t, e, a, r)),
        n !== null && ((a = ds()), ka(n, t, r, a), NT(n, e, r));
    }
  }
  function RT(t) {
    var e = t.alternate;
    return t === Cr || (e !== null && e === Cr);
  }
  function OT(t, e) {
    Pd = Zg = !0;
    var n = t.pending;
    n === null ? (e.next = e) : ((e.next = n.next), (n.next = e)),
      (t.pending = e);
  }
  function NT(t, e, n) {
    if (n & 4194240) {
      var r = e.lanes;
      (r &= t.pendingLanes), (n |= r), (e.lanes = n), j0(t, n);
    }
  }
  var Jg = {
      readContext: la,
      useCallback: Hi,
      useContext: Hi,
      useEffect: Hi,
      useImperativeHandle: Hi,
      useInsertionEffect: Hi,
      useLayoutEffect: Hi,
      useMemo: Hi,
      useReducer: Hi,
      useRef: Hi,
      useState: Hi,
      useDebugValue: Hi,
      useDeferredValue: Hi,
      useTransition: Hi,
      useMutableSource: Hi,
      useSyncExternalStore: Hi,
      useId: Hi,
      unstable_isNewReconciler: !1,
    },
    kM = {
      readContext: la,
      useCallback: function (t, e) {
        return (qa().memoizedState = [t, e === void 0 ? null : e]), t;
      },
      useContext: la,
      useEffect: FS,
      useImperativeHandle: function (t, e, n) {
        return (
          (n = n != null ? n.concat([t]) : null),
          mg(4194308, 4, kT.bind(null, e, t), n)
        );
      },
      useLayoutEffect: function (t, e) {
        return mg(4194308, 4, t, e);
      },
      useInsertionEffect: function (t, e) {
        return mg(4, 2, t, e);
      },
      useMemo: function (t, e) {
        var n = qa();
        return (
          (e = e === void 0 ? null : e),
          (t = t()),
          (n.memoizedState = [t, e]),
          t
        );
      },
      useReducer: function (t, e, n) {
        var r = qa();
        return (
          (e = n !== void 0 ? n(e) : e),
          (r.memoizedState = r.baseState = e),
          (t = {
            pending: null,
            interleaved: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: t,
            lastRenderedState: e,
          }),
          (r.queue = t),
          (t = t.dispatch = SM.bind(null, Cr, t)),
          [r.memoizedState, t]
        );
      },
      useRef: function (t) {
        var e = qa();
        return (t = { current: t }), (e.memoizedState = t);
      },
      useState: jS,
      useDebugValue: aw,
      useDeferredValue: function (t) {
        return (qa().memoizedState = t);
      },
      useTransition: function () {
        var t = jS(!1),
          e = t[0];
        return (t = _M.bind(null, t[1])), (qa().memoizedState = t), [e, t];
      },
      useMutableSource: function () {},
      useSyncExternalStore: function (t, e, n) {
        var r = Cr,
          a = qa();
        if (br) {
          if (n === void 0) throw Error(lt(407));
          n = n();
        } else {
          if (((n = e()), vi === null)) throw Error(lt(349));
          Bc & 30 || vT(r, e, n);
        }
        a.memoizedState = n;
        var o = { value: n, getSnapshot: e };
        return (
          (a.queue = o),
          FS(xT.bind(null, r, o, t), [t]),
          (r.flags |= 2048),
          of(9, yT.bind(null, r, o, n, e), void 0, null),
          n
        );
      },
      useId: function () {
        var t = qa(),
          e = vi.identifierPrefix;
        if (br) {
          var n = Ro,
            r = Po;
          (n = (r & ~(1 << (32 - Ea(r) - 1))).toString(32) + n),
            (e = ":" + e + "R" + n),
            (n = sf++),
            0 < n && (e += "H" + n.toString(32)),
            (e += ":");
        } else (n = wM++), (e = ":" + e + "r" + n.toString(32) + ":");
        return (t.memoizedState = e);
      },
      unstable_isNewReconciler: !1,
    },
    AM = {
      readContext: la,
      useCallback: CT,
      useContext: la,
      useEffect: sw,
      useImperativeHandle: AT,
      useInsertionEffect: ST,
      useLayoutEffect: ET,
      useMemo: TT,
      useReducer: Hy,
      useRef: _T,
      useState: function () {
        return Hy(af);
      },
      useDebugValue: aw,
      useDeferredValue: function (t) {
        var e = ca();
        return IT(e, si.memoizedState, t);
      },
      useTransition: function () {
        var t = Hy(af)[0],
          e = ca().memoizedState;
        return [t, e];
      },
      useMutableSource: gT,
      useSyncExternalStore: mT,
      useId: PT,
      unstable_isNewReconciler: !1,
    },
    CM = {
      readContext: la,
      useCallback: CT,
      useContext: la,
      useEffect: sw,
      useImperativeHandle: AT,
      useInsertionEffect: ST,
      useLayoutEffect: ET,
      useMemo: TT,
      useReducer: Wy,
      useRef: _T,
      useState: function () {
        return Wy(af);
      },
      useDebugValue: aw,
      useDeferredValue: function (t) {
        var e = ca();
        return si === null ? (e.memoizedState = t) : IT(e, si.memoizedState, t);
      },
      useTransition: function () {
        var t = Wy(af)[0],
          e = ca().memoizedState;
        return [t, e];
      },
      useMutableSource: gT,
      useSyncExternalStore: mT,
      useId: PT,
      unstable_isNewReconciler: !1,
    };
  function fh(t, e) {
    try {
      var n = "",
        r = e;
      do (n += tD(r)), (r = r.return);
      while (r);
      var a = n;
    } catch (o) {
      a =
        `
Error generating stack: ` +
        o.message +
        `
` +
        o.stack;
    }
    return { value: t, source: e, stack: a, digest: null };
  }
  function Uy(t, e, n) {
    return { value: t, source: null, stack: n ?? null, digest: e ?? null };
  }
  function ob(t, e) {
    try {
      console.error(e.value);
    } catch (n) {
      setTimeout(function () {
        throw n;
      });
    }
  }
  var TM = typeof WeakMap == "function" ? WeakMap : Map;
  function LT(t, e, n) {
    (n = jo(-1, n)), (n.tag = 3), (n.payload = { element: null });
    var r = e.value;
    return (
      (n.callback = function () {
        tm || ((tm = !0), (vb = r)), ob(t, e);
      }),
      n
    );
  }
  function DT(t, e, n) {
    (n = jo(-1, n)), (n.tag = 3);
    var r = t.type.getDerivedStateFromError;
    if (typeof r == "function") {
      var a = e.value;
      (n.payload = function () {
        return r(a);
      }),
        (n.callback = function () {
          ob(t, e);
        });
    }
    var o = t.stateNode;
    return (
      o !== null &&
        typeof o.componentDidCatch == "function" &&
        (n.callback = function () {
          ob(t, e),
            typeof r != "function" &&
              (Ll === null ? (Ll = new Set([this])) : Ll.add(this));
          var u = e.stack;
          this.componentDidCatch(e.value, {
            componentStack: u !== null ? u : "",
          });
        }),
      n
    );
  }
  function zS(t, e, n) {
    var r = t.pingCache;
    if (r === null) {
      r = t.pingCache = new TM();
      var a = new Set();
      r.set(e, a);
    } else (a = r.get(e)), a === void 0 && ((a = new Set()), r.set(e, a));
    a.has(n) || (a.add(n), (t = BM.bind(null, t, e, n)), e.then(t, t));
  }
  function VS(t) {
    do {
      var e;
      if (
        ((e = t.tag === 13) &&
          ((e = t.memoizedState),
          (e = e !== null ? e.dehydrated !== null : !0)),
        e)
      )
        return t;
      t = t.return;
    } while (t !== null);
    return null;
  }
  function $S(t, e, n, r, a) {
    return t.mode & 1
      ? ((t.flags |= 65536), (t.lanes = a), t)
      : (t === e
          ? (t.flags |= 65536)
          : ((t.flags |= 128),
            (n.flags |= 131072),
            (n.flags &= -52805),
            n.tag === 1 &&
              (n.alternate === null
                ? (n.tag = 17)
                : ((e = jo(-1, 1)), (e.tag = 2), Nl(n, e, 1))),
            (n.lanes |= 1)),
        t);
  }
  var IM = Ko.ReactCurrentOwner,
    As = !1;
  function cs(t, e, n, r) {
    e.child = t === null ? fT(e, null, n, r) : hh(e, t.child, n, r);
  }
  function BS(t, e, n, r, a) {
    n = n.render;
    var o = e.ref;
    return (
      th(e, a),
      (r = rw(t, e, n, r, o, a)),
      (n = iw()),
      t !== null && !As
        ? ((e.updateQueue = t.updateQueue),
          (e.flags &= -2053),
          (t.lanes &= ~a),
          Ho(t, e, a))
        : (br && n && U0(e), (e.flags |= 1), cs(t, e, r, a), e.child)
    );
  }
  function HS(t, e, n, r, a) {
    if (t === null) {
      var o = n.type;
      return typeof o == "function" &&
        !pw(o) &&
        o.defaultProps === void 0 &&
        n.compare === null &&
        n.defaultProps === void 0
        ? ((e.tag = 15), (e.type = o), MT(t, e, o, r, a))
        : ((t = bg(n.type, null, r, e, e.mode, a)),
          (t.ref = e.ref),
          (t.return = e),
          (e.child = t));
    }
    if (((o = t.child), !(t.lanes & a))) {
      var u = o.memoizedProps;
      if (
        ((n = n.compare), (n = n !== null ? n : Zd), n(u, r) && t.ref === e.ref)
      )
        return Ho(t, e, a);
    }
    return (
      (e.flags |= 1),
      (t = Ml(o, r)),
      (t.ref = e.ref),
      (t.return = e),
      (e.child = t)
    );
  }
  function MT(t, e, n, r, a) {
    if (t !== null) {
      var o = t.memoizedProps;
      if (Zd(o, r) && t.ref === e.ref)
        if (((As = !1), (e.pendingProps = r = o), (t.lanes & a) !== 0))
          t.flags & 131072 && (As = !0);
        else return (e.lanes = t.lanes), Ho(t, e, a);
    }
    return lb(t, e, n, r, a);
  }
  function jT(t, e, n) {
    var r = e.pendingProps,
      a = r.children,
      o = t !== null ? t.memoizedState : null;
    if (r.mode === "hidden")
      if (!(e.mode & 1))
        (e.memoizedState = {
          baseLanes: 0,
          cachePool: null,
          transitions: null,
        }),
          cr(Uu, Fs),
          (Fs |= n);
      else {
        if (!(n & 1073741824))
          return (
            (t = o !== null ? o.baseLanes | n : n),
            (e.lanes = e.childLanes = 1073741824),
            (e.memoizedState = {
              baseLanes: t,
              cachePool: null,
              transitions: null,
            }),
            (e.updateQueue = null),
            cr(Uu, Fs),
            (Fs |= t),
            null
          );
        (e.memoizedState = {
          baseLanes: 0,
          cachePool: null,
          transitions: null,
        }),
          (r = o !== null ? o.baseLanes : n),
          cr(Uu, Fs),
          (Fs |= r);
      }
    else
      o !== null ? ((r = o.baseLanes | n), (e.memoizedState = null)) : (r = n),
        cr(Uu, Fs),
        (Fs |= r);
    return cs(t, e, a, n), e.child;
  }
  function FT(t, e) {
    var n = e.ref;
    ((t === null && n !== null) || (t !== null && t.ref !== n)) &&
      ((e.flags |= 512), (e.flags |= 2097152));
  }
  function lb(t, e, n, r, a) {
    var o = Ps(n) ? Vc : Qi.current;
    return (
      (o = ch(e, o)),
      th(e, a),
      (n = rw(t, e, n, r, o, a)),
      (r = iw()),
      t !== null && !As
        ? ((e.updateQueue = t.updateQueue),
          (e.flags &= -2053),
          (t.lanes &= ~a),
          Ho(t, e, a))
        : (br && r && U0(e), (e.flags |= 1), cs(t, e, n, a), e.child)
    );
  }
  function WS(t, e, n, r, a) {
    if (Ps(n)) {
      var o = !0;
      Ug(e);
    } else o = !1;
    if ((th(e, a), e.stateNode === null))
      vg(t, e), hT(e, n, r), ab(e, n, r, a), (r = !0);
    else if (t === null) {
      var u = e.stateNode,
        g = e.memoizedProps;
      u.props = g;
      var x = u.context,
        E = n.contextType;
      typeof E == "object" && E !== null
        ? (E = la(E))
        : ((E = Ps(n) ? Vc : Qi.current), (E = ch(e, E)));
      var L = n.getDerivedStateFromProps,
        z =
          typeof L == "function" ||
          typeof u.getSnapshotBeforeUpdate == "function";
      z ||
        (typeof u.UNSAFE_componentWillReceiveProps != "function" &&
          typeof u.componentWillReceiveProps != "function") ||
        ((g !== r || x !== E) && DS(e, u, r, E)),
        (pl = !1);
      var B = e.memoizedState;
      (u.state = B),
        Kg(e, r, u, a),
        (x = e.memoizedState),
        g !== r || B !== x || Is.current || pl
          ? (typeof L == "function" && (sb(e, n, L, r), (x = e.memoizedState)),
            (g = pl || LS(e, n, g, r, B, x, E))
              ? (z ||
                  (typeof u.UNSAFE_componentWillMount != "function" &&
                    typeof u.componentWillMount != "function") ||
                  (typeof u.componentWillMount == "function" &&
                    u.componentWillMount(),
                  typeof u.UNSAFE_componentWillMount == "function" &&
                    u.UNSAFE_componentWillMount()),
                typeof u.componentDidMount == "function" &&
                  (e.flags |= 4194308))
              : (typeof u.componentDidMount == "function" &&
                  (e.flags |= 4194308),
                (e.memoizedProps = r),
                (e.memoizedState = x)),
            (u.props = r),
            (u.state = x),
            (u.context = E),
            (r = g))
          : (typeof u.componentDidMount == "function" && (e.flags |= 4194308),
            (r = !1));
    } else {
      (u = e.stateNode),
        cT(t, e),
        (g = e.memoizedProps),
        (E = e.type === e.elementType ? g : wa(e.type, g)),
        (u.props = E),
        (z = e.pendingProps),
        (B = u.context),
        (x = n.contextType),
        typeof x == "object" && x !== null
          ? (x = la(x))
          : ((x = Ps(n) ? Vc : Qi.current), (x = ch(e, x)));
      var ae = n.getDerivedStateFromProps;
      (L =
        typeof ae == "function" ||
        typeof u.getSnapshotBeforeUpdate == "function") ||
        (typeof u.UNSAFE_componentWillReceiveProps != "function" &&
          typeof u.componentWillReceiveProps != "function") ||
        ((g !== z || B !== x) && DS(e, u, r, x)),
        (pl = !1),
        (B = e.memoizedState),
        (u.state = B),
        Kg(e, r, u, a);
      var se = e.memoizedState;
      g !== z || B !== se || Is.current || pl
        ? (typeof ae == "function" && (sb(e, n, ae, r), (se = e.memoizedState)),
          (E = pl || LS(e, n, E, r, B, se, x) || !1)
            ? (L ||
                (typeof u.UNSAFE_componentWillUpdate != "function" &&
                  typeof u.componentWillUpdate != "function") ||
                (typeof u.componentWillUpdate == "function" &&
                  u.componentWillUpdate(r, se, x),
                typeof u.UNSAFE_componentWillUpdate == "function" &&
                  u.UNSAFE_componentWillUpdate(r, se, x)),
              typeof u.componentDidUpdate == "function" && (e.flags |= 4),
              typeof u.getSnapshotBeforeUpdate == "function" &&
                (e.flags |= 1024))
            : (typeof u.componentDidUpdate != "function" ||
                (g === t.memoizedProps && B === t.memoizedState) ||
                (e.flags |= 4),
              typeof u.getSnapshotBeforeUpdate != "function" ||
                (g === t.memoizedProps && B === t.memoizedState) ||
                (e.flags |= 1024),
              (e.memoizedProps = r),
              (e.memoizedState = se)),
          (u.props = r),
          (u.state = se),
          (u.context = x),
          (r = E))
        : (typeof u.componentDidUpdate != "function" ||
            (g === t.memoizedProps && B === t.memoizedState) ||
            (e.flags |= 4),
          typeof u.getSnapshotBeforeUpdate != "function" ||
            (g === t.memoizedProps && B === t.memoizedState) ||
            (e.flags |= 1024),
          (r = !1));
    }
    return cb(t, e, n, r, o, a);
  }
  function cb(t, e, n, r, a, o) {
    FT(t, e);
    var u = (e.flags & 128) !== 0;
    if (!r && !u) return a && IS(e, n, !1), Ho(t, e, o);
    (r = e.stateNode), (IM.current = e);
    var g =
      u && typeof n.getDerivedStateFromError != "function" ? null : r.render();
    return (
      (e.flags |= 1),
      t !== null && u
        ? ((e.child = hh(e, t.child, null, o)), (e.child = hh(e, null, g, o)))
        : cs(t, e, g, o),
      (e.memoizedState = r.state),
      a && IS(e, n, !0),
      e.child
    );
  }
  function zT(t) {
    var e = t.stateNode;
    e.pendingContext
      ? TS(t, e.pendingContext, e.pendingContext !== e.context)
      : e.context && TS(t, e.context, !1),
      J0(t, e.containerInfo);
  }
  function US(t, e, n, r, a) {
    return uh(), Y0(a), (e.flags |= 256), cs(t, e, n, r), e.child;
  }
  var ub = { dehydrated: null, treeContext: null, retryLane: 0 };
  function hb(t) {
    return { baseLanes: t, cachePool: null, transitions: null };
  }
  function VT(t, e, n) {
    var r = e.pendingProps,
      a = Ar.current,
      o = !1,
      u = (e.flags & 128) !== 0,
      g;
    if (
      ((g = u) ||
        (g = t !== null && t.memoizedState === null ? !1 : (a & 2) !== 0),
      g
        ? ((o = !0), (e.flags &= -129))
        : (t === null || t.memoizedState !== null) && (a |= 1),
      cr(Ar, a & 1),
      t === null)
    )
      return (
        rb(e),
        (t = e.memoizedState),
        t !== null && ((t = t.dehydrated), t !== null)
          ? (e.mode & 1
              ? t.data === "$!"
                ? (e.lanes = 8)
                : (e.lanes = 1073741824)
              : (e.lanes = 1),
            null)
          : ((u = r.children),
            (t = r.fallback),
            o
              ? ((r = e.mode),
                (o = e.child),
                (u = { mode: "hidden", children: u }),
                !(r & 1) && o !== null
                  ? ((o.childLanes = 0), (o.pendingProps = u))
                  : (o = Gm(u, r, 0, null)),
                (t = Lc(t, r, n, null)),
                (o.return = e),
                (t.return = e),
                (o.sibling = t),
                (e.child = o),
                (e.child.memoizedState = hb(n)),
                (e.memoizedState = ub),
                t)
              : ow(e, u))
      );
    if (((a = t.memoizedState), a !== null && ((g = a.dehydrated), g !== null)))
      return PM(t, e, u, r, g, a, n);
    if (o) {
      (o = r.fallback), (u = e.mode), (a = t.child), (g = a.sibling);
      var x = { mode: "hidden", children: r.children };
      return (
        !(u & 1) && e.child !== a
          ? ((r = e.child),
            (r.childLanes = 0),
            (r.pendingProps = x),
            (e.deletions = null))
          : ((r = Ml(a, x)), (r.subtreeFlags = a.subtreeFlags & 14680064)),
        g !== null ? (o = Ml(g, o)) : ((o = Lc(o, u, n, null)), (o.flags |= 2)),
        (o.return = e),
        (r.return = e),
        (r.sibling = o),
        (e.child = r),
        (r = o),
        (o = e.child),
        (u = t.child.memoizedState),
        (u =
          u === null
            ? hb(n)
            : {
                baseLanes: u.baseLanes | n,
                cachePool: null,
                transitions: u.transitions,
              }),
        (o.memoizedState = u),
        (o.childLanes = t.childLanes & ~n),
        (e.memoizedState = ub),
        r
      );
    }
    return (
      (o = t.child),
      (t = o.sibling),
      (r = Ml(o, { mode: "visible", children: r.children })),
      !(e.mode & 1) && (r.lanes = n),
      (r.return = e),
      (r.sibling = null),
      t !== null &&
        ((n = e.deletions),
        n === null ? ((e.deletions = [t]), (e.flags |= 16)) : n.push(t)),
      (e.child = r),
      (e.memoizedState = null),
      r
    );
  }
  function ow(t, e) {
    return (
      (e = Gm({ mode: "visible", children: e }, t.mode, 0, null)),
      (e.return = t),
      (t.child = e)
    );
  }
  function $p(t, e, n, r) {
    return (
      r !== null && Y0(r),
      hh(e, t.child, null, n),
      (t = ow(e, e.pendingProps.children)),
      (t.flags |= 2),
      (e.memoizedState = null),
      t
    );
  }
  function PM(t, e, n, r, a, o, u) {
    if (n)
      return e.flags & 256
        ? ((e.flags &= -257), (r = Uy(Error(lt(422)))), $p(t, e, u, r))
        : e.memoizedState !== null
        ? ((e.child = t.child), (e.flags |= 128), null)
        : ((o = r.fallback),
          (a = e.mode),
          (r = Gm({ mode: "visible", children: r.children }, a, 0, null)),
          (o = Lc(o, a, u, null)),
          (o.flags |= 2),
          (r.return = e),
          (o.return = e),
          (r.sibling = o),
          (e.child = r),
          e.mode & 1 && hh(e, t.child, null, u),
          (e.child.memoizedState = hb(u)),
          (e.memoizedState = ub),
          o);
    if (!(e.mode & 1)) return $p(t, e, u, null);
    if (a.data === "$!") {
      if (((r = a.nextSibling && a.nextSibling.dataset), r)) var g = r.dgst;
      return (
        (r = g), (o = Error(lt(419))), (r = Uy(o, r, void 0)), $p(t, e, u, r)
      );
    }
    if (((g = (u & t.childLanes) !== 0), As || g)) {
      if (((r = vi), r !== null)) {
        switch (u & -u) {
          case 4:
            a = 2;
            break;
          case 16:
            a = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            a = 32;
            break;
          case 536870912:
            a = 268435456;
            break;
          default:
            a = 0;
        }
        (a = a & (r.suspendedLanes | u) ? 0 : a),
          a !== 0 &&
            a !== o.retryLane &&
            ((o.retryLane = a), Bo(t, a), ka(r, t, a, -1));
      }
      return fw(), (r = Uy(Error(lt(421)))), $p(t, e, u, r);
    }
    return a.data === "$?"
      ? ((e.flags |= 128),
        (e.child = t.child),
        (e = HM.bind(null, t)),
        (a._reactRetry = e),
        null)
      : ((t = o.treeContext),
        (zs = Ol(a.nextSibling)),
        (Bs = e),
        (br = !0),
        (Sa = null),
        t !== null &&
          ((na[ra++] = Po),
          (na[ra++] = Ro),
          (na[ra++] = $c),
          (Po = t.id),
          (Ro = t.overflow),
          ($c = e)),
        (e = ow(e, r.children)),
        (e.flags |= 4096),
        e);
  }
  function XS(t, e, n) {
    t.lanes |= e;
    var r = t.alternate;
    r !== null && (r.lanes |= e), ib(t.return, e, n);
  }
  function Xy(t, e, n, r, a) {
    var o = t.memoizedState;
    o === null
      ? (t.memoizedState = {
          isBackwards: e,
          rendering: null,
          renderingStartTime: 0,
          last: r,
          tail: n,
          tailMode: a,
        })
      : ((o.isBackwards = e),
        (o.rendering = null),
        (o.renderingStartTime = 0),
        (o.last = r),
        (o.tail = n),
        (o.tailMode = a));
  }
  function $T(t, e, n) {
    var r = e.pendingProps,
      a = r.revealOrder,
      o = r.tail;
    if ((cs(t, e, r.children, n), (r = Ar.current), r & 2))
      (r = (r & 1) | 2), (e.flags |= 128);
    else {
      if (t !== null && t.flags & 128)
        e: for (t = e.child; t !== null; ) {
          if (t.tag === 13) t.memoizedState !== null && XS(t, n, e);
          else if (t.tag === 19) XS(t, n, e);
          else if (t.child !== null) {
            (t.child.return = t), (t = t.child);
            continue;
          }
          if (t === e) break e;
          for (; t.sibling === null; ) {
            if (t.return === null || t.return === e) break e;
            t = t.return;
          }
          (t.sibling.return = t.return), (t = t.sibling);
        }
      r &= 1;
    }
    if ((cr(Ar, r), !(e.mode & 1))) e.memoizedState = null;
    else
      switch (a) {
        case "forwards":
          for (n = e.child, a = null; n !== null; )
            (t = n.alternate),
              t !== null && Qg(t) === null && (a = n),
              (n = n.sibling);
          (n = a),
            n === null
              ? ((a = e.child), (e.child = null))
              : ((a = n.sibling), (n.sibling = null)),
            Xy(e, !1, a, n, o);
          break;
        case "backwards":
          for (n = null, a = e.child, e.child = null; a !== null; ) {
            if (((t = a.alternate), t !== null && Qg(t) === null)) {
              e.child = a;
              break;
            }
            (t = a.sibling), (a.sibling = n), (n = a), (a = t);
          }
          Xy(e, !0, n, null, o);
          break;
        case "together":
          Xy(e, !1, null, null, void 0);
          break;
        default:
          e.memoizedState = null;
      }
    return e.child;
  }
  function vg(t, e) {
    !(e.mode & 1) &&
      t !== null &&
      ((t.alternate = null), (e.alternate = null), (e.flags |= 2));
  }
  function Ho(t, e, n) {
    if (
      (t !== null && (e.dependencies = t.dependencies),
      (Hc |= e.lanes),
      !(n & e.childLanes))
    )
      return null;
    if (t !== null && e.child !== t.child) throw Error(lt(153));
    if (e.child !== null) {
      for (
        t = e.child, n = Ml(t, t.pendingProps), e.child = n, n.return = e;
        t.sibling !== null;

      )
        (t = t.sibling),
          (n = n.sibling = Ml(t, t.pendingProps)),
          (n.return = e);
      n.sibling = null;
    }
    return e.child;
  }
  function RM(t, e, n) {
    switch (e.tag) {
      case 3:
        zT(e), uh();
        break;
      case 5:
        pT(e);
        break;
      case 1:
        Ps(e.type) && Ug(e);
        break;
      case 4:
        J0(e, e.stateNode.containerInfo);
        break;
      case 10:
        var r = e.type._context,
          a = e.memoizedProps.value;
        cr(Gg, r._currentValue), (r._currentValue = a);
        break;
      case 13:
        if (((r = e.memoizedState), r !== null))
          return r.dehydrated !== null
            ? (cr(Ar, Ar.current & 1), (e.flags |= 128), null)
            : n & e.child.childLanes
            ? VT(t, e, n)
            : (cr(Ar, Ar.current & 1),
              (t = Ho(t, e, n)),
              t !== null ? t.sibling : null);
        cr(Ar, Ar.current & 1);
        break;
      case 19:
        if (((r = (n & e.childLanes) !== 0), t.flags & 128)) {
          if (r) return $T(t, e, n);
          e.flags |= 128;
        }
        if (
          ((a = e.memoizedState),
          a !== null &&
            ((a.rendering = null), (a.tail = null), (a.lastEffect = null)),
          cr(Ar, Ar.current),
          r)
        )
          break;
        return null;
      case 22:
      case 23:
        return (e.lanes = 0), jT(t, e, n);
    }
    return Ho(t, e, n);
  }
  var BT, db, HT, WT;
  BT = function (t, e) {
    for (var n = e.child; n !== null; ) {
      if (n.tag === 5 || n.tag === 6) t.appendChild(n.stateNode);
      else if (n.tag !== 4 && n.child !== null) {
        (n.child.return = n), (n = n.child);
        continue;
      }
      if (n === e) break;
      for (; n.sibling === null; ) {
        if (n.return === null || n.return === e) return;
        n = n.return;
      }
      (n.sibling.return = n.return), (n = n.sibling);
    }
  };
  db = function () {};
  HT = function (t, e, n, r) {
    var a = t.memoizedProps;
    if (a !== r) {
      (t = e.stateNode), Ic(io.current);
      var o = null;
      switch (n) {
        case "input":
          (a = Lx(t, a)), (r = Lx(t, r)), (o = []);
          break;
        case "select":
          (a = Tr({}, a, { value: void 0 })),
            (r = Tr({}, r, { value: void 0 })),
            (o = []);
          break;
        case "textarea":
          (a = jx(t, a)), (r = jx(t, r)), (o = []);
          break;
        default:
          typeof a.onClick != "function" &&
            typeof r.onClick == "function" &&
            (t.onclick = Hg);
      }
      zx(n, r);
      var u;
      n = null;
      for (E in a)
        if (!r.hasOwnProperty(E) && a.hasOwnProperty(E) && a[E] != null)
          if (E === "style") {
            var g = a[E];
            for (u in g) g.hasOwnProperty(u) && (n || (n = {}), (n[u] = ""));
          } else
            E !== "dangerouslySetInnerHTML" &&
              E !== "children" &&
              E !== "suppressContentEditableWarning" &&
              E !== "suppressHydrationWarning" &&
              E !== "autoFocus" &&
              (Ud.hasOwnProperty(E)
                ? o || (o = [])
                : (o = o || []).push(E, null));
      for (E in r) {
        var x = r[E];
        if (
          ((g = a != null ? a[E] : void 0),
          r.hasOwnProperty(E) && x !== g && (x != null || g != null))
        )
          if (E === "style")
            if (g) {
              for (u in g)
                !g.hasOwnProperty(u) ||
                  (x && x.hasOwnProperty(u)) ||
                  (n || (n = {}), (n[u] = ""));
              for (u in x)
                x.hasOwnProperty(u) &&
                  g[u] !== x[u] &&
                  (n || (n = {}), (n[u] = x[u]));
            } else n || (o || (o = []), o.push(E, n)), (n = x);
          else
            E === "dangerouslySetInnerHTML"
              ? ((x = x ? x.__html : void 0),
                (g = g ? g.__html : void 0),
                x != null && g !== x && (o = o || []).push(E, x))
              : E === "children"
              ? (typeof x != "string" && typeof x != "number") ||
                (o = o || []).push(E, "" + x)
              : E !== "suppressContentEditableWarning" &&
                E !== "suppressHydrationWarning" &&
                (Ud.hasOwnProperty(E)
                  ? (x != null && E === "onScroll" && dr("scroll", t),
                    o || g === x || (o = []))
                  : (o = o || []).push(E, x));
      }
      n && (o = o || []).push("style", n);
      var E = o;
      (e.updateQueue = E) && (e.flags |= 4);
    }
  };
  WT = function (t, e, n, r) {
    n !== r && (e.flags |= 4);
  };
  function sd(t, e) {
    if (!br)
      switch (t.tailMode) {
        case "hidden":
          e = t.tail;
          for (var n = null; e !== null; )
            e.alternate !== null && (n = e), (e = e.sibling);
          n === null ? (t.tail = null) : (n.sibling = null);
          break;
        case "collapsed":
          n = t.tail;
          for (var r = null; n !== null; )
            n.alternate !== null && (r = n), (n = n.sibling);
          r === null
            ? e || t.tail === null
              ? (t.tail = null)
              : (t.tail.sibling = null)
            : (r.sibling = null);
      }
  }
  function Wi(t) {
    var e = t.alternate !== null && t.alternate.child === t.child,
      n = 0,
      r = 0;
    if (e)
      for (var a = t.child; a !== null; )
        (n |= a.lanes | a.childLanes),
          (r |= a.subtreeFlags & 14680064),
          (r |= a.flags & 14680064),
          (a.return = t),
          (a = a.sibling);
    else
      for (a = t.child; a !== null; )
        (n |= a.lanes | a.childLanes),
          (r |= a.subtreeFlags),
          (r |= a.flags),
          (a.return = t),
          (a = a.sibling);
    return (t.subtreeFlags |= r), (t.childLanes = n), e;
  }
  function OM(t, e, n) {
    var r = e.pendingProps;
    switch ((X0(e), e.tag)) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return Wi(e), null;
      case 1:
        return Ps(e.type) && Wg(), Wi(e), null;
      case 3:
        return (
          (r = e.stateNode),
          dh(),
          gr(Is),
          gr(Qi),
          tw(),
          r.pendingContext &&
            ((r.context = r.pendingContext), (r.pendingContext = null)),
          (t === null || t.child === null) &&
            (zp(e)
              ? (e.flags |= 4)
              : t === null ||
                (t.memoizedState.isDehydrated && !(e.flags & 256)) ||
                ((e.flags |= 1024), Sa !== null && (bb(Sa), (Sa = null)))),
          db(t, e),
          Wi(e),
          null
        );
      case 5:
        ew(e);
        var a = Ic(rf.current);
        if (((n = e.type), t !== null && e.stateNode != null))
          HT(t, e, n, r, a),
            t.ref !== e.ref && ((e.flags |= 512), (e.flags |= 2097152));
        else {
          if (!r) {
            if (e.stateNode === null) throw Error(lt(166));
            return Wi(e), null;
          }
          if (((t = Ic(io.current)), zp(e))) {
            (r = e.stateNode), (n = e.type);
            var o = e.memoizedProps;
            switch (((r[Qa] = e), (r[tf] = o), (t = (e.mode & 1) !== 0), n)) {
              case "dialog":
                dr("cancel", r), dr("close", r);
                break;
              case "iframe":
              case "object":
              case "embed":
                dr("load", r);
                break;
              case "video":
              case "audio":
                for (a = 0; a < vd.length; a++) dr(vd[a], r);
                break;
              case "source":
                dr("error", r);
                break;
              case "img":
              case "image":
              case "link":
                dr("error", r), dr("load", r);
                break;
              case "details":
                dr("toggle", r);
                break;
              case "input":
                tS(r, o), dr("invalid", r);
                break;
              case "select":
                (r._wrapperState = { wasMultiple: !!o.multiple }),
                  dr("invalid", r);
                break;
              case "textarea":
                rS(r, o), dr("invalid", r);
            }
            zx(n, o), (a = null);
            for (var u in o)
              if (o.hasOwnProperty(u)) {
                var g = o[u];
                u === "children"
                  ? typeof g == "string"
                    ? r.textContent !== g &&
                      (o.suppressHydrationWarning !== !0 &&
                        Fp(r.textContent, g, t),
                      (a = ["children", g]))
                    : typeof g == "number" &&
                      r.textContent !== "" + g &&
                      (o.suppressHydrationWarning !== !0 &&
                        Fp(r.textContent, g, t),
                      (a = ["children", "" + g]))
                  : Ud.hasOwnProperty(u) &&
                    g != null &&
                    u === "onScroll" &&
                    dr("scroll", r);
              }
            switch (n) {
              case "input":
                Pp(r), nS(r, o, !0);
                break;
              case "textarea":
                Pp(r), iS(r);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof o.onClick == "function" && (r.onclick = Hg);
            }
            (r = a), (e.updateQueue = r), r !== null && (e.flags |= 4);
          } else {
            (u = a.nodeType === 9 ? a : a.ownerDocument),
              t === "http://www.w3.org/1999/xhtml" && (t = vC(n)),
              t === "http://www.w3.org/1999/xhtml"
                ? n === "script"
                  ? ((t = u.createElement("div")),
                    (t.innerHTML = "<script></script>"),
                    (t = t.removeChild(t.firstChild)))
                  : typeof r.is == "string"
                  ? (t = u.createElement(n, { is: r.is }))
                  : ((t = u.createElement(n)),
                    n === "select" &&
                      ((u = t),
                      r.multiple
                        ? (u.multiple = !0)
                        : r.size && (u.size = r.size)))
                : (t = u.createElementNS(t, n)),
              (t[Qa] = e),
              (t[tf] = r),
              BT(t, e, !1, !1),
              (e.stateNode = t);
            e: {
              switch (((u = Vx(n, r)), n)) {
                case "dialog":
                  dr("cancel", t), dr("close", t), (a = r);
                  break;
                case "iframe":
                case "object":
                case "embed":
                  dr("load", t), (a = r);
                  break;
                case "video":
                case "audio":
                  for (a = 0; a < vd.length; a++) dr(vd[a], t);
                  a = r;
                  break;
                case "source":
                  dr("error", t), (a = r);
                  break;
                case "img":
                case "image":
                case "link":
                  dr("error", t), dr("load", t), (a = r);
                  break;
                case "details":
                  dr("toggle", t), (a = r);
                  break;
                case "input":
                  tS(t, r), (a = Lx(t, r)), dr("invalid", t);
                  break;
                case "option":
                  a = r;
                  break;
                case "select":
                  (t._wrapperState = { wasMultiple: !!r.multiple }),
                    (a = Tr({}, r, { value: void 0 })),
                    dr("invalid", t);
                  break;
                case "textarea":
                  rS(t, r), (a = jx(t, r)), dr("invalid", t);
                  break;
                default:
                  a = r;
              }
              zx(n, a), (g = a);
              for (o in g)
                if (g.hasOwnProperty(o)) {
                  var x = g[o];
                  o === "style"
                    ? bC(t, x)
                    : o === "dangerouslySetInnerHTML"
                    ? ((x = x ? x.__html : void 0), x != null && yC(t, x))
                    : o === "children"
                    ? typeof x == "string"
                      ? (n !== "textarea" || x !== "") && Xd(t, x)
                      : typeof x == "number" && Xd(t, "" + x)
                    : o !== "suppressContentEditableWarning" &&
                      o !== "suppressHydrationWarning" &&
                      o !== "autoFocus" &&
                      (Ud.hasOwnProperty(o)
                        ? x != null && o === "onScroll" && dr("scroll", t)
                        : x != null && R0(t, o, x, u));
                }
              switch (n) {
                case "input":
                  Pp(t), nS(t, r, !1);
                  break;
                case "textarea":
                  Pp(t), iS(t);
                  break;
                case "option":
                  r.value != null && t.setAttribute("value", "" + Ul(r.value));
                  break;
                case "select":
                  (t.multiple = !!r.multiple),
                    (o = r.value),
                    o != null
                      ? Qu(t, !!r.multiple, o, !1)
                      : r.defaultValue != null &&
                        Qu(t, !!r.multiple, r.defaultValue, !0);
                  break;
                default:
                  typeof a.onClick == "function" && (t.onclick = Hg);
              }
              switch (n) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  r = !!r.autoFocus;
                  break e;
                case "img":
                  r = !0;
                  break e;
                default:
                  r = !1;
              }
            }
            r && (e.flags |= 4);
          }
          e.ref !== null && ((e.flags |= 512), (e.flags |= 2097152));
        }
        return Wi(e), null;
      case 6:
        if (t && e.stateNode != null) WT(t, e, t.memoizedProps, r);
        else {
          if (typeof r != "string" && e.stateNode === null)
            throw Error(lt(166));
          if (((n = Ic(rf.current)), Ic(io.current), zp(e))) {
            if (
              ((r = e.stateNode),
              (n = e.memoizedProps),
              (r[Qa] = e),
              (o = r.nodeValue !== n) && ((t = Bs), t !== null))
            )
              switch (t.tag) {
                case 3:
                  Fp(r.nodeValue, n, (t.mode & 1) !== 0);
                  break;
                case 5:
                  t.memoizedProps.suppressHydrationWarning !== !0 &&
                    Fp(r.nodeValue, n, (t.mode & 1) !== 0);
              }
            o && (e.flags |= 4);
          } else
            (r = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(r)),
              (r[Qa] = e),
              (e.stateNode = r);
        }
        return Wi(e), null;
      case 13:
        if (
          (gr(Ar),
          (r = e.memoizedState),
          t === null ||
            (t.memoizedState !== null && t.memoizedState.dehydrated !== null))
        ) {
          if (br && zs !== null && e.mode & 1 && !(e.flags & 128))
            oT(), uh(), (e.flags |= 98560), (o = !1);
          else if (((o = zp(e)), r !== null && r.dehydrated !== null)) {
            if (t === null) {
              if (!o) throw Error(lt(318));
              if (
                ((o = e.memoizedState),
                (o = o !== null ? o.dehydrated : null),
                !o)
              )
                throw Error(lt(317));
              o[Qa] = e;
            } else
              uh(),
                !(e.flags & 128) && (e.memoizedState = null),
                (e.flags |= 4);
            Wi(e), (o = !1);
          } else Sa !== null && (bb(Sa), (Sa = null)), (o = !0);
          if (!o) return e.flags & 65536 ? e : null;
        }
        return e.flags & 128
          ? ((e.lanes = n), e)
          : ((r = r !== null),
            r !== (t !== null && t.memoizedState !== null) &&
              r &&
              ((e.child.flags |= 8192),
              e.mode & 1 &&
                (t === null || Ar.current & 1 ? oi === 0 && (oi = 3) : fw())),
            e.updateQueue !== null && (e.flags |= 4),
            Wi(e),
            null);
      case 4:
        return (
          dh(),
          db(t, e),
          t === null && Jd(e.stateNode.containerInfo),
          Wi(e),
          null
        );
      case 10:
        return K0(e.type._context), Wi(e), null;
      case 17:
        return Ps(e.type) && Wg(), Wi(e), null;
      case 19:
        if ((gr(Ar), (o = e.memoizedState), o === null)) return Wi(e), null;
        if (((r = (e.flags & 128) !== 0), (u = o.rendering), u === null))
          if (r) sd(o, !1);
          else {
            if (oi !== 0 || (t !== null && t.flags & 128))
              for (t = e.child; t !== null; ) {
                if (((u = Qg(t)), u !== null)) {
                  for (
                    e.flags |= 128,
                      sd(o, !1),
                      r = u.updateQueue,
                      r !== null && ((e.updateQueue = r), (e.flags |= 4)),
                      e.subtreeFlags = 0,
                      r = n,
                      n = e.child;
                    n !== null;

                  )
                    (o = n),
                      (t = r),
                      (o.flags &= 14680066),
                      (u = o.alternate),
                      u === null
                        ? ((o.childLanes = 0),
                          (o.lanes = t),
                          (o.child = null),
                          (o.subtreeFlags = 0),
                          (o.memoizedProps = null),
                          (o.memoizedState = null),
                          (o.updateQueue = null),
                          (o.dependencies = null),
                          (o.stateNode = null))
                        : ((o.childLanes = u.childLanes),
                          (o.lanes = u.lanes),
                          (o.child = u.child),
                          (o.subtreeFlags = 0),
                          (o.deletions = null),
                          (o.memoizedProps = u.memoizedProps),
                          (o.memoizedState = u.memoizedState),
                          (o.updateQueue = u.updateQueue),
                          (o.type = u.type),
                          (t = u.dependencies),
                          (o.dependencies =
                            t === null
                              ? null
                              : {
                                  lanes: t.lanes,
                                  firstContext: t.firstContext,
                                })),
                      (n = n.sibling);
                  return cr(Ar, (Ar.current & 1) | 2), e.child;
                }
                t = t.sibling;
              }
            o.tail !== null &&
              zr() > ph &&
              ((e.flags |= 128), (r = !0), sd(o, !1), (e.lanes = 4194304));
          }
        else {
          if (!r)
            if (((t = Qg(u)), t !== null)) {
              if (
                ((e.flags |= 128),
                (r = !0),
                (n = t.updateQueue),
                n !== null && ((e.updateQueue = n), (e.flags |= 4)),
                sd(o, !0),
                o.tail === null &&
                  o.tailMode === "hidden" &&
                  !u.alternate &&
                  !br)
              )
                return Wi(e), null;
            } else
              2 * zr() - o.renderingStartTime > ph &&
                n !== 1073741824 &&
                ((e.flags |= 128), (r = !0), sd(o, !1), (e.lanes = 4194304));
          o.isBackwards
            ? ((u.sibling = e.child), (e.child = u))
            : ((n = o.last),
              n !== null ? (n.sibling = u) : (e.child = u),
              (o.last = u));
        }
        return o.tail !== null
          ? ((e = o.tail),
            (o.rendering = e),
            (o.tail = e.sibling),
            (o.renderingStartTime = zr()),
            (e.sibling = null),
            (n = Ar.current),
            cr(Ar, r ? (n & 1) | 2 : n & 1),
            e)
          : (Wi(e), null);
      case 22:
      case 23:
        return (
          dw(),
          (r = e.memoizedState !== null),
          t !== null && (t.memoizedState !== null) !== r && (e.flags |= 8192),
          r && e.mode & 1
            ? Fs & 1073741824 &&
              (Wi(e), e.subtreeFlags & 6 && (e.flags |= 8192))
            : Wi(e),
          null
        );
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(lt(156, e.tag));
  }
  function NM(t, e) {
    switch ((X0(e), e.tag)) {
      case 1:
        return (
          Ps(e.type) && Wg(),
          (t = e.flags),
          t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
        );
      case 3:
        return (
          dh(),
          gr(Is),
          gr(Qi),
          tw(),
          (t = e.flags),
          t & 65536 && !(t & 128) ? ((e.flags = (t & -65537) | 128), e) : null
        );
      case 5:
        return ew(e), null;
      case 13:
        if (
          (gr(Ar), (t = e.memoizedState), t !== null && t.dehydrated !== null)
        ) {
          if (e.alternate === null) throw Error(lt(340));
          uh();
        }
        return (
          (t = e.flags), t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
        );
      case 19:
        return gr(Ar), null;
      case 4:
        return dh(), null;
      case 10:
        return K0(e.type._context), null;
      case 22:
      case 23:
        return dw(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var Bp = !1,
    Yi = !1,
    LM = typeof WeakSet == "function" ? WeakSet : Set,
    Nt = null;
  function Wu(t, e) {
    var n = t.ref;
    if (n !== null)
      if (typeof n == "function")
        try {
          n(null);
        } catch (r) {
          Nr(t, e, r);
        }
      else n.current = null;
  }
  function fb(t, e, n) {
    try {
      n();
    } catch (r) {
      Nr(t, e, r);
    }
  }
  var YS = !1;
  function DM(t, e) {
    if (((Kx = Vg), (t = GC()), W0(t))) {
      if ("selectionStart" in t)
        var n = { start: t.selectionStart, end: t.selectionEnd };
      else
        e: {
          n = ((n = t.ownerDocument) && n.defaultView) || window;
          var r = n.getSelection && n.getSelection();
          if (r && r.rangeCount !== 0) {
            n = r.anchorNode;
            var a = r.anchorOffset,
              o = r.focusNode;
            r = r.focusOffset;
            try {
              n.nodeType, o.nodeType;
            } catch {
              n = null;
              break e;
            }
            var u = 0,
              g = -1,
              x = -1,
              E = 0,
              L = 0,
              z = t,
              B = null;
            t: for (;;) {
              for (
                var ae;
                z !== n || (a !== 0 && z.nodeType !== 3) || (g = u + a),
                  z !== o || (r !== 0 && z.nodeType !== 3) || (x = u + r),
                  z.nodeType === 3 && (u += z.nodeValue.length),
                  (ae = z.firstChild) !== null;

              )
                (B = z), (z = ae);
              for (;;) {
                if (z === t) break t;
                if (
                  (B === n && ++E === a && (g = u),
                  B === o && ++L === r && (x = u),
                  (ae = z.nextSibling) !== null)
                )
                  break;
                (z = B), (B = z.parentNode);
              }
              z = ae;
            }
            n = g === -1 || x === -1 ? null : { start: g, end: x };
          } else n = null;
        }
      n = n || { start: 0, end: 0 };
    } else n = null;
    for (
      Qx = { focusedElem: t, selectionRange: n }, Vg = !1, Nt = e;
      Nt !== null;

    )
      if (
        ((e = Nt), (t = e.child), (e.subtreeFlags & 1028) !== 0 && t !== null)
      )
        (t.return = e), (Nt = t);
      else
        for (; Nt !== null; ) {
          e = Nt;
          try {
            var se = e.alternate;
            if (e.flags & 1024)
              switch (e.tag) {
                case 0:
                case 11:
                case 15:
                  break;
                case 1:
                  if (se !== null) {
                    var le = se.memoizedProps,
                      he = se.memoizedState,
                      oe = e.stateNode,
                      F = oe.getSnapshotBeforeUpdate(
                        e.elementType === e.type ? le : wa(e.type, le),
                        he
                      );
                    oe.__reactInternalSnapshotBeforeUpdate = F;
                  }
                  break;
                case 3:
                  var ce = e.stateNode.containerInfo;
                  ce.nodeType === 1
                    ? (ce.textContent = "")
                    : ce.nodeType === 9 &&
                      ce.documentElement &&
                      ce.removeChild(ce.documentElement);
                  break;
                case 5:
                case 6:
                case 4:
                case 17:
                  break;
                default:
                  throw Error(lt(163));
              }
          } catch (ye) {
            Nr(e, e.return, ye);
          }
          if (((t = e.sibling), t !== null)) {
            (t.return = e.return), (Nt = t);
            break;
          }
          Nt = e.return;
        }
    return (se = YS), (YS = !1), se;
  }
  function Rd(t, e, n) {
    var r = e.updateQueue;
    if (((r = r !== null ? r.lastEffect : null), r !== null)) {
      var a = (r = r.next);
      do {
        if ((a.tag & t) === t) {
          var o = a.destroy;
          (a.destroy = void 0), o !== void 0 && fb(e, n, o);
        }
        a = a.next;
      } while (a !== r);
    }
  }
  function Xm(t, e) {
    if (
      ((e = e.updateQueue), (e = e !== null ? e.lastEffect : null), e !== null)
    ) {
      var n = (e = e.next);
      do {
        if ((n.tag & t) === t) {
          var r = n.create;
          n.destroy = r();
        }
        n = n.next;
      } while (n !== e);
    }
  }
  function pb(t) {
    var e = t.ref;
    if (e !== null) {
      var n = t.stateNode;
      switch (t.tag) {
        case 5:
          t = n;
          break;
        default:
          t = n;
      }
      typeof e == "function" ? e(t) : (e.current = t);
    }
  }
  function UT(t) {
    var e = t.alternate;
    e !== null && ((t.alternate = null), UT(e)),
      (t.child = null),
      (t.deletions = null),
      (t.sibling = null),
      t.tag === 5 &&
        ((e = t.stateNode),
        e !== null &&
          (delete e[Qa],
          delete e[tf],
          delete e[eb],
          delete e[vM],
          delete e[yM])),
      (t.stateNode = null),
      (t.return = null),
      (t.dependencies = null),
      (t.memoizedProps = null),
      (t.memoizedState = null),
      (t.pendingProps = null),
      (t.stateNode = null),
      (t.updateQueue = null);
  }
  function XT(t) {
    return t.tag === 5 || t.tag === 3 || t.tag === 4;
  }
  function GS(t) {
    e: for (;;) {
      for (; t.sibling === null; ) {
        if (t.return === null || XT(t.return)) return null;
        t = t.return;
      }
      for (
        t.sibling.return = t.return, t = t.sibling;
        t.tag !== 5 && t.tag !== 6 && t.tag !== 18;

      ) {
        if (t.flags & 2 || t.child === null || t.tag === 4) continue e;
        (t.child.return = t), (t = t.child);
      }
      if (!(t.flags & 2)) return t.stateNode;
    }
  }
  function gb(t, e, n) {
    var r = t.tag;
    if (r === 5 || r === 6)
      (t = t.stateNode),
        e
          ? n.nodeType === 8
            ? n.parentNode.insertBefore(t, e)
            : n.insertBefore(t, e)
          : (n.nodeType === 8
              ? ((e = n.parentNode), e.insertBefore(t, n))
              : ((e = n), e.appendChild(t)),
            (n = n._reactRootContainer),
            n != null || e.onclick !== null || (e.onclick = Hg));
    else if (r !== 4 && ((t = t.child), t !== null))
      for (gb(t, e, n), t = t.sibling; t !== null; )
        gb(t, e, n), (t = t.sibling);
  }
  function mb(t, e, n) {
    var r = t.tag;
    if (r === 5 || r === 6)
      (t = t.stateNode), e ? n.insertBefore(t, e) : n.appendChild(t);
    else if (r !== 4 && ((t = t.child), t !== null))
      for (mb(t, e, n), t = t.sibling; t !== null; )
        mb(t, e, n), (t = t.sibling);
  }
  var Ii = null,
    _a = !1;
  function ul(t, e, n) {
    for (n = n.child; n !== null; ) YT(t, e, n), (n = n.sibling);
  }
  function YT(t, e, n) {
    if (ro && typeof ro.onCommitFiberUnmount == "function")
      try {
        ro.onCommitFiberUnmount(Fm, n);
      } catch {}
    switch (n.tag) {
      case 5:
        Yi || Wu(n, e);
      case 6:
        var r = Ii,
          a = _a;
        (Ii = null),
          ul(t, e, n),
          (Ii = r),
          (_a = a),
          Ii !== null &&
            (_a
              ? ((t = Ii),
                (n = n.stateNode),
                t.nodeType === 8
                  ? t.parentNode.removeChild(n)
                  : t.removeChild(n))
              : Ii.removeChild(n.stateNode));
        break;
      case 18:
        Ii !== null &&
          (_a
            ? ((t = Ii),
              (n = n.stateNode),
              t.nodeType === 8
                ? zy(t.parentNode, n)
                : t.nodeType === 1 && zy(t, n),
              Kd(t))
            : zy(Ii, n.stateNode));
        break;
      case 4:
        (r = Ii),
          (a = _a),
          (Ii = n.stateNode.containerInfo),
          (_a = !0),
          ul(t, e, n),
          (Ii = r),
          (_a = a);
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (
          !Yi &&
          ((r = n.updateQueue), r !== null && ((r = r.lastEffect), r !== null))
        ) {
          a = r = r.next;
          do {
            var o = a,
              u = o.destroy;
            (o = o.tag),
              u !== void 0 && (o & 2 || o & 4) && fb(n, e, u),
              (a = a.next);
          } while (a !== r);
        }
        ul(t, e, n);
        break;
      case 1:
        if (
          !Yi &&
          (Wu(n, e),
          (r = n.stateNode),
          typeof r.componentWillUnmount == "function")
        )
          try {
            (r.props = n.memoizedProps),
              (r.state = n.memoizedState),
              r.componentWillUnmount();
          } catch (g) {
            Nr(n, e, g);
          }
        ul(t, e, n);
        break;
      case 21:
        ul(t, e, n);
        break;
      case 22:
        n.mode & 1
          ? ((Yi = (r = Yi) || n.memoizedState !== null), ul(t, e, n), (Yi = r))
          : ul(t, e, n);
        break;
      default:
        ul(t, e, n);
    }
  }
  function qS(t) {
    var e = t.updateQueue;
    if (e !== null) {
      t.updateQueue = null;
      var n = t.stateNode;
      n === null && (n = t.stateNode = new LM()),
        e.forEach(function (r) {
          var a = WM.bind(null, t, r);
          n.has(r) || (n.add(r), r.then(a, a));
        });
    }
  }
  function ya(t, e) {
    var n = e.deletions;
    if (n !== null)
      for (var r = 0; r < n.length; r++) {
        var a = n[r];
        try {
          var o = t,
            u = e,
            g = u;
          e: for (; g !== null; ) {
            switch (g.tag) {
              case 5:
                (Ii = g.stateNode), (_a = !1);
                break e;
              case 3:
                (Ii = g.stateNode.containerInfo), (_a = !0);
                break e;
              case 4:
                (Ii = g.stateNode.containerInfo), (_a = !0);
                break e;
            }
            g = g.return;
          }
          if (Ii === null) throw Error(lt(160));
          YT(o, u, a), (Ii = null), (_a = !1);
          var x = a.alternate;
          x !== null && (x.return = null), (a.return = null);
        } catch (E) {
          Nr(a, e, E);
        }
      }
    if (e.subtreeFlags & 12854)
      for (e = e.child; e !== null; ) GT(e, t), (e = e.sibling);
  }
  function GT(t, e) {
    var n = t.alternate,
      r = t.flags;
    switch (t.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if ((ya(e, t), Ga(t), r & 4)) {
          try {
            Rd(3, t, t.return), Xm(3, t);
          } catch (le) {
            Nr(t, t.return, le);
          }
          try {
            Rd(5, t, t.return);
          } catch (le) {
            Nr(t, t.return, le);
          }
        }
        break;
      case 1:
        ya(e, t), Ga(t), r & 512 && n !== null && Wu(n, n.return);
        break;
      case 5:
        if (
          (ya(e, t),
          Ga(t),
          r & 512 && n !== null && Wu(n, n.return),
          t.flags & 32)
        ) {
          var a = t.stateNode;
          try {
            Xd(a, "");
          } catch (le) {
            Nr(t, t.return, le);
          }
        }
        if (r & 4 && ((a = t.stateNode), a != null)) {
          var o = t.memoizedProps,
            u = n !== null ? n.memoizedProps : o,
            g = t.type,
            x = t.updateQueue;
          if (((t.updateQueue = null), x !== null))
            try {
              g === "input" && o.type === "radio" && o.name != null && gC(a, o),
                Vx(g, u);
              var E = Vx(g, o);
              for (u = 0; u < x.length; u += 2) {
                var L = x[u],
                  z = x[u + 1];
                L === "style"
                  ? bC(a, z)
                  : L === "dangerouslySetInnerHTML"
                  ? yC(a, z)
                  : L === "children"
                  ? Xd(a, z)
                  : R0(a, L, z, E);
              }
              switch (g) {
                case "input":
                  Dx(a, o);
                  break;
                case "textarea":
                  mC(a, o);
                  break;
                case "select":
                  var B = a._wrapperState.wasMultiple;
                  a._wrapperState.wasMultiple = !!o.multiple;
                  var ae = o.value;
                  ae != null
                    ? Qu(a, !!o.multiple, ae, !1)
                    : B !== !!o.multiple &&
                      (o.defaultValue != null
                        ? Qu(a, !!o.multiple, o.defaultValue, !0)
                        : Qu(a, !!o.multiple, o.multiple ? [] : "", !1));
              }
              a[tf] = o;
            } catch (le) {
              Nr(t, t.return, le);
            }
        }
        break;
      case 6:
        if ((ya(e, t), Ga(t), r & 4)) {
          if (t.stateNode === null) throw Error(lt(162));
          (a = t.stateNode), (o = t.memoizedProps);
          try {
            a.nodeValue = o;
          } catch (le) {
            Nr(t, t.return, le);
          }
        }
        break;
      case 3:
        if (
          (ya(e, t), Ga(t), r & 4 && n !== null && n.memoizedState.isDehydrated)
        )
          try {
            Kd(e.containerInfo);
          } catch (le) {
            Nr(t, t.return, le);
          }
        break;
      case 4:
        ya(e, t), Ga(t);
        break;
      case 13:
        ya(e, t),
          Ga(t),
          (a = t.child),
          a.flags & 8192 &&
            ((o = a.memoizedState !== null),
            (a.stateNode.isHidden = o),
            !o ||
              (a.alternate !== null && a.alternate.memoizedState !== null) ||
              (uw = zr())),
          r & 4 && qS(t);
        break;
      case 22:
        if (
          ((L = n !== null && n.memoizedState !== null),
          t.mode & 1 ? ((Yi = (E = Yi) || L), ya(e, t), (Yi = E)) : ya(e, t),
          Ga(t),
          r & 8192)
        ) {
          if (
            ((E = t.memoizedState !== null),
            (t.stateNode.isHidden = E) && !L && t.mode & 1)
          )
            for (Nt = t, L = t.child; L !== null; ) {
              for (z = Nt = L; Nt !== null; ) {
                switch (((B = Nt), (ae = B.child), B.tag)) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Rd(4, B, B.return);
                    break;
                  case 1:
                    Wu(B, B.return);
                    var se = B.stateNode;
                    if (typeof se.componentWillUnmount == "function") {
                      (r = B), (n = B.return);
                      try {
                        (e = r),
                          (se.props = e.memoizedProps),
                          (se.state = e.memoizedState),
                          se.componentWillUnmount();
                      } catch (le) {
                        Nr(r, n, le);
                      }
                    }
                    break;
                  case 5:
                    Wu(B, B.return);
                    break;
                  case 22:
                    if (B.memoizedState !== null) {
                      QS(z);
                      continue;
                    }
                }
                ae !== null ? ((ae.return = B), (Nt = ae)) : QS(z);
              }
              L = L.sibling;
            }
          e: for (L = null, z = t; ; ) {
            if (z.tag === 5) {
              if (L === null) {
                L = z;
                try {
                  (a = z.stateNode),
                    E
                      ? ((o = a.style),
                        typeof o.setProperty == "function"
                          ? o.setProperty("display", "none", "important")
                          : (o.display = "none"))
                      : ((g = z.stateNode),
                        (x = z.memoizedProps.style),
                        (u =
                          x != null && x.hasOwnProperty("display")
                            ? x.display
                            : null),
                        (g.style.display = xC("display", u)));
                } catch (le) {
                  Nr(t, t.return, le);
                }
              }
            } else if (z.tag === 6) {
              if (L === null)
                try {
                  z.stateNode.nodeValue = E ? "" : z.memoizedProps;
                } catch (le) {
                  Nr(t, t.return, le);
                }
            } else if (
              ((z.tag !== 22 && z.tag !== 23) ||
                z.memoizedState === null ||
                z === t) &&
              z.child !== null
            ) {
              (z.child.return = z), (z = z.child);
              continue;
            }
            if (z === t) break e;
            for (; z.sibling === null; ) {
              if (z.return === null || z.return === t) break e;
              L === z && (L = null), (z = z.return);
            }
            L === z && (L = null),
              (z.sibling.return = z.return),
              (z = z.sibling);
          }
        }
        break;
      case 19:
        ya(e, t), Ga(t), r & 4 && qS(t);
        break;
      case 21:
        break;
      default:
        ya(e, t), Ga(t);
    }
  }
  function Ga(t) {
    var e = t.flags;
    if (e & 2) {
      try {
        e: {
          for (var n = t.return; n !== null; ) {
            if (XT(n)) {
              var r = n;
              break e;
            }
            n = n.return;
          }
          throw Error(lt(160));
        }
        switch (r.tag) {
          case 5:
            var a = r.stateNode;
            r.flags & 32 && (Xd(a, ""), (r.flags &= -33));
            var o = GS(t);
            mb(t, o, a);
            break;
          case 3:
          case 4:
            var u = r.stateNode.containerInfo,
              g = GS(t);
            gb(t, g, u);
            break;
          default:
            throw Error(lt(161));
        }
      } catch (x) {
        Nr(t, t.return, x);
      }
      t.flags &= -3;
    }
    e & 4096 && (t.flags &= -4097);
  }
  function MM(t, e, n) {
    (Nt = t), qT(t);
  }
  function qT(t, e, n) {
    for (var r = (t.mode & 1) !== 0; Nt !== null; ) {
      var a = Nt,
        o = a.child;
      if (a.tag === 22 && r) {
        var u = a.memoizedState !== null || Bp;
        if (!u) {
          var g = a.alternate,
            x = (g !== null && g.memoizedState !== null) || Yi;
          g = Bp;
          var E = Yi;
          if (((Bp = u), (Yi = x) && !E))
            for (Nt = a; Nt !== null; )
              (u = Nt),
                (x = u.child),
                u.tag === 22 && u.memoizedState !== null
                  ? ZS(a)
                  : x !== null
                  ? ((x.return = u), (Nt = x))
                  : ZS(a);
          for (; o !== null; ) (Nt = o), qT(o), (o = o.sibling);
          (Nt = a), (Bp = g), (Yi = E);
        }
        KS(t);
      } else
        a.subtreeFlags & 8772 && o !== null
          ? ((o.return = a), (Nt = o))
          : KS(t);
    }
  }
  function KS(t) {
    for (; Nt !== null; ) {
      var e = Nt;
      if (e.flags & 8772) {
        var n = e.alternate;
        try {
          if (e.flags & 8772)
            switch (e.tag) {
              case 0:
              case 11:
              case 15:
                Yi || Xm(5, e);
                break;
              case 1:
                var r = e.stateNode;
                if (e.flags & 4 && !Yi)
                  if (n === null) r.componentDidMount();
                  else {
                    var a =
                      e.elementType === e.type
                        ? n.memoizedProps
                        : wa(e.type, n.memoizedProps);
                    r.componentDidUpdate(
                      a,
                      n.memoizedState,
                      r.__reactInternalSnapshotBeforeUpdate
                    );
                  }
                var o = e.updateQueue;
                o !== null && NS(e, o, r);
                break;
              case 3:
                var u = e.updateQueue;
                if (u !== null) {
                  if (((n = null), e.child !== null))
                    switch (e.child.tag) {
                      case 5:
                        n = e.child.stateNode;
                        break;
                      case 1:
                        n = e.child.stateNode;
                    }
                  NS(e, u, n);
                }
                break;
              case 5:
                var g = e.stateNode;
                if (n === null && e.flags & 4) {
                  n = g;
                  var x = e.memoizedProps;
                  switch (e.type) {
                    case "button":
                    case "input":
                    case "select":
                    case "textarea":
                      x.autoFocus && n.focus();
                      break;
                    case "img":
                      x.src && (n.src = x.src);
                  }
                }
                break;
              case 6:
                break;
              case 4:
                break;
              case 12:
                break;
              case 13:
                if (e.memoizedState === null) {
                  var E = e.alternate;
                  if (E !== null) {
                    var L = E.memoizedState;
                    if (L !== null) {
                      var z = L.dehydrated;
                      z !== null && Kd(z);
                    }
                  }
                }
                break;
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break;
              default:
                throw Error(lt(163));
            }
          Yi || (e.flags & 512 && pb(e));
        } catch (B) {
          Nr(e, e.return, B);
        }
      }
      if (e === t) {
        Nt = null;
        break;
      }
      if (((n = e.sibling), n !== null)) {
        (n.return = e.return), (Nt = n);
        break;
      }
      Nt = e.return;
    }
  }
  function QS(t) {
    for (; Nt !== null; ) {
      var e = Nt;
      if (e === t) {
        Nt = null;
        break;
      }
      var n = e.sibling;
      if (n !== null) {
        (n.return = e.return), (Nt = n);
        break;
      }
      Nt = e.return;
    }
  }
  function ZS(t) {
    for (; Nt !== null; ) {
      var e = Nt;
      try {
        switch (e.tag) {
          case 0:
          case 11:
          case 15:
            var n = e.return;
            try {
              Xm(4, e);
            } catch (x) {
              Nr(e, n, x);
            }
            break;
          case 1:
            var r = e.stateNode;
            if (typeof r.componentDidMount == "function") {
              var a = e.return;
              try {
                r.componentDidMount();
              } catch (x) {
                Nr(e, a, x);
              }
            }
            var o = e.return;
            try {
              pb(e);
            } catch (x) {
              Nr(e, o, x);
            }
            break;
          case 5:
            var u = e.return;
            try {
              pb(e);
            } catch (x) {
              Nr(e, u, x);
            }
        }
      } catch (x) {
        Nr(e, e.return, x);
      }
      if (e === t) {
        Nt = null;
        break;
      }
      var g = e.sibling;
      if (g !== null) {
        (g.return = e.return), (Nt = g);
        break;
      }
      Nt = e.return;
    }
  }
  var jM = Math.ceil,
    em = Ko.ReactCurrentDispatcher,
    lw = Ko.ReactCurrentOwner,
    aa = Ko.ReactCurrentBatchConfig,
    Fn = 0,
    vi = null,
    Kr = null,
    Ni = 0,
    Fs = 0,
    Uu = ec(0),
    oi = 0,
    lf = null,
    Hc = 0,
    Ym = 0,
    cw = 0,
    Od = null,
    Ss = null,
    uw = 0,
    ph = 1 / 0,
    Co = null,
    tm = !1,
    vb = null,
    Ll = null,
    Hp = !1,
    Al = null,
    nm = 0,
    Nd = 0,
    yb = null,
    yg = -1,
    xg = 0;
  function ds() {
    return Fn & 6 ? zr() : yg !== -1 ? yg : (yg = zr());
  }
  function Dl(t) {
    return t.mode & 1
      ? Fn & 2 && Ni !== 0
        ? Ni & -Ni
        : bM.transition !== null
        ? (xg === 0 && (xg = OC()), xg)
        : ((t = Qn),
          t !== 0 || ((t = window.event), (t = t === void 0 ? 16 : zC(t.type))),
          t)
      : 1;
  }
  function ka(t, e, n, r) {
    if (50 < Nd) throw ((Nd = 0), (yb = null), Error(lt(185)));
    Df(t, n, r),
      (!(Fn & 2) || t !== vi) &&
        (t === vi && (!(Fn & 2) && (Ym |= n), oi === 4 && yl(t, Ni)),
        Rs(t, r),
        n === 1 &&
          Fn === 0 &&
          !(e.mode & 1) &&
          ((ph = zr() + 500), Hm && tc()));
  }
  function Rs(t, e) {
    var n = t.callbackNode;
    bD(t, e);
    var r = zg(t, t === vi ? Ni : 0);
    if (r === 0)
      n !== null && oS(n), (t.callbackNode = null), (t.callbackPriority = 0);
    else if (((e = r & -r), t.callbackPriority !== e)) {
      if ((n != null && oS(n), e === 1))
        t.tag === 0 ? xM(JS.bind(null, t)) : iT(JS.bind(null, t)),
          gM(function () {
            !(Fn & 6) && tc();
          }),
          (n = null);
      else {
        switch (NC(r)) {
          case 1:
            n = M0;
            break;
          case 4:
            n = PC;
            break;
          case 16:
            n = Fg;
            break;
          case 536870912:
            n = RC;
            break;
          default:
            n = Fg;
        }
        n = rI(n, KT.bind(null, t));
      }
      (t.callbackPriority = e), (t.callbackNode = n);
    }
  }
  function KT(t, e) {
    if (((yg = -1), (xg = 0), Fn & 6)) throw Error(lt(327));
    var n = t.callbackNode;
    if (nh() && t.callbackNode !== n) return null;
    var r = zg(t, t === vi ? Ni : 0);
    if (r === 0) return null;
    if (r & 30 || r & t.expiredLanes || e) e = rm(t, r);
    else {
      e = r;
      var a = Fn;
      Fn |= 2;
      var o = ZT();
      (vi !== t || Ni !== e) && ((Co = null), (ph = zr() + 500), Nc(t, e));
      do
        try {
          VM();
          break;
        } catch (g) {
          QT(t, g);
        }
      while (!0);
      q0(),
        (em.current = o),
        (Fn = a),
        Kr !== null ? (e = 0) : ((vi = null), (Ni = 0), (e = oi));
    }
    if (e !== 0) {
      if (
        (e === 2 && ((a = Ux(t)), a !== 0 && ((r = a), (e = xb(t, a)))),
        e === 1)
      )
        throw ((n = lf), Nc(t, 0), yl(t, r), Rs(t, zr()), n);
      if (e === 6) yl(t, r);
      else {
        if (
          ((a = t.current.alternate),
          !(r & 30) &&
            !FM(a) &&
            ((e = rm(t, r)),
            e === 2 && ((o = Ux(t)), o !== 0 && ((r = o), (e = xb(t, o)))),
            e === 1))
        )
          throw ((n = lf), Nc(t, 0), yl(t, r), Rs(t, zr()), n);
        switch (((t.finishedWork = a), (t.finishedLanes = r), e)) {
          case 0:
          case 1:
            throw Error(lt(345));
          case 2:
            _c(t, Ss, Co);
            break;
          case 3:
            if (
              (yl(t, r),
              (r & 130023424) === r && ((e = uw + 500 - zr()), 10 < e))
            ) {
              if (zg(t, 0) !== 0) break;
              if (((a = t.suspendedLanes), (a & r) !== r)) {
                ds(), (t.pingedLanes |= t.suspendedLanes & a);
                break;
              }
              t.timeoutHandle = Jx(_c.bind(null, t, Ss, Co), e);
              break;
            }
            _c(t, Ss, Co);
            break;
          case 4:
            if ((yl(t, r), (r & 4194240) === r)) break;
            for (e = t.eventTimes, a = -1; 0 < r; ) {
              var u = 31 - Ea(r);
              (o = 1 << u), (u = e[u]), u > a && (a = u), (r &= ~o);
            }
            if (
              ((r = a),
              (r = zr() - r),
              (r =
                (120 > r
                  ? 120
                  : 480 > r
                  ? 480
                  : 1080 > r
                  ? 1080
                  : 1920 > r
                  ? 1920
                  : 3e3 > r
                  ? 3e3
                  : 4320 > r
                  ? 4320
                  : 1960 * jM(r / 1960)) - r),
              10 < r)
            ) {
              t.timeoutHandle = Jx(_c.bind(null, t, Ss, Co), r);
              break;
            }
            _c(t, Ss, Co);
            break;
          case 5:
            _c(t, Ss, Co);
            break;
          default:
            throw Error(lt(329));
        }
      }
    }
    return Rs(t, zr()), t.callbackNode === n ? KT.bind(null, t) : null;
  }
  function xb(t, e) {
    var n = Od;
    return (
      t.current.memoizedState.isDehydrated && (Nc(t, e).flags |= 256),
      (t = rm(t, e)),
      t !== 2 && ((e = Ss), (Ss = n), e !== null && bb(e)),
      t
    );
  }
  function bb(t) {
    Ss === null ? (Ss = t) : Ss.push.apply(Ss, t);
  }
  function FM(t) {
    for (var e = t; ; ) {
      if (e.flags & 16384) {
        var n = e.updateQueue;
        if (n !== null && ((n = n.stores), n !== null))
          for (var r = 0; r < n.length; r++) {
            var a = n[r],
              o = a.getSnapshot;
            a = a.value;
            try {
              if (!Ia(o(), a)) return !1;
            } catch {
              return !1;
            }
          }
      }
      if (((n = e.child), e.subtreeFlags & 16384 && n !== null))
        (n.return = e), (e = n);
      else {
        if (e === t) break;
        for (; e.sibling === null; ) {
          if (e.return === null || e.return === t) return !0;
          e = e.return;
        }
        (e.sibling.return = e.return), (e = e.sibling);
      }
    }
    return !0;
  }
  function yl(t, e) {
    for (
      e &= ~cw,
        e &= ~Ym,
        t.suspendedLanes |= e,
        t.pingedLanes &= ~e,
        t = t.expirationTimes;
      0 < e;

    ) {
      var n = 31 - Ea(e),
        r = 1 << n;
      (t[n] = -1), (e &= ~r);
    }
  }
  function JS(t) {
    if (Fn & 6) throw Error(lt(327));
    nh();
    var e = zg(t, 0);
    if (!(e & 1)) return Rs(t, zr()), null;
    var n = rm(t, e);
    if (t.tag !== 0 && n === 2) {
      var r = Ux(t);
      r !== 0 && ((e = r), (n = xb(t, r)));
    }
    if (n === 1) throw ((n = lf), Nc(t, 0), yl(t, e), Rs(t, zr()), n);
    if (n === 6) throw Error(lt(345));
    return (
      (t.finishedWork = t.current.alternate),
      (t.finishedLanes = e),
      _c(t, Ss, Co),
      Rs(t, zr()),
      null
    );
  }
  function hw(t, e) {
    var n = Fn;
    Fn |= 1;
    try {
      return t(e);
    } finally {
      (Fn = n), Fn === 0 && ((ph = zr() + 500), Hm && tc());
    }
  }
  function Wc(t) {
    Al !== null && Al.tag === 0 && !(Fn & 6) && nh();
    var e = Fn;
    Fn |= 1;
    var n = aa.transition,
      r = Qn;
    try {
      if (((aa.transition = null), (Qn = 1), t)) return t();
    } finally {
      (Qn = r), (aa.transition = n), (Fn = e), !(Fn & 6) && tc();
    }
  }
  function dw() {
    (Fs = Uu.current), gr(Uu);
  }
  function Nc(t, e) {
    (t.finishedWork = null), (t.finishedLanes = 0);
    var n = t.timeoutHandle;
    if ((n !== -1 && ((t.timeoutHandle = -1), pM(n)), Kr !== null))
      for (n = Kr.return; n !== null; ) {
        var r = n;
        switch ((X0(r), r.tag)) {
          case 1:
            (r = r.type.childContextTypes), r != null && Wg();
            break;
          case 3:
            dh(), gr(Is), gr(Qi), tw();
            break;
          case 5:
            ew(r);
            break;
          case 4:
            dh();
            break;
          case 13:
            gr(Ar);
            break;
          case 19:
            gr(Ar);
            break;
          case 10:
            K0(r.type._context);
            break;
          case 22:
          case 23:
            dw();
        }
        n = n.return;
      }
    if (
      ((vi = t),
      (Kr = t = Ml(t.current, null)),
      (Ni = Fs = e),
      (oi = 0),
      (lf = null),
      (cw = Ym = Hc = 0),
      (Ss = Od = null),
      Tc !== null)
    ) {
      for (e = 0; e < Tc.length; e++)
        if (((n = Tc[e]), (r = n.interleaved), r !== null)) {
          n.interleaved = null;
          var a = r.next,
            o = n.pending;
          if (o !== null) {
            var u = o.next;
            (o.next = a), (r.next = u);
          }
          n.pending = r;
        }
      Tc = null;
    }
    return t;
  }
  function QT(t, e) {
    do {
      var n = Kr;
      try {
        if ((q0(), (gg.current = Jg), Zg)) {
          for (var r = Cr.memoizedState; r !== null; ) {
            var a = r.queue;
            a !== null && (a.pending = null), (r = r.next);
          }
          Zg = !1;
        }
        if (
          ((Bc = 0),
          (mi = si = Cr = null),
          (Pd = !1),
          (sf = 0),
          (lw.current = null),
          n === null || n.return === null)
        ) {
          (oi = 1), (lf = e), (Kr = null);
          break;
        }
        e: {
          var o = t,
            u = n.return,
            g = n,
            x = e;
          if (
            ((e = Ni),
            (g.flags |= 32768),
            x !== null && typeof x == "object" && typeof x.then == "function")
          ) {
            var E = x,
              L = g,
              z = L.tag;
            if (!(L.mode & 1) && (z === 0 || z === 11 || z === 15)) {
              var B = L.alternate;
              B
                ? ((L.updateQueue = B.updateQueue),
                  (L.memoizedState = B.memoizedState),
                  (L.lanes = B.lanes))
                : ((L.updateQueue = null), (L.memoizedState = null));
            }
            var ae = VS(u);
            if (ae !== null) {
              (ae.flags &= -257),
                $S(ae, u, g, o, e),
                ae.mode & 1 && zS(o, E, e),
                (e = ae),
                (x = E);
              var se = e.updateQueue;
              if (se === null) {
                var le = new Set();
                le.add(x), (e.updateQueue = le);
              } else se.add(x);
              break e;
            } else {
              if (!(e & 1)) {
                zS(o, E, e), fw();
                break e;
              }
              x = Error(lt(426));
            }
          } else if (br && g.mode & 1) {
            var he = VS(u);
            if (he !== null) {
              !(he.flags & 65536) && (he.flags |= 256),
                $S(he, u, g, o, e),
                Y0(fh(x, g));
              break e;
            }
          }
          (o = x = fh(x, g)),
            oi !== 4 && (oi = 2),
            Od === null ? (Od = [o]) : Od.push(o),
            (o = u);
          do {
            switch (o.tag) {
              case 3:
                (o.flags |= 65536), (e &= -e), (o.lanes |= e);
                var oe = LT(o, x, e);
                OS(o, oe);
                break e;
              case 1:
                g = x;
                var F = o.type,
                  ce = o.stateNode;
                if (
                  !(o.flags & 128) &&
                  (typeof F.getDerivedStateFromError == "function" ||
                    (ce !== null &&
                      typeof ce.componentDidCatch == "function" &&
                      (Ll === null || !Ll.has(ce))))
                ) {
                  (o.flags |= 65536), (e &= -e), (o.lanes |= e);
                  var ye = DT(o, g, e);
                  OS(o, ye);
                  break e;
                }
            }
            o = o.return;
          } while (o !== null);
        }
        eI(n);
      } catch (C) {
        (e = C), Kr === n && n !== null && (Kr = n = n.return);
        continue;
      }
      break;
    } while (!0);
  }
  function ZT() {
    var t = em.current;
    return (em.current = Jg), t === null ? Jg : t;
  }
  function fw() {
    (oi === 0 || oi === 3 || oi === 2) && (oi = 4),
      vi === null || (!(Hc & 268435455) && !(Ym & 268435455)) || yl(vi, Ni);
  }
  function rm(t, e) {
    var n = Fn;
    Fn |= 2;
    var r = ZT();
    (vi !== t || Ni !== e) && ((Co = null), Nc(t, e));
    do
      try {
        zM();
        break;
      } catch (a) {
        QT(t, a);
      }
    while (!0);
    if ((q0(), (Fn = n), (em.current = r), Kr !== null)) throw Error(lt(261));
    return (vi = null), (Ni = 0), oi;
  }
  function zM() {
    for (; Kr !== null; ) JT(Kr);
  }
  function VM() {
    for (; Kr !== null && !hD(); ) JT(Kr);
  }
  function JT(t) {
    var e = nI(t.alternate, t, Fs);
    (t.memoizedProps = t.pendingProps),
      e === null ? eI(t) : (Kr = e),
      (lw.current = null);
  }
  function eI(t) {
    var e = t;
    do {
      var n = e.alternate;
      if (((t = e.return), e.flags & 32768)) {
        if (((n = NM(n, e)), n !== null)) {
          (n.flags &= 32767), (Kr = n);
          return;
        }
        if (t !== null)
          (t.flags |= 32768), (t.subtreeFlags = 0), (t.deletions = null);
        else {
          (oi = 6), (Kr = null);
          return;
        }
      } else if (((n = OM(n, e, Fs)), n !== null)) {
        Kr = n;
        return;
      }
      if (((e = e.sibling), e !== null)) {
        Kr = e;
        return;
      }
      Kr = e = t;
    } while (e !== null);
    oi === 0 && (oi = 5);
  }
  function _c(t, e, n) {
    var r = Qn,
      a = aa.transition;
    try {
      (aa.transition = null), (Qn = 1), $M(t, e, n, r);
    } finally {
      (aa.transition = a), (Qn = r);
    }
    return null;
  }
  function $M(t, e, n, r) {
    do nh();
    while (Al !== null);
    if (Fn & 6) throw Error(lt(327));
    n = t.finishedWork;
    var a = t.finishedLanes;
    if (n === null) return null;
    if (((t.finishedWork = null), (t.finishedLanes = 0), n === t.current))
      throw Error(lt(177));
    (t.callbackNode = null), (t.callbackPriority = 0);
    var o = n.lanes | n.childLanes;
    if (
      (wD(t, o),
      t === vi && ((Kr = vi = null), (Ni = 0)),
      (!(n.subtreeFlags & 2064) && !(n.flags & 2064)) ||
        Hp ||
        ((Hp = !0),
        rI(Fg, function () {
          return nh(), null;
        })),
      (o = (n.flags & 15990) !== 0),
      n.subtreeFlags & 15990 || o)
    ) {
      (o = aa.transition), (aa.transition = null);
      var u = Qn;
      Qn = 1;
      var g = Fn;
      (Fn |= 4),
        (lw.current = null),
        DM(t, n),
        GT(n, t),
        oM(Qx),
        (Vg = !!Kx),
        (Qx = Kx = null),
        (t.current = n),
        MM(n),
        dD(),
        (Fn = g),
        (Qn = u),
        (aa.transition = o);
    } else t.current = n;
    if (
      (Hp && ((Hp = !1), (Al = t), (nm = a)),
      (o = t.pendingLanes),
      o === 0 && (Ll = null),
      gD(n.stateNode),
      Rs(t, zr()),
      e !== null)
    )
      for (r = t.onRecoverableError, n = 0; n < e.length; n++)
        (a = e[n]), r(a.value, { componentStack: a.stack, digest: a.digest });
    if (tm) throw ((tm = !1), (t = vb), (vb = null), t);
    return (
      nm & 1 && t.tag !== 0 && nh(),
      (o = t.pendingLanes),
      o & 1 ? (t === yb ? Nd++ : ((Nd = 0), (yb = t))) : (Nd = 0),
      tc(),
      null
    );
  }
  function nh() {
    if (Al !== null) {
      var t = NC(nm),
        e = aa.transition,
        n = Qn;
      try {
        if (((aa.transition = null), (Qn = 16 > t ? 16 : t), Al === null))
          var r = !1;
        else {
          if (((t = Al), (Al = null), (nm = 0), Fn & 6)) throw Error(lt(331));
          var a = Fn;
          for (Fn |= 4, Nt = t.current; Nt !== null; ) {
            var o = Nt,
              u = o.child;
            if (Nt.flags & 16) {
              var g = o.deletions;
              if (g !== null) {
                for (var x = 0; x < g.length; x++) {
                  var E = g[x];
                  for (Nt = E; Nt !== null; ) {
                    var L = Nt;
                    switch (L.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rd(8, L, o);
                    }
                    var z = L.child;
                    if (z !== null) (z.return = L), (Nt = z);
                    else
                      for (; Nt !== null; ) {
                        L = Nt;
                        var B = L.sibling,
                          ae = L.return;
                        if ((UT(L), L === E)) {
                          Nt = null;
                          break;
                        }
                        if (B !== null) {
                          (B.return = ae), (Nt = B);
                          break;
                        }
                        Nt = ae;
                      }
                  }
                }
                var se = o.alternate;
                if (se !== null) {
                  var le = se.child;
                  if (le !== null) {
                    se.child = null;
                    do {
                      var he = le.sibling;
                      (le.sibling = null), (le = he);
                    } while (le !== null);
                  }
                }
                Nt = o;
              }
            }
            if (o.subtreeFlags & 2064 && u !== null) (u.return = o), (Nt = u);
            else
              e: for (; Nt !== null; ) {
                if (((o = Nt), o.flags & 2048))
                  switch (o.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Rd(9, o, o.return);
                  }
                var oe = o.sibling;
                if (oe !== null) {
                  (oe.return = o.return), (Nt = oe);
                  break e;
                }
                Nt = o.return;
              }
          }
          var F = t.current;
          for (Nt = F; Nt !== null; ) {
            u = Nt;
            var ce = u.child;
            if (u.subtreeFlags & 2064 && ce !== null)
              (ce.return = u), (Nt = ce);
            else
              e: for (u = F; Nt !== null; ) {
                if (((g = Nt), g.flags & 2048))
                  try {
                    switch (g.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Xm(9, g);
                    }
                  } catch (C) {
                    Nr(g, g.return, C);
                  }
                if (g === u) {
                  Nt = null;
                  break e;
                }
                var ye = g.sibling;
                if (ye !== null) {
                  (ye.return = g.return), (Nt = ye);
                  break e;
                }
                Nt = g.return;
              }
          }
          if (
            ((Fn = a),
            tc(),
            ro && typeof ro.onPostCommitFiberRoot == "function")
          )
            try {
              ro.onPostCommitFiberRoot(Fm, t);
            } catch {}
          r = !0;
        }
        return r;
      } finally {
        (Qn = n), (aa.transition = e);
      }
    }
    return !1;
  }
  function eE(t, e, n) {
    (e = fh(n, e)),
      (e = LT(t, e, 1)),
      (t = Nl(t, e, 1)),
      (e = ds()),
      t !== null && (Df(t, 1, e), Rs(t, e));
  }
  function Nr(t, e, n) {
    if (t.tag === 3) eE(t, t, n);
    else
      for (; e !== null; ) {
        if (e.tag === 3) {
          eE(e, t, n);
          break;
        } else if (e.tag === 1) {
          var r = e.stateNode;
          if (
            typeof e.type.getDerivedStateFromError == "function" ||
            (typeof r.componentDidCatch == "function" &&
              (Ll === null || !Ll.has(r)))
          ) {
            (t = fh(n, t)),
              (t = DT(e, t, 1)),
              (e = Nl(e, t, 1)),
              (t = ds()),
              e !== null && (Df(e, 1, t), Rs(e, t));
            break;
          }
        }
        e = e.return;
      }
  }
  function BM(t, e, n) {
    var r = t.pingCache;
    r !== null && r.delete(e),
      (e = ds()),
      (t.pingedLanes |= t.suspendedLanes & n),
      vi === t &&
        (Ni & n) === n &&
        (oi === 4 || (oi === 3 && (Ni & 130023424) === Ni && 500 > zr() - uw)
          ? Nc(t, 0)
          : (cw |= n)),
      Rs(t, e);
  }
  function tI(t, e) {
    e === 0 &&
      (t.mode & 1
        ? ((e = Np), (Np <<= 1), !(Np & 130023424) && (Np = 4194304))
        : (e = 1));
    var n = ds();
    (t = Bo(t, e)), t !== null && (Df(t, e, n), Rs(t, n));
  }
  function HM(t) {
    var e = t.memoizedState,
      n = 0;
    e !== null && (n = e.retryLane), tI(t, n);
  }
  function WM(t, e) {
    var n = 0;
    switch (t.tag) {
      case 13:
        var r = t.stateNode,
          a = t.memoizedState;
        a !== null && (n = a.retryLane);
        break;
      case 19:
        r = t.stateNode;
        break;
      default:
        throw Error(lt(314));
    }
    r !== null && r.delete(e), tI(t, n);
  }
  var nI;
  nI = function (t, e, n) {
    if (t !== null)
      if (t.memoizedProps !== e.pendingProps || Is.current) As = !0;
      else {
        if (!(t.lanes & n) && !(e.flags & 128)) return (As = !1), RM(t, e, n);
        As = !!(t.flags & 131072);
      }
    else (As = !1), br && e.flags & 1048576 && sT(e, Yg, e.index);
    switch (((e.lanes = 0), e.tag)) {
      case 2:
        var r = e.type;
        vg(t, e), (t = e.pendingProps);
        var a = ch(e, Qi.current);
        th(e, n), (a = rw(null, e, r, t, a, n));
        var o = iw();
        return (
          (e.flags |= 1),
          typeof a == "object" &&
          a !== null &&
          typeof a.render == "function" &&
          a.$$typeof === void 0
            ? ((e.tag = 1),
              (e.memoizedState = null),
              (e.updateQueue = null),
              Ps(r) ? ((o = !0), Ug(e)) : (o = !1),
              (e.memoizedState =
                a.state !== null && a.state !== void 0 ? a.state : null),
              Z0(e),
              (a.updater = Wm),
              (e.stateNode = a),
              (a._reactInternals = e),
              ab(e, r, t, n),
              (e = cb(null, e, r, !0, o, n)))
            : ((e.tag = 0), br && o && U0(e), cs(null, e, a, n), (e = e.child)),
          e
        );
      case 16:
        r = e.elementType;
        e: {
          switch (
            (vg(t, e),
            (t = e.pendingProps),
            (a = r._init),
            (r = a(r._payload)),
            (e.type = r),
            (a = e.tag = XM(r)),
            (t = wa(r, t)),
            a)
          ) {
            case 0:
              e = lb(null, e, r, t, n);
              break e;
            case 1:
              e = WS(null, e, r, t, n);
              break e;
            case 11:
              e = BS(null, e, r, t, n);
              break e;
            case 14:
              e = HS(null, e, r, wa(r.type, t), n);
              break e;
          }
          throw Error(lt(306, r, ""));
        }
        return e;
      case 0:
        return (
          (r = e.type),
          (a = e.pendingProps),
          (a = e.elementType === r ? a : wa(r, a)),
          lb(t, e, r, a, n)
        );
      case 1:
        return (
          (r = e.type),
          (a = e.pendingProps),
          (a = e.elementType === r ? a : wa(r, a)),
          WS(t, e, r, a, n)
        );
      case 3:
        e: {
          if ((zT(e), t === null)) throw Error(lt(387));
          (r = e.pendingProps),
            (o = e.memoizedState),
            (a = o.element),
            cT(t, e),
            Kg(e, r, null, n);
          var u = e.memoizedState;
          if (((r = u.element), o.isDehydrated))
            if (
              ((o = {
                element: r,
                isDehydrated: !1,
                cache: u.cache,
                pendingSuspenseBoundaries: u.pendingSuspenseBoundaries,
                transitions: u.transitions,
              }),
              (e.updateQueue.baseState = o),
              (e.memoizedState = o),
              e.flags & 256)
            ) {
              (a = fh(Error(lt(423)), e)), (e = US(t, e, r, n, a));
              break e;
            } else if (r !== a) {
              (a = fh(Error(lt(424)), e)), (e = US(t, e, r, n, a));
              break e;
            } else
              for (
                zs = Ol(e.stateNode.containerInfo.firstChild),
                  Bs = e,
                  br = !0,
                  Sa = null,
                  n = fT(e, null, r, n),
                  e.child = n;
                n;

              )
                (n.flags = (n.flags & -3) | 4096), (n = n.sibling);
          else {
            if ((uh(), r === a)) {
              e = Ho(t, e, n);
              break e;
            }
            cs(t, e, r, n);
          }
          e = e.child;
        }
        return e;
      case 5:
        return (
          pT(e),
          t === null && rb(e),
          (r = e.type),
          (a = e.pendingProps),
          (o = t !== null ? t.memoizedProps : null),
          (u = a.children),
          Zx(r, a) ? (u = null) : o !== null && Zx(r, o) && (e.flags |= 32),
          FT(t, e),
          cs(t, e, u, n),
          e.child
        );
      case 6:
        return t === null && rb(e), null;
      case 13:
        return VT(t, e, n);
      case 4:
        return (
          J0(e, e.stateNode.containerInfo),
          (r = e.pendingProps),
          t === null ? (e.child = hh(e, null, r, n)) : cs(t, e, r, n),
          e.child
        );
      case 11:
        return (
          (r = e.type),
          (a = e.pendingProps),
          (a = e.elementType === r ? a : wa(r, a)),
          BS(t, e, r, a, n)
        );
      case 7:
        return cs(t, e, e.pendingProps, n), e.child;
      case 8:
        return cs(t, e, e.pendingProps.children, n), e.child;
      case 12:
        return cs(t, e, e.pendingProps.children, n), e.child;
      case 10:
        e: {
          if (
            ((r = e.type._context),
            (a = e.pendingProps),
            (o = e.memoizedProps),
            (u = a.value),
            cr(Gg, r._currentValue),
            (r._currentValue = u),
            o !== null)
          )
            if (Ia(o.value, u)) {
              if (o.children === a.children && !Is.current) {
                e = Ho(t, e, n);
                break e;
              }
            } else
              for (o = e.child, o !== null && (o.return = e); o !== null; ) {
                var g = o.dependencies;
                if (g !== null) {
                  u = o.child;
                  for (var x = g.firstContext; x !== null; ) {
                    if (x.context === r) {
                      if (o.tag === 1) {
                        (x = jo(-1, n & -n)), (x.tag = 2);
                        var E = o.updateQueue;
                        if (E !== null) {
                          E = E.shared;
                          var L = E.pending;
                          L === null
                            ? (x.next = x)
                            : ((x.next = L.next), (L.next = x)),
                            (E.pending = x);
                        }
                      }
                      (o.lanes |= n),
                        (x = o.alternate),
                        x !== null && (x.lanes |= n),
                        ib(o.return, n, e),
                        (g.lanes |= n);
                      break;
                    }
                    x = x.next;
                  }
                } else if (o.tag === 10) u = o.type === e.type ? null : o.child;
                else if (o.tag === 18) {
                  if (((u = o.return), u === null)) throw Error(lt(341));
                  (u.lanes |= n),
                    (g = u.alternate),
                    g !== null && (g.lanes |= n),
                    ib(u, n, e),
                    (u = o.sibling);
                } else u = o.child;
                if (u !== null) u.return = o;
                else
                  for (u = o; u !== null; ) {
                    if (u === e) {
                      u = null;
                      break;
                    }
                    if (((o = u.sibling), o !== null)) {
                      (o.return = u.return), (u = o);
                      break;
                    }
                    u = u.return;
                  }
                o = u;
              }
          cs(t, e, a.children, n), (e = e.child);
        }
        return e;
      case 9:
        return (
          (a = e.type),
          (r = e.pendingProps.children),
          th(e, n),
          (a = la(a)),
          (r = r(a)),
          (e.flags |= 1),
          cs(t, e, r, n),
          e.child
        );
      case 14:
        return (
          (r = e.type),
          (a = wa(r, e.pendingProps)),
          (a = wa(r.type, a)),
          HS(t, e, r, a, n)
        );
      case 15:
        return MT(t, e, e.type, e.pendingProps, n);
      case 17:
        return (
          (r = e.type),
          (a = e.pendingProps),
          (a = e.elementType === r ? a : wa(r, a)),
          vg(t, e),
          (e.tag = 1),
          Ps(r) ? ((t = !0), Ug(e)) : (t = !1),
          th(e, n),
          hT(e, r, a),
          ab(e, r, a, n),
          cb(null, e, r, !0, t, n)
        );
      case 19:
        return $T(t, e, n);
      case 22:
        return jT(t, e, n);
    }
    throw Error(lt(156, e.tag));
  };
  function rI(t, e) {
    return IC(t, e);
  }
  function UM(t, e, n, r) {
    (this.tag = t),
      (this.key = n),
      (this.sibling =
        this.child =
        this.return =
        this.stateNode =
        this.type =
        this.elementType =
          null),
      (this.index = 0),
      (this.ref = null),
      (this.pendingProps = e),
      (this.dependencies =
        this.memoizedState =
        this.updateQueue =
        this.memoizedProps =
          null),
      (this.mode = r),
      (this.subtreeFlags = this.flags = 0),
      (this.deletions = null),
      (this.childLanes = this.lanes = 0),
      (this.alternate = null);
  }
  function sa(t, e, n, r) {
    return new UM(t, e, n, r);
  }
  function pw(t) {
    return (t = t.prototype), !(!t || !t.isReactComponent);
  }
  function XM(t) {
    if (typeof t == "function") return pw(t) ? 1 : 0;
    if (t != null) {
      if (((t = t.$$typeof), t === N0)) return 11;
      if (t === L0) return 14;
    }
    return 2;
  }
  function Ml(t, e) {
    var n = t.alternate;
    return (
      n === null
        ? ((n = sa(t.tag, e, t.key, t.mode)),
          (n.elementType = t.elementType),
          (n.type = t.type),
          (n.stateNode = t.stateNode),
          (n.alternate = t),
          (t.alternate = n))
        : ((n.pendingProps = e),
          (n.type = t.type),
          (n.flags = 0),
          (n.subtreeFlags = 0),
          (n.deletions = null)),
      (n.flags = t.flags & 14680064),
      (n.childLanes = t.childLanes),
      (n.lanes = t.lanes),
      (n.child = t.child),
      (n.memoizedProps = t.memoizedProps),
      (n.memoizedState = t.memoizedState),
      (n.updateQueue = t.updateQueue),
      (e = t.dependencies),
      (n.dependencies =
        e === null ? null : { lanes: e.lanes, firstContext: e.firstContext }),
      (n.sibling = t.sibling),
      (n.index = t.index),
      (n.ref = t.ref),
      n
    );
  }
  function bg(t, e, n, r, a, o) {
    var u = 2;
    if (((r = t), typeof t == "function")) pw(t) && (u = 1);
    else if (typeof t == "string") u = 5;
    else
      e: switch (t) {
        case Du:
          return Lc(n.children, a, o, e);
        case O0:
          (u = 8), (a |= 8);
          break;
        case Px:
          return (
            (t = sa(12, n, e, a | 2)), (t.elementType = Px), (t.lanes = o), t
          );
        case Rx:
          return (t = sa(13, n, e, a)), (t.elementType = Rx), (t.lanes = o), t;
        case Ox:
          return (t = sa(19, n, e, a)), (t.elementType = Ox), (t.lanes = o), t;
        case dC:
          return Gm(n, a, o, e);
        default:
          if (typeof t == "object" && t !== null)
            switch (t.$$typeof) {
              case uC:
                u = 10;
                break e;
              case hC:
                u = 9;
                break e;
              case N0:
                u = 11;
                break e;
              case L0:
                u = 14;
                break e;
              case fl:
                (u = 16), (r = null);
                break e;
            }
          throw Error(lt(130, t == null ? t : typeof t, ""));
      }
    return (
      (e = sa(u, n, e, a)), (e.elementType = t), (e.type = r), (e.lanes = o), e
    );
  }
  function Lc(t, e, n, r) {
    return (t = sa(7, t, r, e)), (t.lanes = n), t;
  }
  function Gm(t, e, n, r) {
    return (
      (t = sa(22, t, r, e)),
      (t.elementType = dC),
      (t.lanes = n),
      (t.stateNode = { isHidden: !1 }),
      t
    );
  }
  function Yy(t, e, n) {
    return (t = sa(6, t, null, e)), (t.lanes = n), t;
  }
  function Gy(t, e, n) {
    return (
      (e = sa(4, t.children !== null ? t.children : [], t.key, e)),
      (e.lanes = n),
      (e.stateNode = {
        containerInfo: t.containerInfo,
        pendingChildren: null,
        implementation: t.implementation,
      }),
      e
    );
  }
  function YM(t, e, n, r, a) {
    (this.tag = e),
      (this.containerInfo = t),
      (this.finishedWork =
        this.pingCache =
        this.current =
        this.pendingChildren =
          null),
      (this.timeoutHandle = -1),
      (this.callbackNode = this.pendingContext = this.context = null),
      (this.callbackPriority = 0),
      (this.eventTimes = Ty(0)),
      (this.expirationTimes = Ty(-1)),
      (this.entangledLanes =
        this.finishedLanes =
        this.mutableReadLanes =
        this.expiredLanes =
        this.pingedLanes =
        this.suspendedLanes =
        this.pendingLanes =
          0),
      (this.entanglements = Ty(0)),
      (this.identifierPrefix = r),
      (this.onRecoverableError = a),
      (this.mutableSourceEagerHydrationData = null);
  }
  function gw(t, e, n, r, a, o, u, g, x) {
    return (
      (t = new YM(t, e, n, g, x)),
      e === 1 ? ((e = 1), o === !0 && (e |= 8)) : (e = 0),
      (o = sa(3, null, null, e)),
      (t.current = o),
      (o.stateNode = t),
      (o.memoizedState = {
        element: r,
        isDehydrated: n,
        cache: null,
        transitions: null,
        pendingSuspenseBoundaries: null,
      }),
      Z0(o),
      t
    );
  }
  function GM(t, e, n) {
    var r =
      3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return {
      $$typeof: Lu,
      key: r == null ? null : "" + r,
      children: t,
      containerInfo: e,
      implementation: n,
    };
  }
  function iI(t) {
    if (!t) return Xl;
    t = t._reactInternals;
    e: {
      if (iu(t) !== t || t.tag !== 1) throw Error(lt(170));
      var e = t;
      do {
        switch (e.tag) {
          case 3:
            e = e.stateNode.context;
            break e;
          case 1:
            if (Ps(e.type)) {
              e = e.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        e = e.return;
      } while (e !== null);
      throw Error(lt(171));
    }
    if (t.tag === 1) {
      var n = t.type;
      if (Ps(n)) return rT(t, n, e);
    }
    return e;
  }
  function sI(t, e, n, r, a, o, u, g, x) {
    return (
      (t = gw(n, r, !0, t, a, o, u, g, x)),
      (t.context = iI(null)),
      (n = t.current),
      (r = ds()),
      (a = Dl(n)),
      (o = jo(r, a)),
      (o.callback = e ?? null),
      Nl(n, o, a),
      (t.current.lanes = a),
      Df(t, a, r),
      Rs(t, r),
      t
    );
  }
  function qm(t, e, n, r) {
    var a = e.current,
      o = ds(),
      u = Dl(a);
    return (
      (n = iI(n)),
      e.context === null ? (e.context = n) : (e.pendingContext = n),
      (e = jo(o, u)),
      (e.payload = { element: t }),
      (r = r === void 0 ? null : r),
      r !== null && (e.callback = r),
      (t = Nl(a, e, u)),
      t !== null && (ka(t, a, u, o), pg(t, a, u)),
      u
    );
  }
  function im(t) {
    if (((t = t.current), !t.child)) return null;
    switch (t.child.tag) {
      case 5:
        return t.child.stateNode;
      default:
        return t.child.stateNode;
    }
  }
  function tE(t, e) {
    if (((t = t.memoizedState), t !== null && t.dehydrated !== null)) {
      var n = t.retryLane;
      t.retryLane = n !== 0 && n < e ? n : e;
    }
  }
  function mw(t, e) {
    tE(t, e), (t = t.alternate) && tE(t, e);
  }
  function qM() {
    return null;
  }
  var aI =
    typeof reportError == "function"
      ? reportError
      : function (t) {
          console.error(t);
        };
  function vw(t) {
    this._internalRoot = t;
  }
  Km.prototype.render = vw.prototype.render = function (t) {
    var e = this._internalRoot;
    if (e === null) throw Error(lt(409));
    qm(t, e, null, null);
  };
  Km.prototype.unmount = vw.prototype.unmount = function () {
    var t = this._internalRoot;
    if (t !== null) {
      this._internalRoot = null;
      var e = t.containerInfo;
      Wc(function () {
        qm(null, t, null, null);
      }),
        (e[$o] = null);
    }
  };
  function Km(t) {
    this._internalRoot = t;
  }
  Km.prototype.unstable_scheduleHydration = function (t) {
    if (t) {
      var e = MC();
      t = { blockedOn: null, target: t, priority: e };
      for (var n = 0; n < vl.length && e !== 0 && e < vl[n].priority; n++);
      vl.splice(n, 0, t), n === 0 && FC(t);
    }
  };
  function yw(t) {
    return !(!t || (t.nodeType !== 1 && t.nodeType !== 9 && t.nodeType !== 11));
  }
  function Qm(t) {
    return !(
      !t ||
      (t.nodeType !== 1 &&
        t.nodeType !== 9 &&
        t.nodeType !== 11 &&
        (t.nodeType !== 8 || t.nodeValue !== " react-mount-point-unstable "))
    );
  }
  function nE() {}
  function KM(t, e, n, r, a) {
    if (a) {
      if (typeof r == "function") {
        var o = r;
        r = function () {
          var E = im(u);
          o.call(E);
        };
      }
      var u = sI(e, r, t, 0, null, !1, !1, "", nE);
      return (
        (t._reactRootContainer = u),
        (t[$o] = u.current),
        Jd(t.nodeType === 8 ? t.parentNode : t),
        Wc(),
        u
      );
    }
    for (; (a = t.lastChild); ) t.removeChild(a);
    if (typeof r == "function") {
      var g = r;
      r = function () {
        var E = im(x);
        g.call(E);
      };
    }
    var x = gw(t, 0, !1, null, null, !1, !1, "", nE);
    return (
      (t._reactRootContainer = x),
      (t[$o] = x.current),
      Jd(t.nodeType === 8 ? t.parentNode : t),
      Wc(function () {
        qm(e, x, n, r);
      }),
      x
    );
  }
  function Zm(t, e, n, r, a) {
    var o = n._reactRootContainer;
    if (o) {
      var u = o;
      if (typeof a == "function") {
        var g = a;
        a = function () {
          var x = im(u);
          g.call(x);
        };
      }
      qm(e, u, t, a);
    } else u = KM(n, e, t, a, r);
    return im(u);
  }
  LC = function (t) {
    switch (t.tag) {
      case 3:
        var e = t.stateNode;
        if (e.current.memoizedState.isDehydrated) {
          var n = md(e.pendingLanes);
          n !== 0 &&
            (j0(e, n | 1), Rs(e, zr()), !(Fn & 6) && ((ph = zr() + 500), tc()));
        }
        break;
      case 13:
        Wc(function () {
          var r = Bo(t, 1);
          if (r !== null) {
            var a = ds();
            ka(r, t, 1, a);
          }
        }),
          mw(t, 1);
    }
  };
  F0 = function (t) {
    if (t.tag === 13) {
      var e = Bo(t, 134217728);
      if (e !== null) {
        var n = ds();
        ka(e, t, 134217728, n);
      }
      mw(t, 134217728);
    }
  };
  DC = function (t) {
    if (t.tag === 13) {
      var e = Dl(t),
        n = Bo(t, e);
      if (n !== null) {
        var r = ds();
        ka(n, t, e, r);
      }
      mw(t, e);
    }
  };
  MC = function () {
    return Qn;
  };
  jC = function (t, e) {
    var n = Qn;
    try {
      return (Qn = t), e();
    } finally {
      Qn = n;
    }
  };
  Bx = function (t, e, n) {
    switch (e) {
      case "input":
        if ((Dx(t, n), (e = n.name), n.type === "radio" && e != null)) {
          for (n = t; n.parentNode; ) n = n.parentNode;
          for (
            n = n.querySelectorAll(
              "input[name=" + JSON.stringify("" + e) + '][type="radio"]'
            ),
              e = 0;
            e < n.length;
            e++
          ) {
            var r = n[e];
            if (r !== t && r.form === t.form) {
              var a = Bm(r);
              if (!a) throw Error(lt(90));
              pC(r), Dx(r, a);
            }
          }
        }
        break;
      case "textarea":
        mC(t, n);
        break;
      case "select":
        (e = n.value), e != null && Qu(t, !!n.multiple, e, !1);
    }
  };
  SC = hw;
  EC = Wc;
  var QM = { usingClientEntryPoint: !1, Events: [jf, zu, Bm, wC, _C, hw] },
    ad = {
      findFiberByHostInstance: Cc,
      bundleType: 0,
      version: "18.2.0",
      rendererPackageName: "react-dom",
    },
    ZM = {
      bundleType: ad.bundleType,
      version: ad.version,
      rendererPackageName: ad.rendererPackageName,
      rendererConfig: ad.rendererConfig,
      overrideHookState: null,
      overrideHookStateDeletePath: null,
      overrideHookStateRenamePath: null,
      overrideProps: null,
      overridePropsDeletePath: null,
      overridePropsRenamePath: null,
      setErrorHandler: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: Ko.ReactCurrentDispatcher,
      findHostInstanceByFiber: function (t) {
        return (t = CC(t)), t === null ? null : t.stateNode;
      },
      findFiberByHostInstance: ad.findFiberByHostInstance || qM,
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null,
      reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
    };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Wp = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Wp.isDisabled && Wp.supportsFiber)
      try {
        (Fm = Wp.inject(ZM)), (ro = Wp);
      } catch {}
  }
  Xs.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = QM;
  Xs.createPortal = function (t, e) {
    var n =
      2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!yw(e)) throw Error(lt(200));
    return GM(t, e, null, n);
  };
  Xs.createRoot = function (t, e) {
    if (!yw(t)) throw Error(lt(299));
    var n = !1,
      r = "",
      a = aI;
    return (
      e != null &&
        (e.unstable_strictMode === !0 && (n = !0),
        e.identifierPrefix !== void 0 && (r = e.identifierPrefix),
        e.onRecoverableError !== void 0 && (a = e.onRecoverableError)),
      (e = gw(t, 1, !1, null, null, n, !1, r, a)),
      (t[$o] = e.current),
      Jd(t.nodeType === 8 ? t.parentNode : t),
      new vw(e)
    );
  };
  Xs.findDOMNode = function (t) {
    if (t == null) return null;
    if (t.nodeType === 1) return t;
    var e = t._reactInternals;
    if (e === void 0)
      throw typeof t.render == "function"
        ? Error(lt(188))
        : ((t = Object.keys(t).join(",")), Error(lt(268, t)));
    return (t = CC(e)), (t = t === null ? null : t.stateNode), t;
  };
  Xs.flushSync = function (t) {
    return Wc(t);
  };
  Xs.hydrate = function (t, e, n) {
    if (!Qm(e)) throw Error(lt(200));
    return Zm(null, t, e, !0, n);
  };
  Xs.hydrateRoot = function (t, e, n) {
    if (!yw(t)) throw Error(lt(405));
    var r = (n != null && n.hydratedSources) || null,
      a = !1,
      o = "",
      u = aI;
    if (
      (n != null &&
        (n.unstable_strictMode === !0 && (a = !0),
        n.identifierPrefix !== void 0 && (o = n.identifierPrefix),
        n.onRecoverableError !== void 0 && (u = n.onRecoverableError)),
      (e = sI(e, null, t, 1, n ?? null, a, !1, o, u)),
      (t[$o] = e.current),
      Jd(t),
      r)
    )
      for (t = 0; t < r.length; t++)
        (n = r[t]),
          (a = n._getVersion),
          (a = a(n._source)),
          e.mutableSourceEagerHydrationData == null
            ? (e.mutableSourceEagerHydrationData = [n, a])
            : e.mutableSourceEagerHydrationData.push(n, a);
    return new Km(e);
  };
  Xs.render = function (t, e, n) {
    if (!Qm(e)) throw Error(lt(200));
    return Zm(null, t, e, !1, n);
  };
  Xs.unmountComponentAtNode = function (t) {
    if (!Qm(t)) throw Error(lt(40));
    return t._reactRootContainer
      ? (Wc(function () {
          Zm(null, null, t, !1, function () {
            (t._reactRootContainer = null), (t[$o] = null);
          });
        }),
        !0)
      : !1;
  };
  Xs.unstable_batchedUpdates = hw;
  Xs.unstable_renderSubtreeIntoContainer = function (t, e, n, r) {
    if (!Qm(n)) throw Error(lt(200));
    if (t == null || t._reactInternals === void 0) throw Error(lt(38));
    return Zm(t, e, n, !1, r);
  };
  Xs.version = "18.2.0-next-9e3b772b8-20220608";
  function oI() {
    if (
      !(
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
      )
    )
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(oI);
      } catch (t) {
        console.error(t);
      }
  }
  oI(), (sC.exports = Xs);
  var lI = sC.exports;
  const Xu = nu(lI);
  var rE = lI;
  (Tx.createRoot = rE.createRoot), (Tx.hydrateRoot = rE.hydrateRoot);
  /**
   * @remix-run/router v1.13.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */ function cf() {
    return (
      (cf = Object.assign
        ? Object.assign.bind()
        : function (t) {
            for (var e = 1; e < arguments.length; e++) {
              var n = arguments[e];
              for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
            }
            return t;
          }),
      cf.apply(this, arguments)
    );
  }
  var Cl;
  (function (t) {
    (t.Pop = "POP"), (t.Push = "PUSH"), (t.Replace = "REPLACE");
  })(Cl || (Cl = {}));
  const iE = "popstate";
  function JM(t) {
    t === void 0 && (t = {});
    function e(r, a) {
      let { pathname: o, search: u, hash: g } = r.location;
      return wb(
        "",
        { pathname: o, search: u, hash: g },
        (a.state && a.state.usr) || null,
        (a.state && a.state.key) || "default"
      );
    }
    function n(r, a) {
      return typeof a == "string" ? a : sm(a);
    }
    return tj(e, n, null, t);
  }
  function Vr(t, e) {
    if (t === !1 || t === null || typeof t > "u") throw new Error(e);
  }
  function xw(t, e) {
    if (!t) {
      typeof console < "u" && console.warn(e);
      try {
        throw new Error(e);
      } catch {}
    }
  }
  function ej() {
    return Math.random().toString(36).substr(2, 8);
  }
  function sE(t, e) {
    return { usr: t.state, key: t.key, idx: e };
  }
  function wb(t, e, n, r) {
    return (
      n === void 0 && (n = null),
      cf(
        {
          pathname: typeof t == "string" ? t : t.pathname,
          search: "",
          hash: "",
        },
        typeof e == "string" ? Ph(e) : e,
        { state: n, key: (e && e.key) || r || ej() }
      )
    );
  }
  function sm(t) {
    let { pathname: e = "/", search: n = "", hash: r = "" } = t;
    return (
      n && n !== "?" && (e += n.charAt(0) === "?" ? n : "?" + n),
      r && r !== "#" && (e += r.charAt(0) === "#" ? r : "#" + r),
      e
    );
  }
  function Ph(t) {
    let e = {};
    if (t) {
      let n = t.indexOf("#");
      n >= 0 && ((e.hash = t.substr(n)), (t = t.substr(0, n)));
      let r = t.indexOf("?");
      r >= 0 && ((e.search = t.substr(r)), (t = t.substr(0, r))),
        t && (e.pathname = t);
    }
    return e;
  }
  function tj(t, e, n, r) {
    r === void 0 && (r = {});
    let { window: a = document.defaultView, v5Compat: o = !1 } = r,
      u = a.history,
      g = Cl.Pop,
      x = null,
      E = L();
    E == null && ((E = 0), u.replaceState(cf({}, u.state, { idx: E }), ""));
    function L() {
      return (u.state || { idx: null }).idx;
    }
    function z() {
      g = Cl.Pop;
      let he = L(),
        oe = he == null ? null : he - E;
      (E = he), x && x({ action: g, location: le.location, delta: oe });
    }
    function B(he, oe) {
      g = Cl.Push;
      let F = wb(le.location, he, oe);
      n && n(F, he), (E = L() + 1);
      let ce = sE(F, E),
        ye = le.createHref(F);
      try {
        u.pushState(ce, "", ye);
      } catch (C) {
        if (C instanceof DOMException && C.name === "DataCloneError") throw C;
        a.location.assign(ye);
      }
      o && x && x({ action: g, location: le.location, delta: 1 });
    }
    function ae(he, oe) {
      g = Cl.Replace;
      let F = wb(le.location, he, oe);
      n && n(F, he), (E = L());
      let ce = sE(F, E),
        ye = le.createHref(F);
      u.replaceState(ce, "", ye),
        o && x && x({ action: g, location: le.location, delta: 0 });
    }
    function se(he) {
      let oe =
          a.location.origin !== "null" ? a.location.origin : a.location.href,
        F = typeof he == "string" ? he : sm(he);
      return (
        Vr(
          oe,
          "No window.location.(origin|href) available to create URL for href: " +
            F
        ),
        new URL(F, oe)
      );
    }
    let le = {
      get action() {
        return g;
      },
      get location() {
        return t(a, u);
      },
      listen(he) {
        if (x) throw new Error("A history only accepts one active listener");
        return (
          a.addEventListener(iE, z),
          (x = he),
          () => {
            a.removeEventListener(iE, z), (x = null);
          }
        );
      },
      createHref(he) {
        return e(a, he);
      },
      createURL: se,
      encodeLocation(he) {
        let oe = se(he);
        return { pathname: oe.pathname, search: oe.search, hash: oe.hash };
      },
      push: B,
      replace: ae,
      go(he) {
        return u.go(he);
      },
    };
    return le;
  }
  var aE;
  (function (t) {
    (t.data = "data"),
      (t.deferred = "deferred"),
      (t.redirect = "redirect"),
      (t.error = "error");
  })(aE || (aE = {}));
  function nj(t, e, n) {
    n === void 0 && (n = "/");
    let r = typeof e == "string" ? Ph(e) : e,
      a = bw(r.pathname || "/", n);
    if (a == null) return null;
    let o = cI(t);
    rj(o);
    let u = null;
    for (let g = 0; u == null && g < o.length; ++g) u = dj(o[g], gj(a));
    return u;
  }
  function cI(t, e, n, r) {
    e === void 0 && (e = []),
      n === void 0 && (n = []),
      r === void 0 && (r = "");
    let a = (o, u, g) => {
      let x = {
        relativePath: g === void 0 ? o.path || "" : g,
        caseSensitive: o.caseSensitive === !0,
        childrenIndex: u,
        route: o,
      };
      x.relativePath.startsWith("/") &&
        (Vr(
          x.relativePath.startsWith(r),
          'Absolute route path "' +
            x.relativePath +
            '" nested under path ' +
            ('"' + r + '" is not valid. An absolute child route path ') +
            "must start with the combined path of all its parent routes."
        ),
        (x.relativePath = x.relativePath.slice(r.length)));
      let E = jl([r, x.relativePath]),
        L = n.concat(x);
      o.children &&
        o.children.length > 0 &&
        (Vr(
          o.index !== !0,
          "Index routes must not have child routes. Please remove " +
            ('all child routes from route path "' + E + '".')
        ),
        cI(o.children, e, L, E)),
        !(o.path == null && !o.index) &&
          e.push({ path: E, score: uj(E, o.index), routesMeta: L });
    };
    return (
      t.forEach((o, u) => {
        var g;
        if (o.path === "" || !((g = o.path) != null && g.includes("?")))
          a(o, u);
        else for (let x of uI(o.path)) a(o, u, x);
      }),
      e
    );
  }
  function uI(t) {
    let e = t.split("/");
    if (e.length === 0) return [];
    let [n, ...r] = e,
      a = n.endsWith("?"),
      o = n.replace(/\?$/, "");
    if (r.length === 0) return a ? [o, ""] : [o];
    let u = uI(r.join("/")),
      g = [];
    return (
      g.push(...u.map((x) => (x === "" ? o : [o, x].join("/")))),
      a && g.push(...u),
      g.map((x) => (t.startsWith("/") && x === "" ? "/" : x))
    );
  }
  function rj(t) {
    t.sort((e, n) =>
      e.score !== n.score
        ? n.score - e.score
        : hj(
            e.routesMeta.map((r) => r.childrenIndex),
            n.routesMeta.map((r) => r.childrenIndex)
          )
    );
  }
  const ij = /^:\w+$/,
    sj = 3,
    aj = 2,
    oj = 1,
    lj = 10,
    cj = -2,
    oE = (t) => t === "*";
  function uj(t, e) {
    let n = t.split("/"),
      r = n.length;
    return (
      n.some(oE) && (r += cj),
      e && (r += aj),
      n
        .filter((a) => !oE(a))
        .reduce((a, o) => a + (ij.test(o) ? sj : o === "" ? oj : lj), r)
    );
  }
  function hj(t, e) {
    return t.length === e.length && t.slice(0, -1).every((r, a) => r === e[a])
      ? t[t.length - 1] - e[e.length - 1]
      : 0;
  }
  function dj(t, e) {
    let { routesMeta: n } = t,
      r = {},
      a = "/",
      o = [];
    for (let u = 0; u < n.length; ++u) {
      let g = n[u],
        x = u === n.length - 1,
        E = a === "/" ? e : e.slice(a.length) || "/",
        L = fj(
          { path: g.relativePath, caseSensitive: g.caseSensitive, end: x },
          E
        );
      if (!L) return null;
      Object.assign(r, L.params);
      let z = g.route;
      o.push({
        params: r,
        pathname: jl([a, L.pathname]),
        pathnameBase: bj(jl([a, L.pathnameBase])),
        route: z,
      }),
        L.pathnameBase !== "/" && (a = jl([a, L.pathnameBase]));
    }
    return o;
  }
  function fj(t, e) {
    typeof t == "string" && (t = { path: t, caseSensitive: !1, end: !0 });
    let [n, r] = pj(t.path, t.caseSensitive, t.end),
      a = e.match(n);
    if (!a) return null;
    let o = a[0],
      u = o.replace(/(.)\/+$/, "$1"),
      g = a.slice(1);
    return {
      params: r.reduce((E, L, z) => {
        let { paramName: B, isOptional: ae } = L;
        if (B === "*") {
          let le = g[z] || "";
          u = o.slice(0, o.length - le.length).replace(/(.)\/+$/, "$1");
        }
        const se = g[z];
        return ae && !se ? (E[B] = void 0) : (E[B] = mj(se || "", B)), E;
      }, {}),
      pathname: o,
      pathnameBase: u,
      pattern: t,
    };
  }
  function pj(t, e, n) {
    e === void 0 && (e = !1),
      n === void 0 && (n = !0),
      xw(
        t === "*" || !t.endsWith("*") || t.endsWith("/*"),
        'Route path "' +
          t +
          '" will be treated as if it were ' +
          ('"' + t.replace(/\*$/, "/*") + '" because the `*` character must ') +
          "always follow a `/` in the pattern. To get rid of this warning, " +
          ('please change the route path to "' + t.replace(/\*$/, "/*") + '".')
      );
    let r = [],
      a =
        "^" +
        t
          .replace(/\/*\*?$/, "")
          .replace(/^\/*/, "/")
          .replace(/[\\.*+^${}|()[\]]/g, "\\$&")
          .replace(
            /\/:(\w+)(\?)?/g,
            (u, g, x) => (
              r.push({ paramName: g, isOptional: x != null }),
              x ? "/?([^\\/]+)?" : "/([^\\/]+)"
            )
          );
    return (
      t.endsWith("*")
        ? (r.push({ paramName: "*" }),
          (a += t === "*" || t === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
        : n
        ? (a += "\\/*$")
        : t !== "" && t !== "/" && (a += "(?:(?=\\/|$))"),
      [new RegExp(a, e ? void 0 : "i"), r]
    );
  }
  function gj(t) {
    try {
      return decodeURI(t);
    } catch (e) {
      return (
        xw(
          !1,
          'The URL path "' +
            t +
            '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
            ("encoding (" + e + ").")
        ),
        t
      );
    }
  }
  function mj(t, e) {
    try {
      return decodeURIComponent(t);
    } catch (n) {
      return (
        xw(
          !1,
          'The value for the URL param "' +
            e +
            '" will not be decoded because' +
            (' the string "' +
              t +
              '" is a malformed URL segment. This is probably') +
            (" due to a bad percent encoding (" + n + ").")
        ),
        t
      );
    }
  }
  function bw(t, e) {
    if (e === "/") return t;
    if (!t.toLowerCase().startsWith(e.toLowerCase())) return null;
    let n = e.endsWith("/") ? e.length - 1 : e.length,
      r = t.charAt(n);
    return r && r !== "/" ? null : t.slice(n) || "/";
  }
  function vj(t, e) {
    e === void 0 && (e = "/");
    let {
      pathname: n,
      search: r = "",
      hash: a = "",
    } = typeof t == "string" ? Ph(t) : t;
    return {
      pathname: n ? (n.startsWith("/") ? n : yj(n, e)) : e,
      search: wj(r),
      hash: _j(a),
    };
  }
  function yj(t, e) {
    let n = e.replace(/\/+$/, "").split("/");
    return (
      t.split("/").forEach((a) => {
        a === ".." ? n.length > 1 && n.pop() : a !== "." && n.push(a);
      }),
      n.length > 1 ? n.join("/") : "/"
    );
  }
  function qy(t, e, n, r) {
    return (
      "Cannot include a '" +
      t +
      "' character in a manually specified " +
      ("`to." +
        e +
        "` field [" +
        JSON.stringify(r) +
        "].  Please separate it out to the ") +
      ("`to." +
        n +
        "` field. Alternatively you may provide the full path as ") +
      'a string in <Link to="..."> and the router will parse it for you.'
    );
  }
  function xj(t) {
    return t.filter(
      (e, n) => n === 0 || (e.route.path && e.route.path.length > 0)
    );
  }
  function ww(t) {
    return xj(t).map((e, n) =>
      n === t.length - 1 ? e.pathname : e.pathnameBase
    );
  }
  function _w(t, e, n, r) {
    r === void 0 && (r = !1);
    let a;
    typeof t == "string"
      ? (a = Ph(t))
      : ((a = cf({}, t)),
        Vr(
          !a.pathname || !a.pathname.includes("?"),
          qy("?", "pathname", "search", a)
        ),
        Vr(
          !a.pathname || !a.pathname.includes("#"),
          qy("#", "pathname", "hash", a)
        ),
        Vr(!a.search || !a.search.includes("#"), qy("#", "search", "hash", a)));
    let o = t === "" || a.pathname === "",
      u = o ? "/" : a.pathname,
      g;
    if (u == null) g = n;
    else if (r) {
      let z = e[e.length - 1].replace(/^\//, "").split("/");
      if (u.startsWith("..")) {
        let B = u.split("/");
        for (; B[0] === ".."; ) B.shift(), z.pop();
        a.pathname = B.join("/");
      }
      g = "/" + z.join("/");
    } else {
      let z = e.length - 1;
      if (u.startsWith("..")) {
        let B = u.split("/");
        for (; B[0] === ".."; ) B.shift(), (z -= 1);
        a.pathname = B.join("/");
      }
      g = z >= 0 ? e[z] : "/";
    }
    let x = vj(a, g),
      E = u && u !== "/" && u.endsWith("/"),
      L = (o || u === ".") && n.endsWith("/");
    return !x.pathname.endsWith("/") && (E || L) && (x.pathname += "/"), x;
  }
  const jl = (t) => t.join("/").replace(/\/\/+/g, "/"),
    bj = (t) => t.replace(/\/+$/, "").replace(/^\/*/, "/"),
    wj = (t) => (!t || t === "?" ? "" : t.startsWith("?") ? t : "?" + t),
    _j = (t) => (!t || t === "#" ? "" : t.startsWith("#") ? t : "#" + t);
  function Sj(t) {
    return (
      t != null &&
      typeof t.status == "number" &&
      typeof t.statusText == "string" &&
      typeof t.internal == "boolean" &&
      "data" in t
    );
  }
  const hI = ["post", "put", "patch", "delete"];
  new Set(hI);
  const Ej = ["get", ...hI];
  new Set(Ej);
  /**
   * React Router v6.20.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */ function am() {
    return (
      (am = Object.assign
        ? Object.assign.bind()
        : function (t) {
            for (var e = 1; e < arguments.length; e++) {
              var n = arguments[e];
              for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
            }
            return t;
          }),
      am.apply(this, arguments)
    );
  }
  const Sw = ue.createContext(null),
    kj = ue.createContext(null),
    Rh = ue.createContext(null),
    Jm = ue.createContext(null),
    nc = ue.createContext({ outlet: null, matches: [], isDataRoute: !1 }),
    dI = ue.createContext(null);
  function Aj(t, e) {
    let { relative: n } = e === void 0 ? {} : e;
    Oh() || Vr(!1);
    let { basename: r, navigator: a } = ue.useContext(Rh),
      { hash: o, pathname: u, search: g } = pI(t, { relative: n }),
      x = u;
    return (
      r !== "/" && (x = u === "/" ? r : jl([r, u])),
      a.createHref({ pathname: x, search: g, hash: o })
    );
  }
  function Oh() {
    return ue.useContext(Jm) != null;
  }
  function zf() {
    return Oh() || Vr(!1), ue.useContext(Jm).location;
  }
  function fI(t) {
    ue.useContext(Rh).static || ue.useLayoutEffect(t);
  }
  function rc() {
    let { isDataRoute: t } = ue.useContext(nc);
    return t ? zj() : Cj();
  }
  function Cj() {
    Oh() || Vr(!1);
    let t = ue.useContext(Sw),
      { basename: e, navigator: n } = ue.useContext(Rh),
      { matches: r } = ue.useContext(nc),
      { pathname: a } = zf(),
      o = JSON.stringify(ww(r)),
      u = ue.useRef(!1);
    return (
      fI(() => {
        u.current = !0;
      }),
      ue.useCallback(
        function (x, E) {
          if ((E === void 0 && (E = {}), !u.current)) return;
          if (typeof x == "number") {
            n.go(x);
            return;
          }
          let L = _w(x, JSON.parse(o), a, E.relative === "path");
          t == null &&
            e !== "/" &&
            (L.pathname = L.pathname === "/" ? e : jl([e, L.pathname])),
            (E.replace ? n.replace : n.push)(L, E.state, E);
        },
        [e, n, o, a, t]
      )
    );
  }
  function pI(t, e) {
    let { relative: n } = e === void 0 ? {} : e,
      { matches: r } = ue.useContext(nc),
      { pathname: a } = zf(),
      o = JSON.stringify(ww(r));
    return ue.useMemo(
      () => _w(t, JSON.parse(o), a, n === "path"),
      [t, o, a, n]
    );
  }
  function Tj(t, e) {
    return Ij(t, e);
  }
  function Ij(t, e, n) {
    Oh() || Vr(!1);
    let { navigator: r } = ue.useContext(Rh),
      { matches: a } = ue.useContext(nc),
      o = a[a.length - 1],
      u = o ? o.params : {};
    o && o.pathname;
    let g = o ? o.pathnameBase : "/";
    o && o.route;
    let x = zf(),
      E;
    if (e) {
      var L;
      let le = typeof e == "string" ? Ph(e) : e;
      g === "/" || ((L = le.pathname) != null && L.startsWith(g)) || Vr(!1),
        (E = le);
    } else E = x;
    let z = E.pathname || "/",
      B = g === "/" ? z : z.slice(g.length) || "/",
      ae = nj(t, { pathname: B }),
      se = Lj(
        ae &&
          ae.map((le) =>
            Object.assign({}, le, {
              params: Object.assign({}, u, le.params),
              pathname: jl([
                g,
                r.encodeLocation
                  ? r.encodeLocation(le.pathname).pathname
                  : le.pathname,
              ]),
              pathnameBase:
                le.pathnameBase === "/"
                  ? g
                  : jl([
                      g,
                      r.encodeLocation
                        ? r.encodeLocation(le.pathnameBase).pathname
                        : le.pathnameBase,
                    ]),
            })
          ),
        a,
        n
      );
    return e && se
      ? ue.createElement(
          Jm.Provider,
          {
            value: {
              location: am(
                {
                  pathname: "/",
                  search: "",
                  hash: "",
                  state: null,
                  key: "default",
                },
                E
              ),
              navigationType: Cl.Pop,
            },
          },
          se
        )
      : se;
  }
  function Pj() {
    let t = Fj(),
      e = Sj(t)
        ? t.status + " " + t.statusText
        : t instanceof Error
        ? t.message
        : JSON.stringify(t),
      n = t instanceof Error ? t.stack : null,
      a = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" },
      o = null;
    return ue.createElement(
      ue.Fragment,
      null,
      ue.createElement("h2", null, "Unexpected Application Error!"),
      ue.createElement("h3", { style: { fontStyle: "italic" } }, e),
      n ? ue.createElement("pre", { style: a }, n) : null,
      o
    );
  }
  const Rj = ue.createElement(Pj, null);
  class Oj extends ue.Component {
    constructor(e) {
      super(e),
        (this.state = {
          location: e.location,
          revalidation: e.revalidation,
          error: e.error,
        });
    }
    static getDerivedStateFromError(e) {
      return { error: e };
    }
    static getDerivedStateFromProps(e, n) {
      return n.location !== e.location ||
        (n.revalidation !== "idle" && e.revalidation === "idle")
        ? { error: e.error, location: e.location, revalidation: e.revalidation }
        : {
            error: e.error || n.error,
            location: n.location,
            revalidation: e.revalidation || n.revalidation,
          };
    }
    componentDidCatch(e, n) {
      console.error(
        "React Router caught the following error during render",
        e,
        n
      );
    }
    render() {
      return this.state.error
        ? ue.createElement(
            nc.Provider,
            { value: this.props.routeContext },
            ue.createElement(dI.Provider, {
              value: this.state.error,
              children: this.props.component,
            })
          )
        : this.props.children;
    }
  }
  function Nj(t) {
    let { routeContext: e, match: n, children: r } = t,
      a = ue.useContext(Sw);
    return (
      a &&
        a.static &&
        a.staticContext &&
        (n.route.errorElement || n.route.ErrorBoundary) &&
        (a.staticContext._deepestRenderedBoundaryId = n.route.id),
      ue.createElement(nc.Provider, { value: e }, r)
    );
  }
  function Lj(t, e, n) {
    var r;
    if ((e === void 0 && (e = []), n === void 0 && (n = null), t == null)) {
      var a;
      if ((a = n) != null && a.errors) t = n.matches;
      else return null;
    }
    let o = t,
      u = (r = n) == null ? void 0 : r.errors;
    if (u != null) {
      let g = o.findIndex(
        (x) => x.route.id && (u == null ? void 0 : u[x.route.id])
      );
      g >= 0 || Vr(!1), (o = o.slice(0, Math.min(o.length, g + 1)));
    }
    return o.reduceRight((g, x, E) => {
      let L = x.route.id ? (u == null ? void 0 : u[x.route.id]) : null,
        z = null;
      n && (z = x.route.errorElement || Rj);
      let B = e.concat(o.slice(0, E + 1)),
        ae = () => {
          let se;
          return (
            L
              ? (se = z)
              : x.route.Component
              ? (se = ue.createElement(x.route.Component, null))
              : x.route.element
              ? (se = x.route.element)
              : (se = g),
            ue.createElement(Nj, {
              match: x,
              routeContext: { outlet: g, matches: B, isDataRoute: n != null },
              children: se,
            })
          );
        };
      return n && (x.route.ErrorBoundary || x.route.errorElement || E === 0)
        ? ue.createElement(Oj, {
            location: n.location,
            revalidation: n.revalidation,
            component: z,
            error: L,
            children: ae(),
            routeContext: { outlet: null, matches: B, isDataRoute: !0 },
          })
        : ae();
    }, null);
  }
  var gI = (function (t) {
      return (
        (t.UseBlocker = "useBlocker"),
        (t.UseRevalidator = "useRevalidator"),
        (t.UseNavigateStable = "useNavigate"),
        t
      );
    })(gI || {}),
    om = (function (t) {
      return (
        (t.UseBlocker = "useBlocker"),
        (t.UseLoaderData = "useLoaderData"),
        (t.UseActionData = "useActionData"),
        (t.UseRouteError = "useRouteError"),
        (t.UseNavigation = "useNavigation"),
        (t.UseRouteLoaderData = "useRouteLoaderData"),
        (t.UseMatches = "useMatches"),
        (t.UseRevalidator = "useRevalidator"),
        (t.UseNavigateStable = "useNavigate"),
        (t.UseRouteId = "useRouteId"),
        t
      );
    })(om || {});
  function Dj(t) {
    let e = ue.useContext(Sw);
    return e || Vr(!1), e;
  }
  function Mj(t) {
    let e = ue.useContext(kj);
    return e || Vr(!1), e;
  }
  function jj(t) {
    let e = ue.useContext(nc);
    return e || Vr(!1), e;
  }
  function mI(t) {
    let e = jj(),
      n = e.matches[e.matches.length - 1];
    return n.route.id || Vr(!1), n.route.id;
  }
  function Fj() {
    var t;
    let e = ue.useContext(dI),
      n = Mj(om.UseRouteError),
      r = mI(om.UseRouteError);
    return e || ((t = n.errors) == null ? void 0 : t[r]);
  }
  function zj() {
    let { router: t } = Dj(gI.UseNavigateStable),
      e = mI(om.UseNavigateStable),
      n = ue.useRef(!1);
    return (
      fI(() => {
        n.current = !0;
      }),
      ue.useCallback(
        function (a, o) {
          o === void 0 && (o = {}),
            n.current &&
              (typeof a == "number"
                ? t.navigate(a)
                : t.navigate(a, am({ fromRouteId: e }, o)));
        },
        [t, e]
      )
    );
  }
  function Vj(t) {
    let { to: e, replace: n, state: r, relative: a } = t;
    Oh() || Vr(!1);
    let { matches: o } = ue.useContext(nc),
      { pathname: u } = zf(),
      g = rc(),
      x = _w(e, ww(o), u, a === "path"),
      E = JSON.stringify(x);
    return (
      ue.useEffect(
        () => g(JSON.parse(E), { replace: n, state: r, relative: a }),
        [g, E, a, n, r]
      ),
      null
    );
  }
  function Io(t) {
    Vr(!1);
  }
  function $j(t) {
    let {
      basename: e = "/",
      children: n = null,
      location: r,
      navigationType: a = Cl.Pop,
      navigator: o,
      static: u = !1,
    } = t;
    Oh() && Vr(!1);
    let g = e.replace(/^\/*/, "/"),
      x = ue.useMemo(
        () => ({ basename: g, navigator: o, static: u }),
        [g, o, u]
      );
    typeof r == "string" && (r = Ph(r));
    let {
        pathname: E = "/",
        search: L = "",
        hash: z = "",
        state: B = null,
        key: ae = "default",
      } = r,
      se = ue.useMemo(() => {
        let le = bw(E, g);
        return le == null
          ? null
          : {
              location: { pathname: le, search: L, hash: z, state: B, key: ae },
              navigationType: a,
            };
      }, [g, E, L, z, B, ae, a]);
    return se == null
      ? null
      : ue.createElement(
          Rh.Provider,
          { value: x },
          ue.createElement(Jm.Provider, { children: n, value: se })
        );
  }
  function vI(t) {
    let { children: e, location: n } = t;
    return Tj(_b(e), n);
  }
  new Promise(() => {});
  function _b(t, e) {
    e === void 0 && (e = []);
    let n = [];
    return (
      ue.Children.forEach(t, (r, a) => {
        if (!ue.isValidElement(r)) return;
        let o = [...e, a];
        if (r.type === ue.Fragment) {
          n.push.apply(n, _b(r.props.children, o));
          return;
        }
        r.type !== Io && Vr(!1), !r.props.index || !r.props.children || Vr(!1);
        let u = {
          id: r.props.id || o.join("-"),
          caseSensitive: r.props.caseSensitive,
          element: r.props.element,
          Component: r.props.Component,
          index: r.props.index,
          path: r.props.path,
          loader: r.props.loader,
          action: r.props.action,
          errorElement: r.props.errorElement,
          ErrorBoundary: r.props.ErrorBoundary,
          hasErrorBoundary:
            r.props.ErrorBoundary != null || r.props.errorElement != null,
          shouldRevalidate: r.props.shouldRevalidate,
          handle: r.props.handle,
          lazy: r.props.lazy,
        };
        r.props.children && (u.children = _b(r.props.children, o)), n.push(u);
      }),
      n
    );
  }
  /**
   * React Router DOM v6.20.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */ function Sb() {
    return (
      (Sb = Object.assign
        ? Object.assign.bind()
        : function (t) {
            for (var e = 1; e < arguments.length; e++) {
              var n = arguments[e];
              for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
            }
            return t;
          }),
      Sb.apply(this, arguments)
    );
  }
  function Bj(t, e) {
    if (t == null) return {};
    var n = {},
      r = Object.keys(t),
      a,
      o;
    for (o = 0; o < r.length; o++)
      (a = r[o]), !(e.indexOf(a) >= 0) && (n[a] = t[a]);
    return n;
  }
  function Hj(t) {
    return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
  }
  function Wj(t, e) {
    return t.button === 0 && (!e || e === "_self") && !Hj(t);
  }
  const Uj = [
      "onClick",
      "relative",
      "reloadDocument",
      "replace",
      "state",
      "target",
      "to",
      "preventScrollReset",
      "unstable_viewTransition",
    ],
    Xj = "startTransition",
    lE = H2[Xj];
  function Yj(t) {
    let { basename: e, children: n, future: r, window: a } = t,
      o = ue.useRef();
    o.current == null && (o.current = JM({ window: a, v5Compat: !0 }));
    let u = o.current,
      [g, x] = ue.useState({ action: u.action, location: u.location }),
      { v7_startTransition: E } = r || {},
      L = ue.useCallback(
        (z) => {
          E && lE ? lE(() => x(z)) : x(z);
        },
        [x, E]
      );
    return (
      ue.useLayoutEffect(() => u.listen(L), [u, L]),
      ue.createElement($j, {
        basename: e,
        children: n,
        location: g.location,
        navigationType: g.action,
        navigator: u,
      })
    );
  }
  const Gj =
      typeof window < "u" &&
      typeof window.document < "u" &&
      typeof window.document.createElement < "u",
    qj = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
    od = ue.forwardRef(function (e, n) {
      let {
          onClick: r,
          relative: a,
          reloadDocument: o,
          replace: u,
          state: g,
          target: x,
          to: E,
          preventScrollReset: L,
          unstable_viewTransition: z,
        } = e,
        B = Bj(e, Uj),
        { basename: ae } = ue.useContext(Rh),
        se,
        le = !1;
      if (typeof E == "string" && qj.test(E) && ((se = E), Gj))
        try {
          let ce = new URL(window.location.href),
            ye = E.startsWith("//") ? new URL(ce.protocol + E) : new URL(E),
            C = bw(ye.pathname, ae);
          ye.origin === ce.origin && C != null
            ? (E = C + ye.search + ye.hash)
            : (le = !0);
        } catch {}
      let he = Aj(E, { relative: a }),
        oe = Kj(E, {
          replace: u,
          state: g,
          target: x,
          preventScrollReset: L,
          relative: a,
          unstable_viewTransition: z,
        });
      function F(ce) {
        r && r(ce), ce.defaultPrevented || oe(ce);
      }
      return ue.createElement(
        "a",
        Sb({}, B, {
          href: se || he,
          onClick: le || o ? r : F,
          ref: n,
          target: x,
        })
      );
    });
  var cE;
  (function (t) {
    (t.UseScrollRestoration = "useScrollRestoration"),
      (t.UseSubmit = "useSubmit"),
      (t.UseSubmitFetcher = "useSubmitFetcher"),
      (t.UseFetcher = "useFetcher"),
      (t.useViewTransitionState = "useViewTransitionState");
  })(cE || (cE = {}));
  var uE;
  (function (t) {
    (t.UseFetcher = "useFetcher"),
      (t.UseFetchers = "useFetchers"),
      (t.UseScrollRestoration = "useScrollRestoration");
  })(uE || (uE = {}));
  function Kj(t, e) {
    let {
        target: n,
        replace: r,
        state: a,
        preventScrollReset: o,
        relative: u,
        unstable_viewTransition: g,
      } = e === void 0 ? {} : e,
      x = rc(),
      E = zf(),
      L = pI(t, { relative: u });
    return ue.useCallback(
      (z) => {
        if (Wj(z, n)) {
          z.preventDefault();
          let B = r !== void 0 ? r : sm(E) === sm(L);
          x(t, {
            replace: B,
            state: a,
            preventScrollReset: o,
            relative: u,
            unstable_viewTransition: g,
          });
        }
      },
      [E, x, L, r, a, n, t, o, u, g]
    );
  }
  function Qj() {
    const t = { color: "#237804", fontWeight: "800", marginLeft: "10px" };
    return P.jsx("aside", {
      className: "left-sidebar",
      children: P.jsxs("div", {
        children: [
          P.jsxs("div", {
            className:
              "brand-logo d-flex align-items-center justify-content-between",
            children: [
              P.jsxs("div", {
                className: "text-nowrap logo-img",
                children: [
                  P.jsx("img", {
                    src: "https://firebasestorage.googleapis.com/v0/b/chefguard-5ca00.appspot.com/o/images%2Flogo.png?alt=media&token=e0d2877a-2920-4c6b-84f3-4ec89219885b",
                    width: 35,
                    height: 30,
                    alt: "",
                  }),
                  P.jsx("span", { style: t, children: "CHEFGUARD" }),
                ],
              }),
              P.jsx("div", {
                className:
                  "close-btn d-xl-none d-block sidebartoggler cursor-pointer",
                id: "sidebarCollapse",
                children: P.jsx("i", { className: "ti ti-x fs-8" }),
              }),
            ],
          }),
          P.jsx("nav", {
            className: "sidebar-nav scroll-sidebar",
            "data-simplebar": "",
            children: P.jsxs("ul", {
              id: "sidebarnav",
              children: [
                P.jsxs("li", {
                  className: "nav-small-cap",
                  children: [
                    P.jsx("i", {
                      className: "ti ti-dots nav-small-cap-icon fs-4",
                    }),
                    P.jsx("span", { className: "hide-menu", children: "Home" }),
                  ],
                }),
                P.jsx("li", {
                  className: "sidebar-item",
                  children: P.jsxs(od, {
                    className: "sidebar-link",
                    to: "/admin/dashboard",
                    "aria-expanded": "false",
                    children: [
                      P.jsx("span", {
                        children: P.jsx("i", { className: "ti ti-dashboard" }),
                      }),
                      P.jsx("span", {
                        className: "hide-menu",
                        children: "Dashboard",
                      }),
                    ],
                  }),
                }),
                P.jsx("li", {
                  className: "sidebar-item",
                  children: P.jsxs(od, {
                    className: "sidebar-link",
                    to: "/admin/products",
                    children: [
                      P.jsx("span", {
                        children: P.jsx("i", {
                          className: "ti ti-shopping-cart",
                        }),
                      }),
                      P.jsx("span", {
                        className: "hide-menu",
                        children: "Products",
                      }),
                    ],
                  }),
                }),
                P.jsx("li", {
                  className: "sidebar-item",
                  children: P.jsxs(od, {
                    className: "sidebar-link",
                    to: "/admin/categories",
                    children: [
                      P.jsx("span", {
                        children: P.jsx("i", { className: "ti ti-category-2" }),
                      }),
                      P.jsx("span", {
                        className: "hide-menu",
                        children: "Categories",
                      }),
                    ],
                  }),
                }),
                P.jsx("li", {
                  className: "sidebar-item",
                  children: P.jsxs(od, {
                    className: "sidebar-link",
                    to: "/admin/banners",
                    children: [
                      P.jsx("span", {
                        children: P.jsx("i", {
                          className: "ti ti-layout-collage",
                        }),
                      }),
                      P.jsx("span", {
                        className: "hide-menu",
                        children: "Banners",
                      }),
                    ],
                  }),
                }),
                P.jsx("li", {
                  className: "sidebar-item",
                  children: P.jsxs(od, {
                    className: "sidebar-link",
                    to: "/admin/testimonials",
                    children: [
                      P.jsx("span", {
                        children: P.jsx("i", { className: "ti ti-blockquote" }),
                      }),
                      P.jsx("span", {
                        className: "hide-menu",
                        children: "Testimonials",
                      }),
                    ],
                  }),
                }),
              ],
            }),
          }),
        ],
      }),
    });
  }
  function Zj() {
    const t = rc(),
      e = function () {
        localStorage.removeItem("isLoggedIn"), t("/login");
      };
    return P.jsx("header", {
      className: "app-header",
      children: P.jsxs("nav", {
        className: "navbar navbar-expand-lg navbar-light",
        children: [
          P.jsxs("ul", {
            className: "navbar-nav",
            children: [
              P.jsx("li", {
                className: "nav-item d-block d-xl-none",
                children: P.jsx("div", {
                  className: "nav-link sidebartoggler nav-icon-hover",
                  style: { cursor: "pointer" },
                  id: "headerCollapse",
                  children: P.jsx("i", { className: "ti ti-menu-2" }),
                }),
              }),
              P.jsx("li", {
                className: "nav-item",
                children: P.jsxs("a", {
                  className: "nav-link nav-icon-hover",
                  children: [
                    P.jsx("i", { className: "ti ti-bell-ringing" }),
                    P.jsx("div", {
                      className: "notification bg-primary rounded-circle",
                    }),
                  ],
                }),
              }),
            ],
          }),
          P.jsx("div", {
            className: "navbar-collapse justify-content-end px-0",
            id: "navbarNav",
            children: P.jsx("ul", {
              className:
                "navbar-nav flex-row ms-auto align-items-center justify-content-end",
              children: P.jsxs("li", {
                className: "nav-item dropdown",
                children: [
                  P.jsx("a", {
                    className: "nav-link nav-icon-hover",
                    id: "drop2",
                    "data-bs-toggle": "dropdown",
                    "aria-expanded": "false",
                    children: P.jsx("img", {
                      src: "https://bootstrapdemos.adminmart.com/modernize/dist/assets/images/profile/user-1.jpg",
                      alt: "",
                      width: "35",
                      height: "35",
                      className: "rounded-circle",
                    }),
                  }),
                  P.jsx("div", {
                    className:
                      "dropdown-menu dropdown-menu-end dropdown-menu-animate-up",
                    "aria-labelledby": "drop2",
                    children: P.jsx("div", {
                      className: "message-body",
                      children: P.jsx("div", {
                        className: "btn btn-danger mx-3 mt-2 d-block",
                        onClick: e,
                        children: "Logout",
                      }),
                    }),
                  }),
                ],
              }),
            }),
          }),
        ],
      }),
    });
  }
  var Jj = function (e) {
    return eF(e) && !tF(e);
  };
  function eF(t) {
    return !!t && typeof t == "object";
  }
  function tF(t) {
    var e = Object.prototype.toString.call(t);
    return e === "[object RegExp]" || e === "[object Date]" || iF(t);
  }
  var nF = typeof Symbol == "function" && Symbol.for,
    rF = nF ? Symbol.for("react.element") : 60103;
  function iF(t) {
    return t.$$typeof === rF;
  }
  function sF(t) {
    return Array.isArray(t) ? [] : {};
  }
  function lm(t, e) {
    return e.clone !== !1 && e.isMergeableObject(t) ? uf(sF(t), t, e) : t;
  }
  function aF(t, e, n) {
    return t.concat(e).map(function (r) {
      return lm(r, n);
    });
  }
  function oF(t, e, n) {
    var r = {};
    return (
      n.isMergeableObject(t) &&
        Object.keys(t).forEach(function (a) {
          r[a] = lm(t[a], n);
        }),
      Object.keys(e).forEach(function (a) {
        !n.isMergeableObject(e[a]) || !t[a]
          ? (r[a] = lm(e[a], n))
          : (r[a] = uf(t[a], e[a], n));
      }),
      r
    );
  }
  function uf(t, e, n) {
    (n = n || {}),
      (n.arrayMerge = n.arrayMerge || aF),
      (n.isMergeableObject = n.isMergeableObject || Jj);
    var r = Array.isArray(e),
      a = Array.isArray(t),
      o = r === a;
    return o ? (r ? n.arrayMerge(t, e, n) : oF(t, e, n)) : lm(e, n);
  }
  uf.all = function (e, n) {
    if (!Array.isArray(e)) throw new Error("first argument should be an array");
    return e.reduce(function (r, a) {
      return uf(r, a, n);
    }, {});
  };
  var Eb = uf,
    lF =
      typeof global == "object" && global && global.Object === Object && global;
  const yI = lF;
  var cF = typeof self == "object" && self && self.Object === Object && self,
    uF = yI || cF || Function("return this")();
  const fo = uF;
  var hF = fo.Symbol;
  const Yl = hF;
  var xI = Object.prototype,
    dF = xI.hasOwnProperty,
    fF = xI.toString,
    ld = Yl ? Yl.toStringTag : void 0;
  function pF(t) {
    var e = dF.call(t, ld),
      n = t[ld];
    try {
      t[ld] = void 0;
      var r = !0;
    } catch {}
    var a = fF.call(t);
    return r && (e ? (t[ld] = n) : delete t[ld]), a;
  }
  var gF = Object.prototype,
    mF = gF.toString;
  function vF(t) {
    return mF.call(t);
  }
  var yF = "[object Null]",
    xF = "[object Undefined]",
    hE = Yl ? Yl.toStringTag : void 0;
  function su(t) {
    return t == null
      ? t === void 0
        ? xF
        : yF
      : hE && hE in Object(t)
      ? pF(t)
      : vF(t);
  }
  function bI(t, e) {
    return function (n) {
      return t(e(n));
    };
  }
  var bF = bI(Object.getPrototypeOf, Object);
  const Ew = bF;
  function au(t) {
    return t != null && typeof t == "object";
  }
  var wF = "[object Object]",
    _F = Function.prototype,
    SF = Object.prototype,
    wI = _F.toString,
    EF = SF.hasOwnProperty,
    kF = wI.call(Object);
  function dE(t) {
    if (!au(t) || su(t) != wF) return !1;
    var e = Ew(t);
    if (e === null) return !0;
    var n = EF.call(e, "constructor") && e.constructor;
    return typeof n == "function" && n instanceof n && wI.call(n) == kF;
  }
  var fE = Array.isArray,
    pE = Object.keys,
    AF = Object.prototype.hasOwnProperty,
    CF = typeof Element < "u";
  function kb(t, e) {
    if (t === e) return !0;
    if (t && e && typeof t == "object" && typeof e == "object") {
      var n = fE(t),
        r = fE(e),
        a,
        o,
        u;
      if (n && r) {
        if (((o = t.length), o != e.length)) return !1;
        for (a = o; a-- !== 0; ) if (!kb(t[a], e[a])) return !1;
        return !0;
      }
      if (n != r) return !1;
      var g = t instanceof Date,
        x = e instanceof Date;
      if (g != x) return !1;
      if (g && x) return t.getTime() == e.getTime();
      var E = t instanceof RegExp,
        L = e instanceof RegExp;
      if (E != L) return !1;
      if (E && L) return t.toString() == e.toString();
      var z = pE(t);
      if (((o = z.length), o !== pE(e).length)) return !1;
      for (a = o; a-- !== 0; ) if (!AF.call(e, z[a])) return !1;
      if (CF && t instanceof Element && e instanceof Element) return t === e;
      for (a = o; a-- !== 0; )
        if (((u = z[a]), !(u === "_owner" && t.$$typeof) && !kb(t[u], e[u])))
          return !1;
      return !0;
    }
    return t !== t && e !== e;
  }
  var TF = function (e, n) {
    try {
      return kb(e, n);
    } catch (r) {
      if (
        (r.message && r.message.match(/stack|recursion/i)) ||
        r.number === -2146828260
      )
        return (
          console.warn(
            "Warning: react-fast-compare does not handle circular references.",
            r.name,
            r.message
          ),
          !1
        );
      throw r;
    }
  };
  const gl = nu(TF);
  var IF = !0;
  function xl(t, e) {
    if (!IF) {
      if (t) return;
      var n = "Warning: " + e;
      typeof console < "u" && console.warn(n);
      try {
        throw Error(n);
      } catch {}
    }
  }
  function PF() {
    (this.__data__ = []), (this.size = 0);
  }
  function _I(t, e) {
    return t === e || (t !== t && e !== e);
  }
  function ev(t, e) {
    for (var n = t.length; n--; ) if (_I(t[n][0], e)) return n;
    return -1;
  }
  var RF = Array.prototype,
    OF = RF.splice;
  function NF(t) {
    var e = this.__data__,
      n = ev(e, t);
    if (n < 0) return !1;
    var r = e.length - 1;
    return n == r ? e.pop() : OF.call(e, n, 1), --this.size, !0;
  }
  function LF(t) {
    var e = this.__data__,
      n = ev(e, t);
    return n < 0 ? void 0 : e[n][1];
  }
  function DF(t) {
    return ev(this.__data__, t) > -1;
  }
  function MF(t, e) {
    var n = this.__data__,
      r = ev(n, t);
    return r < 0 ? (++this.size, n.push([t, e])) : (n[r][1] = e), this;
  }
  function Qo(t) {
    var e = -1,
      n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n; ) {
      var r = t[e];
      this.set(r[0], r[1]);
    }
  }
  Qo.prototype.clear = PF;
  Qo.prototype.delete = NF;
  Qo.prototype.get = LF;
  Qo.prototype.has = DF;
  Qo.prototype.set = MF;
  function jF() {
    (this.__data__ = new Qo()), (this.size = 0);
  }
  function FF(t) {
    var e = this.__data__,
      n = e.delete(t);
    return (this.size = e.size), n;
  }
  function zF(t) {
    return this.__data__.get(t);
  }
  function VF(t) {
    return this.__data__.has(t);
  }
  function Vf(t) {
    var e = typeof t;
    return t != null && (e == "object" || e == "function");
  }
  var $F = "[object AsyncFunction]",
    BF = "[object Function]",
    HF = "[object GeneratorFunction]",
    WF = "[object Proxy]";
  function SI(t) {
    if (!Vf(t)) return !1;
    var e = su(t);
    return e == BF || e == HF || e == $F || e == WF;
  }
  var UF = fo["__core-js_shared__"];
  const Ky = UF;
  var gE = (function () {
    var t = /[^.]+$/.exec((Ky && Ky.keys && Ky.keys.IE_PROTO) || "");
    return t ? "Symbol(src)_1." + t : "";
  })();
  function XF(t) {
    return !!gE && gE in t;
  }
  var YF = Function.prototype,
    GF = YF.toString;
  function ou(t) {
    if (t != null) {
      try {
        return GF.call(t);
      } catch {}
      try {
        return t + "";
      } catch {}
    }
    return "";
  }
  var qF = /[\\^$.*+?()[\]{}|]/g,
    KF = /^\[object .+?Constructor\]$/,
    QF = Function.prototype,
    ZF = Object.prototype,
    JF = QF.toString,
    ez = ZF.hasOwnProperty,
    tz = RegExp(
      "^" +
        JF.call(ez)
          .replace(qF, "\\$&")
          .replace(
            /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
            "$1.*?"
          ) +
        "$"
    );
  function nz(t) {
    if (!Vf(t) || XF(t)) return !1;
    var e = SI(t) ? tz : KF;
    return e.test(ou(t));
  }
  function rz(t, e) {
    return t == null ? void 0 : t[e];
  }
  function lu(t, e) {
    var n = rz(t, e);
    return nz(n) ? n : void 0;
  }
  var iz = lu(fo, "Map");
  const hf = iz;
  var sz = lu(Object, "create");
  const df = sz;
  function az() {
    (this.__data__ = df ? df(null) : {}), (this.size = 0);
  }
  function oz(t) {
    var e = this.has(t) && delete this.__data__[t];
    return (this.size -= e ? 1 : 0), e;
  }
  var lz = "__lodash_hash_undefined__",
    cz = Object.prototype,
    uz = cz.hasOwnProperty;
  function hz(t) {
    var e = this.__data__;
    if (df) {
      var n = e[t];
      return n === lz ? void 0 : n;
    }
    return uz.call(e, t) ? e[t] : void 0;
  }
  var dz = Object.prototype,
    fz = dz.hasOwnProperty;
  function pz(t) {
    var e = this.__data__;
    return df ? e[t] !== void 0 : fz.call(e, t);
  }
  var gz = "__lodash_hash_undefined__";
  function mz(t, e) {
    var n = this.__data__;
    return (
      (this.size += this.has(t) ? 0 : 1),
      (n[t] = df && e === void 0 ? gz : e),
      this
    );
  }
  function Uc(t) {
    var e = -1,
      n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n; ) {
      var r = t[e];
      this.set(r[0], r[1]);
    }
  }
  Uc.prototype.clear = az;
  Uc.prototype.delete = oz;
  Uc.prototype.get = hz;
  Uc.prototype.has = pz;
  Uc.prototype.set = mz;
  function vz() {
    (this.size = 0),
      (this.__data__ = {
        hash: new Uc(),
        map: new (hf || Qo)(),
        string: new Uc(),
      });
  }
  function yz(t) {
    var e = typeof t;
    return e == "string" || e == "number" || e == "symbol" || e == "boolean"
      ? t !== "__proto__"
      : t === null;
  }
  function tv(t, e) {
    var n = t.__data__;
    return yz(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map;
  }
  function xz(t) {
    var e = tv(this, t).delete(t);
    return (this.size -= e ? 1 : 0), e;
  }
  function bz(t) {
    return tv(this, t).get(t);
  }
  function wz(t) {
    return tv(this, t).has(t);
  }
  function _z(t, e) {
    var n = tv(this, t),
      r = n.size;
    return n.set(t, e), (this.size += n.size == r ? 0 : 1), this;
  }
  function ic(t) {
    var e = -1,
      n = t == null ? 0 : t.length;
    for (this.clear(); ++e < n; ) {
      var r = t[e];
      this.set(r[0], r[1]);
    }
  }
  ic.prototype.clear = vz;
  ic.prototype.delete = xz;
  ic.prototype.get = bz;
  ic.prototype.has = wz;
  ic.prototype.set = _z;
  var Sz = 200;
  function Ez(t, e) {
    var n = this.__data__;
    if (n instanceof Qo) {
      var r = n.__data__;
      if (!hf || r.length < Sz - 1)
        return r.push([t, e]), (this.size = ++n.size), this;
      n = this.__data__ = new ic(r);
    }
    return n.set(t, e), (this.size = n.size), this;
  }
  function Nh(t) {
    var e = (this.__data__ = new Qo(t));
    this.size = e.size;
  }
  Nh.prototype.clear = jF;
  Nh.prototype.delete = FF;
  Nh.prototype.get = zF;
  Nh.prototype.has = VF;
  Nh.prototype.set = Ez;
  function kz(t, e) {
    for (
      var n = -1, r = t == null ? 0 : t.length;
      ++n < r && e(t[n], n, t) !== !1;

    );
    return t;
  }
  var Az = (function () {
    try {
      var t = lu(Object, "defineProperty");
      return t({}, "", {}), t;
    } catch {}
  })();
  const mE = Az;
  function EI(t, e, n) {
    e == "__proto__" && mE
      ? mE(t, e, { configurable: !0, enumerable: !0, value: n, writable: !0 })
      : (t[e] = n);
  }
  var Cz = Object.prototype,
    Tz = Cz.hasOwnProperty;
  function kI(t, e, n) {
    var r = t[e];
    (!(Tz.call(t, e) && _I(r, n)) || (n === void 0 && !(e in t))) &&
      EI(t, e, n);
  }
  function nv(t, e, n, r) {
    var a = !n;
    n || (n = {});
    for (var o = -1, u = e.length; ++o < u; ) {
      var g = e[o],
        x = r ? r(n[g], t[g], g, n, t) : void 0;
      x === void 0 && (x = t[g]), a ? EI(n, g, x) : kI(n, g, x);
    }
    return n;
  }
  function Iz(t, e) {
    for (var n = -1, r = Array(t); ++n < t; ) r[n] = e(n);
    return r;
  }
  var Pz = "[object Arguments]";
  function vE(t) {
    return au(t) && su(t) == Pz;
  }
  var AI = Object.prototype,
    Rz = AI.hasOwnProperty,
    Oz = AI.propertyIsEnumerable,
    Nz = vE(
      (function () {
        return arguments;
      })()
    )
      ? vE
      : function (t) {
          return au(t) && Rz.call(t, "callee") && !Oz.call(t, "callee");
        };
  const Lz = Nz;
  var Dz = Array.isArray;
  const $f = Dz;
  function Mz() {
    return !1;
  }
  var CI = typeof hs == "object" && hs && !hs.nodeType && hs,
    yE = CI && typeof Qr == "object" && Qr && !Qr.nodeType && Qr,
    jz = yE && yE.exports === CI,
    xE = jz ? fo.Buffer : void 0,
    Fz = xE ? xE.isBuffer : void 0,
    zz = Fz || Mz;
  const TI = zz;
  var Vz = 9007199254740991,
    $z = /^(?:0|[1-9]\d*)$/;
  function Bz(t, e) {
    var n = typeof t;
    return (
      (e = e ?? Vz),
      !!e &&
        (n == "number" || (n != "symbol" && $z.test(t))) &&
        t > -1 &&
        t % 1 == 0 &&
        t < e
    );
  }
  var Hz = 9007199254740991;
  function II(t) {
    return typeof t == "number" && t > -1 && t % 1 == 0 && t <= Hz;
  }
  var Wz = "[object Arguments]",
    Uz = "[object Array]",
    Xz = "[object Boolean]",
    Yz = "[object Date]",
    Gz = "[object Error]",
    qz = "[object Function]",
    Kz = "[object Map]",
    Qz = "[object Number]",
    Zz = "[object Object]",
    Jz = "[object RegExp]",
    eV = "[object Set]",
    tV = "[object String]",
    nV = "[object WeakMap]",
    rV = "[object ArrayBuffer]",
    iV = "[object DataView]",
    sV = "[object Float32Array]",
    aV = "[object Float64Array]",
    oV = "[object Int8Array]",
    lV = "[object Int16Array]",
    cV = "[object Int32Array]",
    uV = "[object Uint8Array]",
    hV = "[object Uint8ClampedArray]",
    dV = "[object Uint16Array]",
    fV = "[object Uint32Array]",
    fr = {};
  fr[sV] =
    fr[aV] =
    fr[oV] =
    fr[lV] =
    fr[cV] =
    fr[uV] =
    fr[hV] =
    fr[dV] =
    fr[fV] =
      !0;
  fr[Wz] =
    fr[Uz] =
    fr[rV] =
    fr[Xz] =
    fr[iV] =
    fr[Yz] =
    fr[Gz] =
    fr[qz] =
    fr[Kz] =
    fr[Qz] =
    fr[Zz] =
    fr[Jz] =
    fr[eV] =
    fr[tV] =
    fr[nV] =
      !1;
  function pV(t) {
    return au(t) && II(t.length) && !!fr[su(t)];
  }
  function kw(t) {
    return function (e) {
      return t(e);
    };
  }
  var PI = typeof hs == "object" && hs && !hs.nodeType && hs,
    Ld = PI && typeof Qr == "object" && Qr && !Qr.nodeType && Qr,
    gV = Ld && Ld.exports === PI,
    Qy = gV && yI.process,
    mV = (function () {
      try {
        var t = Ld && Ld.require && Ld.require("util").types;
        return t || (Qy && Qy.binding && Qy.binding("util"));
      } catch {}
    })();
  const gh = mV;
  var bE = gh && gh.isTypedArray,
    vV = bE ? kw(bE) : pV;
  const yV = vV;
  var xV = Object.prototype,
    bV = xV.hasOwnProperty;
  function RI(t, e) {
    var n = $f(t),
      r = !n && Lz(t),
      a = !n && !r && TI(t),
      o = !n && !r && !a && yV(t),
      u = n || r || a || o,
      g = u ? Iz(t.length, String) : [],
      x = g.length;
    for (var E in t)
      (e || bV.call(t, E)) &&
        !(
          u &&
          (E == "length" ||
            (a && (E == "offset" || E == "parent")) ||
            (o && (E == "buffer" || E == "byteLength" || E == "byteOffset")) ||
            Bz(E, x))
        ) &&
        g.push(E);
    return g;
  }
  var wV = Object.prototype;
  function Aw(t) {
    var e = t && t.constructor,
      n = (typeof e == "function" && e.prototype) || wV;
    return t === n;
  }
  var _V = bI(Object.keys, Object);
  const SV = _V;
  var EV = Object.prototype,
    kV = EV.hasOwnProperty;
  function AV(t) {
    if (!Aw(t)) return SV(t);
    var e = [];
    for (var n in Object(t)) kV.call(t, n) && n != "constructor" && e.push(n);
    return e;
  }
  function OI(t) {
    return t != null && II(t.length) && !SI(t);
  }
  function Cw(t) {
    return OI(t) ? RI(t) : AV(t);
  }
  function CV(t, e) {
    return t && nv(e, Cw(e), t);
  }
  function TV(t) {
    var e = [];
    if (t != null) for (var n in Object(t)) e.push(n);
    return e;
  }
  var IV = Object.prototype,
    PV = IV.hasOwnProperty;
  function RV(t) {
    if (!Vf(t)) return TV(t);
    var e = Aw(t),
      n = [];
    for (var r in t) (r == "constructor" && (e || !PV.call(t, r))) || n.push(r);
    return n;
  }
  function Tw(t) {
    return OI(t) ? RI(t, !0) : RV(t);
  }
  function OV(t, e) {
    return t && nv(e, Tw(e), t);
  }
  var NI = typeof hs == "object" && hs && !hs.nodeType && hs,
    wE = NI && typeof Qr == "object" && Qr && !Qr.nodeType && Qr,
    NV = wE && wE.exports === NI,
    _E = NV ? fo.Buffer : void 0,
    SE = _E ? _E.allocUnsafe : void 0;
  function LV(t, e) {
    if (e) return t.slice();
    var n = t.length,
      r = SE ? SE(n) : new t.constructor(n);
    return t.copy(r), r;
  }
  function LI(t, e) {
    var n = -1,
      r = t.length;
    for (e || (e = Array(r)); ++n < r; ) e[n] = t[n];
    return e;
  }
  function DV(t, e) {
    for (var n = -1, r = t == null ? 0 : t.length, a = 0, o = []; ++n < r; ) {
      var u = t[n];
      e(u, n, t) && (o[a++] = u);
    }
    return o;
  }
  function DI() {
    return [];
  }
  var MV = Object.prototype,
    jV = MV.propertyIsEnumerable,
    EE = Object.getOwnPropertySymbols,
    FV = EE
      ? function (t) {
          return t == null
            ? []
            : ((t = Object(t)),
              DV(EE(t), function (e) {
                return jV.call(t, e);
              }));
        }
      : DI;
  const Iw = FV;
  function zV(t, e) {
    return nv(t, Iw(t), e);
  }
  function MI(t, e) {
    for (var n = -1, r = e.length, a = t.length; ++n < r; ) t[a + n] = e[n];
    return t;
  }
  var VV = Object.getOwnPropertySymbols,
    $V = VV
      ? function (t) {
          for (var e = []; t; ) MI(e, Iw(t)), (t = Ew(t));
          return e;
        }
      : DI;
  const jI = $V;
  function BV(t, e) {
    return nv(t, jI(t), e);
  }
  function FI(t, e, n) {
    var r = e(t);
    return $f(t) ? r : MI(r, n(t));
  }
  function HV(t) {
    return FI(t, Cw, Iw);
  }
  function WV(t) {
    return FI(t, Tw, jI);
  }
  var UV = lu(fo, "DataView");
  const Ab = UV;
  var XV = lu(fo, "Promise");
  const Cb = XV;
  var YV = lu(fo, "Set");
  const Tb = YV;
  var GV = lu(fo, "WeakMap");
  const Ib = GV;
  var kE = "[object Map]",
    qV = "[object Object]",
    AE = "[object Promise]",
    CE = "[object Set]",
    TE = "[object WeakMap]",
    IE = "[object DataView]",
    KV = ou(Ab),
    QV = ou(hf),
    ZV = ou(Cb),
    JV = ou(Tb),
    e$ = ou(Ib),
    Sc = su;
  ((Ab && Sc(new Ab(new ArrayBuffer(1))) != IE) ||
    (hf && Sc(new hf()) != kE) ||
    (Cb && Sc(Cb.resolve()) != AE) ||
    (Tb && Sc(new Tb()) != CE) ||
    (Ib && Sc(new Ib()) != TE)) &&
    (Sc = function (t) {
      var e = su(t),
        n = e == qV ? t.constructor : void 0,
        r = n ? ou(n) : "";
      if (r)
        switch (r) {
          case KV:
            return IE;
          case QV:
            return kE;
          case ZV:
            return AE;
          case JV:
            return CE;
          case e$:
            return TE;
        }
      return e;
    });
  const Pw = Sc;
  var t$ = Object.prototype,
    n$ = t$.hasOwnProperty;
  function r$(t) {
    var e = t.length,
      n = new t.constructor(e);
    return (
      e &&
        typeof t[0] == "string" &&
        n$.call(t, "index") &&
        ((n.index = t.index), (n.input = t.input)),
      n
    );
  }
  var i$ = fo.Uint8Array;
  const PE = i$;
  function Rw(t) {
    var e = new t.constructor(t.byteLength);
    return new PE(e).set(new PE(t)), e;
  }
  function s$(t, e) {
    var n = e ? Rw(t.buffer) : t.buffer;
    return new t.constructor(n, t.byteOffset, t.byteLength);
  }
  var a$ = /\w*$/;
  function o$(t) {
    var e = new t.constructor(t.source, a$.exec(t));
    return (e.lastIndex = t.lastIndex), e;
  }
  var RE = Yl ? Yl.prototype : void 0,
    OE = RE ? RE.valueOf : void 0;
  function l$(t) {
    return OE ? Object(OE.call(t)) : {};
  }
  function c$(t, e) {
    var n = e ? Rw(t.buffer) : t.buffer;
    return new t.constructor(n, t.byteOffset, t.length);
  }
  var u$ = "[object Boolean]",
    h$ = "[object Date]",
    d$ = "[object Map]",
    f$ = "[object Number]",
    p$ = "[object RegExp]",
    g$ = "[object Set]",
    m$ = "[object String]",
    v$ = "[object Symbol]",
    y$ = "[object ArrayBuffer]",
    x$ = "[object DataView]",
    b$ = "[object Float32Array]",
    w$ = "[object Float64Array]",
    _$ = "[object Int8Array]",
    S$ = "[object Int16Array]",
    E$ = "[object Int32Array]",
    k$ = "[object Uint8Array]",
    A$ = "[object Uint8ClampedArray]",
    C$ = "[object Uint16Array]",
    T$ = "[object Uint32Array]";
  function I$(t, e, n) {
    var r = t.constructor;
    switch (e) {
      case y$:
        return Rw(t);
      case u$:
      case h$:
        return new r(+t);
      case x$:
        return s$(t, n);
      case b$:
      case w$:
      case _$:
      case S$:
      case E$:
      case k$:
      case A$:
      case C$:
      case T$:
        return c$(t, n);
      case d$:
        return new r();
      case f$:
      case m$:
        return new r(t);
      case p$:
        return o$(t);
      case g$:
        return new r();
      case v$:
        return l$(t);
    }
  }
  var NE = Object.create,
    P$ = (function () {
      function t() {}
      return function (e) {
        if (!Vf(e)) return {};
        if (NE) return NE(e);
        t.prototype = e;
        var n = new t();
        return (t.prototype = void 0), n;
      };
    })();
  const R$ = P$;
  function O$(t) {
    return typeof t.constructor == "function" && !Aw(t) ? R$(Ew(t)) : {};
  }
  var N$ = "[object Map]";
  function L$(t) {
    return au(t) && Pw(t) == N$;
  }
  var LE = gh && gh.isMap,
    D$ = LE ? kw(LE) : L$;
  const M$ = D$;
  var j$ = "[object Set]";
  function F$(t) {
    return au(t) && Pw(t) == j$;
  }
  var DE = gh && gh.isSet,
    z$ = DE ? kw(DE) : F$;
  const V$ = z$;
  var $$ = 1,
    B$ = 2,
    H$ = 4,
    zI = "[object Arguments]",
    W$ = "[object Array]",
    U$ = "[object Boolean]",
    X$ = "[object Date]",
    Y$ = "[object Error]",
    VI = "[object Function]",
    G$ = "[object GeneratorFunction]",
    q$ = "[object Map]",
    K$ = "[object Number]",
    $I = "[object Object]",
    Q$ = "[object RegExp]",
    Z$ = "[object Set]",
    J$ = "[object String]",
    eB = "[object Symbol]",
    tB = "[object WeakMap]",
    nB = "[object ArrayBuffer]",
    rB = "[object DataView]",
    iB = "[object Float32Array]",
    sB = "[object Float64Array]",
    aB = "[object Int8Array]",
    oB = "[object Int16Array]",
    lB = "[object Int32Array]",
    cB = "[object Uint8Array]",
    uB = "[object Uint8ClampedArray]",
    hB = "[object Uint16Array]",
    dB = "[object Uint32Array]",
    lr = {};
  lr[zI] =
    lr[W$] =
    lr[nB] =
    lr[rB] =
    lr[U$] =
    lr[X$] =
    lr[iB] =
    lr[sB] =
    lr[aB] =
    lr[oB] =
    lr[lB] =
    lr[q$] =
    lr[K$] =
    lr[$I] =
    lr[Q$] =
    lr[Z$] =
    lr[J$] =
    lr[eB] =
    lr[cB] =
    lr[uB] =
    lr[hB] =
    lr[dB] =
      !0;
  lr[Y$] = lr[VI] = lr[tB] = !1;
  function Dd(t, e, n, r, a, o) {
    var u,
      g = e & $$,
      x = e & B$,
      E = e & H$;
    if ((n && (u = a ? n(t, r, a, o) : n(t)), u !== void 0)) return u;
    if (!Vf(t)) return t;
    var L = $f(t);
    if (L) {
      if (((u = r$(t)), !g)) return LI(t, u);
    } else {
      var z = Pw(t),
        B = z == VI || z == G$;
      if (TI(t)) return LV(t, g);
      if (z == $I || z == zI || (B && !a)) {
        if (((u = x || B ? {} : O$(t)), !g))
          return x ? BV(t, OV(u, t)) : zV(t, CV(u, t));
      } else {
        if (!lr[z]) return a ? t : {};
        u = I$(t, z, g);
      }
    }
    o || (o = new Nh());
    var ae = o.get(t);
    if (ae) return ae;
    o.set(t, u),
      V$(t)
        ? t.forEach(function (he) {
            u.add(Dd(he, e, n, he, t, o));
          })
        : M$(t) &&
          t.forEach(function (he, oe) {
            u.set(oe, Dd(he, e, n, oe, t, o));
          });
    var se = E ? (x ? WV : HV) : x ? Tw : Cw,
      le = L ? void 0 : se(t);
    return (
      kz(le || t, function (he, oe) {
        le && ((oe = he), (he = t[oe])), kI(u, oe, Dd(he, e, n, oe, t, o));
      }),
      u
    );
  }
  var fB = 4;
  function ME(t) {
    return Dd(t, fB);
  }
  function BI(t, e) {
    for (var n = -1, r = t == null ? 0 : t.length, a = Array(r); ++n < r; )
      a[n] = e(t[n], n, t);
    return a;
  }
  var pB = "[object Symbol]";
  function Ow(t) {
    return typeof t == "symbol" || (au(t) && su(t) == pB);
  }
  var gB = "Expected a function";
  function Nw(t, e) {
    if (typeof t != "function" || (e != null && typeof e != "function"))
      throw new TypeError(gB);
    var n = function () {
      var r = arguments,
        a = e ? e.apply(this, r) : r[0],
        o = n.cache;
      if (o.has(a)) return o.get(a);
      var u = t.apply(this, r);
      return (n.cache = o.set(a, u) || o), u;
    };
    return (n.cache = new (Nw.Cache || ic)()), n;
  }
  Nw.Cache = ic;
  var mB = 500;
  function vB(t) {
    var e = Nw(t, function (r) {
        return n.size === mB && n.clear(), r;
      }),
      n = e.cache;
    return e;
  }
  var yB =
      /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
    xB = /\\(\\)?/g,
    bB = vB(function (t) {
      var e = [];
      return (
        t.charCodeAt(0) === 46 && e.push(""),
        t.replace(yB, function (n, r, a, o) {
          e.push(a ? o.replace(xB, "$1") : r || n);
        }),
        e
      );
    });
  const wB = bB;
  var _B = 1 / 0;
  function SB(t) {
    if (typeof t == "string" || Ow(t)) return t;
    var e = t + "";
    return e == "0" && 1 / t == -_B ? "-0" : e;
  }
  var EB = 1 / 0,
    jE = Yl ? Yl.prototype : void 0,
    FE = jE ? jE.toString : void 0;
  function HI(t) {
    if (typeof t == "string") return t;
    if ($f(t)) return BI(t, HI) + "";
    if (Ow(t)) return FE ? FE.call(t) : "";
    var e = t + "";
    return e == "0" && 1 / t == -EB ? "-0" : e;
  }
  function kB(t) {
    return t == null ? "" : HI(t);
  }
  function WI(t) {
    return $f(t) ? BI(t, SB) : Ow(t) ? [t] : LI(wB(kB(t)));
  }
  var UI = { exports: {} },
    Jn = {};
  /** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */ var xi = typeof Symbol == "function" && Symbol.for,
    Lw = xi ? Symbol.for("react.element") : 60103,
    Dw = xi ? Symbol.for("react.portal") : 60106,
    rv = xi ? Symbol.for("react.fragment") : 60107,
    iv = xi ? Symbol.for("react.strict_mode") : 60108,
    sv = xi ? Symbol.for("react.profiler") : 60114,
    av = xi ? Symbol.for("react.provider") : 60109,
    ov = xi ? Symbol.for("react.context") : 60110,
    Mw = xi ? Symbol.for("react.async_mode") : 60111,
    lv = xi ? Symbol.for("react.concurrent_mode") : 60111,
    cv = xi ? Symbol.for("react.forward_ref") : 60112,
    uv = xi ? Symbol.for("react.suspense") : 60113,
    AB = xi ? Symbol.for("react.suspense_list") : 60120,
    hv = xi ? Symbol.for("react.memo") : 60115,
    dv = xi ? Symbol.for("react.lazy") : 60116,
    CB = xi ? Symbol.for("react.block") : 60121,
    TB = xi ? Symbol.for("react.fundamental") : 60117,
    IB = xi ? Symbol.for("react.responder") : 60118,
    PB = xi ? Symbol.for("react.scope") : 60119;
  function Gs(t) {
    if (typeof t == "object" && t !== null) {
      var e = t.$$typeof;
      switch (e) {
        case Lw:
          switch (((t = t.type), t)) {
            case Mw:
            case lv:
            case rv:
            case sv:
            case iv:
            case uv:
              return t;
            default:
              switch (((t = t && t.$$typeof), t)) {
                case ov:
                case cv:
                case dv:
                case hv:
                case av:
                  return t;
                default:
                  return e;
              }
          }
        case Dw:
          return e;
      }
    }
  }
  function XI(t) {
    return Gs(t) === lv;
  }
  Jn.AsyncMode = Mw;
  Jn.ConcurrentMode = lv;
  Jn.ContextConsumer = ov;
  Jn.ContextProvider = av;
  Jn.Element = Lw;
  Jn.ForwardRef = cv;
  Jn.Fragment = rv;
  Jn.Lazy = dv;
  Jn.Memo = hv;
  Jn.Portal = Dw;
  Jn.Profiler = sv;
  Jn.StrictMode = iv;
  Jn.Suspense = uv;
  Jn.isAsyncMode = function (t) {
    return XI(t) || Gs(t) === Mw;
  };
  Jn.isConcurrentMode = XI;
  Jn.isContextConsumer = function (t) {
    return Gs(t) === ov;
  };
  Jn.isContextProvider = function (t) {
    return Gs(t) === av;
  };
  Jn.isElement = function (t) {
    return typeof t == "object" && t !== null && t.$$typeof === Lw;
  };
  Jn.isForwardRef = function (t) {
    return Gs(t) === cv;
  };
  Jn.isFragment = function (t) {
    return Gs(t) === rv;
  };
  Jn.isLazy = function (t) {
    return Gs(t) === dv;
  };
  Jn.isMemo = function (t) {
    return Gs(t) === hv;
  };
  Jn.isPortal = function (t) {
    return Gs(t) === Dw;
  };
  Jn.isProfiler = function (t) {
    return Gs(t) === sv;
  };
  Jn.isStrictMode = function (t) {
    return Gs(t) === iv;
  };
  Jn.isSuspense = function (t) {
    return Gs(t) === uv;
  };
  Jn.isValidElementType = function (t) {
    return (
      typeof t == "string" ||
      typeof t == "function" ||
      t === rv ||
      t === lv ||
      t === sv ||
      t === iv ||
      t === uv ||
      t === AB ||
      (typeof t == "object" &&
        t !== null &&
        (t.$$typeof === dv ||
          t.$$typeof === hv ||
          t.$$typeof === av ||
          t.$$typeof === ov ||
          t.$$typeof === cv ||
          t.$$typeof === TB ||
          t.$$typeof === IB ||
          t.$$typeof === PB ||
          t.$$typeof === CB))
    );
  };
  Jn.typeOf = Gs;
  UI.exports = Jn;
  var jw = UI.exports,
    Fw = jw,
    RB = {
      childContextTypes: !0,
      contextType: !0,
      contextTypes: !0,
      defaultProps: !0,
      displayName: !0,
      getDefaultProps: !0,
      getDerivedStateFromError: !0,
      getDerivedStateFromProps: !0,
      mixins: !0,
      propTypes: !0,
      type: !0,
    },
    OB = {
      name: !0,
      length: !0,
      prototype: !0,
      caller: !0,
      callee: !0,
      arguments: !0,
      arity: !0,
    },
    NB = {
      $$typeof: !0,
      render: !0,
      defaultProps: !0,
      displayName: !0,
      propTypes: !0,
    },
    YI = {
      $$typeof: !0,
      compare: !0,
      defaultProps: !0,
      displayName: !0,
      propTypes: !0,
      type: !0,
    },
    zw = {};
  zw[Fw.ForwardRef] = NB;
  zw[Fw.Memo] = YI;
  function zE(t) {
    return Fw.isMemo(t) ? YI : zw[t.$$typeof] || RB;
  }
  var LB = Object.defineProperty,
    DB = Object.getOwnPropertyNames,
    VE = Object.getOwnPropertySymbols,
    MB = Object.getOwnPropertyDescriptor,
    jB = Object.getPrototypeOf,
    $E = Object.prototype;
  function GI(t, e, n) {
    if (typeof e != "string") {
      if ($E) {
        var r = jB(e);
        r && r !== $E && GI(t, r, n);
      }
      var a = DB(e);
      VE && (a = a.concat(VE(e)));
      for (var o = zE(t), u = zE(e), g = 0; g < a.length; ++g) {
        var x = a[g];
        if (!OB[x] && !(n && n[x]) && !(u && u[x]) && !(o && o[x])) {
          var E = MB(e, x);
          try {
            LB(t, x, E);
          } catch {}
        }
      }
    }
    return t;
  }
  var FB = GI;
  const Vw = nu(FB);
  var zB = 1,
    VB = 4;
  function $B(t) {
    return Dd(t, zB | VB);
  }
  function En() {
    return (
      (En =
        Object.assign ||
        function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
      En.apply(this, arguments)
    );
  }
  function fv(t, e) {
    (t.prototype = Object.create(e.prototype)),
      (t.prototype.constructor = t),
      (t.__proto__ = e);
  }
  function Cs(t, e) {
    if (t == null) return {};
    var n = {},
      r = Object.keys(t),
      a,
      o;
    for (o = 0; o < r.length; o++)
      (a = r[o]), !(e.indexOf(a) >= 0) && (n[a] = t[a]);
    return n;
  }
  function BE(t) {
    if (t === void 0)
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called"
      );
    return t;
  }
  var Bf = ue.createContext(void 0);
  Bf.displayName = "FormikContext";
  var qI = Bf.Provider,
    KI = Bf.Consumer;
  function pv() {
    var t = ue.useContext(Bf);
    return t || xl(!1), t;
  }
  var Pb = function (e) {
      return Array.isArray(e) && e.length === 0;
    },
    Or = function (e) {
      return typeof e == "function";
    },
    Wo = function (e) {
      return e !== null && typeof e == "object";
    },
    QI = function (e) {
      return String(Math.floor(Number(e))) === e;
    },
    wg = function (e) {
      return Object.prototype.toString.call(e) === "[object String]";
    },
    BB = function (e) {
      return e !== e;
    },
    gv = function (e) {
      return ue.Children.count(e) === 0;
    },
    _g = function (e) {
      return Wo(e) && Or(e.then);
    },
    HB = function (e) {
      return e && Wo(e) && Wo(e.target);
    };
  function WB(t) {
    if (
      ((t = t || (typeof document < "u" ? document : void 0)), typeof t > "u")
    )
      return null;
    try {
      return t.activeElement || t.body;
    } catch {
      return t.body;
    }
  }
  function kn(t, e, n, r) {
    r === void 0 && (r = 0);
    for (var a = WI(e); t && r < a.length; ) t = t[a[r++]];
    return (r !== a.length && !t) || t === void 0 ? n : t;
  }
  function Aa(t, e, n) {
    for (var r = ME(t), a = r, o = 0, u = WI(e); o < u.length - 1; o++) {
      var g = u[o],
        x = kn(t, u.slice(0, o + 1));
      if (x && (Wo(x) || Array.isArray(x))) a = a[g] = ME(x);
      else {
        var E = u[o + 1];
        a = a[g] = QI(E) && Number(E) >= 0 ? [] : {};
      }
    }
    return (o === 0 ? t : a)[u[o]] === n
      ? t
      : (n === void 0 ? delete a[u[o]] : (a[u[o]] = n),
        o === 0 && n === void 0 && delete r[u[o]],
        r);
  }
  function $w(t, e, n, r) {
    n === void 0 && (n = new WeakMap()), r === void 0 && (r = {});
    for (var a = 0, o = Object.keys(t); a < o.length; a++) {
      var u = o[a],
        g = t[u];
      Wo(g)
        ? n.get(g) ||
          (n.set(g, !0), (r[u] = Array.isArray(g) ? [] : {}), $w(g, e, n, r[u]))
        : (r[u] = e);
    }
    return r;
  }
  function UB(t, e) {
    switch (e.type) {
      case "SET_VALUES":
        return En({}, t, { values: e.payload });
      case "SET_TOUCHED":
        return En({}, t, { touched: e.payload });
      case "SET_ERRORS":
        return gl(t.errors, e.payload) ? t : En({}, t, { errors: e.payload });
      case "SET_STATUS":
        return En({}, t, { status: e.payload });
      case "SET_ISSUBMITTING":
        return En({}, t, { isSubmitting: e.payload });
      case "SET_ISVALIDATING":
        return En({}, t, { isValidating: e.payload });
      case "SET_FIELD_VALUE":
        return En({}, t, {
          values: Aa(t.values, e.payload.field, e.payload.value),
        });
      case "SET_FIELD_TOUCHED":
        return En({}, t, {
          touched: Aa(t.touched, e.payload.field, e.payload.value),
        });
      case "SET_FIELD_ERROR":
        return En({}, t, {
          errors: Aa(t.errors, e.payload.field, e.payload.value),
        });
      case "RESET_FORM":
        return En({}, t, e.payload);
      case "SET_FORMIK_STATE":
        return e.payload(t);
      case "SUBMIT_ATTEMPT":
        return En({}, t, {
          touched: $w(t.values, !0),
          isSubmitting: !0,
          submitCount: t.submitCount + 1,
        });
      case "SUBMIT_FAILURE":
        return En({}, t, { isSubmitting: !1 });
      case "SUBMIT_SUCCESS":
        return En({}, t, { isSubmitting: !1 });
      default:
        return t;
    }
  }
  var bc = {},
    Up = {};
  function ZI(t) {
    var e = t.validateOnChange,
      n = e === void 0 ? !0 : e,
      r = t.validateOnBlur,
      a = r === void 0 ? !0 : r,
      o = t.validateOnMount,
      u = o === void 0 ? !1 : o,
      g = t.isInitialValid,
      x = t.enableReinitialize,
      E = x === void 0 ? !1 : x,
      L = t.onSubmit,
      z = Cs(t, [
        "validateOnChange",
        "validateOnBlur",
        "validateOnMount",
        "isInitialValid",
        "enableReinitialize",
        "onSubmit",
      ]),
      B = En(
        {
          validateOnChange: n,
          validateOnBlur: a,
          validateOnMount: u,
          onSubmit: L,
        },
        z
      ),
      ae = ue.useRef(B.initialValues),
      se = ue.useRef(B.initialErrors || bc),
      le = ue.useRef(B.initialTouched || Up),
      he = ue.useRef(B.initialStatus),
      oe = ue.useRef(!1),
      F = ue.useRef({});
    ue.useEffect(function () {
      return (
        (oe.current = !0),
        function () {
          oe.current = !1;
        }
      );
    }, []);
    var ce = ue.useState(0),
      ye = ce[1],
      C = ue.useRef({
        values: B.initialValues,
        errors: B.initialErrors || bc,
        touched: B.initialTouched || Up,
        status: B.initialStatus,
        isSubmitting: !1,
        isValidating: !1,
        submitCount: 0,
      }),
      ke = C.current,
      je = ue.useCallback(function (Te) {
        var st = C.current;
        (C.current = UB(st, Te)),
          st !== C.current &&
            ye(function (Ge) {
              return Ge + 1;
            });
      }, []),
      tt = ue.useCallback(
        function (Te, st) {
          return new Promise(function (Ge, qe) {
            var Dt = B.validate(Te, st);
            Dt == null
              ? Ge(bc)
              : _g(Dt)
              ? Dt.then(
                  function (nn) {
                    Ge(nn || bc);
                  },
                  function (nn) {
                    qe(nn);
                  }
                )
              : Ge(Dt);
          });
        },
        [B.validate]
      ),
      Ct = ue.useCallback(
        function (Te, st) {
          var Ge = B.validationSchema,
            qe = Or(Ge) ? Ge(st) : Ge,
            Dt = st && qe.validateAt ? qe.validateAt(st, Te) : tP(Te, qe);
          return new Promise(function (nn, fn) {
            Dt.then(
              function () {
                nn(bc);
              },
              function (_r) {
                _r.name === "ValidationError" ? nn(eP(_r)) : fn(_r);
              }
            );
          });
        },
        [B.validationSchema]
      ),
      xt = ue.useCallback(function (Te, st) {
        return new Promise(function (Ge) {
          return Ge(F.current[Te].validate(st));
        });
      }, []),
      pt = ue.useCallback(
        function (Te) {
          var st = Object.keys(F.current).filter(function (qe) {
              return Or(F.current[qe].validate);
            }),
            Ge =
              st.length > 0
                ? st.map(function (qe) {
                    return xt(qe, kn(Te, qe));
                  })
                : [Promise.resolve("DO_NOT_DELETE_YOU_WILL_BE_FIRED")];
          return Promise.all(Ge).then(function (qe) {
            return qe.reduce(function (Dt, nn, fn) {
              return (
                nn === "DO_NOT_DELETE_YOU_WILL_BE_FIRED" ||
                  (nn && (Dt = Aa(Dt, st[fn], nn))),
                Dt
              );
            }, {});
          });
        },
        [xt]
      ),
      Mt = ue.useCallback(
        function (Te) {
          return Promise.all([
            pt(Te),
            B.validationSchema ? Ct(Te) : {},
            B.validate ? tt(Te) : {},
          ]).then(function (st) {
            var Ge = st[0],
              qe = st[1],
              Dt = st[2],
              nn = Eb.all([Ge, qe, Dt], { arrayMerge: XB });
            return nn;
          });
        },
        [B.validate, B.validationSchema, pt, tt, Ct]
      ),
      Vt = ea(function (Te) {
        return (
          Te === void 0 && (Te = ke.values),
          je({ type: "SET_ISVALIDATING", payload: !0 }),
          Mt(Te).then(function (st) {
            return (
              oe.current &&
                (je({ type: "SET_ISVALIDATING", payload: !1 }),
                je({ type: "SET_ERRORS", payload: st })),
              st
            );
          })
        );
      });
    ue.useEffect(
      function () {
        u &&
          oe.current === !0 &&
          gl(ae.current, B.initialValues) &&
          Vt(ae.current);
      },
      [u, Vt]
    );
    var It = ue.useCallback(
      function (Te) {
        var st = Te && Te.values ? Te.values : ae.current,
          Ge =
            Te && Te.errors
              ? Te.errors
              : se.current
              ? se.current
              : B.initialErrors || {},
          qe =
            Te && Te.touched
              ? Te.touched
              : le.current
              ? le.current
              : B.initialTouched || {},
          Dt =
            Te && Te.status
              ? Te.status
              : he.current
              ? he.current
              : B.initialStatus;
        (ae.current = st),
          (se.current = Ge),
          (le.current = qe),
          (he.current = Dt);
        var nn = function () {
          je({
            type: "RESET_FORM",
            payload: {
              isSubmitting: !!Te && !!Te.isSubmitting,
              errors: Ge,
              touched: qe,
              status: Dt,
              values: st,
              isValidating: !!Te && !!Te.isValidating,
              submitCount:
                Te && Te.submitCount && typeof Te.submitCount == "number"
                  ? Te.submitCount
                  : 0,
            },
          });
        };
        if (B.onReset) {
          var fn = B.onReset(ke.values, sn);
          _g(fn) ? fn.then(nn) : nn();
        } else nn();
      },
      [B.initialErrors, B.initialStatus, B.initialTouched, B.onReset]
    );
    ue.useEffect(
      function () {
        oe.current === !0 &&
          !gl(ae.current, B.initialValues) &&
          E &&
          ((ae.current = B.initialValues), It(), u && Vt(ae.current));
      },
      [E, B.initialValues, It, u, Vt]
    ),
      ue.useEffect(
        function () {
          E &&
            oe.current === !0 &&
            !gl(se.current, B.initialErrors) &&
            ((se.current = B.initialErrors || bc),
            je({ type: "SET_ERRORS", payload: B.initialErrors || bc }));
        },
        [E, B.initialErrors]
      ),
      ue.useEffect(
        function () {
          E &&
            oe.current === !0 &&
            !gl(le.current, B.initialTouched) &&
            ((le.current = B.initialTouched || Up),
            je({ type: "SET_TOUCHED", payload: B.initialTouched || Up }));
        },
        [E, B.initialTouched]
      ),
      ue.useEffect(
        function () {
          E &&
            oe.current === !0 &&
            !gl(he.current, B.initialStatus) &&
            ((he.current = B.initialStatus),
            je({ type: "SET_STATUS", payload: B.initialStatus }));
        },
        [E, B.initialStatus, B.initialTouched]
      );
    var ht = ea(function (Te) {
        if (F.current[Te] && Or(F.current[Te].validate)) {
          var st = kn(ke.values, Te),
            Ge = F.current[Te].validate(st);
          return _g(Ge)
            ? (je({ type: "SET_ISVALIDATING", payload: !0 }),
              Ge.then(function (qe) {
                return qe;
              }).then(function (qe) {
                je({
                  type: "SET_FIELD_ERROR",
                  payload: { field: Te, value: qe },
                }),
                  je({ type: "SET_ISVALIDATING", payload: !1 });
              }))
            : (je({
                type: "SET_FIELD_ERROR",
                payload: { field: Te, value: Ge },
              }),
              Promise.resolve(Ge));
        } else if (B.validationSchema)
          return (
            je({ type: "SET_ISVALIDATING", payload: !0 }),
            Ct(ke.values, Te)
              .then(function (qe) {
                return qe;
              })
              .then(function (qe) {
                je({
                  type: "SET_FIELD_ERROR",
                  payload: { field: Te, value: kn(qe, Te) },
                }),
                  je({ type: "SET_ISVALIDATING", payload: !1 });
              })
          );
        return Promise.resolve();
      }),
      Ie = ue.useCallback(function (Te, st) {
        var Ge = st.validate;
        F.current[Te] = { validate: Ge };
      }, []),
      Lt = ue.useCallback(function (Te) {
        delete F.current[Te];
      }, []),
      we = ea(function (Te, st) {
        je({ type: "SET_TOUCHED", payload: Te });
        var Ge = st === void 0 ? a : st;
        return Ge ? Vt(ke.values) : Promise.resolve();
      }),
      Xe = ue.useCallback(function (Te) {
        je({ type: "SET_ERRORS", payload: Te });
      }, []),
      Oe = ea(function (Te, st) {
        var Ge = Or(Te) ? Te(ke.values) : Te;
        je({ type: "SET_VALUES", payload: Ge });
        var qe = st === void 0 ? n : st;
        return qe ? Vt(Ge) : Promise.resolve();
      }),
      Ye = ue.useCallback(function (Te, st) {
        je({ type: "SET_FIELD_ERROR", payload: { field: Te, value: st } });
      }, []),
      Re = ea(function (Te, st, Ge) {
        je({ type: "SET_FIELD_VALUE", payload: { field: Te, value: st } });
        var qe = Ge === void 0 ? n : Ge;
        return qe ? Vt(Aa(ke.values, Te, st)) : Promise.resolve();
      }),
      $e = ue.useCallback(
        function (Te, st) {
          var Ge = st,
            qe = Te,
            Dt;
          if (!wg(Te)) {
            Te.persist && Te.persist();
            var nn = Te.target ? Te.target : Te.currentTarget,
              fn = nn.type,
              _r = nn.name,
              $r = nn.id,
              ui = nn.value,
              mr = nn.checked,
              Vn = nn.outerHTML,
              An = nn.options,
              hr = nn.multiple;
            (Ge = st || _r || $r),
              (qe = /number|range/.test(fn)
                ? ((Dt = parseFloat(ui)), isNaN(Dt) ? "" : Dt)
                : /checkbox/.test(fn)
                ? GB(kn(ke.values, Ge), mr, ui)
                : An && hr
                ? YB(An)
                : ui);
          }
          Ge && Re(Ge, qe);
        },
        [Re, ke.values]
      ),
      Fe = ea(function (Te) {
        if (wg(Te))
          return function (st) {
            return $e(st, Te);
          };
        $e(Te);
      }),
      ct = ea(function (Te, st, Ge) {
        st === void 0 && (st = !0),
          je({ type: "SET_FIELD_TOUCHED", payload: { field: Te, value: st } });
        var qe = Ge === void 0 ? a : Ge;
        return qe ? Vt(ke.values) : Promise.resolve();
      }),
      de = ue.useCallback(
        function (Te, st) {
          Te.persist && Te.persist();
          var Ge = Te.target,
            qe = Ge.name,
            Dt = Ge.id,
            nn = Ge.outerHTML,
            fn = st || qe || Dt;
          ct(fn, !0);
        },
        [ct]
      ),
      yt = ea(function (Te) {
        if (wg(Te))
          return function (st) {
            return de(st, Te);
          };
        de(Te);
      }),
      Ze = ue.useCallback(function (Te) {
        Or(Te)
          ? je({ type: "SET_FORMIK_STATE", payload: Te })
          : je({
              type: "SET_FORMIK_STATE",
              payload: function () {
                return Te;
              },
            });
      }, []),
      Zt = ue.useCallback(function (Te) {
        je({ type: "SET_STATUS", payload: Te });
      }, []),
      Wt = ue.useCallback(function (Te) {
        je({ type: "SET_ISSUBMITTING", payload: Te });
      }, []),
      $t = ea(function () {
        return (
          je({ type: "SUBMIT_ATTEMPT" }),
          Vt().then(function (Te) {
            var st = Te instanceof Error,
              Ge = !st && Object.keys(Te).length === 0;
            if (Ge) {
              var qe;
              try {
                if (((qe = dt()), qe === void 0)) return;
              } catch (Dt) {
                throw Dt;
              }
              return Promise.resolve(qe)
                .then(function (Dt) {
                  return oe.current && je({ type: "SUBMIT_SUCCESS" }), Dt;
                })
                .catch(function (Dt) {
                  if (oe.current) throw (je({ type: "SUBMIT_FAILURE" }), Dt);
                });
            } else if (oe.current && (je({ type: "SUBMIT_FAILURE" }), st))
              throw Te;
          })
        );
      }),
      Rt = ea(function (Te) {
        Te && Te.preventDefault && Or(Te.preventDefault) && Te.preventDefault(),
          Te &&
            Te.stopPropagation &&
            Or(Te.stopPropagation) &&
            Te.stopPropagation(),
          $t().catch(function (st) {
            console.warn(
              "Warning: An unhandled error was caught from submitForm()",
              st
            );
          });
      }),
      sn = {
        resetForm: It,
        validateForm: Vt,
        validateField: ht,
        setErrors: Xe,
        setFieldError: Ye,
        setFieldTouched: ct,
        setFieldValue: Re,
        setStatus: Zt,
        setSubmitting: Wt,
        setTouched: we,
        setValues: Oe,
        setFormikState: Ze,
        submitForm: $t,
      },
      dt = ea(function () {
        return L(ke.values, sn);
      }),
      gt = ea(function (Te) {
        Te && Te.preventDefault && Or(Te.preventDefault) && Te.preventDefault(),
          Te &&
            Te.stopPropagation &&
            Or(Te.stopPropagation) &&
            Te.stopPropagation(),
          It();
      }),
      mn = ue.useCallback(
        function (Te) {
          return {
            value: kn(ke.values, Te),
            error: kn(ke.errors, Te),
            touched: !!kn(ke.touched, Te),
            initialValue: kn(ae.current, Te),
            initialTouched: !!kn(le.current, Te),
            initialError: kn(se.current, Te),
          };
        },
        [ke.errors, ke.touched, ke.values]
      ),
      Jt = ue.useCallback(
        function (Te) {
          return {
            setValue: function (Ge, qe) {
              return Re(Te, Ge, qe);
            },
            setTouched: function (Ge, qe) {
              return ct(Te, Ge, qe);
            },
            setError: function (Ge) {
              return Ye(Te, Ge);
            },
          };
        },
        [Re, ct, Ye]
      ),
      Rn = ue.useCallback(
        function (Te) {
          var st = Wo(Te),
            Ge = st ? Te.name : Te,
            qe = kn(ke.values, Ge),
            Dt = { name: Ge, value: qe, onChange: Fe, onBlur: yt };
          if (st) {
            var nn = Te.type,
              fn = Te.value,
              _r = Te.as,
              $r = Te.multiple;
            nn === "checkbox"
              ? fn === void 0
                ? (Dt.checked = !!qe)
                : ((Dt.checked = !!(Array.isArray(qe) && ~qe.indexOf(fn))),
                  (Dt.value = fn))
              : nn === "radio"
              ? ((Dt.checked = qe === fn), (Dt.value = fn))
              : _r === "select" &&
                $r &&
                ((Dt.value = Dt.value || []), (Dt.multiple = !0));
          }
          return Dt;
        },
        [yt, Fe, ke.values]
      ),
      jr = ue.useMemo(
        function () {
          return !gl(ae.current, ke.values);
        },
        [ae.current, ke.values]
      ),
      vn = ue.useMemo(
        function () {
          return typeof g < "u"
            ? jr
              ? ke.errors && Object.keys(ke.errors).length === 0
              : g !== !1 && Or(g)
              ? g(B)
              : g
            : ke.errors && Object.keys(ke.errors).length === 0;
        },
        [g, jr, ke.errors, B]
      ),
      zn = En({}, ke, {
        initialValues: ae.current,
        initialErrors: se.current,
        initialTouched: le.current,
        initialStatus: he.current,
        handleBlur: yt,
        handleChange: Fe,
        handleReset: gt,
        handleSubmit: Rt,
        resetForm: It,
        setErrors: Xe,
        setFormikState: Ze,
        setFieldTouched: ct,
        setFieldValue: Re,
        setFieldError: Ye,
        setStatus: Zt,
        setSubmitting: Wt,
        setTouched: we,
        setValues: Oe,
        submitForm: $t,
        validateForm: Vt,
        validateField: ht,
        isValid: vn,
        dirty: jr,
        unregisterField: Lt,
        registerField: Ie,
        getFieldProps: Rn,
        getFieldMeta: mn,
        getFieldHelpers: Jt,
        validateOnBlur: a,
        validateOnChange: n,
        validateOnMount: u,
      });
    return zn;
  }
  function JI(t) {
    var e = ZI(t),
      n = t.component,
      r = t.children,
      a = t.render,
      o = t.innerRef;
    return (
      ue.useImperativeHandle(o, function () {
        return e;
      }),
      ue.createElement(
        qI,
        { value: e },
        n
          ? ue.createElement(n, e)
          : a
          ? a(e)
          : r
          ? Or(r)
            ? r(e)
            : gv(r)
            ? null
            : ue.Children.only(r)
          : null
      )
    );
  }
  function eP(t) {
    var e = {};
    if (t.inner) {
      if (t.inner.length === 0) return Aa(e, t.path, t.message);
      for (
        var a = t.inner,
          n = Array.isArray(a),
          r = 0,
          a = n ? a : a[Symbol.iterator]();
        ;

      ) {
        var o;
        if (n) {
          if (r >= a.length) break;
          o = a[r++];
        } else {
          if (((r = a.next()), r.done)) break;
          o = r.value;
        }
        var u = o;
        kn(e, u.path) || (e = Aa(e, u.path, u.message));
      }
    }
    return e;
  }
  function tP(t, e, n, r) {
    n === void 0 && (n = !1);
    var a = cm(t);
    return e[n ? "validateSync" : "validate"](a, {
      abortEarly: !1,
      context: r || a,
    });
  }
  function cm(t) {
    var e = Array.isArray(t) ? [] : {};
    for (var n in t)
      if (Object.prototype.hasOwnProperty.call(t, n)) {
        var r = String(n);
        Array.isArray(t[r]) === !0
          ? (e[r] = t[r].map(function (a) {
              return Array.isArray(a) === !0 || dE(a)
                ? cm(a)
                : a !== ""
                ? a
                : void 0;
            }))
          : dE(t[r])
          ? (e[r] = cm(t[r]))
          : (e[r] = t[r] !== "" ? t[r] : void 0);
      }
    return e;
  }
  function XB(t, e, n) {
    var r = t.slice();
    return (
      e.forEach(function (o, u) {
        if (typeof r[u] > "u") {
          var g = n.clone !== !1,
            x = g && n.isMergeableObject(o);
          r[u] = x ? Eb(Array.isArray(o) ? [] : {}, o, n) : o;
        } else n.isMergeableObject(o) ? (r[u] = Eb(t[u], o, n)) : t.indexOf(o) === -1 && r.push(o);
      }),
      r
    );
  }
  function YB(t) {
    return Array.from(t)
      .filter(function (e) {
        return e.selected;
      })
      .map(function (e) {
        return e.value;
      });
  }
  function GB(t, e, n) {
    if (typeof t == "boolean") return !!e;
    var r = [],
      a = !1,
      o = -1;
    if (Array.isArray(t)) (r = t), (o = t.indexOf(n)), (a = o >= 0);
    else if (!n || n == "true" || n == "false") return !!e;
    return e && n && !a
      ? r.concat(n)
      : a
      ? r.slice(0, o).concat(r.slice(o + 1))
      : r;
  }
  var qB =
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u"
      ? ue.useLayoutEffect
      : ue.useEffect;
  function ea(t) {
    var e = ue.useRef(t);
    return (
      qB(function () {
        e.current = t;
      }),
      ue.useCallback(function () {
        for (var n = arguments.length, r = new Array(n), a = 0; a < n; a++)
          r[a] = arguments[a];
        return e.current.apply(void 0, r);
      }, [])
    );
  }
  function KB(t) {
    var e = pv(),
      n = e.getFieldProps,
      r = e.getFieldMeta,
      a = e.getFieldHelpers,
      o = e.registerField,
      u = e.unregisterField,
      g = Wo(t),
      x = g ? t : { name: t },
      E = x.name,
      L = x.validate;
    ue.useEffect(
      function () {
        return (
          E && o(E, { validate: L }),
          function () {
            E && u(E);
          }
        );
      },
      [o, u, E, L]
    ),
      E || xl(!1);
    var z = ue.useMemo(
      function () {
        return a(E);
      },
      [a, E]
    );
    return [n(x), r(E), z];
  }
  function QB(t) {
    var e = t.validate,
      n = t.name,
      r = t.render,
      a = t.children,
      o = t.as,
      u = t.component,
      g = t.className,
      x = Cs(t, [
        "validate",
        "name",
        "render",
        "children",
        "as",
        "component",
        "className",
      ]),
      E = pv(),
      L = Cs(E, ["validate", "validationSchema"]),
      z = L.registerField,
      B = L.unregisterField;
    ue.useEffect(
      function () {
        return (
          z(n, { validate: e }),
          function () {
            B(n);
          }
        );
      },
      [z, B, n, e]
    );
    var ae = L.getFieldProps(En({ name: n }, x)),
      se = L.getFieldMeta(n),
      le = { field: ae, form: L };
    if (r) return r(En({}, le, { meta: se }));
    if (Or(a)) return a(En({}, le, { meta: se }));
    if (u) {
      if (typeof u == "string") {
        var he = x.innerRef,
          oe = Cs(x, ["innerRef"]);
        return ue.createElement(
          u,
          En({ ref: he }, ae, oe, { className: g }),
          a
        );
      }
      return ue.createElement(
        u,
        En({ field: ae, form: L }, x, { className: g }),
        a
      );
    }
    var F = o || "input";
    if (typeof F == "string") {
      var ce = x.innerRef,
        ye = Cs(x, ["innerRef"]);
      return ue.createElement(F, En({ ref: ce }, ae, ye, { className: g }), a);
    }
    return ue.createElement(F, En({}, ae, x, { className: g }), a);
  }
  var nP = ue.forwardRef(function (t, e) {
    var n = t.action,
      r = Cs(t, ["action"]),
      a = n ?? "#",
      o = pv(),
      u = o.handleReset,
      g = o.handleSubmit;
    return ue.createElement(
      "form",
      En({ onSubmit: g, ref: e, onReset: u, action: a }, r)
    );
  });
  nP.displayName = "Form";
  function ZB(t) {
    var e = t.mapPropsToValues,
      n =
        e === void 0
          ? function (a) {
              var o = {};
              for (var u in a)
                a.hasOwnProperty(u) &&
                  typeof a[u] != "function" &&
                  (o[u] = a[u]);
              return o;
            }
          : e,
      r = Cs(t, ["mapPropsToValues"]);
    return function (o) {
      var u =
          o.displayName ||
          o.name ||
          (o.constructor && o.constructor.name) ||
          "Component",
        g = (function (x) {
          fv(E, x);
          function E() {
            for (
              var z, B = arguments.length, ae = new Array(B), se = 0;
              se < B;
              se++
            )
              ae[se] = arguments[se];
            return (
              (z = x.call.apply(x, [this].concat(ae)) || this),
              (z.validate = function (le) {
                return r.validate(le, z.props);
              }),
              (z.validationSchema = function () {
                return Or(r.validationSchema)
                  ? r.validationSchema(z.props)
                  : r.validationSchema;
              }),
              (z.handleSubmit = function (le, he) {
                return r.handleSubmit(le, En({}, he, { props: z.props }));
              }),
              (z.renderFormComponent = function (le) {
                return ue.createElement(o, En({}, z.props, le));
              }),
              z
            );
          }
          var L = E.prototype;
          return (
            (L.render = function () {
              var B = this.props,
                ae = Cs(B, ["children"]);
              return ue.createElement(
                JI,
                En({}, ae, r, {
                  validate: r.validate && this.validate,
                  validationSchema: r.validationSchema && this.validationSchema,
                  initialValues: n(this.props),
                  initialStatus:
                    r.mapPropsToStatus && r.mapPropsToStatus(this.props),
                  initialErrors:
                    r.mapPropsToErrors && r.mapPropsToErrors(this.props),
                  initialTouched:
                    r.mapPropsToTouched && r.mapPropsToTouched(this.props),
                  onSubmit: this.handleSubmit,
                  children: this.renderFormComponent,
                })
              );
            }),
            E
          );
        })(ue.Component);
      return (g.displayName = "WithFormik(" + u + ")"), Vw(g, o);
    };
  }
  function mv(t) {
    var e = function (a) {
        return ue.createElement(KI, null, function (o) {
          return o || xl(!1), ue.createElement(t, En({}, a, { formik: o }));
        });
      },
      n =
        t.displayName ||
        t.name ||
        (t.constructor && t.constructor.name) ||
        "Component";
    return (
      (e.WrappedComponent = t),
      (e.displayName = "FormikConnect(" + n + ")"),
      Vw(e, t)
    );
  }
  var rP = function (e, n, r) {
      var a = Xc(e),
        o = a[n];
      return a.splice(n, 1), a.splice(r, 0, o), a;
    },
    iP = function (e, n, r) {
      var a = Xc(e),
        o = a[n];
      return (a[n] = a[r]), (a[r] = o), a;
    },
    Sg = function (e, n, r) {
      var a = Xc(e);
      return a.splice(n, 0, r), a;
    },
    sP = function (e, n, r) {
      var a = Xc(e);
      return (a[n] = r), a;
    },
    Xc = function (e) {
      if (e) {
        if (Array.isArray(e)) return [].concat(e);
        var n = Object.keys(e)
          .map(function (r) {
            return parseInt(r);
          })
          .reduce(function (r, a) {
            return a > r ? a : r;
          }, 0);
        return Array.from(En({}, e, { length: n + 1 }));
      } else return [];
    },
    HE = function (e, n) {
      var r = typeof e == "function" ? e : n;
      return function (a) {
        if (Array.isArray(a) || Wo(a)) {
          var o = Xc(a);
          return r(o);
        }
        return a;
      };
    },
    aP = (function (t) {
      fv(e, t);
      function e(r) {
        var a;
        return (
          (a = t.call(this, r) || this),
          (a.updateArrayField = function (o, u, g) {
            var x = a.props,
              E = x.name,
              L = x.formik.setFormikState;
            L(function (z) {
              var B = HE(g, o),
                ae = HE(u, o),
                se = Aa(z.values, E, o(kn(z.values, E))),
                le = g ? B(kn(z.errors, E)) : void 0,
                he = u ? ae(kn(z.touched, E)) : void 0;
              return (
                Pb(le) && (le = void 0),
                Pb(he) && (he = void 0),
                En({}, z, {
                  values: se,
                  errors: g ? Aa(z.errors, E, le) : z.errors,
                  touched: u ? Aa(z.touched, E, he) : z.touched,
                })
              );
            });
          }),
          (a.push = function (o) {
            return a.updateArrayField(
              function (u) {
                return [].concat(Xc(u), [$B(o)]);
              },
              !1,
              !1
            );
          }),
          (a.handlePush = function (o) {
            return function () {
              return a.push(o);
            };
          }),
          (a.swap = function (o, u) {
            return a.updateArrayField(
              function (g) {
                return iP(g, o, u);
              },
              !0,
              !0
            );
          }),
          (a.handleSwap = function (o, u) {
            return function () {
              return a.swap(o, u);
            };
          }),
          (a.move = function (o, u) {
            return a.updateArrayField(
              function (g) {
                return rP(g, o, u);
              },
              !0,
              !0
            );
          }),
          (a.handleMove = function (o, u) {
            return function () {
              return a.move(o, u);
            };
          }),
          (a.insert = function (o, u) {
            return a.updateArrayField(
              function (g) {
                return Sg(g, o, u);
              },
              function (g) {
                return Sg(g, o, null);
              },
              function (g) {
                return Sg(g, o, null);
              }
            );
          }),
          (a.handleInsert = function (o, u) {
            return function () {
              return a.insert(o, u);
            };
          }),
          (a.replace = function (o, u) {
            return a.updateArrayField(
              function (g) {
                return sP(g, o, u);
              },
              !1,
              !1
            );
          }),
          (a.handleReplace = function (o, u) {
            return function () {
              return a.replace(o, u);
            };
          }),
          (a.unshift = function (o) {
            var u = -1;
            return (
              a.updateArrayField(
                function (g) {
                  var x = g ? [o].concat(g) : [o];
                  return (u = x.length), x;
                },
                function (g) {
                  return g ? [null].concat(g) : [null];
                },
                function (g) {
                  return g ? [null].concat(g) : [null];
                }
              ),
              u
            );
          }),
          (a.handleUnshift = function (o) {
            return function () {
              return a.unshift(o);
            };
          }),
          (a.handleRemove = function (o) {
            return function () {
              return a.remove(o);
            };
          }),
          (a.handlePop = function () {
            return function () {
              return a.pop();
            };
          }),
          (a.remove = a.remove.bind(BE(a))),
          (a.pop = a.pop.bind(BE(a))),
          a
        );
      }
      var n = e.prototype;
      return (
        (n.componentDidUpdate = function (a) {
          this.props.validateOnChange &&
            this.props.formik.validateOnChange &&
            !gl(
              kn(a.formik.values, a.name),
              kn(this.props.formik.values, this.props.name)
            ) &&
            this.props.formik.validateForm(this.props.formik.values);
        }),
        (n.remove = function (a) {
          var o;
          return (
            this.updateArrayField(
              function (u) {
                var g = u ? Xc(u) : [];
                return (
                  o || (o = g[a]),
                  Or(g.splice) && g.splice(a, 1),
                  Or(g.every) &&
                  g.every(function (x) {
                    return x === void 0;
                  })
                    ? []
                    : g
                );
              },
              !0,
              !0
            ),
            o
          );
        }),
        (n.pop = function () {
          var a;
          return (
            this.updateArrayField(
              function (o) {
                var u = o.slice();
                return a || (a = u && u.pop && u.pop()), u;
              },
              !0,
              !0
            ),
            a
          );
        }),
        (n.render = function () {
          var a = {
              push: this.push,
              pop: this.pop,
              swap: this.swap,
              move: this.move,
              insert: this.insert,
              replace: this.replace,
              unshift: this.unshift,
              remove: this.remove,
              handlePush: this.handlePush,
              handlePop: this.handlePop,
              handleSwap: this.handleSwap,
              handleMove: this.handleMove,
              handleInsert: this.handleInsert,
              handleReplace: this.handleReplace,
              handleUnshift: this.handleUnshift,
              handleRemove: this.handleRemove,
            },
            o = this.props,
            u = o.component,
            g = o.render,
            x = o.children,
            E = o.name,
            L = o.formik,
            z = Cs(L, ["validate", "validationSchema"]),
            B = En({}, a, { form: z, name: E });
          return u
            ? ue.createElement(u, B)
            : g
            ? g(B)
            : x
            ? typeof x == "function"
              ? x(B)
              : gv(x)
              ? null
              : ue.Children.only(x)
            : null;
        }),
        e
      );
    })(ue.Component);
  aP.defaultProps = { validateOnChange: !0 };
  var JB = mv(aP),
    e4 = (function (t) {
      fv(e, t);
      function e() {
        return t.apply(this, arguments) || this;
      }
      var n = e.prototype;
      return (
        (n.shouldComponentUpdate = function (a) {
          return (
            kn(this.props.formik.errors, this.props.name) !==
              kn(a.formik.errors, this.props.name) ||
            kn(this.props.formik.touched, this.props.name) !==
              kn(a.formik.touched, this.props.name) ||
            Object.keys(this.props).length !== Object.keys(a).length
          );
        }),
        (n.render = function () {
          var a = this.props,
            o = a.component,
            u = a.formik,
            g = a.render,
            x = a.children,
            E = a.name,
            L = Cs(a, ["component", "formik", "render", "children", "name"]),
            z = kn(u.touched, E),
            B = kn(u.errors, E);
          return z && B
            ? g
              ? Or(g)
                ? g(B)
                : null
              : x
              ? Or(x)
                ? x(B)
                : null
              : o
              ? ue.createElement(o, L, B)
              : B
            : null;
        }),
        e
      );
    })(ue.Component),
    t4 = mv(e4),
    n4 = (function (t) {
      fv(e, t);
      function e(r) {
        var a;
        a = t.call(this, r) || this;
        var o = r.render,
          u = r.children,
          g = r.component,
          x = r.as;
        return (
          r.name,
          o && xl(!1),
          g && o && xl(!1),
          x && u && Or(u) && xl(!1),
          g && u && Or(u) && xl(!1),
          o && u && !gv(u) && xl(!1),
          a
        );
      }
      var n = e.prototype;
      return (
        (n.shouldComponentUpdate = function (a) {
          return this.props.shouldUpdate
            ? this.props.shouldUpdate(a, this.props)
            : a.name !== this.props.name ||
                kn(a.formik.values, this.props.name) !==
                  kn(this.props.formik.values, this.props.name) ||
                kn(a.formik.errors, this.props.name) !==
                  kn(this.props.formik.errors, this.props.name) ||
                kn(a.formik.touched, this.props.name) !==
                  kn(this.props.formik.touched, this.props.name) ||
                Object.keys(this.props).length !== Object.keys(a).length ||
                a.formik.isSubmitting !== this.props.formik.isSubmitting;
        }),
        (n.componentDidMount = function () {
          this.props.formik.registerField(this.props.name, {
            validate: this.props.validate,
          });
        }),
        (n.componentDidUpdate = function (a) {
          this.props.name !== a.name &&
            (this.props.formik.unregisterField(a.name),
            this.props.formik.registerField(this.props.name, {
              validate: this.props.validate,
            })),
            this.props.validate !== a.validate &&
              this.props.formik.registerField(this.props.name, {
                validate: this.props.validate,
              });
        }),
        (n.componentWillUnmount = function () {
          this.props.formik.unregisterField(this.props.name);
        }),
        (n.render = function () {
          var a = this.props,
            o = a.name,
            u = a.render,
            g = a.as,
            x = a.children,
            E = a.component,
            L = a.formik,
            z = Cs(a, [
              "validate",
              "name",
              "render",
              "as",
              "children",
              "component",
              "shouldUpdate",
              "formik",
            ]),
            B = Cs(L, ["validate", "validationSchema"]),
            ae = L.getFieldProps(En({ name: o }, z)),
            se = {
              value: kn(L.values, o),
              error: kn(L.errors, o),
              touched: !!kn(L.touched, o),
              initialValue: kn(L.initialValues, o),
              initialTouched: !!kn(L.initialTouched, o),
              initialError: kn(L.initialErrors, o),
            },
            le = { field: ae, meta: se, form: B };
          if (u) return u(le);
          if (Or(x)) return x(le);
          if (E) {
            if (typeof E == "string") {
              var he = z.innerRef,
                oe = Cs(z, ["innerRef"]);
              return ue.createElement(E, En({ ref: he }, ae, oe), x);
            }
            return ue.createElement(E, En({ field: ae, form: L }, z), x);
          }
          var F = g || "input";
          if (typeof F == "string") {
            var ce = z.innerRef,
              ye = Cs(z, ["innerRef"]);
            return ue.createElement(F, En({ ref: ce }, ae, ye), x);
          }
          return ue.createElement(F, En({}, ae, z), x);
        }),
        e
      );
    })(ue.Component),
    r4 = mv(n4);
  const vv = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        ErrorMessage: t4,
        FastField: r4,
        Field: QB,
        FieldArray: JB,
        Form: nP,
        Formik: JI,
        FormikConsumer: KI,
        FormikContext: Bf,
        FormikProvider: qI,
        connect: mv,
        getActiveElement: WB,
        getIn: kn,
        insert: Sg,
        isEmptyArray: Pb,
        isEmptyChildren: gv,
        isFunction: Or,
        isInputEvent: HB,
        isInteger: QI,
        isNaN: BB,
        isObject: Wo,
        isPromise: _g,
        isString: wg,
        move: rP,
        prepareDataForValidation: cm,
        replace: sP,
        setIn: Aa,
        setNestedObjectValues: $w,
        swap: iP,
        useField: KB,
        useFormik: ZI,
        useFormikContext: pv,
        validateYupSchema: tP,
        withFormik: ZB,
        yupToFormErrors: eP,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  );
  function cu(t) {
    (this._maxSize = t), this.clear();
  }
  cu.prototype.clear = function () {
    (this._size = 0), (this._values = Object.create(null));
  };
  cu.prototype.get = function (t) {
    return this._values[t];
  };
  cu.prototype.set = function (t, e) {
    return (
      this._size >= this._maxSize && this.clear(),
      t in this._values || this._size++,
      (this._values[t] = e)
    );
  };
  var i4 = /[^.^\]^[]+|(?=\[\]|\.\.)/g,
    oP = /^\d+$/,
    s4 = /^\d/,
    a4 = /[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g,
    o4 = /^\s*(['"]?)(.*?)(\1)\s*$/,
    Bw = 512,
    WE = new cu(Bw),
    UE = new cu(Bw),
    XE = new cu(Bw),
    Dc = {
      Cache: cu,
      split: Rb,
      normalizePath: Zy,
      setter: function (t) {
        var e = Zy(t);
        return (
          UE.get(t) ||
          UE.set(t, function (r, a) {
            for (var o = 0, u = e.length, g = r; o < u - 1; ) {
              var x = e[o];
              if (x === "__proto__" || x === "constructor" || x === "prototype")
                return r;
              g = g[e[o++]];
            }
            g[e[o]] = a;
          })
        );
      },
      getter: function (t, e) {
        var n = Zy(t);
        return (
          XE.get(t) ||
          XE.set(t, function (a) {
            for (var o = 0, u = n.length; o < u; )
              if (a != null || !e) a = a[n[o++]];
              else return;
            return a;
          })
        );
      },
      join: function (t) {
        return t.reduce(function (e, n) {
          return e + (Hw(n) || oP.test(n) ? "[" + n + "]" : (e ? "." : "") + n);
        }, "");
      },
      forEach: function (t, e, n) {
        l4(Array.isArray(t) ? t : Rb(t), e, n);
      },
    };
  function Zy(t) {
    return (
      WE.get(t) ||
      WE.set(
        t,
        Rb(t).map(function (e) {
          return e.replace(o4, "$2");
        })
      )
    );
  }
  function Rb(t) {
    return t.match(i4) || [""];
  }
  function l4(t, e, n) {
    var r = t.length,
      a,
      o,
      u,
      g;
    for (o = 0; o < r; o++)
      (a = t[o]),
        a &&
          (h4(a) && (a = '"' + a + '"'),
          (g = Hw(a)),
          (u = !g && /^\d+$/.test(a)),
          e.call(n, a, g, u, o, t));
  }
  function Hw(t) {
    return typeof t == "string" && t && ["'", '"'].indexOf(t.charAt(0)) !== -1;
  }
  function c4(t) {
    return t.match(s4) && !t.match(oP);
  }
  function u4(t) {
    return a4.test(t);
  }
  function h4(t) {
    return !Hw(t) && (c4(t) || u4(t));
  }
  const d4 =
      /[A-Z\xc0-\xd6\xd8-\xde]?[a-z\xdf-\xf6\xf8-\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde]|$)|(?:[A-Z\xc0-\xd6\xd8-\xde]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde](?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])|$)|[A-Z\xc0-\xd6\xd8-\xde]?(?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\xc0-\xd6\xd8-\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\d*(?:1ST|2ND|3RD|(?![123])\dTH)(?=\b|[a-z_])|\d*(?:1st|2nd|3rd|(?![123])\dth)(?=\b|[A-Z_])|\d+|(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g,
    yv = (t) => t.match(d4) || [],
    xv = (t) => t[0].toUpperCase() + t.slice(1),
    Ww = (t, e) => yv(t).join(e).toLowerCase(),
    lP = (t) =>
      yv(t).reduce(
        (e, n) =>
          `${e}${
            e ? n[0].toUpperCase() + n.slice(1).toLowerCase() : n.toLowerCase()
          }`,
        ""
      ),
    f4 = (t) => xv(lP(t)),
    p4 = (t) => Ww(t, "_"),
    g4 = (t) => Ww(t, "-"),
    m4 = (t) => xv(Ww(t, " ")),
    v4 = (t) => yv(t).map(xv).join(" ");
  var Jy = {
      words: yv,
      upperFirst: xv,
      camelCase: lP,
      pascalCase: f4,
      snakeCase: p4,
      kebabCase: g4,
      sentenceCase: m4,
      titleCase: v4,
    },
    Uw = { exports: {} };
  Uw.exports = function (t) {
    return cP(y4(t), t);
  };
  Uw.exports.array = cP;
  function cP(t, e) {
    var n = t.length,
      r = new Array(n),
      a = {},
      o = n,
      u = x4(e),
      g = b4(t);
    for (
      e.forEach(function (E) {
        if (!g.has(E[0]) || !g.has(E[1]))
          throw new Error(
            "Unknown node. There is an unknown node in the supplied edges."
          );
      });
      o--;

    )
      a[o] || x(t[o], o, new Set());
    return r;
    function x(E, L, z) {
      if (z.has(E)) {
        var B;
        try {
          B = ", node was:" + JSON.stringify(E);
        } catch {
          B = "";
        }
        throw new Error("Cyclic dependency" + B);
      }
      if (!g.has(E))
        throw new Error(
          "Found unknown node. Make sure to provided all involved nodes. Unknown node: " +
            JSON.stringify(E)
        );
      if (!a[L]) {
        a[L] = !0;
        var ae = u.get(E) || new Set();
        if (((ae = Array.from(ae)), (L = ae.length))) {
          z.add(E);
          do {
            var se = ae[--L];
            x(se, g.get(se), z);
          } while (L);
          z.delete(E);
        }
        r[--n] = E;
      }
    }
  }
  function y4(t) {
    for (var e = new Set(), n = 0, r = t.length; n < r; n++) {
      var a = t[n];
      e.add(a[0]), e.add(a[1]);
    }
    return Array.from(e);
  }
  function x4(t) {
    for (var e = new Map(), n = 0, r = t.length; n < r; n++) {
      var a = t[n];
      e.has(a[0]) || e.set(a[0], new Set()),
        e.has(a[1]) || e.set(a[1], new Set()),
        e.get(a[0]).add(a[1]);
    }
    return e;
  }
  function b4(t) {
    for (var e = new Map(), n = 0, r = t.length; n < r; n++) e.set(t[n], n);
    return e;
  }
  var w4 = Uw.exports;
  const _4 = nu(w4),
    S4 = Object.prototype.toString,
    E4 = Error.prototype.toString,
    k4 = RegExp.prototype.toString,
    A4 = typeof Symbol < "u" ? Symbol.prototype.toString : () => "",
    C4 = /^Symbol\((.*)\)(.*)$/;
  function T4(t) {
    return t != +t ? "NaN" : t === 0 && 1 / t < 0 ? "-0" : "" + t;
  }
  function YE(t, e = !1) {
    if (t == null || t === !0 || t === !1) return "" + t;
    const n = typeof t;
    if (n === "number") return T4(t);
    if (n === "string") return e ? `"${t}"` : t;
    if (n === "function") return "[Function " + (t.name || "anonymous") + "]";
    if (n === "symbol") return A4.call(t).replace(C4, "Symbol($1)");
    const r = S4.call(t).slice(8, -1);
    return r === "Date"
      ? isNaN(t.getTime())
        ? "" + t
        : t.toISOString(t)
      : r === "Error" || t instanceof Error
      ? "[" + E4.call(t) + "]"
      : r === "RegExp"
      ? k4.call(t)
      : null;
  }
  function Fl(t, e) {
    let n = YE(t, e);
    return n !== null
      ? n
      : JSON.stringify(
          t,
          function (r, a) {
            let o = YE(this[r], e);
            return o !== null ? o : a;
          },
          2
        );
  }
  function uP(t) {
    return t == null ? [] : [].concat(t);
  }
  let hP,
    I4 = /\$\{\s*(\w+)\s*\}/g;
  hP = Symbol.toStringTag;
  class Es extends Error {
    static formatError(e, n) {
      const r = n.label || n.path || "this";
      return (
        r !== n.path && (n = Object.assign({}, n, { path: r })),
        typeof e == "string"
          ? e.replace(I4, (a, o) => Fl(n[o]))
          : typeof e == "function"
          ? e(n)
          : e
      );
    }
    static isError(e) {
      return e && e.name === "ValidationError";
    }
    constructor(e, n, r, a, o) {
      super(),
        (this.value = void 0),
        (this.path = void 0),
        (this.type = void 0),
        (this.errors = void 0),
        (this.params = void 0),
        (this.inner = void 0),
        (this[hP] = "Error"),
        (this.name = "ValidationError"),
        (this.value = n),
        (this.path = r),
        (this.type = a),
        (this.errors = []),
        (this.inner = []),
        uP(e).forEach((u) => {
          if (Es.isError(u)) {
            this.errors.push(...u.errors);
            const g = u.inner.length ? u.inner : [u];
            this.inner.push(...g);
          } else this.errors.push(u);
        }),
        (this.message =
          this.errors.length > 1
            ? `${this.errors.length} errors occurred`
            : this.errors[0]),
        !o && Error.captureStackTrace && Error.captureStackTrace(this, Es);
    }
  }
  let Ka = {
      default: "${path} is invalid",
      required: "${path} is a required field",
      defined: "${path} must be defined",
      notNull: "${path} cannot be null",
      oneOf: "${path} must be one of the following values: ${values}",
      notOneOf: "${path} must not be one of the following values: ${values}",
      notType: ({ path: t, type: e, value: n, originalValue: r }) => {
        const a =
          r != null && r !== n
            ? ` (cast from the value \`${Fl(r, !0)}\`).`
            : ".";
        return e !== "mixed"
          ? `${t} must be a \`${e}\` type, but the final value was: \`${Fl(
              n,
              !0
            )}\`` + a
          : `${t} must match the configured type. The validated value was: \`${Fl(
              n,
              !0
            )}\`` + a;
      },
    },
    xa = {
      length: "${path} must be exactly ${length} characters",
      min: "${path} must be at least ${min} characters",
      max: "${path} must be at most ${max} characters",
      matches: '${path} must match the following: "${regex}"',
      email: "${path} must be a valid email",
      url: "${path} must be a valid URL",
      uuid: "${path} must be a valid UUID",
      trim: "${path} must be a trimmed string",
      lowercase: "${path} must be a lowercase string",
      uppercase: "${path} must be a upper case string",
    },
    dl = {
      min: "${path} must be greater than or equal to ${min}",
      max: "${path} must be less than or equal to ${max}",
      lessThan: "${path} must be less than ${less}",
      moreThan: "${path} must be greater than ${more}",
      positive: "${path} must be a positive number",
      negative: "${path} must be a negative number",
      integer: "${path} must be an integer",
    },
    Ob = {
      min: "${path} field must be later than ${min}",
      max: "${path} field must be at earlier than ${max}",
    },
    P4 = { isValue: "${path} field must be ${value}" },
    Nb = { noUnknown: "${path} field has unspecified keys: ${unknown}" },
    R4 = {
      min: "${path} field must have at least ${min} items",
      max: "${path} field must have less than or equal to ${max} items",
      length: "${path} must have ${length} items",
    },
    O4 = {
      notType: (t) => {
        const { path: e, value: n, spec: r } = t,
          a = r.types.length;
        if (Array.isArray(n)) {
          if (n.length < a)
            return `${e} tuple value has too few items, expected a length of ${a} but got ${
              n.length
            } for value: \`${Fl(n, !0)}\``;
          if (n.length > a)
            return `${e} tuple value has too many items, expected a length of ${a} but got ${
              n.length
            } for value: \`${Fl(n, !0)}\``;
        }
        return Es.formatError(Ka.notType, t);
      },
    };
  Object.assign(Object.create(null), {
    mixed: Ka,
    string: xa,
    number: dl,
    date: Ob,
    object: Nb,
    array: R4,
    boolean: P4,
    tuple: O4,
  });
  const Xw = (t) => t && t.__isYupSchema__;
  class um {
    static fromOptions(e, n) {
      if (!n.then && !n.otherwise)
        throw new TypeError(
          "either `then:` or `otherwise:` is required for `when()` conditions"
        );
      let { is: r, then: a, otherwise: o } = n,
        u = typeof r == "function" ? r : (...g) => g.every((x) => x === r);
      return new um(e, (g, x) => {
        var E;
        let L = u(...g) ? a : o;
        return (E = L == null ? void 0 : L(x)) != null ? E : x;
      });
    }
    constructor(e, n) {
      (this.fn = void 0), (this.refs = e), (this.refs = e), (this.fn = n);
    }
    resolve(e, n) {
      let r = this.refs.map((o) =>
          o.getValue(
            n == null ? void 0 : n.value,
            n == null ? void 0 : n.parent,
            n == null ? void 0 : n.context
          )
        ),
        a = this.fn(r, e, n);
      if (a === void 0 || a === e) return e;
      if (!Xw(a)) throw new TypeError("conditions must return a schema object");
      return a.resolve(n);
    }
  }
  const Xp = { context: "$", value: "." };
  let uu = class {
    constructor(e, n = {}) {
      if (
        ((this.key = void 0),
        (this.isContext = void 0),
        (this.isValue = void 0),
        (this.isSibling = void 0),
        (this.path = void 0),
        (this.getter = void 0),
        (this.map = void 0),
        typeof e != "string")
      )
        throw new TypeError("ref must be a string, got: " + e);
      if (((this.key = e.trim()), e === ""))
        throw new TypeError("ref must be a non-empty string");
      (this.isContext = this.key[0] === Xp.context),
        (this.isValue = this.key[0] === Xp.value),
        (this.isSibling = !this.isContext && !this.isValue);
      let r = this.isContext ? Xp.context : this.isValue ? Xp.value : "";
      (this.path = this.key.slice(r.length)),
        (this.getter = this.path && Dc.getter(this.path, !0)),
        (this.map = n.map);
    }
    getValue(e, n, r) {
      let a = this.isContext ? r : this.isValue ? e : n;
      return (
        this.getter && (a = this.getter(a || {})),
        this.map && (a = this.map(a)),
        a
      );
    }
    cast(e, n) {
      return this.getValue(
        e,
        n == null ? void 0 : n.parent,
        n == null ? void 0 : n.context
      );
    }
    resolve() {
      return this;
    }
    describe() {
      return { type: "ref", key: this.key };
    }
    toString() {
      return `Ref(${this.key})`;
    }
    static isRef(e) {
      return e && e.__isYupRef;
    }
  };
  uu.prototype.__isYupRef = !0;
  const Oo = (t) => t == null;
  function Au(t) {
    function e(
      { value: n, path: r = "", options: a, originalValue: o, schema: u },
      g,
      x
    ) {
      const { name: E, test: L, params: z, message: B, skipAbsent: ae } = t;
      let {
        parent: se,
        context: le,
        abortEarly: he = u.spec.abortEarly,
        disableStackTrace: oe = u.spec.disableStackTrace,
      } = a;
      function F(pt) {
        return uu.isRef(pt) ? pt.getValue(n, se, le) : pt;
      }
      function ce(pt = {}) {
        var Mt;
        const Vt = Object.assign(
          {
            value: n,
            originalValue: o,
            label: u.spec.label,
            path: pt.path || r,
            spec: u.spec,
          },
          z,
          pt.params
        );
        for (const ht of Object.keys(Vt)) Vt[ht] = F(Vt[ht]);
        const It = new Es(
          Es.formatError(pt.message || B, Vt),
          n,
          Vt.path,
          pt.type || E,
          (Mt = pt.disableStackTrace) != null ? Mt : oe
        );
        return (It.params = Vt), It;
      }
      const ye = he ? g : x;
      let C = {
        path: r,
        parent: se,
        type: E,
        from: a.from,
        createError: ce,
        resolve: F,
        options: a,
        originalValue: o,
        schema: u,
      };
      const ke = (pt) => {
          Es.isError(pt) ? ye(pt) : pt ? x(null) : ye(ce());
        },
        je = (pt) => {
          Es.isError(pt) ? ye(pt) : g(pt);
        };
      if (ae && Oo(n)) return ke(!0);
      let Ct;
      try {
        var xt;
        if (
          ((Ct = L.call(C, n, C)),
          typeof ((xt = Ct) == null ? void 0 : xt.then) == "function")
        ) {
          if (a.sync)
            throw new Error(
              `Validation test of type: "${C.type}" returned a Promise during a synchronous validate. This test will finish after the validate call has returned`
            );
          return Promise.resolve(Ct).then(ke, je);
        }
      } catch (pt) {
        je(pt);
        return;
      }
      ke(Ct);
    }
    return (e.OPTIONS = t), e;
  }
  function N4(t, e, n, r = n) {
    let a, o, u;
    return e
      ? (Dc.forEach(e, (g, x, E) => {
          let L = x ? g.slice(1, g.length - 1) : g;
          t = t.resolve({ context: r, parent: a, value: n });
          let z = t.type === "tuple",
            B = E ? parseInt(L, 10) : 0;
          if (t.innerType || z) {
            if (z && !E)
              throw new Error(
                `Yup.reach cannot implicitly index into a tuple type. the path part "${u}" must contain an index to the tuple element, e.g. "${u}[0]"`
              );
            if (n && B >= n.length)
              throw new Error(
                `Yup.reach cannot resolve an array item at index: ${g}, in the path: ${e}. because there is no value at that index. `
              );
            (a = n), (n = n && n[B]), (t = z ? t.spec.types[B] : t.innerType);
          }
          if (!E) {
            if (!t.fields || !t.fields[L])
              throw new Error(
                `The schema does not contain the path: ${e}. (failed at: ${u} which is a type: "${t.type}")`
              );
            (a = n), (n = n && n[L]), (t = t.fields[L]);
          }
          (o = L), (u = x ? "[" + g + "]" : "." + g);
        }),
        { schema: t, parent: a, parentPath: o })
      : { parent: a, parentPath: e, schema: t };
  }
  class hm extends Set {
    describe() {
      const e = [];
      for (const n of this.values()) e.push(uu.isRef(n) ? n.describe() : n);
      return e;
    }
    resolveAll(e) {
      let n = [];
      for (const r of this.values()) n.push(e(r));
      return n;
    }
    clone() {
      return new hm(this.values());
    }
    merge(e, n) {
      const r = this.clone();
      return e.forEach((a) => r.add(a)), n.forEach((a) => r.delete(a)), r;
    }
  }
  function Yu(t, e = new Map()) {
    if (Xw(t) || !t || typeof t != "object") return t;
    if (e.has(t)) return e.get(t);
    let n;
    if (t instanceof Date) (n = new Date(t.getTime())), e.set(t, n);
    else if (t instanceof RegExp) (n = new RegExp(t)), e.set(t, n);
    else if (Array.isArray(t)) {
      (n = new Array(t.length)), e.set(t, n);
      for (let r = 0; r < t.length; r++) n[r] = Yu(t[r], e);
    } else if (t instanceof Map) {
      (n = new Map()), e.set(t, n);
      for (const [r, a] of t.entries()) n.set(r, Yu(a, e));
    } else if (t instanceof Set) {
      (n = new Set()), e.set(t, n);
      for (const r of t) n.add(Yu(r, e));
    } else if (t instanceof Object) {
      (n = {}), e.set(t, n);
      for (const [r, a] of Object.entries(t)) n[r] = Yu(a, e);
    } else throw Error(`Unable to clone ${t}`);
    return n;
  }
  class Pa {
    constructor(e) {
      (this.type = void 0),
        (this.deps = []),
        (this.tests = void 0),
        (this.transforms = void 0),
        (this.conditions = []),
        (this._mutate = void 0),
        (this.internalTests = {}),
        (this._whitelist = new hm()),
        (this._blacklist = new hm()),
        (this.exclusiveTests = Object.create(null)),
        (this._typeCheck = void 0),
        (this.spec = void 0),
        (this.tests = []),
        (this.transforms = []),
        this.withMutation(() => {
          this.typeError(Ka.notType);
        }),
        (this.type = e.type),
        (this._typeCheck = e.check),
        (this.spec = Object.assign(
          {
            strip: !1,
            strict: !1,
            abortEarly: !0,
            recursive: !0,
            disableStackTrace: !1,
            nullable: !1,
            optional: !0,
            coerce: !0,
          },
          e == null ? void 0 : e.spec
        )),
        this.withMutation((n) => {
          n.nonNullable();
        });
    }
    get _type() {
      return this.type;
    }
    clone(e) {
      if (this._mutate) return e && Object.assign(this.spec, e), this;
      const n = Object.create(Object.getPrototypeOf(this));
      return (
        (n.type = this.type),
        (n._typeCheck = this._typeCheck),
        (n._whitelist = this._whitelist.clone()),
        (n._blacklist = this._blacklist.clone()),
        (n.internalTests = Object.assign({}, this.internalTests)),
        (n.exclusiveTests = Object.assign({}, this.exclusiveTests)),
        (n.deps = [...this.deps]),
        (n.conditions = [...this.conditions]),
        (n.tests = [...this.tests]),
        (n.transforms = [...this.transforms]),
        (n.spec = Yu(Object.assign({}, this.spec, e))),
        n
      );
    }
    label(e) {
      let n = this.clone();
      return (n.spec.label = e), n;
    }
    meta(...e) {
      if (e.length === 0) return this.spec.meta;
      let n = this.clone();
      return (n.spec.meta = Object.assign(n.spec.meta || {}, e[0])), n;
    }
    withMutation(e) {
      let n = this._mutate;
      this._mutate = !0;
      let r = e(this);
      return (this._mutate = n), r;
    }
    concat(e) {
      if (!e || e === this) return this;
      if (e.type !== this.type && this.type !== "mixed")
        throw new TypeError(
          `You cannot \`concat()\` schema's of different types: ${this.type} and ${e.type}`
        );
      let n = this,
        r = e.clone();
      const a = Object.assign({}, n.spec, r.spec);
      return (
        (r.spec = a),
        (r.internalTests = Object.assign({}, n.internalTests, r.internalTests)),
        (r._whitelist = n._whitelist.merge(e._whitelist, e._blacklist)),
        (r._blacklist = n._blacklist.merge(e._blacklist, e._whitelist)),
        (r.tests = n.tests),
        (r.exclusiveTests = n.exclusiveTests),
        r.withMutation((o) => {
          e.tests.forEach((u) => {
            o.test(u.OPTIONS);
          });
        }),
        (r.transforms = [...n.transforms, ...r.transforms]),
        r
      );
    }
    isType(e) {
      return e == null
        ? !!(
            (this.spec.nullable && e === null) ||
            (this.spec.optional && e === void 0)
          )
        : this._typeCheck(e);
    }
    resolve(e) {
      let n = this;
      if (n.conditions.length) {
        let r = n.conditions;
        (n = n.clone()),
          (n.conditions = []),
          (n = r.reduce((a, o) => o.resolve(a, e), n)),
          (n = n.resolve(e));
      }
      return n;
    }
    resolveOptions(e) {
      var n, r, a, o;
      return Object.assign({}, e, {
        from: e.from || [],
        strict: (n = e.strict) != null ? n : this.spec.strict,
        abortEarly: (r = e.abortEarly) != null ? r : this.spec.abortEarly,
        recursive: (a = e.recursive) != null ? a : this.spec.recursive,
        disableStackTrace:
          (o = e.disableStackTrace) != null ? o : this.spec.disableStackTrace,
      });
    }
    cast(e, n = {}) {
      let r = this.resolve(Object.assign({ value: e }, n)),
        a = n.assert === "ignore-optionality",
        o = r._cast(e, n);
      if (n.assert !== !1 && !r.isType(o)) {
        if (a && Oo(o)) return o;
        let u = Fl(e),
          g = Fl(o);
        throw new TypeError(
          `The value of ${
            n.path || "field"
          } could not be cast to a value that satisfies the schema type: "${
            r.type
          }". 

attempted value: ${u} 
` + (g !== u ? `result of cast: ${g}` : "")
        );
      }
      return o;
    }
    _cast(e, n) {
      let r =
        e === void 0
          ? e
          : this.transforms.reduce((a, o) => o.call(this, a, e, this), e);
      return r === void 0 && (r = this.getDefault(n)), r;
    }
    _validate(e, n = {}, r, a) {
      let { path: o, originalValue: u = e, strict: g = this.spec.strict } = n,
        x = e;
      g || (x = this._cast(x, Object.assign({ assert: !1 }, n)));
      let E = [];
      for (let L of Object.values(this.internalTests)) L && E.push(L);
      this.runTests(
        { path: o, value: x, originalValue: u, options: n, tests: E },
        r,
        (L) => {
          if (L.length) return a(L, x);
          this.runTests(
            {
              path: o,
              value: x,
              originalValue: u,
              options: n,
              tests: this.tests,
            },
            r,
            a
          );
        }
      );
    }
    runTests(e, n, r) {
      let a = !1,
        { tests: o, value: u, originalValue: g, path: x, options: E } = e,
        L = (le) => {
          a || ((a = !0), n(le, u));
        },
        z = (le) => {
          a || ((a = !0), r(le, u));
        },
        B = o.length,
        ae = [];
      if (!B) return z([]);
      let se = {
        value: u,
        originalValue: g,
        path: x,
        options: E,
        schema: this,
      };
      for (let le = 0; le < o.length; le++) {
        const he = o[le];
        he(se, L, function (F) {
          F && (Array.isArray(F) ? ae.push(...F) : ae.push(F)),
            --B <= 0 && z(ae);
        });
      }
    }
    asNestedTest({
      key: e,
      index: n,
      parent: r,
      parentPath: a,
      originalParent: o,
      options: u,
    }) {
      const g = e ?? n;
      if (g == null)
        throw TypeError("Must include `key` or `index` for nested validations");
      const x = typeof g == "number";
      let E = r[g];
      const L = Object.assign({}, u, {
        strict: !0,
        parent: r,
        value: E,
        originalValue: o[g],
        key: void 0,
        [x ? "index" : "key"]: g,
        path:
          x || g.includes(".")
            ? `${a || ""}[${E ? g : `"${g}"`}]`
            : (a ? `${a}.` : "") + e,
      });
      return (z, B, ae) => this.resolve(L)._validate(E, L, B, ae);
    }
    validate(e, n) {
      var r;
      let a = this.resolve(Object.assign({}, n, { value: e })),
        o =
          (r = n == null ? void 0 : n.disableStackTrace) != null
            ? r
            : a.spec.disableStackTrace;
      return new Promise((u, g) =>
        a._validate(
          e,
          n,
          (x, E) => {
            Es.isError(x) && (x.value = E), g(x);
          },
          (x, E) => {
            x.length ? g(new Es(x, E, void 0, void 0, o)) : u(E);
          }
        )
      );
    }
    validateSync(e, n) {
      var r;
      let a = this.resolve(Object.assign({}, n, { value: e })),
        o,
        u =
          (r = n == null ? void 0 : n.disableStackTrace) != null
            ? r
            : a.spec.disableStackTrace;
      return (
        a._validate(
          e,
          Object.assign({}, n, { sync: !0 }),
          (g, x) => {
            throw (Es.isError(g) && (g.value = x), g);
          },
          (g, x) => {
            if (g.length) throw new Es(g, e, void 0, void 0, u);
            o = x;
          }
        ),
        o
      );
    }
    isValid(e, n) {
      return this.validate(e, n).then(
        () => !0,
        (r) => {
          if (Es.isError(r)) return !1;
          throw r;
        }
      );
    }
    isValidSync(e, n) {
      try {
        return this.validateSync(e, n), !0;
      } catch (r) {
        if (Es.isError(r)) return !1;
        throw r;
      }
    }
    _getDefault(e) {
      let n = this.spec.default;
      return n == null ? n : typeof n == "function" ? n.call(this, e) : Yu(n);
    }
    getDefault(e) {
      return this.resolve(e || {})._getDefault(e);
    }
    default(e) {
      return arguments.length === 0
        ? this._getDefault()
        : this.clone({ default: e });
    }
    strict(e = !0) {
      return this.clone({ strict: e });
    }
    nullability(e, n) {
      const r = this.clone({ nullable: e });
      return (
        (r.internalTests.nullable = Au({
          message: n,
          name: "nullable",
          test(a) {
            return a === null ? this.schema.spec.nullable : !0;
          },
        })),
        r
      );
    }
    optionality(e, n) {
      const r = this.clone({ optional: e });
      return (
        (r.internalTests.optionality = Au({
          message: n,
          name: "optionality",
          test(a) {
            return a === void 0 ? this.schema.spec.optional : !0;
          },
        })),
        r
      );
    }
    optional() {
      return this.optionality(!0);
    }
    defined(e = Ka.defined) {
      return this.optionality(!1, e);
    }
    nullable() {
      return this.nullability(!0);
    }
    nonNullable(e = Ka.notNull) {
      return this.nullability(!1, e);
    }
    required(e = Ka.required) {
      return this.clone().withMutation((n) => n.nonNullable(e).defined(e));
    }
    notRequired() {
      return this.clone().withMutation((e) => e.nullable().optional());
    }
    transform(e) {
      let n = this.clone();
      return n.transforms.push(e), n;
    }
    test(...e) {
      let n;
      if (
        (e.length === 1
          ? typeof e[0] == "function"
            ? (n = { test: e[0] })
            : (n = e[0])
          : e.length === 2
          ? (n = { name: e[0], test: e[1] })
          : (n = { name: e[0], message: e[1], test: e[2] }),
        n.message === void 0 && (n.message = Ka.default),
        typeof n.test != "function")
      )
        throw new TypeError("`test` is a required parameters");
      let r = this.clone(),
        a = Au(n),
        o = n.exclusive || (n.name && r.exclusiveTests[n.name] === !0);
      if (n.exclusive && !n.name)
        throw new TypeError(
          "Exclusive tests must provide a unique `name` identifying the test"
        );
      return (
        n.name && (r.exclusiveTests[n.name] = !!n.exclusive),
        (r.tests = r.tests.filter(
          (u) =>
            !(
              u.OPTIONS.name === n.name &&
              (o || u.OPTIONS.test === a.OPTIONS.test)
            )
        )),
        r.tests.push(a),
        r
      );
    }
    when(e, n) {
      !Array.isArray(e) && typeof e != "string" && ((n = e), (e = "."));
      let r = this.clone(),
        a = uP(e).map((o) => new uu(o));
      return (
        a.forEach((o) => {
          o.isSibling && r.deps.push(o.key);
        }),
        r.conditions.push(
          typeof n == "function" ? new um(a, n) : um.fromOptions(a, n)
        ),
        r
      );
    }
    typeError(e) {
      let n = this.clone();
      return (
        (n.internalTests.typeError = Au({
          message: e,
          name: "typeError",
          skipAbsent: !0,
          test(r) {
            return this.schema._typeCheck(r)
              ? !0
              : this.createError({ params: { type: this.schema.type } });
          },
        })),
        n
      );
    }
    oneOf(e, n = Ka.oneOf) {
      let r = this.clone();
      return (
        e.forEach((a) => {
          r._whitelist.add(a), r._blacklist.delete(a);
        }),
        (r.internalTests.whiteList = Au({
          message: n,
          name: "oneOf",
          skipAbsent: !0,
          test(a) {
            let o = this.schema._whitelist,
              u = o.resolveAll(this.resolve);
            return u.includes(a)
              ? !0
              : this.createError({
                  params: { values: Array.from(o).join(", "), resolved: u },
                });
          },
        })),
        r
      );
    }
    notOneOf(e, n = Ka.notOneOf) {
      let r = this.clone();
      return (
        e.forEach((a) => {
          r._blacklist.add(a), r._whitelist.delete(a);
        }),
        (r.internalTests.blacklist = Au({
          message: n,
          name: "notOneOf",
          test(a) {
            let o = this.schema._blacklist,
              u = o.resolveAll(this.resolve);
            return u.includes(a)
              ? this.createError({
                  params: { values: Array.from(o).join(", "), resolved: u },
                })
              : !0;
          },
        })),
        r
      );
    }
    strip(e = !0) {
      let n = this.clone();
      return (n.spec.strip = e), n;
    }
    describe(e) {
      const n = (e ? this.resolve(e) : this).clone(),
        { label: r, meta: a, optional: o, nullable: u } = n.spec;
      return {
        meta: a,
        label: r,
        optional: o,
        nullable: u,
        default: n.getDefault(e),
        type: n.type,
        oneOf: n._whitelist.describe(),
        notOneOf: n._blacklist.describe(),
        tests: n.tests
          .map((x) => ({ name: x.OPTIONS.name, params: x.OPTIONS.params }))
          .filter((x, E, L) => L.findIndex((z) => z.name === x.name) === E),
      };
    }
  }
  Pa.prototype.__isYupSchema__ = !0;
  for (const t of ["validate", "validateSync"])
    Pa.prototype[`${t}At`] = function (e, n, r = {}) {
      const { parent: a, parentPath: o, schema: u } = N4(this, e, n, r.context);
      return u[t](a && a[o], Object.assign({}, r, { parent: a, path: e }));
    };
  for (const t of ["equals", "is"]) Pa.prototype[t] = Pa.prototype.oneOf;
  for (const t of ["not", "nope"]) Pa.prototype[t] = Pa.prototype.notOneOf;
  let L4 =
      /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
    D4 =
      /^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i,
    M4 =
      /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,
    j4 = (t) => Oo(t) || t === t.trim(),
    F4 = {}.toString();
  function Fo() {
    return new dP();
  }
  class dP extends Pa {
    constructor() {
      super({
        type: "string",
        check(e) {
          return e instanceof String && (e = e.valueOf()), typeof e == "string";
        },
      }),
        this.withMutation(() => {
          this.transform((e, n, r) => {
            if (!r.spec.coerce || r.isType(e) || Array.isArray(e)) return e;
            const a = e != null && e.toString ? e.toString() : e;
            return a === F4 ? e : a;
          });
        });
    }
    required(e) {
      return super
        .required(e)
        .withMutation((n) =>
          n.test({
            message: e || Ka.required,
            name: "required",
            skipAbsent: !0,
            test: (r) => !!r.length,
          })
        );
    }
    notRequired() {
      return super
        .notRequired()
        .withMutation(
          (e) => (
            (e.tests = e.tests.filter((n) => n.OPTIONS.name !== "required")), e
          )
        );
    }
    length(e, n = xa.length) {
      return this.test({
        message: n,
        name: "length",
        exclusive: !0,
        params: { length: e },
        skipAbsent: !0,
        test(r) {
          return r.length === this.resolve(e);
        },
      });
    }
    min(e, n = xa.min) {
      return this.test({
        message: n,
        name: "min",
        exclusive: !0,
        params: { min: e },
        skipAbsent: !0,
        test(r) {
          return r.length >= this.resolve(e);
        },
      });
    }
    max(e, n = xa.max) {
      return this.test({
        name: "max",
        exclusive: !0,
        message: n,
        params: { max: e },
        skipAbsent: !0,
        test(r) {
          return r.length <= this.resolve(e);
        },
      });
    }
    matches(e, n) {
      let r = !1,
        a,
        o;
      return (
        n &&
          (typeof n == "object"
            ? ({ excludeEmptyString: r = !1, message: a, name: o } = n)
            : (a = n)),
        this.test({
          name: o || "matches",
          message: a || xa.matches,
          params: { regex: e },
          skipAbsent: !0,
          test: (u) => (u === "" && r) || u.search(e) !== -1,
        })
      );
    }
    email(e = xa.email) {
      return this.matches(L4, {
        name: "email",
        message: e,
        excludeEmptyString: !0,
      });
    }
    url(e = xa.url) {
      return this.matches(D4, {
        name: "url",
        message: e,
        excludeEmptyString: !0,
      });
    }
    uuid(e = xa.uuid) {
      return this.matches(M4, {
        name: "uuid",
        message: e,
        excludeEmptyString: !1,
      });
    }
    ensure() {
      return this.default("").transform((e) => (e === null ? "" : e));
    }
    trim(e = xa.trim) {
      return this.transform((n) => (n != null ? n.trim() : n)).test({
        message: e,
        name: "trim",
        test: j4,
      });
    }
    lowercase(e = xa.lowercase) {
      return this.transform((n) => (Oo(n) ? n : n.toLowerCase())).test({
        message: e,
        name: "string_case",
        exclusive: !0,
        skipAbsent: !0,
        test: (n) => Oo(n) || n === n.toLowerCase(),
      });
    }
    uppercase(e = xa.uppercase) {
      return this.transform((n) => (Oo(n) ? n : n.toUpperCase())).test({
        message: e,
        name: "string_case",
        exclusive: !0,
        skipAbsent: !0,
        test: (n) => Oo(n) || n === n.toUpperCase(),
      });
    }
  }
  Fo.prototype = dP.prototype;
  let z4 = (t) => t != +t;
  function Eg() {
    return new fP();
  }
  class fP extends Pa {
    constructor() {
      super({
        type: "number",
        check(e) {
          return (
            e instanceof Number && (e = e.valueOf()),
            typeof e == "number" && !z4(e)
          );
        },
      }),
        this.withMutation(() => {
          this.transform((e, n, r) => {
            if (!r.spec.coerce) return e;
            let a = e;
            if (typeof a == "string") {
              if (((a = a.replace(/\s/g, "")), a === "")) return NaN;
              a = +a;
            }
            return r.isType(a) || a === null ? a : parseFloat(a);
          });
        });
    }
    min(e, n = dl.min) {
      return this.test({
        message: n,
        name: "min",
        exclusive: !0,
        params: { min: e },
        skipAbsent: !0,
        test(r) {
          return r >= this.resolve(e);
        },
      });
    }
    max(e, n = dl.max) {
      return this.test({
        message: n,
        name: "max",
        exclusive: !0,
        params: { max: e },
        skipAbsent: !0,
        test(r) {
          return r <= this.resolve(e);
        },
      });
    }
    lessThan(e, n = dl.lessThan) {
      return this.test({
        message: n,
        name: "max",
        exclusive: !0,
        params: { less: e },
        skipAbsent: !0,
        test(r) {
          return r < this.resolve(e);
        },
      });
    }
    moreThan(e, n = dl.moreThan) {
      return this.test({
        message: n,
        name: "min",
        exclusive: !0,
        params: { more: e },
        skipAbsent: !0,
        test(r) {
          return r > this.resolve(e);
        },
      });
    }
    positive(e = dl.positive) {
      return this.moreThan(0, e);
    }
    negative(e = dl.negative) {
      return this.lessThan(0, e);
    }
    integer(e = dl.integer) {
      return this.test({
        name: "integer",
        message: e,
        skipAbsent: !0,
        test: (n) => Number.isInteger(n),
      });
    }
    truncate() {
      return this.transform((e) => (Oo(e) ? e : e | 0));
    }
    round(e) {
      var n;
      let r = ["ceil", "floor", "round", "trunc"];
      if (
        ((e = ((n = e) == null ? void 0 : n.toLowerCase()) || "round"),
        e === "trunc")
      )
        return this.truncate();
      if (r.indexOf(e.toLowerCase()) === -1)
        throw new TypeError(
          "Only valid options for round() are: " + r.join(", ")
        );
      return this.transform((a) => (Oo(a) ? a : Math[e](a)));
    }
  }
  Eg.prototype = fP.prototype;
  const V4 =
    /^(\d{4}|[+-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,.](\d{1,}))?)?(?:(Z)|([+-])(\d{2})(?::?(\d{2}))?)?)?$/;
  function ko(t, e = 0) {
    return Number(t) || e;
  }
  function $4(t) {
    const e = V4.exec(t);
    if (!e) return Date.parse ? Date.parse(t) : Number.NaN;
    const n = {
      year: ko(e[1]),
      month: ko(e[2], 1) - 1,
      day: ko(e[3], 1),
      hour: ko(e[4]),
      minute: ko(e[5]),
      second: ko(e[6]),
      millisecond: e[7] ? ko(e[7].substring(0, 3)) : 0,
      z: e[8] || void 0,
      plusMinus: e[9] || void 0,
      hourOffset: ko(e[10]),
      minuteOffset: ko(e[11]),
    };
    if (n.z === void 0 && n.plusMinus === void 0)
      return new Date(
        n.year,
        n.month,
        n.day,
        n.hour,
        n.minute,
        n.second,
        n.millisecond
      ).valueOf();
    let r = 0;
    return (
      n.z !== "Z" &&
        n.plusMinus !== void 0 &&
        ((r = n.hourOffset * 60 + n.minuteOffset),
        n.plusMinus === "+" && (r = 0 - r)),
      Date.UTC(
        n.year,
        n.month,
        n.day,
        n.hour,
        n.minute + r,
        n.second,
        n.millisecond
      )
    );
  }
  let B4 = new Date(""),
    H4 = (t) => Object.prototype.toString.call(t) === "[object Date]";
  class bv extends Pa {
    constructor() {
      super({
        type: "date",
        check(e) {
          return H4(e) && !isNaN(e.getTime());
        },
      }),
        this.withMutation(() => {
          this.transform((e, n, r) =>
            !r.spec.coerce || r.isType(e) || e === null
              ? e
              : ((e = $4(e)), isNaN(e) ? bv.INVALID_DATE : new Date(e))
          );
        });
    }
    prepareParam(e, n) {
      let r;
      if (uu.isRef(e)) r = e;
      else {
        let a = this.cast(e);
        if (!this._typeCheck(a))
          throw new TypeError(
            `\`${n}\` must be a Date or a value that can be \`cast()\` to a Date`
          );
        r = a;
      }
      return r;
    }
    min(e, n = Ob.min) {
      let r = this.prepareParam(e, "min");
      return this.test({
        message: n,
        name: "min",
        exclusive: !0,
        params: { min: e },
        skipAbsent: !0,
        test(a) {
          return a >= this.resolve(r);
        },
      });
    }
    max(e, n = Ob.max) {
      let r = this.prepareParam(e, "max");
      return this.test({
        message: n,
        name: "max",
        exclusive: !0,
        params: { max: e },
        skipAbsent: !0,
        test(a) {
          return a <= this.resolve(r);
        },
      });
    }
  }
  bv.INVALID_DATE = B4;
  bv.prototype;
  function W4(t, e = []) {
    let n = [],
      r = new Set(),
      a = new Set(e.map(([u, g]) => `${u}-${g}`));
    function o(u, g) {
      let x = Dc.split(u)[0];
      r.add(x), a.has(`${g}-${x}`) || n.push([g, x]);
    }
    for (const u of Object.keys(t)) {
      let g = t[u];
      r.add(u),
        uu.isRef(g) && g.isSibling
          ? o(g.path, u)
          : Xw(g) && "deps" in g && g.deps.forEach((x) => o(x, u));
    }
    return _4.array(Array.from(r), n).reverse();
  }
  function GE(t, e) {
    let n = 1 / 0;
    return (
      t.some((r, a) => {
        var o;
        if ((o = e.path) != null && o.includes(r)) return (n = a), !0;
      }),
      n
    );
  }
  function pP(t) {
    return (e, n) => GE(t, e) - GE(t, n);
  }
  const U4 = (t, e, n) => {
    if (typeof t != "string") return t;
    let r = t;
    try {
      r = JSON.parse(t);
    } catch {}
    return n.isType(r) ? r : t;
  };
  function kg(t) {
    if ("fields" in t) {
      const e = {};
      for (const [n, r] of Object.entries(t.fields)) e[n] = kg(r);
      return t.setFields(e);
    }
    if (t.type === "array") {
      const e = t.optional();
      return e.innerType && (e.innerType = kg(e.innerType)), e;
    }
    return t.type === "tuple"
      ? t.optional().clone({ types: t.spec.types.map(kg) })
      : "optional" in t
      ? t.optional()
      : t;
  }
  const X4 = (t, e) => {
    const n = [...Dc.normalizePath(e)];
    if (n.length === 1) return n[0] in t;
    let r = n.pop(),
      a = Dc.getter(Dc.join(n), !0)(t);
    return !!(a && r in a);
  };
  let qE = (t) => Object.prototype.toString.call(t) === "[object Object]";
  function Y4(t, e) {
    let n = Object.keys(t.fields);
    return Object.keys(e).filter((r) => n.indexOf(r) === -1);
  }
  const G4 = pP([]);
  function Hf(t) {
    return new gP(t);
  }
  class gP extends Pa {
    constructor(e) {
      super({
        type: "object",
        check(n) {
          return qE(n) || typeof n == "function";
        },
      }),
        (this.fields = Object.create(null)),
        (this._sortErrors = G4),
        (this._nodes = []),
        (this._excludedEdges = []),
        this.withMutation(() => {
          e && this.shape(e);
        });
    }
    _cast(e, n = {}) {
      var r;
      let a = super._cast(e, n);
      if (a === void 0) return this.getDefault(n);
      if (!this._typeCheck(a)) return a;
      let o = this.fields,
        u = (r = n.stripUnknown) != null ? r : this.spec.noUnknown,
        g = [].concat(
          this._nodes,
          Object.keys(a).filter((z) => !this._nodes.includes(z))
        ),
        x = {},
        E = Object.assign({}, n, {
          parent: x,
          __validating: n.__validating || !1,
        }),
        L = !1;
      for (const z of g) {
        let B = o[z],
          ae = z in a;
        if (B) {
          let se,
            le = a[z];
          (E.path = (n.path ? `${n.path}.` : "") + z),
            (B = B.resolve({ value: le, context: n.context, parent: x }));
          let he = B instanceof Pa ? B.spec : void 0,
            oe = he == null ? void 0 : he.strict;
          if (he != null && he.strip) {
            L = L || z in a;
            continue;
          }
          (se = !n.__validating || !oe ? B.cast(a[z], E) : a[z]),
            se !== void 0 && (x[z] = se);
        } else ae && !u && (x[z] = a[z]);
        (ae !== z in x || x[z] !== a[z]) && (L = !0);
      }
      return L ? x : a;
    }
    _validate(e, n = {}, r, a) {
      let {
        from: o = [],
        originalValue: u = e,
        recursive: g = this.spec.recursive,
      } = n;
      (n.from = [{ schema: this, value: u }, ...o]),
        (n.__validating = !0),
        (n.originalValue = u),
        super._validate(e, n, r, (x, E) => {
          if (!g || !qE(E)) {
            a(x, E);
            return;
          }
          u = u || E;
          let L = [];
          for (let z of this._nodes) {
            let B = this.fields[z];
            !B ||
              uu.isRef(B) ||
              L.push(
                B.asNestedTest({
                  options: n,
                  key: z,
                  parent: E,
                  parentPath: n.path,
                  originalParent: u,
                })
              );
          }
          this.runTests(
            { tests: L, value: E, originalValue: u, options: n },
            r,
            (z) => {
              a(z.sort(this._sortErrors).concat(x), E);
            }
          );
        });
    }
    clone(e) {
      const n = super.clone(e);
      return (
        (n.fields = Object.assign({}, this.fields)),
        (n._nodes = this._nodes),
        (n._excludedEdges = this._excludedEdges),
        (n._sortErrors = this._sortErrors),
        n
      );
    }
    concat(e) {
      let n = super.concat(e),
        r = n.fields;
      for (let [a, o] of Object.entries(this.fields)) {
        const u = r[a];
        r[a] = u === void 0 ? o : u;
      }
      return n.withMutation((a) =>
        a.setFields(r, [...this._excludedEdges, ...e._excludedEdges])
      );
    }
    _getDefault(e) {
      if ("default" in this.spec) return super._getDefault(e);
      if (!this._nodes.length) return;
      let n = {};
      return (
        this._nodes.forEach((r) => {
          var a;
          const o = this.fields[r];
          let u = e;
          (a = u) != null &&
            a.value &&
            (u = Object.assign({}, u, { parent: u.value, value: u.value[r] })),
            (n[r] = o && "getDefault" in o ? o.getDefault(u) : void 0);
        }),
        n
      );
    }
    setFields(e, n) {
      let r = this.clone();
      return (
        (r.fields = e),
        (r._nodes = W4(e, n)),
        (r._sortErrors = pP(Object.keys(e))),
        n && (r._excludedEdges = n),
        r
      );
    }
    shape(e, n = []) {
      return this.clone().withMutation((r) => {
        let a = r._excludedEdges;
        return (
          n.length &&
            (Array.isArray(n[0]) || (n = [n]),
            (a = [...r._excludedEdges, ...n])),
          r.setFields(Object.assign(r.fields, e), a)
        );
      });
    }
    partial() {
      const e = {};
      for (const [n, r] of Object.entries(this.fields))
        e[n] =
          "optional" in r && r.optional instanceof Function ? r.optional() : r;
      return this.setFields(e);
    }
    deepPartial() {
      return kg(this);
    }
    pick(e) {
      const n = {};
      for (const r of e) this.fields[r] && (n[r] = this.fields[r]);
      return this.setFields(
        n,
        this._excludedEdges.filter(([r, a]) => e.includes(r) && e.includes(a))
      );
    }
    omit(e) {
      const n = [];
      for (const r of Object.keys(this.fields)) e.includes(r) || n.push(r);
      return this.pick(n);
    }
    from(e, n, r) {
      let a = Dc.getter(e, !0);
      return this.transform((o) => {
        if (!o) return o;
        let u = o;
        return (
          X4(o, e) &&
            ((u = Object.assign({}, o)), r || delete u[e], (u[n] = a(o))),
          u
        );
      });
    }
    json() {
      return this.transform(U4);
    }
    noUnknown(e = !0, n = Nb.noUnknown) {
      typeof e != "boolean" && ((n = e), (e = !0));
      let r = this.test({
        name: "noUnknown",
        exclusive: !0,
        message: n,
        test(a) {
          if (a == null) return !0;
          const o = Y4(this.schema, a);
          return (
            !e ||
            o.length === 0 ||
            this.createError({ params: { unknown: o.join(", ") } })
          );
        },
      });
      return (r.spec.noUnknown = e), r;
    }
    unknown(e = !0, n = Nb.noUnknown) {
      return this.noUnknown(!e, n);
    }
    transformKeys(e) {
      return this.transform((n) => {
        if (!n) return n;
        const r = {};
        for (const a of Object.keys(n)) r[e(a)] = n[a];
        return r;
      });
    }
    camelCase() {
      return this.transformKeys(Jy.camelCase);
    }
    snakeCase() {
      return this.transformKeys(Jy.snakeCase);
    }
    constantCase() {
      return this.transformKeys((e) => Jy.snakeCase(e).toUpperCase());
    }
    describe(e) {
      const n = (e ? this.resolve(e) : this).clone(),
        r = super.describe(e);
      r.fields = {};
      for (const [o, u] of Object.entries(n.fields)) {
        var a;
        let g = e;
        (a = g) != null &&
          a.value &&
          (g = Object.assign({}, g, { parent: g.value, value: g.value[o] })),
          (r.fields[o] = u.describe(g));
      }
      return r;
    }
  }
  Hf.prototype = gP.prototype;
  var mP = { exports: {} };
  /*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ (function (t) {
    (function () {
      var e = {}.hasOwnProperty;
      function n() {
        for (var r = [], a = 0; a < arguments.length; a++) {
          var o = arguments[a];
          if (o) {
            var u = typeof o;
            if (u === "string" || u === "number") r.push(o);
            else if (Array.isArray(o)) {
              if (o.length) {
                var g = n.apply(null, o);
                g && r.push(g);
              }
            } else if (u === "object") {
              if (
                o.toString !== Object.prototype.toString &&
                !o.toString.toString().includes("[native code]")
              ) {
                r.push(o.toString());
                continue;
              }
              for (var x in o) e.call(o, x) && o[x] && r.push(x);
            }
          }
        }
        return r.join(" ");
      }
      t.exports ? ((n.default = n), (t.exports = n)) : (window.classNames = n);
    })();
  })(mP);
  var q4 = mP.exports;
  const sr = nu(q4);
  function K4(t, e) {
    if (t == null) return {};
    var n = {},
      r = Object.keys(t),
      a,
      o;
    for (o = 0; o < r.length; o++)
      (a = r[o]), !(e.indexOf(a) >= 0) && (n[a] = t[a]);
    return n;
  }
  function Lb(t, e) {
    return (
      (Lb = Object.setPrototypeOf
        ? Object.setPrototypeOf.bind()
        : function (r, a) {
            return (r.__proto__ = a), r;
          }),
      Lb(t, e)
    );
  }
  function Q4(t, e) {
    (t.prototype = Object.create(e.prototype)),
      (t.prototype.constructor = t),
      Lb(t, e);
  }
  const Z4 = ["xxl", "xl", "lg", "md", "sm", "xs"],
    J4 = "xs",
    wv = ue.createContext({ prefixes: {}, breakpoints: Z4, minBreakpoint: J4 });
  function Zr(t, e) {
    const { prefixes: n } = ue.useContext(wv);
    return t || n[e] || e;
  }
  function vP() {
    const { breakpoints: t } = ue.useContext(wv);
    return t;
  }
  function yP() {
    const { minBreakpoint: t } = ue.useContext(wv);
    return t;
  }
  function eH() {
    const { dir: t } = ue.useContext(wv);
    return t === "rtl";
  }
  function _v(t) {
    return (t && t.ownerDocument) || document;
  }
  function tH(t) {
    var e = _v(t);
    return (e && e.defaultView) || window;
  }
  function nH(t, e) {
    return tH(t).getComputedStyle(t, e);
  }
  var rH = /([A-Z])/g;
  function iH(t) {
    return t.replace(rH, "-$1").toLowerCase();
  }
  var sH = /^ms-/;
  function Yp(t) {
    return iH(t).replace(sH, "-ms-");
  }
  var aH =
    /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
  function oH(t) {
    return !!(t && aH.test(t));
  }
  function Mc(t, e) {
    var n = "",
      r = "";
    if (typeof e == "string")
      return t.style.getPropertyValue(Yp(e)) || nH(t).getPropertyValue(Yp(e));
    Object.keys(e).forEach(function (a) {
      var o = e[a];
      !o && o !== 0
        ? t.style.removeProperty(Yp(a))
        : oH(a)
        ? (r += a + "(" + o + ") ")
        : (n += Yp(a) + ": " + o + ";");
    }),
      r && (n += "transform: " + r + ";"),
      (t.style.cssText += ";" + n);
  }
  var xP = { exports: {} },
    lH = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
    cH = lH,
    uH = cH;
  function bP() {}
  function wP() {}
  wP.resetWarningCache = bP;
  var hH = function () {
    function t(r, a, o, u, g, x) {
      if (x !== uH) {
        var E = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw ((E.name = "Invariant Violation"), E);
      }
    }
    t.isRequired = t;
    function e() {
      return t;
    }
    var n = {
      array: t,
      bigint: t,
      bool: t,
      func: t,
      number: t,
      object: t,
      string: t,
      symbol: t,
      any: t,
      arrayOf: e,
      element: t,
      elementType: t,
      instanceOf: e,
      node: t,
      objectOf: e,
      oneOf: e,
      oneOfType: e,
      shape: e,
      exact: e,
      checkPropTypes: wP,
      resetWarningCache: bP,
    };
    return (n.PropTypes = n), n;
  };
  xP.exports = hH();
  var _P = xP.exports;
  const zo = nu(_P),
    KE = { disabled: !1 },
    SP = nr.createContext(null);
  var dH = function (e) {
      return e.scrollTop;
    },
    yd = "unmounted",
    Ec = "exited",
    ml = "entering",
    Ac = "entered",
    Db = "exiting",
    Zo = (function (t) {
      Q4(e, t);
      function e(r, a) {
        var o;
        o = t.call(this, r, a) || this;
        var u = a,
          g = u && !u.isMounting ? r.enter : r.appear,
          x;
        return (
          (o.appearStatus = null),
          r.in
            ? g
              ? ((x = Ec), (o.appearStatus = ml))
              : (x = Ac)
            : r.unmountOnExit || r.mountOnEnter
            ? (x = yd)
            : (x = Ec),
          (o.state = { status: x }),
          (o.nextCallback = null),
          o
        );
      }
      e.getDerivedStateFromProps = function (a, o) {
        var u = a.in;
        return u && o.status === yd ? { status: Ec } : null;
      };
      var n = e.prototype;
      return (
        (n.componentDidMount = function () {
          this.updateStatus(!0, this.appearStatus);
        }),
        (n.componentDidUpdate = function (a) {
          var o = null;
          if (a !== this.props) {
            var u = this.state.status;
            this.props.in
              ? u !== ml && u !== Ac && (o = ml)
              : (u === ml || u === Ac) && (o = Db);
          }
          this.updateStatus(!1, o);
        }),
        (n.componentWillUnmount = function () {
          this.cancelNextCallback();
        }),
        (n.getTimeouts = function () {
          var a = this.props.timeout,
            o,
            u,
            g;
          return (
            (o = u = g = a),
            a != null &&
              typeof a != "number" &&
              ((o = a.exit),
              (u = a.enter),
              (g = a.appear !== void 0 ? a.appear : u)),
            { exit: o, enter: u, appear: g }
          );
        }),
        (n.updateStatus = function (a, o) {
          if ((a === void 0 && (a = !1), o !== null))
            if ((this.cancelNextCallback(), o === ml)) {
              if (this.props.unmountOnExit || this.props.mountOnEnter) {
                var u = this.props.nodeRef
                  ? this.props.nodeRef.current
                  : Xu.findDOMNode(this);
                u && dH(u);
              }
              this.performEnter(a);
            } else this.performExit();
          else
            this.props.unmountOnExit &&
              this.state.status === Ec &&
              this.setState({ status: yd });
        }),
        (n.performEnter = function (a) {
          var o = this,
            u = this.props.enter,
            g = this.context ? this.context.isMounting : a,
            x = this.props.nodeRef ? [g] : [Xu.findDOMNode(this), g],
            E = x[0],
            L = x[1],
            z = this.getTimeouts(),
            B = g ? z.appear : z.enter;
          if ((!a && !u) || KE.disabled) {
            this.safeSetState({ status: Ac }, function () {
              o.props.onEntered(E);
            });
            return;
          }
          this.props.onEnter(E, L),
            this.safeSetState({ status: ml }, function () {
              o.props.onEntering(E, L),
                o.onTransitionEnd(B, function () {
                  o.safeSetState({ status: Ac }, function () {
                    o.props.onEntered(E, L);
                  });
                });
            });
        }),
        (n.performExit = function () {
          var a = this,
            o = this.props.exit,
            u = this.getTimeouts(),
            g = this.props.nodeRef ? void 0 : Xu.findDOMNode(this);
          if (!o || KE.disabled) {
            this.safeSetState({ status: Ec }, function () {
              a.props.onExited(g);
            });
            return;
          }
          this.props.onExit(g),
            this.safeSetState({ status: Db }, function () {
              a.props.onExiting(g),
                a.onTransitionEnd(u.exit, function () {
                  a.safeSetState({ status: Ec }, function () {
                    a.props.onExited(g);
                  });
                });
            });
        }),
        (n.cancelNextCallback = function () {
          this.nextCallback !== null &&
            (this.nextCallback.cancel(), (this.nextCallback = null));
        }),
        (n.safeSetState = function (a, o) {
          (o = this.setNextCallback(o)), this.setState(a, o);
        }),
        (n.setNextCallback = function (a) {
          var o = this,
            u = !0;
          return (
            (this.nextCallback = function (g) {
              u && ((u = !1), (o.nextCallback = null), a(g));
            }),
            (this.nextCallback.cancel = function () {
              u = !1;
            }),
            this.nextCallback
          );
        }),
        (n.onTransitionEnd = function (a, o) {
          this.setNextCallback(o);
          var u = this.props.nodeRef
              ? this.props.nodeRef.current
              : Xu.findDOMNode(this),
            g = a == null && !this.props.addEndListener;
          if (!u || g) {
            setTimeout(this.nextCallback, 0);
            return;
          }
          if (this.props.addEndListener) {
            var x = this.props.nodeRef
                ? [this.nextCallback]
                : [u, this.nextCallback],
              E = x[0],
              L = x[1];
            this.props.addEndListener(E, L);
          }
          a != null && setTimeout(this.nextCallback, a);
        }),
        (n.render = function () {
          var a = this.state.status;
          if (a === yd) return null;
          var o = this.props,
            u = o.children;
          o.in,
            o.mountOnEnter,
            o.unmountOnExit,
            o.appear,
            o.enter,
            o.exit,
            o.timeout,
            o.addEndListener,
            o.onEnter,
            o.onEntering,
            o.onEntered,
            o.onExit,
            o.onExiting,
            o.onExited,
            o.nodeRef;
          var g = K4(o, [
            "children",
            "in",
            "mountOnEnter",
            "unmountOnExit",
            "appear",
            "enter",
            "exit",
            "timeout",
            "addEndListener",
            "onEnter",
            "onEntering",
            "onEntered",
            "onExit",
            "onExiting",
            "onExited",
            "nodeRef",
          ]);
          return nr.createElement(
            SP.Provider,
            { value: null },
            typeof u == "function"
              ? u(a, g)
              : nr.cloneElement(nr.Children.only(u), g)
          );
        }),
        e
      );
    })(nr.Component);
  Zo.contextType = SP;
  Zo.propTypes = {};
  function Cu() {}
  Zo.defaultProps = {
    in: !1,
    mountOnEnter: !1,
    unmountOnExit: !1,
    appear: !1,
    enter: !0,
    exit: !0,
    onEnter: Cu,
    onEntering: Cu,
    onEntered: Cu,
    onExit: Cu,
    onExiting: Cu,
    onExited: Cu,
  };
  Zo.UNMOUNTED = yd;
  Zo.EXITED = Ec;
  Zo.ENTERING = ml;
  Zo.ENTERED = Ac;
  Zo.EXITING = Db;
  const fH = Zo,
    Lh = !!(
      typeof window < "u" &&
      window.document &&
      window.document.createElement
    );
  var Mb = !1,
    jb = !1;
  try {
    var ex = {
      get passive() {
        return (Mb = !0);
      },
      get once() {
        return (jb = Mb = !0);
      },
    };
    Lh &&
      (window.addEventListener("test", ex, ex),
      window.removeEventListener("test", ex, !0));
  } catch {}
  function EP(t, e, n, r) {
    if (r && typeof r != "boolean" && !jb) {
      var a = r.once,
        o = r.capture,
        u = n;
      !jb &&
        a &&
        ((u =
          n.__once ||
          function g(x) {
            this.removeEventListener(e, g, o), n.call(this, x);
          }),
        (n.__once = u)),
        t.addEventListener(e, u, Mb ? r : o);
    }
    t.addEventListener(e, n, r);
  }
  function Fb(t, e, n, r) {
    var a = r && typeof r != "boolean" ? r.capture : r;
    t.removeEventListener(e, n, a),
      n.__once && t.removeEventListener(e, n.__once, a);
  }
  function dm(t, e, n, r) {
    return (
      EP(t, e, n, r),
      function () {
        Fb(t, e, n, r);
      }
    );
  }
  function pH(t, e, n, r) {
    if ((n === void 0 && (n = !1), r === void 0 && (r = !0), t)) {
      var a = document.createEvent("HTMLEvents");
      a.initEvent(e, n, r), t.dispatchEvent(a);
    }
  }
  function gH(t) {
    var e = Mc(t, "transitionDuration") || "",
      n = e.indexOf("ms") === -1 ? 1e3 : 1;
    return parseFloat(e) * n;
  }
  function mH(t, e, n) {
    n === void 0 && (n = 5);
    var r = !1,
      a = setTimeout(function () {
        r || pH(t, "transitionend", !0);
      }, e + n),
      o = dm(
        t,
        "transitionend",
        function () {
          r = !0;
        },
        { once: !0 }
      );
    return function () {
      clearTimeout(a), o();
    };
  }
  function kP(t, e, n, r) {
    n == null && (n = gH(t) || 0);
    var a = mH(t, n, r),
      o = dm(t, "transitionend", e);
    return function () {
      a(), o();
    };
  }
  function QE(t, e) {
    const n = Mc(t, e) || "",
      r = n.indexOf("ms") === -1 ? 1e3 : 1;
    return parseFloat(n) * r;
  }
  function vH(t, e) {
    const n = QE(t, "transitionDuration"),
      r = QE(t, "transitionDelay"),
      a = kP(
        t,
        (o) => {
          o.target === t && (a(), e(o));
        },
        n + r
      );
  }
  function yH(t) {
    t.offsetHeight;
  }
  const ZE = (t) =>
    !t || typeof t == "function"
      ? t
      : (e) => {
          t.current = e;
        };
  function xH(t, e) {
    const n = ZE(t),
      r = ZE(e);
    return (a) => {
      n && n(a), r && r(a);
    };
  }
  function Sv(t, e) {
    return ue.useMemo(() => xH(t, e), [t, e]);
  }
  function bH(t) {
    return t && "setState" in t ? Xu.findDOMNode(t) : t ?? null;
  }
  const wH = nr.forwardRef(
      (
        {
          onEnter: t,
          onEntering: e,
          onEntered: n,
          onExit: r,
          onExiting: a,
          onExited: o,
          addEndListener: u,
          children: g,
          childRef: x,
          ...E
        },
        L
      ) => {
        const z = ue.useRef(null),
          B = Sv(z, x),
          ae = (ke) => {
            B(bH(ke));
          },
          se = (ke) => (je) => {
            ke && z.current && ke(z.current, je);
          },
          le = ue.useCallback(se(t), [t]),
          he = ue.useCallback(se(e), [e]),
          oe = ue.useCallback(se(n), [n]),
          F = ue.useCallback(se(r), [r]),
          ce = ue.useCallback(se(a), [a]),
          ye = ue.useCallback(se(o), [o]),
          C = ue.useCallback(se(u), [u]);
        return P.jsx(fH, {
          ref: L,
          ...E,
          onEnter: le,
          onEntered: oe,
          onEntering: he,
          onExit: F,
          onExited: ye,
          onExiting: ce,
          addEndListener: C,
          nodeRef: z,
          children:
            typeof g == "function"
              ? (ke, je) => g(ke, { ...je, ref: ae })
              : nr.cloneElement(g, { ref: ae }),
        });
      }
    ),
    _H = wH;
  function SH(t) {
    const e = ue.useRef(t);
    return (
      ue.useEffect(() => {
        e.current = t;
      }, [t]),
      e
    );
  }
  function Za(t) {
    const e = SH(t);
    return ue.useCallback(
      function (...n) {
        return e.current && e.current(...n);
      },
      [e]
    );
  }
  const EH = (t) =>
    ue.forwardRef((e, n) =>
      P.jsx("div", { ...e, ref: n, className: sr(e.className, t) })
    );
  function kH() {
    return ue.useState(null);
  }
  function AH() {
    const t = ue.useRef(!0),
      e = ue.useRef(() => t.current);
    return (
      ue.useEffect(
        () => (
          (t.current = !0),
          () => {
            t.current = !1;
          }
        ),
        []
      ),
      e.current
    );
  }
  function CH(t) {
    const e = ue.useRef(null);
    return (
      ue.useEffect(() => {
        e.current = t;
      }),
      e.current
    );
  }
  const TH =
      typeof global < "u" &&
      global.navigator &&
      global.navigator.product === "ReactNative",
    IH = typeof document < "u",
    JE = IH || TH ? ue.useLayoutEffect : ue.useEffect,
    PH = ["as", "disabled"];
  function RH(t, e) {
    if (t == null) return {};
    var n = {},
      r = Object.keys(t),
      a,
      o;
    for (o = 0; o < r.length; o++)
      (a = r[o]), !(e.indexOf(a) >= 0) && (n[a] = t[a]);
    return n;
  }
  function OH(t) {
    return !t || t.trim() === "#";
  }
  function AP({
    tagName: t,
    disabled: e,
    href: n,
    target: r,
    rel: a,
    role: o,
    onClick: u,
    tabIndex: g = 0,
    type: x,
  }) {
    t || (n != null || r != null || a != null ? (t = "a") : (t = "button"));
    const E = { tagName: t };
    if (t === "button") return [{ type: x || "button", disabled: e }, E];
    const L = (B) => {
        if (((e || (t === "a" && OH(n))) && B.preventDefault(), e)) {
          B.stopPropagation();
          return;
        }
        u == null || u(B);
      },
      z = (B) => {
        B.key === " " && (B.preventDefault(), L(B));
      };
    return (
      t === "a" && (n || (n = "#"), e && (n = void 0)),
      [
        {
          role: o ?? "button",
          disabled: void 0,
          tabIndex: e ? void 0 : g,
          href: n,
          target: t === "a" ? r : void 0,
          "aria-disabled": e || void 0,
          rel: t === "a" ? a : void 0,
          onClick: L,
          onKeyDown: z,
        },
        E,
      ]
    );
  }
  const NH = ue.forwardRef((t, e) => {
    let { as: n, disabled: r } = t,
      a = RH(t, PH);
    const [o, { tagName: u }] = AP(
      Object.assign({ tagName: n, disabled: r }, a)
    );
    return P.jsx(u, Object.assign({}, a, o, { ref: e }));
  });
  NH.displayName = "Button";
  const LH = { [ml]: "show", [Ac]: "show" },
    CP = ue.forwardRef(
      (
        {
          className: t,
          children: e,
          transitionClasses: n = {},
          onEnter: r,
          ...a
        },
        o
      ) => {
        const u = {
            in: !1,
            timeout: 300,
            mountOnEnter: !1,
            unmountOnExit: !1,
            appear: !1,
            ...a,
          },
          g = ue.useCallback(
            (x, E) => {
              yH(x), r == null || r(x, E);
            },
            [r]
          );
        return P.jsx(_H, {
          ref: o,
          addEndListener: vH,
          ...u,
          onEnter: g,
          childRef: e.ref,
          children: (x, E) =>
            ue.cloneElement(e, {
              ...E,
              className: sr("fade", t, e.props.className, LH[x], n[x]),
            }),
        });
      }
    );
  CP.displayName = "Fade";
  const TP = CP,
    DH = {
      "aria-label": zo.string,
      onClick: zo.func,
      variant: zo.oneOf(["white"]),
    },
    Yw = ue.forwardRef(
      ({ className: t, variant: e, "aria-label": n = "Close", ...r }, a) =>
        P.jsx("button", {
          ref: a,
          type: "button",
          className: sr("btn-close", e && `btn-close-${e}`, t),
          "aria-label": n,
          ...r,
        })
    );
  Yw.displayName = "CloseButton";
  Yw.propTypes = DH;
  const MH = Yw,
    IP = ue.forwardRef(
      (
        {
          as: t,
          bsPrefix: e,
          variant: n = "primary",
          size: r,
          active: a = !1,
          disabled: o = !1,
          className: u,
          ...g
        },
        x
      ) => {
        const E = Zr(e, "btn"),
          [L, { tagName: z }] = AP({ tagName: t, disabled: o, ...g }),
          B = z;
        return P.jsx(B, {
          ...L,
          ...g,
          ref: x,
          disabled: o,
          className: sr(
            u,
            E,
            a && "active",
            n && `${E}-${n}`,
            r && `${E}-${r}`,
            g.href && o && "disabled"
          ),
        });
      }
    );
  IP.displayName = "Button";
  const Ts = IP;
  function jH(t) {
    const e = ue.useRef(t);
    return (e.current = t), e;
  }
  function PP(t) {
    const e = jH(t);
    ue.useEffect(() => () => e.current(), []);
  }
  function FH(t, e) {
    return ue.Children.toArray(t).some(
      (n) => ue.isValidElement(n) && n.type === e
    );
  }
  function zH({ as: t, bsPrefix: e, className: n, ...r }) {
    e = Zr(e, "col");
    const a = vP(),
      o = yP(),
      u = [],
      g = [];
    return (
      a.forEach((x) => {
        const E = r[x];
        delete r[x];
        let L, z, B;
        typeof E == "object" && E != null
          ? ({ span: L, offset: z, order: B } = E)
          : (L = E);
        const ae = x !== o ? `-${x}` : "";
        L && u.push(L === !0 ? `${e}${ae}` : `${e}${ae}-${L}`),
          B != null && g.push(`order${ae}-${B}`),
          z != null && g.push(`offset${ae}-${z}`);
      }),
      [
        { ...r, className: sr(n, ...u, ...g) },
        { as: t, bsPrefix: e, spans: u },
      ]
    );
  }
  const RP = ue.forwardRef((t, e) => {
    const [{ className: n, ...r }, { as: a = "div", bsPrefix: o, spans: u }] =
      zH(t);
    return P.jsx(a, { ...r, ref: e, className: sr(n, !u.length && o) });
  });
  RP.displayName = "Col";
  const Gr = RP;
  var VH = Function.prototype.bind.call(Function.prototype.call, [].slice);
  function Tu(t, e) {
    return VH(t.querySelectorAll(e));
  }
  function ek(t, e) {
    if (t.contains) return t.contains(e);
    if (t.compareDocumentPosition)
      return t === e || !!(t.compareDocumentPosition(e) & 16);
  }
  const $H = "data-rr-ui-";
  function BH(t) {
    return `${$H}${t}`;
  }
  const OP = ue.createContext(Lh ? window : void 0);
  OP.Provider;
  function Gw() {
    return ue.useContext(OP);
  }
  const HH = { type: zo.string, tooltip: zo.bool, as: zo.elementType },
    qw = ue.forwardRef(
      (
        {
          as: t = "div",
          className: e,
          type: n = "valid",
          tooltip: r = !1,
          ...a
        },
        o
      ) =>
        P.jsx(t, {
          ...a,
          ref: o,
          className: sr(e, `${n}-${r ? "tooltip" : "feedback"}`),
        })
    );
  qw.displayName = "Feedback";
  qw.propTypes = HH;
  const NP = qw,
    WH = ue.createContext({}),
    Uo = WH,
    LP = ue.forwardRef(
      (
        {
          id: t,
          bsPrefix: e,
          className: n,
          type: r = "checkbox",
          isValid: a = !1,
          isInvalid: o = !1,
          as: u = "input",
          ...g
        },
        x
      ) => {
        const { controlId: E } = ue.useContext(Uo);
        return (
          (e = Zr(e, "form-check-input")),
          P.jsx(u, {
            ...g,
            ref: x,
            type: r,
            id: t || E,
            className: sr(n, e, a && "is-valid", o && "is-invalid"),
          })
        );
      }
    );
  LP.displayName = "FormCheckInput";
  const DP = LP,
    MP = ue.forwardRef(({ bsPrefix: t, className: e, htmlFor: n, ...r }, a) => {
      const { controlId: o } = ue.useContext(Uo);
      return (
        (t = Zr(t, "form-check-label")),
        P.jsx("label", { ...r, ref: a, htmlFor: n || o, className: sr(e, t) })
      );
    });
  MP.displayName = "FormCheckLabel";
  const zb = MP,
    jP = ue.forwardRef(
      (
        {
          id: t,
          bsPrefix: e,
          bsSwitchPrefix: n,
          inline: r = !1,
          reverse: a = !1,
          disabled: o = !1,
          isValid: u = !1,
          isInvalid: g = !1,
          feedbackTooltip: x = !1,
          feedback: E,
          feedbackType: L,
          className: z,
          style: B,
          title: ae = "",
          type: se = "checkbox",
          label: le,
          children: he,
          as: oe = "input",
          ...F
        },
        ce
      ) => {
        (e = Zr(e, "form-check")), (n = Zr(n, "form-switch"));
        const { controlId: ye } = ue.useContext(Uo),
          C = ue.useMemo(() => ({ controlId: t || ye }), [ye, t]),
          ke = (!he && le != null && le !== !1) || FH(he, zb),
          je = P.jsx(DP, {
            ...F,
            type: se === "switch" ? "checkbox" : se,
            ref: ce,
            isValid: u,
            isInvalid: g,
            disabled: o,
            as: oe,
          });
        return P.jsx(Uo.Provider, {
          value: C,
          children: P.jsx("div", {
            style: B,
            className: sr(
              z,
              ke && e,
              r && `${e}-inline`,
              a && `${e}-reverse`,
              se === "switch" && n
            ),
            children:
              he ||
              P.jsxs(P.Fragment, {
                children: [
                  je,
                  ke && P.jsx(zb, { title: ae, children: le }),
                  E && P.jsx(NP, { type: L, tooltip: x, children: E }),
                ],
              }),
          }),
        });
      }
    );
  jP.displayName = "FormCheck";
  const fm = Object.assign(jP, { Input: DP, Label: zb }),
    FP = ue.forwardRef(
      (
        {
          bsPrefix: t,
          type: e,
          size: n,
          htmlSize: r,
          id: a,
          className: o,
          isValid: u = !1,
          isInvalid: g = !1,
          plaintext: x,
          readOnly: E,
          as: L = "input",
          ...z
        },
        B
      ) => {
        const { controlId: ae } = ue.useContext(Uo);
        return (
          (t = Zr(t, "form-control")),
          P.jsx(L, {
            ...z,
            type: e,
            size: r,
            ref: B,
            readOnly: E,
            id: a || ae,
            className: sr(
              o,
              x ? `${t}-plaintext` : t,
              n && `${t}-${n}`,
              e === "color" && `${t}-color`,
              u && "is-valid",
              g && "is-invalid"
            ),
          })
        );
      }
    );
  FP.displayName = "FormControl";
  const UH = Object.assign(FP, { Feedback: NP }),
    zP = ue.forwardRef(
      ({ className: t, bsPrefix: e, as: n = "div", ...r }, a) => (
        (e = Zr(e, "form-floating")),
        P.jsx(n, { ref: a, className: sr(t, e), ...r })
      )
    );
  zP.displayName = "FormFloating";
  const XH = zP,
    VP = ue.forwardRef(({ controlId: t, as: e = "div", ...n }, r) => {
      const a = ue.useMemo(() => ({ controlId: t }), [t]);
      return P.jsx(Uo.Provider, {
        value: a,
        children: P.jsx(e, { ...n, ref: r }),
      });
    });
  VP.displayName = "FormGroup";
  const $P = VP,
    BP = ue.forwardRef(
      (
        {
          as: t = "label",
          bsPrefix: e,
          column: n = !1,
          visuallyHidden: r = !1,
          className: a,
          htmlFor: o,
          ...u
        },
        g
      ) => {
        const { controlId: x } = ue.useContext(Uo);
        e = Zr(e, "form-label");
        let E = "col-form-label";
        typeof n == "string" && (E = `${E} ${E}-${n}`);
        const L = sr(a, e, r && "visually-hidden", n && E);
        return (
          (o = o || x),
          n
            ? P.jsx(Gr, { ref: g, as: "label", className: L, htmlFor: o, ...u })
            : P.jsx(t, { ref: g, className: L, htmlFor: o, ...u })
        );
      }
    );
  BP.displayName = "FormLabel";
  const YH = BP,
    HP = ue.forwardRef(({ bsPrefix: t, className: e, id: n, ...r }, a) => {
      const { controlId: o } = ue.useContext(Uo);
      return (
        (t = Zr(t, "form-range")),
        P.jsx("input", {
          ...r,
          type: "range",
          ref: a,
          className: sr(e, t),
          id: n || o,
        })
      );
    });
  HP.displayName = "FormRange";
  const GH = HP,
    WP = ue.forwardRef(
      (
        {
          bsPrefix: t,
          size: e,
          htmlSize: n,
          className: r,
          isValid: a = !1,
          isInvalid: o = !1,
          id: u,
          ...g
        },
        x
      ) => {
        const { controlId: E } = ue.useContext(Uo);
        return (
          (t = Zr(t, "form-select")),
          P.jsx("select", {
            ...g,
            size: n,
            ref: x,
            className: sr(
              r,
              t,
              e && `${t}-${e}`,
              a && "is-valid",
              o && "is-invalid"
            ),
            id: u || E,
          })
        );
      }
    );
  WP.displayName = "FormSelect";
  const qH = WP,
    UP = ue.forwardRef(
      ({ bsPrefix: t, className: e, as: n = "small", muted: r, ...a }, o) => (
        (t = Zr(t, "form-text")),
        P.jsx(n, { ...a, ref: o, className: sr(e, t, r && "text-muted") })
      )
    );
  UP.displayName = "FormText";
  const KH = UP,
    XP = ue.forwardRef((t, e) => P.jsx(fm, { ...t, ref: e, type: "switch" }));
  XP.displayName = "Switch";
  const QH = Object.assign(XP, { Input: fm.Input, Label: fm.Label }),
    YP = ue.forwardRef(
      (
        {
          bsPrefix: t,
          className: e,
          children: n,
          controlId: r,
          label: a,
          ...o
        },
        u
      ) => (
        (t = Zr(t, "form-floating")),
        P.jsxs($P, {
          ref: u,
          className: sr(e, t),
          controlId: r,
          ...o,
          children: [n, P.jsx("label", { htmlFor: r, children: a })],
        })
      )
    );
  YP.displayName = "FloatingLabel";
  const ZH = YP,
    JH = { _ref: zo.any, validated: zo.bool, as: zo.elementType },
    Kw = ue.forwardRef(
      ({ className: t, validated: e, as: n = "form", ...r }, a) =>
        P.jsx(n, { ...r, ref: a, className: sr(t, e && "was-validated") })
    );
  Kw.displayName = "Form";
  Kw.propTypes = JH;
  const vt = Object.assign(Kw, {
    Group: $P,
    Control: UH,
    Floating: XH,
    Check: fm,
    Switch: QH,
    Label: YH,
    Text: KH,
    Range: GH,
    Select: qH,
    FloatingLabel: ZH,
  });
  var Gp;
  function tk(t) {
    if (((!Gp && Gp !== 0) || t) && Lh) {
      var e = document.createElement("div");
      (e.style.position = "absolute"),
        (e.style.top = "-9999px"),
        (e.style.width = "50px"),
        (e.style.height = "50px"),
        (e.style.overflow = "scroll"),
        document.body.appendChild(e),
        (Gp = e.offsetWidth - e.clientWidth),
        document.body.removeChild(e);
    }
    return Gp;
  }
  function tx(t) {
    t === void 0 && (t = _v());
    try {
      var e = t.activeElement;
      return !e || !e.nodeName ? null : e;
    } catch {
      return t.body;
    }
  }
  function eW(t = document) {
    const e = t.defaultView;
    return Math.abs(e.innerWidth - t.documentElement.clientWidth);
  }
  const nk = BH("modal-open");
  class tW {
    constructor({
      ownerDocument: e,
      handleContainerOverflow: n = !0,
      isRTL: r = !1,
    } = {}) {
      (this.handleContainerOverflow = n),
        (this.isRTL = r),
        (this.modals = []),
        (this.ownerDocument = e);
    }
    getScrollbarWidth() {
      return eW(this.ownerDocument);
    }
    getElement() {
      return (this.ownerDocument || document).body;
    }
    setModalAttributes(e) {}
    removeModalAttributes(e) {}
    setContainerStyle(e) {
      const n = { overflow: "hidden" },
        r = this.isRTL ? "paddingLeft" : "paddingRight",
        a = this.getElement();
      (e.style = { overflow: a.style.overflow, [r]: a.style[r] }),
        e.scrollBarWidth &&
          (n[r] = `${parseInt(Mc(a, r) || "0", 10) + e.scrollBarWidth}px`),
        a.setAttribute(nk, ""),
        Mc(a, n);
    }
    reset() {
      [...this.modals].forEach((e) => this.remove(e));
    }
    removeContainerStyle(e) {
      const n = this.getElement();
      n.removeAttribute(nk), Object.assign(n.style, e.style);
    }
    add(e) {
      let n = this.modals.indexOf(e);
      return (
        n !== -1 ||
          ((n = this.modals.length),
          this.modals.push(e),
          this.setModalAttributes(e),
          n !== 0) ||
          ((this.state = {
            scrollBarWidth: this.getScrollbarWidth(),
            style: {},
          }),
          this.handleContainerOverflow && this.setContainerStyle(this.state)),
        n
      );
    }
    remove(e) {
      const n = this.modals.indexOf(e);
      n !== -1 &&
        (this.modals.splice(n, 1),
        !this.modals.length &&
          this.handleContainerOverflow &&
          this.removeContainerStyle(this.state),
        this.removeModalAttributes(e));
    }
    isTopModal(e) {
      return !!this.modals.length && this.modals[this.modals.length - 1] === e;
    }
  }
  const Qw = tW,
    nx = (t, e) =>
      Lh
        ? t == null
          ? (e || _v()).body
          : (typeof t == "function" && (t = t()),
            t && "current" in t && (t = t.current),
            t && ("nodeType" in t || t.getBoundingClientRect) ? t : null)
        : null;
  function nW(t, e) {
    const n = Gw(),
      [r, a] = ue.useState(() => nx(t, n == null ? void 0 : n.document));
    if (!r) {
      const o = nx(t);
      o && a(o);
    }
    return (
      ue.useEffect(() => {
        e && r && e(r);
      }, [e, r]),
      ue.useEffect(() => {
        const o = nx(t);
        o !== r && a(o);
      }, [t, r]),
      r
    );
  }
  function rW({
    children: t,
    in: e,
    onExited: n,
    mountOnEnter: r,
    unmountOnExit: a,
  }) {
    const o = ue.useRef(null),
      u = ue.useRef(e),
      g = Za(n);
    ue.useEffect(() => {
      e ? (u.current = !0) : g(o.current);
    }, [e, g]);
    const x = Sv(o, t.ref),
      E = ue.cloneElement(t, { ref: x });
    return e ? E : a || (!u.current && r) ? null : E;
  }
  function iW({ in: t, onTransition: e }) {
    const n = ue.useRef(null),
      r = ue.useRef(!0),
      a = Za(e);
    return (
      JE(() => {
        if (!n.current) return;
        let o = !1;
        return (
          a({
            in: t,
            element: n.current,
            initial: r.current,
            isStale: () => o,
          }),
          () => {
            o = !0;
          }
        );
      }, [t, a]),
      JE(
        () => (
          (r.current = !1),
          () => {
            r.current = !0;
          }
        ),
        []
      ),
      n
    );
  }
  function sW({
    children: t,
    in: e,
    onExited: n,
    onEntered: r,
    transition: a,
  }) {
    const [o, u] = ue.useState(!e);
    e && o && u(!1);
    const g = iW({
        in: !!e,
        onTransition: (E) => {
          const L = () => {
            E.isStale() ||
              (E.in
                ? r == null || r(E.element, E.initial)
                : (u(!0), n == null || n(E.element)));
          };
          Promise.resolve(a(E)).then(L, (z) => {
            throw (E.in || u(!0), z);
          });
        },
      }),
      x = Sv(g, t.ref);
    return o && !e ? null : ue.cloneElement(t, { ref: x });
  }
  function rk(t, e, n) {
    return t
      ? P.jsx(t, Object.assign({}, n))
      : e
      ? P.jsx(sW, Object.assign({}, n, { transition: e }))
      : P.jsx(rW, Object.assign({}, n));
  }
  function aW(t) {
    return t.code === "Escape" || t.keyCode === 27;
  }
  const oW = [
    "show",
    "role",
    "className",
    "style",
    "children",
    "backdrop",
    "keyboard",
    "onBackdropClick",
    "onEscapeKeyDown",
    "transition",
    "runTransition",
    "backdropTransition",
    "runBackdropTransition",
    "autoFocus",
    "enforceFocus",
    "restoreFocus",
    "restoreFocusOptions",
    "renderDialog",
    "renderBackdrop",
    "manager",
    "container",
    "onShow",
    "onHide",
    "onExit",
    "onExited",
    "onExiting",
    "onEnter",
    "onEntering",
    "onEntered",
  ];
  function lW(t, e) {
    if (t == null) return {};
    var n = {},
      r = Object.keys(t),
      a,
      o;
    for (o = 0; o < r.length; o++)
      (a = r[o]), !(e.indexOf(a) >= 0) && (n[a] = t[a]);
    return n;
  }
  let rx;
  function cW(t) {
    return (
      rx || (rx = new Qw({ ownerDocument: t == null ? void 0 : t.document })),
      rx
    );
  }
  function uW(t) {
    const e = Gw(),
      n = t || cW(e),
      r = ue.useRef({ dialog: null, backdrop: null });
    return Object.assign(r.current, {
      add: () => n.add(r.current),
      remove: () => n.remove(r.current),
      isTopModal: () => n.isTopModal(r.current),
      setDialogRef: ue.useCallback((a) => {
        r.current.dialog = a;
      }, []),
      setBackdropRef: ue.useCallback((a) => {
        r.current.backdrop = a;
      }, []),
    });
  }
  const GP = ue.forwardRef((t, e) => {
    let {
        show: n = !1,
        role: r = "dialog",
        className: a,
        style: o,
        children: u,
        backdrop: g = !0,
        keyboard: x = !0,
        onBackdropClick: E,
        onEscapeKeyDown: L,
        transition: z,
        runTransition: B,
        backdropTransition: ae,
        runBackdropTransition: se,
        autoFocus: le = !0,
        enforceFocus: he = !0,
        restoreFocus: oe = !0,
        restoreFocusOptions: F,
        renderDialog: ce,
        renderBackdrop: ye = (gt) => P.jsx("div", Object.assign({}, gt)),
        manager: C,
        container: ke,
        onShow: je,
        onHide: tt = () => {},
        onExit: Ct,
        onExited: xt,
        onExiting: pt,
        onEnter: Mt,
        onEntering: Vt,
        onEntered: It,
      } = t,
      ht = lW(t, oW);
    const Ie = Gw(),
      Lt = nW(ke),
      we = uW(C),
      Xe = AH(),
      Oe = CH(n),
      [Ye, Re] = ue.useState(!n),
      $e = ue.useRef(null);
    ue.useImperativeHandle(e, () => we, [we]),
      Lh && !Oe && n && ($e.current = tx(Ie == null ? void 0 : Ie.document)),
      n && Ye && Re(!1);
    const Fe = Za(() => {
        if (
          (we.add(),
          (Wt.current = dm(document, "keydown", Ze)),
          (Zt.current = dm(document, "focus", () => setTimeout(de), !0)),
          je && je(),
          le)
        ) {
          var gt, mn;
          const Jt = tx(
            (gt = (mn = we.dialog) == null ? void 0 : mn.ownerDocument) != null
              ? gt
              : Ie == null
              ? void 0
              : Ie.document
          );
          we.dialog &&
            Jt &&
            !ek(we.dialog, Jt) &&
            (($e.current = Jt), we.dialog.focus());
        }
      }),
      ct = Za(() => {
        if (
          (we.remove(),
          Wt.current == null || Wt.current(),
          Zt.current == null || Zt.current(),
          oe)
        ) {
          var gt;
          (gt = $e.current) == null || gt.focus == null || gt.focus(F),
            ($e.current = null);
        }
      });
    ue.useEffect(() => {
      !n || !Lt || Fe();
    }, [n, Lt, Fe]),
      ue.useEffect(() => {
        Ye && ct();
      }, [Ye, ct]),
      PP(() => {
        ct();
      });
    const de = Za(() => {
        if (!he || !Xe() || !we.isTopModal()) return;
        const gt = tx(Ie == null ? void 0 : Ie.document);
        we.dialog && gt && !ek(we.dialog, gt) && we.dialog.focus();
      }),
      yt = Za((gt) => {
        gt.target === gt.currentTarget &&
          (E == null || E(gt), g === !0 && tt());
      }),
      Ze = Za((gt) => {
        x &&
          aW(gt) &&
          we.isTopModal() &&
          (L == null || L(gt), gt.defaultPrevented || tt());
      }),
      Zt = ue.useRef(),
      Wt = ue.useRef(),
      $t = (...gt) => {
        Re(!0), xt == null || xt(...gt);
      };
    if (!Lt) return null;
    const Rt = Object.assign(
      {
        role: r,
        ref: we.setDialogRef,
        "aria-modal": r === "dialog" ? !0 : void 0,
      },
      ht,
      { style: o, className: a, tabIndex: -1 }
    );
    let sn = ce
      ? ce(Rt)
      : P.jsx(
          "div",
          Object.assign({}, Rt, {
            children: ue.cloneElement(u, { role: "document" }),
          })
        );
    sn = rk(z, B, {
      unmountOnExit: !0,
      mountOnEnter: !0,
      appear: !0,
      in: !!n,
      onExit: Ct,
      onExiting: pt,
      onExited: $t,
      onEnter: Mt,
      onEntering: Vt,
      onEntered: It,
      children: sn,
    });
    let dt = null;
    return (
      g &&
        ((dt = ye({ ref: we.setBackdropRef, onClick: yt })),
        (dt = rk(ae, se, {
          in: !!n,
          appear: !0,
          mountOnEnter: !0,
          unmountOnExit: !0,
          children: dt,
        }))),
      P.jsx(P.Fragment, {
        children: Xu.createPortal(
          P.jsxs(P.Fragment, { children: [dt, sn] }),
          Lt
        ),
      })
    );
  });
  GP.displayName = "Modal";
  const hW = Object.assign(GP, { Manager: Qw });
  function dW(t, e) {
    return t.classList
      ? !!e && t.classList.contains(e)
      : (" " + (t.className.baseVal || t.className) + " ").indexOf(
          " " + e + " "
        ) !== -1;
  }
  function fW(t, e) {
    t.classList
      ? t.classList.add(e)
      : dW(t, e) ||
        (typeof t.className == "string"
          ? (t.className = t.className + " " + e)
          : t.setAttribute(
              "class",
              ((t.className && t.className.baseVal) || "") + " " + e
            ));
  }
  function ik(t, e) {
    return t
      .replace(new RegExp("(^|\\s)" + e + "(?:\\s|$)", "g"), "$1")
      .replace(/\s+/g, " ")
      .replace(/^\s*|\s*$/g, "");
  }
  function pW(t, e) {
    t.classList
      ? t.classList.remove(e)
      : typeof t.className == "string"
      ? (t.className = ik(t.className, e))
      : t.setAttribute(
          "class",
          ik((t.className && t.className.baseVal) || "", e)
        );
  }
  const Iu = {
    FIXED_CONTENT: ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
    STICKY_CONTENT: ".sticky-top",
    NAVBAR_TOGGLER: ".navbar-toggler",
  };
  class gW extends Qw {
    adjustAndStore(e, n, r) {
      const a = n.style[e];
      (n.dataset[e] = a), Mc(n, { [e]: `${parseFloat(Mc(n, e)) + r}px` });
    }
    restore(e, n) {
      const r = n.dataset[e];
      r !== void 0 && (delete n.dataset[e], Mc(n, { [e]: r }));
    }
    setContainerStyle(e) {
      super.setContainerStyle(e);
      const n = this.getElement();
      if ((fW(n, "modal-open"), !e.scrollBarWidth)) return;
      const r = this.isRTL ? "paddingLeft" : "paddingRight",
        a = this.isRTL ? "marginLeft" : "marginRight";
      Tu(n, Iu.FIXED_CONTENT).forEach((o) =>
        this.adjustAndStore(r, o, e.scrollBarWidth)
      ),
        Tu(n, Iu.STICKY_CONTENT).forEach((o) =>
          this.adjustAndStore(a, o, -e.scrollBarWidth)
        ),
        Tu(n, Iu.NAVBAR_TOGGLER).forEach((o) =>
          this.adjustAndStore(a, o, e.scrollBarWidth)
        );
    }
    removeContainerStyle(e) {
      super.removeContainerStyle(e);
      const n = this.getElement();
      pW(n, "modal-open");
      const r = this.isRTL ? "paddingLeft" : "paddingRight",
        a = this.isRTL ? "marginLeft" : "marginRight";
      Tu(n, Iu.FIXED_CONTENT).forEach((o) => this.restore(r, o)),
        Tu(n, Iu.STICKY_CONTENT).forEach((o) => this.restore(a, o)),
        Tu(n, Iu.NAVBAR_TOGGLER).forEach((o) => this.restore(a, o));
    }
  }
  let ix;
  function mW(t) {
    return ix || (ix = new gW(t)), ix;
  }
  const qP = ue.forwardRef(
    ({ className: t, bsPrefix: e, as: n = "div", ...r }, a) => (
      (e = Zr(e, "modal-body")), P.jsx(n, { ref: a, className: sr(t, e), ...r })
    )
  );
  qP.displayName = "ModalBody";
  const vW = qP,
    yW = ue.createContext({ onHide() {} }),
    KP = yW,
    QP = ue.forwardRef(
      (
        {
          bsPrefix: t,
          className: e,
          contentClassName: n,
          centered: r,
          size: a,
          fullscreen: o,
          children: u,
          scrollable: g,
          ...x
        },
        E
      ) => {
        t = Zr(t, "modal");
        const L = `${t}-dialog`,
          z = typeof o == "string" ? `${t}-fullscreen-${o}` : `${t}-fullscreen`;
        return P.jsx("div", {
          ...x,
          ref: E,
          className: sr(
            L,
            e,
            a && `${t}-${a}`,
            r && `${L}-centered`,
            g && `${L}-scrollable`,
            o && z
          ),
          children: P.jsx("div", {
            className: sr(`${t}-content`, n),
            children: u,
          }),
        });
      }
    );
  QP.displayName = "ModalDialog";
  const ZP = QP,
    JP = ue.forwardRef(
      ({ className: t, bsPrefix: e, as: n = "div", ...r }, a) => (
        (e = Zr(e, "modal-footer")),
        P.jsx(n, { ref: a, className: sr(t, e), ...r })
      )
    );
  JP.displayName = "ModalFooter";
  const xW = JP,
    bW = ue.forwardRef(
      (
        {
          closeLabel: t = "Close",
          closeVariant: e,
          closeButton: n = !1,
          onHide: r,
          children: a,
          ...o
        },
        u
      ) => {
        const g = ue.useContext(KP),
          x = Za(() => {
            g == null || g.onHide(), r == null || r();
          });
        return P.jsxs("div", {
          ref: u,
          ...o,
          children: [
            a,
            n && P.jsx(MH, { "aria-label": t, variant: e, onClick: x }),
          ],
        });
      }
    ),
    wW = bW,
    eR = ue.forwardRef(
      (
        {
          bsPrefix: t,
          className: e,
          closeLabel: n = "Close",
          closeButton: r = !1,
          ...a
        },
        o
      ) => (
        (t = Zr(t, "modal-header")),
        P.jsx(wW, {
          ref: o,
          ...a,
          className: sr(e, t),
          closeLabel: n,
          closeButton: r,
        })
      )
    );
  eR.displayName = "ModalHeader";
  const _W = eR,
    SW = EH("h4"),
    tR = ue.forwardRef(
      ({ className: t, bsPrefix: e, as: n = SW, ...r }, a) => (
        (e = Zr(e, "modal-title")),
        P.jsx(n, { ref: a, className: sr(t, e), ...r })
      )
    );
  tR.displayName = "ModalTitle";
  const EW = tR;
  function kW(t) {
    return P.jsx(TP, { ...t, timeout: null });
  }
  function AW(t) {
    return P.jsx(TP, { ...t, timeout: null });
  }
  const nR = ue.forwardRef(
    (
      {
        bsPrefix: t,
        className: e,
        style: n,
        dialogClassName: r,
        contentClassName: a,
        children: o,
        dialogAs: u = ZP,
        "aria-labelledby": g,
        "aria-describedby": x,
        "aria-label": E,
        show: L = !1,
        animation: z = !0,
        backdrop: B = !0,
        keyboard: ae = !0,
        onEscapeKeyDown: se,
        onShow: le,
        onHide: he,
        container: oe,
        autoFocus: F = !0,
        enforceFocus: ce = !0,
        restoreFocus: ye = !0,
        restoreFocusOptions: C,
        onEntered: ke,
        onExit: je,
        onExiting: tt,
        onEnter: Ct,
        onEntering: xt,
        onExited: pt,
        backdropClassName: Mt,
        manager: Vt,
        ...It
      },
      ht
    ) => {
      const [Ie, Lt] = ue.useState({}),
        [we, Xe] = ue.useState(!1),
        Oe = ue.useRef(!1),
        Ye = ue.useRef(!1),
        Re = ue.useRef(null),
        [$e, Fe] = kH(),
        ct = Sv(ht, Fe),
        de = Za(he),
        yt = eH();
      t = Zr(t, "modal");
      const Ze = ue.useMemo(() => ({ onHide: de }), [de]);
      function Zt() {
        return Vt || mW({ isRTL: yt });
      }
      function Wt(qe) {
        if (!Lh) return;
        const Dt = Zt().getScrollbarWidth() > 0,
          nn = qe.scrollHeight > _v(qe).documentElement.clientHeight;
        Lt({
          paddingRight: Dt && !nn ? tk() : void 0,
          paddingLeft: !Dt && nn ? tk() : void 0,
        });
      }
      const $t = Za(() => {
        $e && Wt($e.dialog);
      });
      PP(() => {
        Fb(window, "resize", $t), Re.current == null || Re.current();
      });
      const Rt = () => {
          Oe.current = !0;
        },
        sn = (qe) => {
          Oe.current && $e && qe.target === $e.dialog && (Ye.current = !0),
            (Oe.current = !1);
        },
        dt = () => {
          Xe(!0),
            (Re.current = kP($e.dialog, () => {
              Xe(!1);
            }));
        },
        gt = (qe) => {
          qe.target === qe.currentTarget && dt();
        },
        mn = (qe) => {
          if (B === "static") {
            gt(qe);
            return;
          }
          if (Ye.current || qe.target !== qe.currentTarget) {
            Ye.current = !1;
            return;
          }
          he == null || he();
        },
        Jt = (qe) => {
          ae
            ? se == null || se(qe)
            : (qe.preventDefault(), B === "static" && dt());
        },
        Rn = (qe, Dt) => {
          qe && Wt(qe), Ct == null || Ct(qe, Dt);
        },
        jr = (qe) => {
          Re.current == null || Re.current(), je == null || je(qe);
        },
        vn = (qe, Dt) => {
          xt == null || xt(qe, Dt), EP(window, "resize", $t);
        },
        zn = (qe) => {
          qe && (qe.style.display = ""),
            pt == null || pt(qe),
            Fb(window, "resize", $t);
        },
        Te = ue.useCallback(
          (qe) =>
            P.jsx("div", {
              ...qe,
              className: sr(`${t}-backdrop`, Mt, !z && "show"),
            }),
          [z, Mt, t]
        ),
        st = { ...n, ...Ie };
      st.display = "block";
      const Ge = (qe) =>
        P.jsx("div", {
          role: "dialog",
          ...qe,
          style: st,
          className: sr(e, t, we && `${t}-static`, !z && "show"),
          onClick: B ? mn : void 0,
          onMouseUp: sn,
          "aria-label": E,
          "aria-labelledby": g,
          "aria-describedby": x,
          children: P.jsx(u, {
            ...It,
            onMouseDown: Rt,
            className: r,
            contentClassName: a,
            children: o,
          }),
        });
      return P.jsx(KP.Provider, {
        value: Ze,
        children: P.jsx(hW, {
          show: L,
          ref: ct,
          backdrop: B,
          container: oe,
          keyboard: !0,
          autoFocus: F,
          enforceFocus: ce,
          restoreFocus: ye,
          restoreFocusOptions: C,
          onEscapeKeyDown: Jt,
          onShow: le,
          onHide: he,
          onEnter: Rn,
          onEntering: vn,
          onEntered: ke,
          onExit: jr,
          onExiting: tt,
          onExited: zn,
          manager: Zt(),
          transition: z ? kW : void 0,
          backdropTransition: z ? AW : void 0,
          renderBackdrop: Te,
          renderDialog: Ge,
        }),
      });
    }
  );
  nR.displayName = "Modal";
  const Pn = Object.assign(nR, {
      Body: vW,
      Header: _W,
      Title: EW,
      Footer: xW,
      Dialog: ZP,
      TRANSITION_DURATION: 300,
      BACKDROP_TRANSITION_DURATION: 150,
    }),
    rR = ue.forwardRef(
      ({ bsPrefix: t, className: e, as: n = "div", ...r }, a) => {
        const o = Zr(t, "row"),
          u = vP(),
          g = yP(),
          x = `${o}-cols`,
          E = [];
        return (
          u.forEach((L) => {
            const z = r[L];
            delete r[L];
            let B;
            z != null && typeof z == "object" ? ({ cols: B } = z) : (B = z);
            const ae = L !== g ? `-${L}` : "";
            B != null && E.push(`${x}${ae}-${B}`);
          }),
          P.jsx(n, { ref: a, ...r, className: sr(e, o, ...E) })
        );
      }
    );
  rR.displayName = "Row";
  const Ev = rR;
  var sk = {};
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const iR = function (t) {
      const e = [];
      let n = 0;
      for (let r = 0; r < t.length; r++) {
        let a = t.charCodeAt(r);
        a < 128
          ? (e[n++] = a)
          : a < 2048
          ? ((e[n++] = (a >> 6) | 192), (e[n++] = (a & 63) | 128))
          : (a & 64512) === 55296 &&
            r + 1 < t.length &&
            (t.charCodeAt(r + 1) & 64512) === 56320
          ? ((a = 65536 + ((a & 1023) << 10) + (t.charCodeAt(++r) & 1023)),
            (e[n++] = (a >> 18) | 240),
            (e[n++] = ((a >> 12) & 63) | 128),
            (e[n++] = ((a >> 6) & 63) | 128),
            (e[n++] = (a & 63) | 128))
          : ((e[n++] = (a >> 12) | 224),
            (e[n++] = ((a >> 6) & 63) | 128),
            (e[n++] = (a & 63) | 128));
      }
      return e;
    },
    CW = function (t) {
      const e = [];
      let n = 0,
        r = 0;
      for (; n < t.length; ) {
        const a = t[n++];
        if (a < 128) e[r++] = String.fromCharCode(a);
        else if (a > 191 && a < 224) {
          const o = t[n++];
          e[r++] = String.fromCharCode(((a & 31) << 6) | (o & 63));
        } else if (a > 239 && a < 365) {
          const o = t[n++],
            u = t[n++],
            g = t[n++],
            x =
              (((a & 7) << 18) |
                ((o & 63) << 12) |
                ((u & 63) << 6) |
                (g & 63)) -
              65536;
          (e[r++] = String.fromCharCode(55296 + (x >> 10))),
            (e[r++] = String.fromCharCode(56320 + (x & 1023)));
        } else {
          const o = t[n++],
            u = t[n++];
          e[r++] = String.fromCharCode(
            ((a & 15) << 12) | ((o & 63) << 6) | (u & 63)
          );
        }
      }
      return e.join("");
    },
    sR = {
      byteToCharMap_: null,
      charToByteMap_: null,
      byteToCharMapWebSafe_: null,
      charToByteMapWebSafe_: null,
      ENCODED_VALS_BASE:
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
      get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + "+/=";
      },
      get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + "-_.";
      },
      HAS_NATIVE_SUPPORT: typeof atob == "function",
      encodeByteArray(t, e) {
        if (!Array.isArray(t))
          throw Error("encodeByteArray takes an array as a parameter");
        this.init_();
        const n = e ? this.byteToCharMapWebSafe_ : this.byteToCharMap_,
          r = [];
        for (let a = 0; a < t.length; a += 3) {
          const o = t[a],
            u = a + 1 < t.length,
            g = u ? t[a + 1] : 0,
            x = a + 2 < t.length,
            E = x ? t[a + 2] : 0,
            L = o >> 2,
            z = ((o & 3) << 4) | (g >> 4);
          let B = ((g & 15) << 2) | (E >> 6),
            ae = E & 63;
          x || ((ae = 64), u || (B = 64)), r.push(n[L], n[z], n[B], n[ae]);
        }
        return r.join("");
      },
      encodeString(t, e) {
        return this.HAS_NATIVE_SUPPORT && !e
          ? btoa(t)
          : this.encodeByteArray(iR(t), e);
      },
      decodeString(t, e) {
        return this.HAS_NATIVE_SUPPORT && !e
          ? atob(t)
          : CW(this.decodeStringToByteArray(t, e));
      },
      decodeStringToByteArray(t, e) {
        this.init_();
        const n = e ? this.charToByteMapWebSafe_ : this.charToByteMap_,
          r = [];
        for (let a = 0; a < t.length; ) {
          const o = n[t.charAt(a++)],
            g = a < t.length ? n[t.charAt(a)] : 0;
          ++a;
          const E = a < t.length ? n[t.charAt(a)] : 64;
          ++a;
          const z = a < t.length ? n[t.charAt(a)] : 64;
          if ((++a, o == null || g == null || E == null || z == null))
            throw new TW();
          const B = (o << 2) | (g >> 4);
          if ((r.push(B), E !== 64)) {
            const ae = ((g << 4) & 240) | (E >> 2);
            if ((r.push(ae), z !== 64)) {
              const se = ((E << 6) & 192) | z;
              r.push(se);
            }
          }
        }
        return r;
      },
      init_() {
        if (!this.byteToCharMap_) {
          (this.byteToCharMap_ = {}),
            (this.charToByteMap_ = {}),
            (this.byteToCharMapWebSafe_ = {}),
            (this.charToByteMapWebSafe_ = {});
          for (let t = 0; t < this.ENCODED_VALS.length; t++)
            (this.byteToCharMap_[t] = this.ENCODED_VALS.charAt(t)),
              (this.charToByteMap_[this.byteToCharMap_[t]] = t),
              (this.byteToCharMapWebSafe_[t] =
                this.ENCODED_VALS_WEBSAFE.charAt(t)),
              (this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[t]] = t),
              t >= this.ENCODED_VALS_BASE.length &&
                ((this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(t)] = t),
                (this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(t)] = t));
        }
      },
    };
  class TW extends Error {
    constructor() {
      super(...arguments), (this.name = "DecodeBase64StringError");
    }
  }
  const IW = function (t) {
      const e = iR(t);
      return sR.encodeByteArray(e, !0);
    },
    pm = function (t) {
      return IW(t).replace(/\./g, "");
    },
    aR = function (t) {
      try {
        return sR.decodeString(t, !0);
      } catch (e) {
        console.error("base64Decode failed: ", e);
      }
      return null;
    };
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function PW() {
    if (typeof self < "u") return self;
    if (typeof window < "u") return window;
    if (typeof global < "u") return global;
    throw new Error("Unable to locate global object.");
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const RW = () => PW().__FIREBASE_DEFAULTS__,
    OW = () => {
      if (typeof process > "u" || typeof sk > "u") return;
      const t = sk.__FIREBASE_DEFAULTS__;
      if (t) return JSON.parse(t);
    },
    NW = () => {
      if (typeof document > "u") return;
      let t;
      try {
        t = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);
      } catch {
        return;
      }
      const e = t && aR(t[1]);
      return e && JSON.parse(e);
    },
    Zw = () => {
      try {
        return RW() || OW() || NW();
      } catch (t) {
        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${t}`);
        return;
      }
    },
    oR = (t) => {
      var e, n;
      return (n =
        (e = Zw()) === null || e === void 0 ? void 0 : e.emulatorHosts) ===
        null || n === void 0
        ? void 0
        : n[t];
    },
    lR = (t) => {
      const e = oR(t);
      if (!e) return;
      const n = e.lastIndexOf(":");
      if (n <= 0 || n + 1 === e.length)
        throw new Error(
          `Invalid host ${e} with no separate hostname and port!`
        );
      const r = parseInt(e.substring(n + 1), 10);
      return e[0] === "[" ? [e.substring(1, n - 1), r] : [e.substring(0, n), r];
    },
    cR = () => {
      var t;
      return (t = Zw()) === null || t === void 0 ? void 0 : t.config;
    },
    uR = (t) => {
      var e;
      return (e = Zw()) === null || e === void 0 ? void 0 : e[`_${t}`];
    };
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class LW {
    constructor() {
      (this.reject = () => {}),
        (this.resolve = () => {}),
        (this.promise = new Promise((e, n) => {
          (this.resolve = e), (this.reject = n);
        }));
    }
    wrapCallback(e) {
      return (n, r) => {
        n ? this.reject(n) : this.resolve(r),
          typeof e == "function" &&
            (this.promise.catch(() => {}), e.length === 1 ? e(n) : e(n, r));
      };
    }
  }
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function hR(t, e) {
    if (t.uid)
      throw new Error(
        'The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.'
      );
    const n = { alg: "none", type: "JWT" },
      r = e || "demo-project",
      a = t.iat || 0,
      o = t.sub || t.user_id;
    if (!o)
      throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
    const u = Object.assign(
        {
          iss: `https://securetoken.google.com/${r}`,
          aud: r,
          iat: a,
          exp: a + 3600,
          auth_time: a,
          sub: o,
          user_id: o,
          firebase: { sign_in_provider: "custom", identities: {} },
        },
        t
      ),
      g = "";
    return [pm(JSON.stringify(n)), pm(JSON.stringify(u)), g].join(".");
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function Zi() {
    return typeof navigator < "u" && typeof navigator.userAgent == "string"
      ? navigator.userAgent
      : "";
  }
  function DW() {
    return (
      typeof window < "u" &&
      !!(window.cordova || window.phonegap || window.PhoneGap) &&
      /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(Zi())
    );
  }
  function MW() {
    const t =
      typeof chrome == "object"
        ? chrome.runtime
        : typeof browser == "object"
        ? browser.runtime
        : void 0;
    return typeof t == "object" && t.id !== void 0;
  }
  function jW() {
    return typeof navigator == "object" && navigator.product === "ReactNative";
  }
  function FW() {
    const t = Zi();
    return t.indexOf("MSIE ") >= 0 || t.indexOf("Trident/") >= 0;
  }
  function zW() {
    try {
      return typeof indexedDB == "object";
    } catch {
      return !1;
    }
  }
  function VW() {
    return new Promise((t, e) => {
      try {
        let n = !0;
        const r = "validate-browser-context-for-indexeddb-analytics-module",
          a = self.indexedDB.open(r);
        (a.onsuccess = () => {
          a.result.close(), n || self.indexedDB.deleteDatabase(r), t(!0);
        }),
          (a.onupgradeneeded = () => {
            n = !1;
          }),
          (a.onerror = () => {
            var o;
            e(
              ((o = a.error) === null || o === void 0 ? void 0 : o.message) ||
                ""
            );
          });
      } catch (n) {
        e(n);
      }
    });
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const $W = "FirebaseError";
  class po extends Error {
    constructor(e, n, r) {
      super(n),
        (this.code = e),
        (this.customData = r),
        (this.name = $W),
        Object.setPrototypeOf(this, po.prototype),
        Error.captureStackTrace &&
          Error.captureStackTrace(this, Wf.prototype.create);
    }
  }
  class Wf {
    constructor(e, n, r) {
      (this.service = e), (this.serviceName = n), (this.errors = r);
    }
    create(e, ...n) {
      const r = n[0] || {},
        a = `${this.service}/${e}`,
        o = this.errors[e],
        u = o ? BW(o, r) : "Error",
        g = `${this.serviceName}: ${u} (${a}).`;
      return new po(a, g, r);
    }
  }
  function BW(t, e) {
    return t.replace(HW, (n, r) => {
      const a = e[r];
      return a != null ? String(a) : `<${r}?>`;
    });
  }
  const HW = /\{\$([^}]+)}/g;
  function WW(t) {
    for (const e in t)
      if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
    return !0;
  }
  function gm(t, e) {
    if (t === e) return !0;
    const n = Object.keys(t),
      r = Object.keys(e);
    for (const a of n) {
      if (!r.includes(a)) return !1;
      const o = t[a],
        u = e[a];
      if (ak(o) && ak(u)) {
        if (!gm(o, u)) return !1;
      } else if (o !== u) return !1;
    }
    for (const a of r) if (!n.includes(a)) return !1;
    return !0;
  }
  function ak(t) {
    return t !== null && typeof t == "object";
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function Uf(t) {
    const e = [];
    for (const [n, r] of Object.entries(t))
      Array.isArray(r)
        ? r.forEach((a) => {
            e.push(encodeURIComponent(n) + "=" + encodeURIComponent(a));
          })
        : e.push(encodeURIComponent(n) + "=" + encodeURIComponent(r));
    return e.length ? "&" + e.join("&") : "";
  }
  function xd(t) {
    const e = {};
    return (
      t
        .replace(/^\?/, "")
        .split("&")
        .forEach((r) => {
          if (r) {
            const [a, o] = r.split("=");
            e[decodeURIComponent(a)] = decodeURIComponent(o);
          }
        }),
      e
    );
  }
  function bd(t) {
    const e = t.indexOf("?");
    if (!e) return "";
    const n = t.indexOf("#", e);
    return t.substring(e, n > 0 ? n : void 0);
  }
  function UW(t, e) {
    const n = new XW(t, e);
    return n.subscribe.bind(n);
  }
  class XW {
    constructor(e, n) {
      (this.observers = []),
        (this.unsubscribes = []),
        (this.observerCount = 0),
        (this.task = Promise.resolve()),
        (this.finalized = !1),
        (this.onNoObservers = n),
        this.task
          .then(() => {
            e(this);
          })
          .catch((r) => {
            this.error(r);
          });
    }
    next(e) {
      this.forEachObserver((n) => {
        n.next(e);
      });
    }
    error(e) {
      this.forEachObserver((n) => {
        n.error(e);
      }),
        this.close(e);
    }
    complete() {
      this.forEachObserver((e) => {
        e.complete();
      }),
        this.close();
    }
    subscribe(e, n, r) {
      let a;
      if (e === void 0 && n === void 0 && r === void 0)
        throw new Error("Missing Observer.");
      YW(e, ["next", "error", "complete"])
        ? (a = e)
        : (a = { next: e, error: n, complete: r }),
        a.next === void 0 && (a.next = sx),
        a.error === void 0 && (a.error = sx),
        a.complete === void 0 && (a.complete = sx);
      const o = this.unsubscribeOne.bind(this, this.observers.length);
      return (
        this.finalized &&
          this.task.then(() => {
            try {
              this.finalError ? a.error(this.finalError) : a.complete();
            } catch {}
          }),
        this.observers.push(a),
        o
      );
    }
    unsubscribeOne(e) {
      this.observers === void 0 ||
        this.observers[e] === void 0 ||
        (delete this.observers[e],
        (this.observerCount -= 1),
        this.observerCount === 0 &&
          this.onNoObservers !== void 0 &&
          this.onNoObservers(this));
    }
    forEachObserver(e) {
      if (!this.finalized)
        for (let n = 0; n < this.observers.length; n++) this.sendOne(n, e);
    }
    sendOne(e, n) {
      this.task.then(() => {
        if (this.observers !== void 0 && this.observers[e] !== void 0)
          try {
            n(this.observers[e]);
          } catch (r) {
            typeof console < "u" && console.error && console.error(r);
          }
      });
    }
    close(e) {
      this.finalized ||
        ((this.finalized = !0),
        e !== void 0 && (this.finalError = e),
        this.task.then(() => {
          (this.observers = void 0), (this.onNoObservers = void 0);
        }));
    }
  }
  function YW(t, e) {
    if (typeof t != "object" || t === null) return !1;
    for (const n of e) if (n in t && typeof t[n] == "function") return !0;
    return !1;
  }
  function sx() {}
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function ci(t) {
    return t && t._delegate ? t._delegate : t;
  }
  class Gl {
    constructor(e, n, r) {
      (this.name = e),
        (this.instanceFactory = n),
        (this.type = r),
        (this.multipleInstances = !1),
        (this.serviceProps = {}),
        (this.instantiationMode = "LAZY"),
        (this.onInstanceCreated = null);
    }
    setInstantiationMode(e) {
      return (this.instantiationMode = e), this;
    }
    setMultipleInstances(e) {
      return (this.multipleInstances = e), this;
    }
    setServiceProps(e) {
      return (this.serviceProps = e), this;
    }
    setInstanceCreatedCallback(e) {
      return (this.onInstanceCreated = e), this;
    }
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const kc = "[DEFAULT]";
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class GW {
    constructor(e, n) {
      (this.name = e),
        (this.container = n),
        (this.component = null),
        (this.instances = new Map()),
        (this.instancesDeferred = new Map()),
        (this.instancesOptions = new Map()),
        (this.onInitCallbacks = new Map());
    }
    get(e) {
      const n = this.normalizeInstanceIdentifier(e);
      if (!this.instancesDeferred.has(n)) {
        const r = new LW();
        if (
          (this.instancesDeferred.set(n, r),
          this.isInitialized(n) || this.shouldAutoInitialize())
        )
          try {
            const a = this.getOrInitializeService({ instanceIdentifier: n });
            a && r.resolve(a);
          } catch {}
      }
      return this.instancesDeferred.get(n).promise;
    }
    getImmediate(e) {
      var n;
      const r = this.normalizeInstanceIdentifier(
          e == null ? void 0 : e.identifier
        ),
        a =
          (n = e == null ? void 0 : e.optional) !== null && n !== void 0
            ? n
            : !1;
      if (this.isInitialized(r) || this.shouldAutoInitialize())
        try {
          return this.getOrInitializeService({ instanceIdentifier: r });
        } catch (o) {
          if (a) return null;
          throw o;
        }
      else {
        if (a) return null;
        throw Error(`Service ${this.name} is not available`);
      }
    }
    getComponent() {
      return this.component;
    }
    setComponent(e) {
      if (e.name !== this.name)
        throw Error(
          `Mismatching Component ${e.name} for Provider ${this.name}.`
        );
      if (this.component)
        throw Error(`Component for ${this.name} has already been provided`);
      if (((this.component = e), !!this.shouldAutoInitialize())) {
        if (KW(e))
          try {
            this.getOrInitializeService({ instanceIdentifier: kc });
          } catch {}
        for (const [n, r] of this.instancesDeferred.entries()) {
          const a = this.normalizeInstanceIdentifier(n);
          try {
            const o = this.getOrInitializeService({ instanceIdentifier: a });
            r.resolve(o);
          } catch {}
        }
      }
    }
    clearInstance(e = kc) {
      this.instancesDeferred.delete(e),
        this.instancesOptions.delete(e),
        this.instances.delete(e);
    }
    async delete() {
      const e = Array.from(this.instances.values());
      await Promise.all([
        ...e.filter((n) => "INTERNAL" in n).map((n) => n.INTERNAL.delete()),
        ...e.filter((n) => "_delete" in n).map((n) => n._delete()),
      ]);
    }
    isComponentSet() {
      return this.component != null;
    }
    isInitialized(e = kc) {
      return this.instances.has(e);
    }
    getOptions(e = kc) {
      return this.instancesOptions.get(e) || {};
    }
    initialize(e = {}) {
      const { options: n = {} } = e,
        r = this.normalizeInstanceIdentifier(e.instanceIdentifier);
      if (this.isInitialized(r))
        throw Error(`${this.name}(${r}) has already been initialized`);
      if (!this.isComponentSet())
        throw Error(`Component ${this.name} has not been registered yet`);
      const a = this.getOrInitializeService({
        instanceIdentifier: r,
        options: n,
      });
      for (const [o, u] of this.instancesDeferred.entries()) {
        const g = this.normalizeInstanceIdentifier(o);
        r === g && u.resolve(a);
      }
      return a;
    }
    onInit(e, n) {
      var r;
      const a = this.normalizeInstanceIdentifier(n),
        o =
          (r = this.onInitCallbacks.get(a)) !== null && r !== void 0
            ? r
            : new Set();
      o.add(e), this.onInitCallbacks.set(a, o);
      const u = this.instances.get(a);
      return (
        u && e(u, a),
        () => {
          o.delete(e);
        }
      );
    }
    invokeOnInitCallbacks(e, n) {
      const r = this.onInitCallbacks.get(n);
      if (r)
        for (const a of r)
          try {
            a(e, n);
          } catch {}
    }
    getOrInitializeService({ instanceIdentifier: e, options: n = {} }) {
      let r = this.instances.get(e);
      if (
        !r &&
        this.component &&
        ((r = this.component.instanceFactory(this.container, {
          instanceIdentifier: qW(e),
          options: n,
        })),
        this.instances.set(e, r),
        this.instancesOptions.set(e, n),
        this.invokeOnInitCallbacks(r, e),
        this.component.onInstanceCreated)
      )
        try {
          this.component.onInstanceCreated(this.container, e, r);
        } catch {}
      return r || null;
    }
    normalizeInstanceIdentifier(e = kc) {
      return this.component ? (this.component.multipleInstances ? e : kc) : e;
    }
    shouldAutoInitialize() {
      return (
        !!this.component && this.component.instantiationMode !== "EXPLICIT"
      );
    }
  }
  function qW(t) {
    return t === kc ? void 0 : t;
  }
  function KW(t) {
    return t.instantiationMode === "EAGER";
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class QW {
    constructor(e) {
      (this.name = e), (this.providers = new Map());
    }
    addComponent(e) {
      const n = this.getProvider(e.name);
      if (n.isComponentSet())
        throw new Error(
          `Component ${e.name} has already been registered with ${this.name}`
        );
      n.setComponent(e);
    }
    addOrOverwriteComponent(e) {
      this.getProvider(e.name).isComponentSet() &&
        this.providers.delete(e.name),
        this.addComponent(e);
    }
    getProvider(e) {
      if (this.providers.has(e)) return this.providers.get(e);
      const n = new GW(e, this);
      return this.providers.set(e, n), n;
    }
    getProviders() {
      return Array.from(this.providers.values());
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ var In;
  (function (t) {
    (t[(t.DEBUG = 0)] = "DEBUG"),
      (t[(t.VERBOSE = 1)] = "VERBOSE"),
      (t[(t.INFO = 2)] = "INFO"),
      (t[(t.WARN = 3)] = "WARN"),
      (t[(t.ERROR = 4)] = "ERROR"),
      (t[(t.SILENT = 5)] = "SILENT");
  })(In || (In = {}));
  const ZW = {
      debug: In.DEBUG,
      verbose: In.VERBOSE,
      info: In.INFO,
      warn: In.WARN,
      error: In.ERROR,
      silent: In.SILENT,
    },
    JW = In.INFO,
    eU = {
      [In.DEBUG]: "log",
      [In.VERBOSE]: "log",
      [In.INFO]: "info",
      [In.WARN]: "warn",
      [In.ERROR]: "error",
    },
    tU = (t, e, ...n) => {
      if (e < t.logLevel) return;
      const r = new Date().toISOString(),
        a = eU[e];
      if (a) console[a](`[${r}]  ${t.name}:`, ...n);
      else
        throw new Error(
          `Attempted to log a message with an invalid logType (value: ${e})`
        );
    };
  class Jw {
    constructor(e) {
      (this.name = e),
        (this._logLevel = JW),
        (this._logHandler = tU),
        (this._userLogHandler = null);
    }
    get logLevel() {
      return this._logLevel;
    }
    set logLevel(e) {
      if (!(e in In))
        throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);
      this._logLevel = e;
    }
    setLogLevel(e) {
      this._logLevel = typeof e == "string" ? ZW[e] : e;
    }
    get logHandler() {
      return this._logHandler;
    }
    set logHandler(e) {
      if (typeof e != "function")
        throw new TypeError(
          "Value assigned to `logHandler` must be a function"
        );
      this._logHandler = e;
    }
    get userLogHandler() {
      return this._userLogHandler;
    }
    set userLogHandler(e) {
      this._userLogHandler = e;
    }
    debug(...e) {
      this._userLogHandler && this._userLogHandler(this, In.DEBUG, ...e),
        this._logHandler(this, In.DEBUG, ...e);
    }
    log(...e) {
      this._userLogHandler && this._userLogHandler(this, In.VERBOSE, ...e),
        this._logHandler(this, In.VERBOSE, ...e);
    }
    info(...e) {
      this._userLogHandler && this._userLogHandler(this, In.INFO, ...e),
        this._logHandler(this, In.INFO, ...e);
    }
    warn(...e) {
      this._userLogHandler && this._userLogHandler(this, In.WARN, ...e),
        this._logHandler(this, In.WARN, ...e);
    }
    error(...e) {
      this._userLogHandler && this._userLogHandler(this, In.ERROR, ...e),
        this._logHandler(this, In.ERROR, ...e);
    }
  }
  const nU = (t, e) => e.some((n) => t instanceof n);
  let ok, lk;
  function rU() {
    return (
      ok ||
      (ok = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction])
    );
  }
  function iU() {
    return (
      lk ||
      (lk = [
        IDBCursor.prototype.advance,
        IDBCursor.prototype.continue,
        IDBCursor.prototype.continuePrimaryKey,
      ])
    );
  }
  const dR = new WeakMap(),
    Vb = new WeakMap(),
    fR = new WeakMap(),
    ax = new WeakMap(),
    e1 = new WeakMap();
  function sU(t) {
    const e = new Promise((n, r) => {
      const a = () => {
          t.removeEventListener("success", o),
            t.removeEventListener("error", u);
        },
        o = () => {
          n(zl(t.result)), a();
        },
        u = () => {
          r(t.error), a();
        };
      t.addEventListener("success", o), t.addEventListener("error", u);
    });
    return (
      e
        .then((n) => {
          n instanceof IDBCursor && dR.set(n, t);
        })
        .catch(() => {}),
      e1.set(e, t),
      e
    );
  }
  function aU(t) {
    if (Vb.has(t)) return;
    const e = new Promise((n, r) => {
      const a = () => {
          t.removeEventListener("complete", o),
            t.removeEventListener("error", u),
            t.removeEventListener("abort", u);
        },
        o = () => {
          n(), a();
        },
        u = () => {
          r(t.error || new DOMException("AbortError", "AbortError")), a();
        };
      t.addEventListener("complete", o),
        t.addEventListener("error", u),
        t.addEventListener("abort", u);
    });
    Vb.set(t, e);
  }
  let $b = {
    get(t, e, n) {
      if (t instanceof IDBTransaction) {
        if (e === "done") return Vb.get(t);
        if (e === "objectStoreNames") return t.objectStoreNames || fR.get(t);
        if (e === "store")
          return n.objectStoreNames[1]
            ? void 0
            : n.objectStore(n.objectStoreNames[0]);
      }
      return zl(t[e]);
    },
    set(t, e, n) {
      return (t[e] = n), !0;
    },
    has(t, e) {
      return t instanceof IDBTransaction && (e === "done" || e === "store")
        ? !0
        : e in t;
    },
  };
  function oU(t) {
    $b = t($b);
  }
  function lU(t) {
    return t === IDBDatabase.prototype.transaction &&
      !("objectStoreNames" in IDBTransaction.prototype)
      ? function (e, ...n) {
          const r = t.call(ox(this), e, ...n);
          return fR.set(r, e.sort ? e.sort() : [e]), zl(r);
        }
      : iU().includes(t)
      ? function (...e) {
          return t.apply(ox(this), e), zl(dR.get(this));
        }
      : function (...e) {
          return zl(t.apply(ox(this), e));
        };
  }
  function cU(t) {
    return typeof t == "function"
      ? lU(t)
      : (t instanceof IDBTransaction && aU(t),
        nU(t, rU()) ? new Proxy(t, $b) : t);
  }
  function zl(t) {
    if (t instanceof IDBRequest) return sU(t);
    if (ax.has(t)) return ax.get(t);
    const e = cU(t);
    return e !== t && (ax.set(t, e), e1.set(e, t)), e;
  }
  const ox = (t) => e1.get(t);
  function uU(
    t,
    e,
    { blocked: n, upgrade: r, blocking: a, terminated: o } = {}
  ) {
    const u = indexedDB.open(t, e),
      g = zl(u);
    return (
      r &&
        u.addEventListener("upgradeneeded", (x) => {
          r(zl(u.result), x.oldVersion, x.newVersion, zl(u.transaction), x);
        }),
      n &&
        u.addEventListener("blocked", (x) => n(x.oldVersion, x.newVersion, x)),
      g
        .then((x) => {
          o && x.addEventListener("close", () => o()),
            a &&
              x.addEventListener("versionchange", (E) =>
                a(E.oldVersion, E.newVersion, E)
              );
        })
        .catch(() => {}),
      g
    );
  }
  const hU = ["get", "getKey", "getAll", "getAllKeys", "count"],
    dU = ["put", "add", "delete", "clear"],
    lx = new Map();
  function ck(t, e) {
    if (!(t instanceof IDBDatabase && !(e in t) && typeof e == "string"))
      return;
    if (lx.get(e)) return lx.get(e);
    const n = e.replace(/FromIndex$/, ""),
      r = e !== n,
      a = dU.includes(n);
    if (
      !(n in (r ? IDBIndex : IDBObjectStore).prototype) ||
      !(a || hU.includes(n))
    )
      return;
    const o = async function (u, ...g) {
      const x = this.transaction(u, a ? "readwrite" : "readonly");
      let E = x.store;
      return (
        r && (E = E.index(g.shift())),
        (await Promise.all([E[n](...g), a && x.done]))[0]
      );
    };
    return lx.set(e, o), o;
  }
  oU((t) => ({
    ...t,
    get: (e, n, r) => ck(e, n) || t.get(e, n, r),
    has: (e, n) => !!ck(e, n) || t.has(e, n),
  }));
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class fU {
    constructor(e) {
      this.container = e;
    }
    getPlatformInfoString() {
      return this.container
        .getProviders()
        .map((n) => {
          if (pU(n)) {
            const r = n.getImmediate();
            return `${r.library}/${r.version}`;
          } else return null;
        })
        .filter((n) => n)
        .join(" ");
    }
  }
  function pU(t) {
    const e = t.getComponent();
    return (e == null ? void 0 : e.type) === "VERSION";
  }
  const Bb = "@firebase/app",
    uk = "0.9.25";
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Yc = new Jw("@firebase/app"),
    gU = "@firebase/app-compat",
    mU = "@firebase/analytics-compat",
    vU = "@firebase/analytics",
    yU = "@firebase/app-check-compat",
    xU = "@firebase/app-check",
    bU = "@firebase/auth",
    wU = "@firebase/auth-compat",
    _U = "@firebase/database",
    SU = "@firebase/database-compat",
    EU = "@firebase/functions",
    kU = "@firebase/functions-compat",
    AU = "@firebase/installations",
    CU = "@firebase/installations-compat",
    TU = "@firebase/messaging",
    IU = "@firebase/messaging-compat",
    PU = "@firebase/performance",
    RU = "@firebase/performance-compat",
    OU = "@firebase/remote-config",
    NU = "@firebase/remote-config-compat",
    LU = "@firebase/storage",
    DU = "@firebase/storage-compat",
    MU = "@firebase/firestore",
    jU = "@firebase/firestore-compat",
    FU = "firebase",
    zU = "10.7.1";
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Hb = "[DEFAULT]",
    VU = {
      [Bb]: "fire-core",
      [gU]: "fire-core-compat",
      [vU]: "fire-analytics",
      [mU]: "fire-analytics-compat",
      [xU]: "fire-app-check",
      [yU]: "fire-app-check-compat",
      [bU]: "fire-auth",
      [wU]: "fire-auth-compat",
      [_U]: "fire-rtdb",
      [SU]: "fire-rtdb-compat",
      [EU]: "fire-fn",
      [kU]: "fire-fn-compat",
      [AU]: "fire-iid",
      [CU]: "fire-iid-compat",
      [TU]: "fire-fcm",
      [IU]: "fire-fcm-compat",
      [PU]: "fire-perf",
      [RU]: "fire-perf-compat",
      [OU]: "fire-rc",
      [NU]: "fire-rc-compat",
      [LU]: "fire-gcs",
      [DU]: "fire-gcs-compat",
      [MU]: "fire-fst",
      [jU]: "fire-fst-compat",
      "fire-js": "fire-js",
      [FU]: "fire-js-all",
    };
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const mm = new Map(),
    Wb = new Map();
  function $U(t, e) {
    try {
      t.container.addComponent(e);
    } catch (n) {
      Yc.debug(
        `Component ${e.name} failed to register with FirebaseApp ${t.name}`,
        n
      );
    }
  }
  function Gc(t) {
    const e = t.name;
    if (Wb.has(e))
      return (
        Yc.debug(`There were multiple attempts to register component ${e}.`), !1
      );
    Wb.set(e, t);
    for (const n of mm.values()) $U(n, t);
    return !0;
  }
  function kv(t, e) {
    const n = t.container
      .getProvider("heartbeat")
      .getImmediate({ optional: !0 });
    return n && n.triggerHeartbeat(), t.container.getProvider(e);
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const BU = {
      "no-app":
        "No Firebase App '{$appName}' has been created - call initializeApp() first",
      "bad-app-name": "Illegal App name: '{$appName}",
      "duplicate-app":
        "Firebase App named '{$appName}' already exists with different options or config",
      "app-deleted": "Firebase App named '{$appName}' already deleted",
      "no-options":
        "Need to provide options, when not being deployed to hosting via source.",
      "invalid-app-argument":
        "firebase.{$appName}() takes either no argument or a Firebase App instance.",
      "invalid-log-argument":
        "First argument to `onLog` must be null or a function.",
      "idb-open":
        "Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.",
      "idb-get":
        "Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.",
      "idb-set":
        "Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.",
      "idb-delete":
        "Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.",
    },
    Vl = new Wf("app", "Firebase", BU);
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class HU {
    constructor(e, n, r) {
      (this._isDeleted = !1),
        (this._options = Object.assign({}, e)),
        (this._config = Object.assign({}, n)),
        (this._name = n.name),
        (this._automaticDataCollectionEnabled =
          n.automaticDataCollectionEnabled),
        (this._container = r),
        this.container.addComponent(new Gl("app", () => this, "PUBLIC"));
    }
    get automaticDataCollectionEnabled() {
      return this.checkDestroyed(), this._automaticDataCollectionEnabled;
    }
    set automaticDataCollectionEnabled(e) {
      this.checkDestroyed(), (this._automaticDataCollectionEnabled = e);
    }
    get name() {
      return this.checkDestroyed(), this._name;
    }
    get options() {
      return this.checkDestroyed(), this._options;
    }
    get config() {
      return this.checkDestroyed(), this._config;
    }
    get container() {
      return this._container;
    }
    get isDeleted() {
      return this._isDeleted;
    }
    set isDeleted(e) {
      this._isDeleted = e;
    }
    checkDestroyed() {
      if (this.isDeleted)
        throw Vl.create("app-deleted", { appName: this._name });
    }
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const hu = zU;
  function pR(t, e = {}) {
    let n = t;
    typeof e != "object" && (e = { name: e });
    const r = Object.assign(
        { name: Hb, automaticDataCollectionEnabled: !1 },
        e
      ),
      a = r.name;
    if (typeof a != "string" || !a)
      throw Vl.create("bad-app-name", { appName: String(a) });
    if ((n || (n = cR()), !n)) throw Vl.create("no-options");
    const o = mm.get(a);
    if (o) {
      if (gm(n, o.options) && gm(r, o.config)) return o;
      throw Vl.create("duplicate-app", { appName: a });
    }
    const u = new QW(a);
    for (const x of Wb.values()) u.addComponent(x);
    const g = new HU(n, r, u);
    return mm.set(a, g), g;
  }
  function t1(t = Hb) {
    const e = mm.get(t);
    if (!e && t === Hb && cR()) return pR();
    if (!e) throw Vl.create("no-app", { appName: t });
    return e;
  }
  function so(t, e, n) {
    var r;
    let a = (r = VU[t]) !== null && r !== void 0 ? r : t;
    n && (a += `-${n}`);
    const o = a.match(/\s|\//),
      u = e.match(/\s|\//);
    if (o || u) {
      const g = [`Unable to register library "${a}" with version "${e}":`];
      o &&
        g.push(
          `library name "${a}" contains illegal characters (whitespace or "/")`
        ),
        o && u && g.push("and"),
        u &&
          g.push(
            `version name "${e}" contains illegal characters (whitespace or "/")`
          ),
        Yc.warn(g.join(" "));
      return;
    }
    Gc(new Gl(`${a}-version`, () => ({ library: a, version: e }), "VERSION"));
  }
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const WU = "firebase-heartbeat-database",
    UU = 1,
    ff = "firebase-heartbeat-store";
  let cx = null;
  function gR() {
    return (
      cx ||
        (cx = uU(WU, UU, {
          upgrade: (t, e) => {
            switch (e) {
              case 0:
                t.createObjectStore(ff);
            }
          },
        }).catch((t) => {
          throw Vl.create("idb-open", { originalErrorMessage: t.message });
        })),
      cx
    );
  }
  async function XU(t) {
    try {
      return await (await gR()).transaction(ff).objectStore(ff).get(mR(t));
    } catch (e) {
      if (e instanceof po) Yc.warn(e.message);
      else {
        const n = Vl.create("idb-get", {
          originalErrorMessage: e == null ? void 0 : e.message,
        });
        Yc.warn(n.message);
      }
    }
  }
  async function hk(t, e) {
    try {
      const r = (await gR()).transaction(ff, "readwrite");
      await r.objectStore(ff).put(e, mR(t)), await r.done;
    } catch (n) {
      if (n instanceof po) Yc.warn(n.message);
      else {
        const r = Vl.create("idb-set", {
          originalErrorMessage: n == null ? void 0 : n.message,
        });
        Yc.warn(r.message);
      }
    }
  }
  function mR(t) {
    return `${t.name}!${t.options.appId}`;
  }
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const YU = 1024,
    GU = 30 * 24 * 60 * 60 * 1e3;
  class qU {
    constructor(e) {
      (this.container = e), (this._heartbeatsCache = null);
      const n = this.container.getProvider("app").getImmediate();
      (this._storage = new QU(n)),
        (this._heartbeatsCachePromise = this._storage
          .read()
          .then((r) => ((this._heartbeatsCache = r), r)));
    }
    async triggerHeartbeat() {
      var e, n;
      const a = this.container
          .getProvider("platform-logger")
          .getImmediate()
          .getPlatformInfoString(),
        o = dk();
      if (
        !(
          ((e = this._heartbeatsCache) === null || e === void 0
            ? void 0
            : e.heartbeats) == null &&
          ((this._heartbeatsCache = await this._heartbeatsCachePromise),
          ((n = this._heartbeatsCache) === null || n === void 0
            ? void 0
            : n.heartbeats) == null)
        ) &&
        !(
          this._heartbeatsCache.lastSentHeartbeatDate === o ||
          this._heartbeatsCache.heartbeats.some((u) => u.date === o)
        )
      )
        return (
          this._heartbeatsCache.heartbeats.push({ date: o, agent: a }),
          (this._heartbeatsCache.heartbeats =
            this._heartbeatsCache.heartbeats.filter((u) => {
              const g = new Date(u.date).valueOf();
              return Date.now() - g <= GU;
            })),
          this._storage.overwrite(this._heartbeatsCache)
        );
    }
    async getHeartbeatsHeader() {
      var e;
      if (
        (this._heartbeatsCache === null && (await this._heartbeatsCachePromise),
        ((e = this._heartbeatsCache) === null || e === void 0
          ? void 0
          : e.heartbeats) == null ||
          this._heartbeatsCache.heartbeats.length === 0)
      )
        return "";
      const n = dk(),
        { heartbeatsToSend: r, unsentEntries: a } = KU(
          this._heartbeatsCache.heartbeats
        ),
        o = pm(JSON.stringify({ version: 2, heartbeats: r }));
      return (
        (this._heartbeatsCache.lastSentHeartbeatDate = n),
        a.length > 0
          ? ((this._heartbeatsCache.heartbeats = a),
            await this._storage.overwrite(this._heartbeatsCache))
          : ((this._heartbeatsCache.heartbeats = []),
            this._storage.overwrite(this._heartbeatsCache)),
        o
      );
    }
  }
  function dk() {
    return new Date().toISOString().substring(0, 10);
  }
  function KU(t, e = YU) {
    const n = [];
    let r = t.slice();
    for (const a of t) {
      const o = n.find((u) => u.agent === a.agent);
      if (o) {
        if ((o.dates.push(a.date), fk(n) > e)) {
          o.dates.pop();
          break;
        }
      } else if ((n.push({ agent: a.agent, dates: [a.date] }), fk(n) > e)) {
        n.pop();
        break;
      }
      r = r.slice(1);
    }
    return { heartbeatsToSend: n, unsentEntries: r };
  }
  class QU {
    constructor(e) {
      (this.app = e),
        (this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck());
    }
    async runIndexedDBEnvironmentCheck() {
      return zW()
        ? VW()
            .then(() => !0)
            .catch(() => !1)
        : !1;
    }
    async read() {
      if (await this._canUseIndexedDBPromise) {
        const n = await XU(this.app);
        return n != null && n.heartbeats ? n : { heartbeats: [] };
      } else return { heartbeats: [] };
    }
    async overwrite(e) {
      var n;
      if (await this._canUseIndexedDBPromise) {
        const a = await this.read();
        return hk(this.app, {
          lastSentHeartbeatDate:
            (n = e.lastSentHeartbeatDate) !== null && n !== void 0
              ? n
              : a.lastSentHeartbeatDate,
          heartbeats: e.heartbeats,
        });
      } else return;
    }
    async add(e) {
      var n;
      if (await this._canUseIndexedDBPromise) {
        const a = await this.read();
        return hk(this.app, {
          lastSentHeartbeatDate:
            (n = e.lastSentHeartbeatDate) !== null && n !== void 0
              ? n
              : a.lastSentHeartbeatDate,
          heartbeats: [...a.heartbeats, ...e.heartbeats],
        });
      } else return;
    }
  }
  function fk(t) {
    return pm(JSON.stringify({ version: 2, heartbeats: t })).length;
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function ZU(t) {
    Gc(new Gl("platform-logger", (e) => new fU(e), "PRIVATE")),
      Gc(new Gl("heartbeat", (e) => new qU(e), "PRIVATE")),
      so(Bb, uk, t),
      so(Bb, uk, "esm2017"),
      so("fire-js", "");
  }
  ZU("");
  var JU = "firebase",
    e3 = "10.7.1";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ so(JU, e3, "app");
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const vR = "firebasestorage.googleapis.com",
    yR = "storageBucket",
    t3 = 2 * 60 * 1e3,
    n3 = 10 * 60 * 1e3;
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Mr extends po {
    constructor(e, n, r = 0) {
      super(ux(e), `Firebase Storage: ${n} (${ux(e)})`),
        (this.status_ = r),
        (this.customData = { serverResponse: null }),
        (this._baseMessage = this.message),
        Object.setPrototypeOf(this, Mr.prototype);
    }
    get status() {
      return this.status_;
    }
    set status(e) {
      this.status_ = e;
    }
    _codeEquals(e) {
      return ux(e) === this.code;
    }
    get serverResponse() {
      return this.customData.serverResponse;
    }
    set serverResponse(e) {
      (this.customData.serverResponse = e),
        this.customData.serverResponse
          ? (this.message = `${this._baseMessage}
${this.customData.serverResponse}`)
          : (this.message = this._baseMessage);
    }
  }
  var Lr;
  (function (t) {
    (t.UNKNOWN = "unknown"),
      (t.OBJECT_NOT_FOUND = "object-not-found"),
      (t.BUCKET_NOT_FOUND = "bucket-not-found"),
      (t.PROJECT_NOT_FOUND = "project-not-found"),
      (t.QUOTA_EXCEEDED = "quota-exceeded"),
      (t.UNAUTHENTICATED = "unauthenticated"),
      (t.UNAUTHORIZED = "unauthorized"),
      (t.UNAUTHORIZED_APP = "unauthorized-app"),
      (t.RETRY_LIMIT_EXCEEDED = "retry-limit-exceeded"),
      (t.INVALID_CHECKSUM = "invalid-checksum"),
      (t.CANCELED = "canceled"),
      (t.INVALID_EVENT_NAME = "invalid-event-name"),
      (t.INVALID_URL = "invalid-url"),
      (t.INVALID_DEFAULT_BUCKET = "invalid-default-bucket"),
      (t.NO_DEFAULT_BUCKET = "no-default-bucket"),
      (t.CANNOT_SLICE_BLOB = "cannot-slice-blob"),
      (t.SERVER_FILE_WRONG_SIZE = "server-file-wrong-size"),
      (t.NO_DOWNLOAD_URL = "no-download-url"),
      (t.INVALID_ARGUMENT = "invalid-argument"),
      (t.INVALID_ARGUMENT_COUNT = "invalid-argument-count"),
      (t.APP_DELETED = "app-deleted"),
      (t.INVALID_ROOT_OPERATION = "invalid-root-operation"),
      (t.INVALID_FORMAT = "invalid-format"),
      (t.INTERNAL_ERROR = "internal-error"),
      (t.UNSUPPORTED_ENVIRONMENT = "unsupported-environment");
  })(Lr || (Lr = {}));
  function ux(t) {
    return "storage/" + t;
  }
  function n1() {
    const t =
      "An unknown error occurred, please check the error payload for server response.";
    return new Mr(Lr.UNKNOWN, t);
  }
  function r3(t) {
    return new Mr(Lr.OBJECT_NOT_FOUND, "Object '" + t + "' does not exist.");
  }
  function i3(t) {
    return new Mr(
      Lr.QUOTA_EXCEEDED,
      "Quota for bucket '" +
        t +
        "' exceeded, please view quota on https://firebase.google.com/pricing/."
    );
  }
  function s3() {
    const t =
      "User is not authenticated, please authenticate using Firebase Authentication and try again.";
    return new Mr(Lr.UNAUTHENTICATED, t);
  }
  function a3() {
    return new Mr(
      Lr.UNAUTHORIZED_APP,
      "This app does not have permission to access Firebase Storage on this project."
    );
  }
  function o3(t) {
    return new Mr(
      Lr.UNAUTHORIZED,
      "User does not have permission to access '" + t + "'."
    );
  }
  function l3() {
    return new Mr(
      Lr.RETRY_LIMIT_EXCEEDED,
      "Max retry time for operation exceeded, please try again."
    );
  }
  function c3() {
    return new Mr(Lr.CANCELED, "User canceled the upload/download.");
  }
  function u3(t) {
    return new Mr(Lr.INVALID_URL, "Invalid URL '" + t + "'.");
  }
  function h3(t) {
    return new Mr(
      Lr.INVALID_DEFAULT_BUCKET,
      "Invalid default bucket '" + t + "'."
    );
  }
  function d3() {
    return new Mr(
      Lr.NO_DEFAULT_BUCKET,
      "No default bucket found. Did you set the '" +
        yR +
        "' property when initializing the app?"
    );
  }
  function f3() {
    return new Mr(
      Lr.CANNOT_SLICE_BLOB,
      "Cannot slice blob for upload. Please retry the upload."
    );
  }
  function p3() {
    return new Mr(
      Lr.NO_DOWNLOAD_URL,
      "The given file does not have any download URLs."
    );
  }
  function g3(t) {
    return new Mr(
      Lr.UNSUPPORTED_ENVIRONMENT,
      `${t} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`
    );
  }
  function Ub(t) {
    return new Mr(Lr.INVALID_ARGUMENT, t);
  }
  function xR() {
    return new Mr(Lr.APP_DELETED, "The Firebase app was deleted.");
  }
  function m3(t) {
    return new Mr(
      Lr.INVALID_ROOT_OPERATION,
      "The operation '" +
        t +
        "' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png')."
    );
  }
  function Md(t, e) {
    return new Mr(
      Lr.INVALID_FORMAT,
      "String does not match format '" + t + "': " + e
    );
  }
  function cd(t) {
    throw new Mr(Lr.INTERNAL_ERROR, "Internal error: " + t);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Vs {
    constructor(e, n) {
      (this.bucket = e), (this.path_ = n);
    }
    get path() {
      return this.path_;
    }
    get isRoot() {
      return this.path.length === 0;
    }
    fullServerUrl() {
      const e = encodeURIComponent;
      return "/b/" + e(this.bucket) + "/o/" + e(this.path);
    }
    bucketOnlyServerUrl() {
      return "/b/" + encodeURIComponent(this.bucket) + "/o";
    }
    static makeFromBucketSpec(e, n) {
      let r;
      try {
        r = Vs.makeFromUrl(e, n);
      } catch {
        return new Vs(e, "");
      }
      if (r.path === "") return r;
      throw h3(e);
    }
    static makeFromUrl(e, n) {
      let r = null;
      const a = "([A-Za-z0-9.\\-_]+)";
      function o(ye) {
        ye.path.charAt(ye.path.length - 1) === "/" &&
          (ye.path_ = ye.path_.slice(0, -1));
      }
      const u = "(/(.*))?$",
        g = new RegExp("^gs://" + a + u, "i"),
        x = { bucket: 1, path: 3 };
      function E(ye) {
        ye.path_ = decodeURIComponent(ye.path);
      }
      const L = "v[A-Za-z0-9_]+",
        z = n.replace(/[.]/g, "\\."),
        B = "(/([^?#]*).*)?$",
        ae = new RegExp(`^https?://${z}/${L}/b/${a}/o${B}`, "i"),
        se = { bucket: 1, path: 3 },
        le =
          n === vR ? "(?:storage.googleapis.com|storage.cloud.google.com)" : n,
        he = "([^?#]*)",
        oe = new RegExp(`^https?://${le}/${a}/${he}`, "i"),
        ce = [
          { regex: g, indices: x, postModify: o },
          { regex: ae, indices: se, postModify: E },
          { regex: oe, indices: { bucket: 1, path: 2 }, postModify: E },
        ];
      for (let ye = 0; ye < ce.length; ye++) {
        const C = ce[ye],
          ke = C.regex.exec(e);
        if (ke) {
          const je = ke[C.indices.bucket];
          let tt = ke[C.indices.path];
          tt || (tt = ""), (r = new Vs(je, tt)), C.postModify(r);
          break;
        }
      }
      if (r == null) throw u3(e);
      return r;
    }
  }
  class v3 {
    constructor(e) {
      this.promise_ = Promise.reject(e);
    }
    getPromise() {
      return this.promise_;
    }
    cancel(e = !1) {}
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function y3(t, e, n) {
    let r = 1,
      a = null,
      o = null,
      u = !1,
      g = 0;
    function x() {
      return g === 2;
    }
    let E = !1;
    function L(...he) {
      E || ((E = !0), e.apply(null, he));
    }
    function z(he) {
      a = setTimeout(() => {
        (a = null), t(ae, x());
      }, he);
    }
    function B() {
      o && clearTimeout(o);
    }
    function ae(he, ...oe) {
      if (E) {
        B();
        return;
      }
      if (he) {
        B(), L.call(null, he, ...oe);
        return;
      }
      if (x() || u) {
        B(), L.call(null, he, ...oe);
        return;
      }
      r < 64 && (r *= 2);
      let ce;
      g === 1 ? ((g = 2), (ce = 0)) : (ce = (r + Math.random()) * 1e3), z(ce);
    }
    let se = !1;
    function le(he) {
      se ||
        ((se = !0),
        B(),
        !E &&
          (a !== null
            ? (he || (g = 2), clearTimeout(a), z(0))
            : he || (g = 1)));
    }
    return (
      z(0),
      (o = setTimeout(() => {
        (u = !0), le(!0);
      }, n)),
      le
    );
  }
  function x3(t) {
    t(!1);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function b3(t) {
    return t !== void 0;
  }
  function w3(t) {
    return typeof t == "object" && !Array.isArray(t);
  }
  function r1(t) {
    return typeof t == "string" || t instanceof String;
  }
  function pk(t) {
    return i1() && t instanceof Blob;
  }
  function i1() {
    return typeof Blob < "u";
  }
  function gk(t, e, n, r) {
    if (r < e) throw Ub(`Invalid value for '${t}'. Expected ${e} or greater.`);
    if (r > n) throw Ub(`Invalid value for '${t}'. Expected ${n} or less.`);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function s1(t, e, n) {
    let r = e;
    return n == null && (r = `https://${e}`), `${n}://${r}/v0${t}`;
  }
  function bR(t) {
    const e = encodeURIComponent;
    let n = "?";
    for (const r in t)
      if (t.hasOwnProperty(r)) {
        const a = e(r) + "=" + e(t[r]);
        n = n + a + "&";
      }
    return (n = n.slice(0, -1)), n;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ var jc;
  (function (t) {
    (t[(t.NO_ERROR = 0)] = "NO_ERROR"),
      (t[(t.NETWORK_ERROR = 1)] = "NETWORK_ERROR"),
      (t[(t.ABORT = 2)] = "ABORT");
  })(jc || (jc = {}));
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function _3(t, e) {
    const n = t >= 500 && t < 600,
      a = [408, 429].indexOf(t) !== -1,
      o = e.indexOf(t) !== -1;
    return n || a || o;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class S3 {
    constructor(e, n, r, a, o, u, g, x, E, L, z, B = !0) {
      (this.url_ = e),
        (this.method_ = n),
        (this.headers_ = r),
        (this.body_ = a),
        (this.successCodes_ = o),
        (this.additionalRetryCodes_ = u),
        (this.callback_ = g),
        (this.errorCallback_ = x),
        (this.timeout_ = E),
        (this.progressCallback_ = L),
        (this.connectionFactory_ = z),
        (this.retry = B),
        (this.pendingConnection_ = null),
        (this.backoffId_ = null),
        (this.canceled_ = !1),
        (this.appDelete_ = !1),
        (this.promise_ = new Promise((ae, se) => {
          (this.resolve_ = ae), (this.reject_ = se), this.start_();
        }));
    }
    start_() {
      const e = (r, a) => {
          if (a) {
            r(!1, new qp(!1, null, !0));
            return;
          }
          const o = this.connectionFactory_();
          this.pendingConnection_ = o;
          const u = (g) => {
            const x = g.loaded,
              E = g.lengthComputable ? g.total : -1;
            this.progressCallback_ !== null && this.progressCallback_(x, E);
          };
          this.progressCallback_ !== null && o.addUploadProgressListener(u),
            o
              .send(this.url_, this.method_, this.body_, this.headers_)
              .then(() => {
                this.progressCallback_ !== null &&
                  o.removeUploadProgressListener(u),
                  (this.pendingConnection_ = null);
                const g = o.getErrorCode() === jc.NO_ERROR,
                  x = o.getStatus();
                if (!g || (_3(x, this.additionalRetryCodes_) && this.retry)) {
                  const L = o.getErrorCode() === jc.ABORT;
                  r(!1, new qp(!1, null, L));
                  return;
                }
                const E = this.successCodes_.indexOf(x) !== -1;
                r(!0, new qp(E, o));
              });
        },
        n = (r, a) => {
          const o = this.resolve_,
            u = this.reject_,
            g = a.connection;
          if (a.wasSuccessCode)
            try {
              const x = this.callback_(g, g.getResponse());
              b3(x) ? o(x) : o();
            } catch (x) {
              u(x);
            }
          else if (g !== null) {
            const x = n1();
            (x.serverResponse = g.getErrorText()),
              this.errorCallback_ ? u(this.errorCallback_(g, x)) : u(x);
          } else if (a.canceled) {
            const x = this.appDelete_ ? xR() : c3();
            u(x);
          } else {
            const x = l3();
            u(x);
          }
        };
      this.canceled_
        ? n(!1, new qp(!1, null, !0))
        : (this.backoffId_ = y3(e, n, this.timeout_));
    }
    getPromise() {
      return this.promise_;
    }
    cancel(e) {
      (this.canceled_ = !0),
        (this.appDelete_ = e || !1),
        this.backoffId_ !== null && x3(this.backoffId_),
        this.pendingConnection_ !== null && this.pendingConnection_.abort();
    }
  }
  class qp {
    constructor(e, n, r) {
      (this.wasSuccessCode = e), (this.connection = n), (this.canceled = !!r);
    }
  }
  function E3(t, e) {
    e !== null && e.length > 0 && (t.Authorization = "Firebase " + e);
  }
  function k3(t, e) {
    t["X-Firebase-Storage-Version"] = "webjs/" + (e ?? "AppManager");
  }
  function A3(t, e) {
    e && (t["X-Firebase-GMPID"] = e);
  }
  function C3(t, e) {
    e !== null && (t["X-Firebase-AppCheck"] = e);
  }
  function T3(t, e, n, r, a, o, u = !0) {
    const g = bR(t.urlParams),
      x = t.url + g,
      E = Object.assign({}, t.headers);
    return (
      A3(E, e),
      E3(E, n),
      k3(E, o),
      C3(E, r),
      new S3(
        x,
        t.method,
        E,
        t.body,
        t.successCodes,
        t.additionalRetryCodes,
        t.handler,
        t.errorHandler,
        t.timeout,
        t.progressCallback,
        a,
        u
      )
    );
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function I3() {
    return typeof BlobBuilder < "u"
      ? BlobBuilder
      : typeof WebKitBlobBuilder < "u"
      ? WebKitBlobBuilder
      : void 0;
  }
  function P3(...t) {
    const e = I3();
    if (e !== void 0) {
      const n = new e();
      for (let r = 0; r < t.length; r++) n.append(t[r]);
      return n.getBlob();
    } else {
      if (i1()) return new Blob(t);
      throw new Mr(
        Lr.UNSUPPORTED_ENVIRONMENT,
        "This browser doesn't seem to support creating Blobs"
      );
    }
  }
  function R3(t, e, n) {
    return t.webkitSlice
      ? t.webkitSlice(e, n)
      : t.mozSlice
      ? t.mozSlice(e, n)
      : t.slice
      ? t.slice(e, n)
      : null;
  }
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function O3(t) {
    if (typeof atob > "u") throw g3("base-64");
    return atob(t);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const eo = {
    RAW: "raw",
    BASE64: "base64",
    BASE64URL: "base64url",
    DATA_URL: "data_url",
  };
  class hx {
    constructor(e, n) {
      (this.data = e), (this.contentType = n || null);
    }
  }
  function N3(t, e) {
    switch (t) {
      case eo.RAW:
        return new hx(wR(e));
      case eo.BASE64:
      case eo.BASE64URL:
        return new hx(_R(t, e));
      case eo.DATA_URL:
        return new hx(D3(e), M3(e));
    }
    throw n1();
  }
  function wR(t) {
    const e = [];
    for (let n = 0; n < t.length; n++) {
      let r = t.charCodeAt(n);
      if (r <= 127) e.push(r);
      else if (r <= 2047) e.push(192 | (r >> 6), 128 | (r & 63));
      else if ((r & 64512) === 55296)
        if (!(n < t.length - 1 && (t.charCodeAt(n + 1) & 64512) === 56320))
          e.push(239, 191, 189);
        else {
          const o = r,
            u = t.charCodeAt(++n);
          (r = 65536 | ((o & 1023) << 10) | (u & 1023)),
            e.push(
              240 | (r >> 18),
              128 | ((r >> 12) & 63),
              128 | ((r >> 6) & 63),
              128 | (r & 63)
            );
        }
      else
        (r & 64512) === 56320
          ? e.push(239, 191, 189)
          : e.push(224 | (r >> 12), 128 | ((r >> 6) & 63), 128 | (r & 63));
    }
    return new Uint8Array(e);
  }
  function L3(t) {
    let e;
    try {
      e = decodeURIComponent(t);
    } catch {
      throw Md(eo.DATA_URL, "Malformed data URL.");
    }
    return wR(e);
  }
  function _R(t, e) {
    switch (t) {
      case eo.BASE64: {
        const a = e.indexOf("-") !== -1,
          o = e.indexOf("_") !== -1;
        if (a || o)
          throw Md(
            t,
            "Invalid character '" +
              (a ? "-" : "_") +
              "' found: is it base64url encoded?"
          );
        break;
      }
      case eo.BASE64URL: {
        const a = e.indexOf("+") !== -1,
          o = e.indexOf("/") !== -1;
        if (a || o)
          throw Md(
            t,
            "Invalid character '" +
              (a ? "+" : "/") +
              "' found: is it base64 encoded?"
          );
        e = e.replace(/-/g, "+").replace(/_/g, "/");
        break;
      }
    }
    let n;
    try {
      n = O3(e);
    } catch (a) {
      throw a.message.includes("polyfill")
        ? a
        : Md(t, "Invalid character found");
    }
    const r = new Uint8Array(n.length);
    for (let a = 0; a < n.length; a++) r[a] = n.charCodeAt(a);
    return r;
  }
  class SR {
    constructor(e) {
      (this.base64 = !1), (this.contentType = null);
      const n = e.match(/^data:([^,]+)?,/);
      if (n === null)
        throw Md(
          eo.DATA_URL,
          "Must be formatted 'data:[<mediatype>][;base64],<data>"
        );
      const r = n[1] || null;
      r != null &&
        ((this.base64 = j3(r, ";base64")),
        (this.contentType = this.base64 ? r.substring(0, r.length - 7) : r)),
        (this.rest = e.substring(e.indexOf(",") + 1));
    }
  }
  function D3(t) {
    const e = new SR(t);
    return e.base64 ? _R(eo.BASE64, e.rest) : L3(e.rest);
  }
  function M3(t) {
    return new SR(t).contentType;
  }
  function j3(t, e) {
    return t.length >= e.length ? t.substring(t.length - e.length) === e : !1;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class bl {
    constructor(e, n) {
      let r = 0,
        a = "";
      pk(e)
        ? ((this.data_ = e), (r = e.size), (a = e.type))
        : e instanceof ArrayBuffer
        ? (n
            ? (this.data_ = new Uint8Array(e))
            : ((this.data_ = new Uint8Array(e.byteLength)),
              this.data_.set(new Uint8Array(e))),
          (r = this.data_.length))
        : e instanceof Uint8Array &&
          (n
            ? (this.data_ = e)
            : ((this.data_ = new Uint8Array(e.length)), this.data_.set(e)),
          (r = e.length)),
        (this.size_ = r),
        (this.type_ = a);
    }
    size() {
      return this.size_;
    }
    type() {
      return this.type_;
    }
    slice(e, n) {
      if (pk(this.data_)) {
        const r = this.data_,
          a = R3(r, e, n);
        return a === null ? null : new bl(a);
      } else {
        const r = new Uint8Array(this.data_.buffer, e, n - e);
        return new bl(r, !0);
      }
    }
    static getBlob(...e) {
      if (i1()) {
        const n = e.map((r) => (r instanceof bl ? r.data_ : r));
        return new bl(P3.apply(null, n));
      } else {
        const n = e.map((u) => (r1(u) ? N3(eo.RAW, u).data : u.data_));
        let r = 0;
        n.forEach((u) => {
          r += u.byteLength;
        });
        const a = new Uint8Array(r);
        let o = 0;
        return (
          n.forEach((u) => {
            for (let g = 0; g < u.length; g++) a[o++] = u[g];
          }),
          new bl(a, !0)
        );
      }
    }
    uploadData() {
      return this.data_;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function ER(t) {
    let e;
    try {
      e = JSON.parse(t);
    } catch {
      return null;
    }
    return w3(e) ? e : null;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function F3(t) {
    if (t.length === 0) return null;
    const e = t.lastIndexOf("/");
    return e === -1 ? "" : t.slice(0, e);
  }
  function z3(t, e) {
    const n = e
      .split("/")
      .filter((r) => r.length > 0)
      .join("/");
    return t.length === 0 ? n : t + "/" + n;
  }
  function kR(t) {
    const e = t.lastIndexOf("/", t.length - 2);
    return e === -1 ? t : t.slice(e + 1);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function V3(t, e) {
    return e;
  }
  class ls {
    constructor(e, n, r, a) {
      (this.server = e),
        (this.local = n || e),
        (this.writable = !!r),
        (this.xform = a || V3);
    }
  }
  let Kp = null;
  function $3(t) {
    return !r1(t) || t.length < 2 ? t : kR(t);
  }
  function AR() {
    if (Kp) return Kp;
    const t = [];
    t.push(new ls("bucket")),
      t.push(new ls("generation")),
      t.push(new ls("metageneration")),
      t.push(new ls("name", "fullPath", !0));
    function e(o, u) {
      return $3(u);
    }
    const n = new ls("name");
    (n.xform = e), t.push(n);
    function r(o, u) {
      return u !== void 0 ? Number(u) : u;
    }
    const a = new ls("size");
    return (
      (a.xform = r),
      t.push(a),
      t.push(new ls("timeCreated")),
      t.push(new ls("updated")),
      t.push(new ls("md5Hash", null, !0)),
      t.push(new ls("cacheControl", null, !0)),
      t.push(new ls("contentDisposition", null, !0)),
      t.push(new ls("contentEncoding", null, !0)),
      t.push(new ls("contentLanguage", null, !0)),
      t.push(new ls("contentType", null, !0)),
      t.push(new ls("metadata", "customMetadata", !0)),
      (Kp = t),
      Kp
    );
  }
  function B3(t, e) {
    function n() {
      const r = t.bucket,
        a = t.fullPath,
        o = new Vs(r, a);
      return e._makeStorageReference(o);
    }
    Object.defineProperty(t, "ref", { get: n });
  }
  function H3(t, e, n) {
    const r = {};
    r.type = "file";
    const a = n.length;
    for (let o = 0; o < a; o++) {
      const u = n[o];
      r[u.local] = u.xform(r, e[u.server]);
    }
    return B3(r, t), r;
  }
  function CR(t, e, n) {
    const r = ER(e);
    return r === null ? null : H3(t, r, n);
  }
  function W3(t, e, n, r) {
    const a = ER(e);
    if (a === null || !r1(a.downloadTokens)) return null;
    const o = a.downloadTokens;
    if (o.length === 0) return null;
    const u = encodeURIComponent;
    return o.split(",").map((E) => {
      const L = t.bucket,
        z = t.fullPath,
        B = "/b/" + u(L) + "/o/" + u(z),
        ae = s1(B, n, r),
        se = bR({ alt: "media", token: E });
      return ae + se;
    })[0];
  }
  function U3(t, e) {
    const n = {},
      r = e.length;
    for (let a = 0; a < r; a++) {
      const o = e[a];
      o.writable && (n[o.server] = t[o.local]);
    }
    return JSON.stringify(n);
  }
  class TR {
    constructor(e, n, r, a) {
      (this.url = e),
        (this.method = n),
        (this.handler = r),
        (this.timeout = a),
        (this.urlParams = {}),
        (this.headers = {}),
        (this.body = null),
        (this.errorHandler = null),
        (this.progressCallback = null),
        (this.successCodes = [200]),
        (this.additionalRetryCodes = []);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function IR(t) {
    if (!t) throw n1();
  }
  function X3(t, e) {
    function n(r, a) {
      const o = CR(t, a, e);
      return IR(o !== null), o;
    }
    return n;
  }
  function Y3(t, e) {
    function n(r, a) {
      const o = CR(t, a, e);
      return IR(o !== null), W3(o, a, t.host, t._protocol);
    }
    return n;
  }
  function PR(t) {
    function e(n, r) {
      let a;
      return (
        n.getStatus() === 401
          ? n.getErrorText().includes("Firebase App Check token is invalid")
            ? (a = a3())
            : (a = s3())
          : n.getStatus() === 402
          ? (a = i3(t.bucket))
          : n.getStatus() === 403
          ? (a = o3(t.path))
          : (a = r),
        (a.status = n.getStatus()),
        (a.serverResponse = r.serverResponse),
        a
      );
    }
    return e;
  }
  function G3(t) {
    const e = PR(t);
    function n(r, a) {
      let o = e(r, a);
      return (
        r.getStatus() === 404 && (o = r3(t.path)),
        (o.serverResponse = a.serverResponse),
        o
      );
    }
    return n;
  }
  function q3(t, e, n) {
    const r = e.fullServerUrl(),
      a = s1(r, t.host, t._protocol),
      o = "GET",
      u = t.maxOperationRetryTime,
      g = new TR(a, o, Y3(t, n), u);
    return (g.errorHandler = G3(e)), g;
  }
  function K3(t, e) {
    return (
      (t && t.contentType) || (e && e.type()) || "application/octet-stream"
    );
  }
  function Q3(t, e, n) {
    const r = Object.assign({}, n);
    return (
      (r.fullPath = t.path),
      (r.size = e.size()),
      r.contentType || (r.contentType = K3(null, e)),
      r
    );
  }
  function Z3(t, e, n, r, a) {
    const o = e.bucketOnlyServerUrl(),
      u = { "X-Goog-Upload-Protocol": "multipart" };
    function g() {
      let ce = "";
      for (let ye = 0; ye < 2; ye++)
        ce = ce + Math.random().toString().slice(2);
      return ce;
    }
    const x = g();
    u["Content-Type"] = "multipart/related; boundary=" + x;
    const E = Q3(e, r, a),
      L = U3(E, n),
      z =
        "--" +
        x +
        `\r
Content-Type: application/json; charset=utf-8\r
\r
` +
        L +
        `\r
--` +
        x +
        `\r
Content-Type: ` +
        E.contentType +
        `\r
\r
`,
      B =
        `\r
--` +
        x +
        "--",
      ae = bl.getBlob(z, r, B);
    if (ae === null) throw f3();
    const se = { name: E.fullPath },
      le = s1(o, t.host, t._protocol),
      he = "POST",
      oe = t.maxUploadRetryTime,
      F = new TR(le, he, X3(t, n), oe);
    return (
      (F.urlParams = se),
      (F.headers = u),
      (F.body = ae.uploadData()),
      (F.errorHandler = PR(e)),
      F
    );
  }
  class J3 {
    constructor() {
      (this.sent_ = !1),
        (this.xhr_ = new XMLHttpRequest()),
        this.initXhr(),
        (this.errorCode_ = jc.NO_ERROR),
        (this.sendPromise_ = new Promise((e) => {
          this.xhr_.addEventListener("abort", () => {
            (this.errorCode_ = jc.ABORT), e();
          }),
            this.xhr_.addEventListener("error", () => {
              (this.errorCode_ = jc.NETWORK_ERROR), e();
            }),
            this.xhr_.addEventListener("load", () => {
              e();
            });
        }));
    }
    send(e, n, r, a) {
      if (this.sent_) throw cd("cannot .send() more than once");
      if (((this.sent_ = !0), this.xhr_.open(n, e, !0), a !== void 0))
        for (const o in a)
          a.hasOwnProperty(o) && this.xhr_.setRequestHeader(o, a[o].toString());
      return (
        r !== void 0 ? this.xhr_.send(r) : this.xhr_.send(), this.sendPromise_
      );
    }
    getErrorCode() {
      if (!this.sent_) throw cd("cannot .getErrorCode() before sending");
      return this.errorCode_;
    }
    getStatus() {
      if (!this.sent_) throw cd("cannot .getStatus() before sending");
      try {
        return this.xhr_.status;
      } catch {
        return -1;
      }
    }
    getResponse() {
      if (!this.sent_) throw cd("cannot .getResponse() before sending");
      return this.xhr_.response;
    }
    getErrorText() {
      if (!this.sent_) throw cd("cannot .getErrorText() before sending");
      return this.xhr_.statusText;
    }
    abort() {
      this.xhr_.abort();
    }
    getResponseHeader(e) {
      return this.xhr_.getResponseHeader(e);
    }
    addUploadProgressListener(e) {
      this.xhr_.upload != null &&
        this.xhr_.upload.addEventListener("progress", e);
    }
    removeUploadProgressListener(e) {
      this.xhr_.upload != null &&
        this.xhr_.upload.removeEventListener("progress", e);
    }
  }
  class e5 extends J3 {
    initXhr() {
      this.xhr_.responseType = "text";
    }
  }
  function RR() {
    return new e5();
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class qc {
    constructor(e, n) {
      (this._service = e),
        n instanceof Vs
          ? (this._location = n)
          : (this._location = Vs.makeFromUrl(n, e.host));
    }
    toString() {
      return "gs://" + this._location.bucket + "/" + this._location.path;
    }
    _newRef(e, n) {
      return new qc(e, n);
    }
    get root() {
      const e = new Vs(this._location.bucket, "");
      return this._newRef(this._service, e);
    }
    get bucket() {
      return this._location.bucket;
    }
    get fullPath() {
      return this._location.path;
    }
    get name() {
      return kR(this._location.path);
    }
    get storage() {
      return this._service;
    }
    get parent() {
      const e = F3(this._location.path);
      if (e === null) return null;
      const n = new Vs(this._location.bucket, e);
      return new qc(this._service, n);
    }
    _throwIfRoot(e) {
      if (this._location.path === "") throw m3(e);
    }
  }
  function t5(t, e, n) {
    t._throwIfRoot("uploadBytes");
    const r = Z3(t.storage, t._location, AR(), new bl(e, !0), n);
    return t.storage
      .makeRequestWithTokens(r, RR)
      .then((a) => ({ metadata: a, ref: t }));
  }
  function n5(t) {
    t._throwIfRoot("getDownloadURL");
    const e = q3(t.storage, t._location, AR());
    return t.storage.makeRequestWithTokens(e, RR).then((n) => {
      if (n === null) throw p3();
      return n;
    });
  }
  function r5(t, e) {
    const n = z3(t._location.path, e),
      r = new Vs(t._location.bucket, n);
    return new qc(t.storage, r);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function i5(t) {
    return /^[A-Za-z]+:\/\//.test(t);
  }
  function s5(t, e) {
    return new qc(t, e);
  }
  function OR(t, e) {
    if (t instanceof a1) {
      const n = t;
      if (n._bucket == null) throw d3();
      const r = new qc(n, n._bucket);
      return e != null ? OR(r, e) : r;
    } else return e !== void 0 ? r5(t, e) : t;
  }
  function a5(t, e) {
    if (e && i5(e)) {
      if (t instanceof a1) return s5(t, e);
      throw Ub(
        "To use ref(service, url), the first argument must be a Storage instance."
      );
    } else return OR(t, e);
  }
  function mk(t, e) {
    const n = e == null ? void 0 : e[yR];
    return n == null ? null : Vs.makeFromBucketSpec(n, t);
  }
  function o5(t, e, n, r = {}) {
    (t.host = `${e}:${n}`), (t._protocol = "http");
    const { mockUserToken: a } = r;
    a &&
      (t._overrideAuthToken =
        typeof a == "string" ? a : hR(a, t.app.options.projectId));
  }
  class a1 {
    constructor(e, n, r, a, o) {
      (this.app = e),
        (this._authProvider = n),
        (this._appCheckProvider = r),
        (this._url = a),
        (this._firebaseVersion = o),
        (this._bucket = null),
        (this._host = vR),
        (this._protocol = "https"),
        (this._appId = null),
        (this._deleted = !1),
        (this._maxOperationRetryTime = t3),
        (this._maxUploadRetryTime = n3),
        (this._requests = new Set()),
        a != null
          ? (this._bucket = Vs.makeFromBucketSpec(a, this._host))
          : (this._bucket = mk(this._host, this.app.options));
    }
    get host() {
      return this._host;
    }
    set host(e) {
      (this._host = e),
        this._url != null
          ? (this._bucket = Vs.makeFromBucketSpec(this._url, e))
          : (this._bucket = mk(e, this.app.options));
    }
    get maxUploadRetryTime() {
      return this._maxUploadRetryTime;
    }
    set maxUploadRetryTime(e) {
      gk("time", 0, Number.POSITIVE_INFINITY, e),
        (this._maxUploadRetryTime = e);
    }
    get maxOperationRetryTime() {
      return this._maxOperationRetryTime;
    }
    set maxOperationRetryTime(e) {
      gk("time", 0, Number.POSITIVE_INFINITY, e),
        (this._maxOperationRetryTime = e);
    }
    async _getAuthToken() {
      if (this._overrideAuthToken) return this._overrideAuthToken;
      const e = this._authProvider.getImmediate({ optional: !0 });
      if (e) {
        const n = await e.getToken();
        if (n !== null) return n.accessToken;
      }
      return null;
    }
    async _getAppCheckToken() {
      const e = this._appCheckProvider.getImmediate({ optional: !0 });
      return e ? (await e.getToken()).token : null;
    }
    _delete() {
      return (
        this._deleted ||
          ((this._deleted = !0),
          this._requests.forEach((e) => e.cancel()),
          this._requests.clear()),
        Promise.resolve()
      );
    }
    _makeStorageReference(e) {
      return new qc(this, e);
    }
    _makeRequest(e, n, r, a, o = !0) {
      if (this._deleted) return new v3(xR());
      {
        const u = T3(e, this._appId, r, a, n, this._firebaseVersion, o);
        return (
          this._requests.add(u),
          u.getPromise().then(
            () => this._requests.delete(u),
            () => this._requests.delete(u)
          ),
          u
        );
      }
    }
    async makeRequestWithTokens(e, n) {
      const [r, a] = await Promise.all([
        this._getAuthToken(),
        this._getAppCheckToken(),
      ]);
      return this._makeRequest(e, n, r, a).getPromise();
    }
  }
  const vk = "@firebase/storage",
    yk = "0.12.0";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const NR = "storage";
  function o1(t, e, n) {
    return (t = ci(t)), t5(t, e, n);
  }
  function l1(t) {
    return (t = ci(t)), n5(t);
  }
  function c1(t, e) {
    return (t = ci(t)), a5(t, e);
  }
  function l5(t = t1(), e) {
    t = ci(t);
    const r = kv(t, NR).getImmediate({ identifier: e }),
      a = lR("storage");
    return a && c5(r, ...a), r;
  }
  function c5(t, e, n, r = {}) {
    o5(t, e, n, r);
  }
  function u5(t, { instanceIdentifier: e }) {
    const n = t.getProvider("app").getImmediate(),
      r = t.getProvider("auth-internal"),
      a = t.getProvider("app-check-internal");
    return new a1(n, r, a, e, hu);
  }
  function h5() {
    Gc(new Gl(NR, u5, "PUBLIC").setMultipleInstances(!0)),
      so(vk, yk, ""),
      so(vk, yk, "esm2017");
  }
  h5();
  const d5 = {
      apiKey: "AIzaSyDuG2QmGx13EPJx0lrwzrYyaoKz6f-k7fE",
      authDomain: "chefguard-5ca00.firebaseapp.com",
      projectId: "chefguard-5ca00",
      storageBucket: "chefguard-5ca00.appspot.com",
      messagingSenderId: "1004208385751",
      appId: "1:1004208385751:web:3a25c14f509989e0c7ca92",
    },
    Hs = pR(d5),
    u1 = l5(Hs);
  var f5 =
      typeof globalThis < "u"
        ? globalThis
        : typeof window < "u"
        ? window
        : typeof global < "u"
        ? global
        : typeof self < "u"
        ? self
        : {},
    kt,
    h1 = h1 || {},
    un = f5 || self;
  function Av(t) {
    var e = typeof t;
    return (
      (e = e != "object" ? e : t ? (Array.isArray(t) ? "array" : e) : "null"),
      e == "array" || (e == "object" && typeof t.length == "number")
    );
  }
  function Xf(t) {
    var e = typeof t;
    return (e == "object" && t != null) || e == "function";
  }
  function p5(t) {
    return (
      (Object.prototype.hasOwnProperty.call(t, dx) && t[dx]) || (t[dx] = ++g5)
    );
  }
  var dx = "closure_uid_" + ((1e9 * Math.random()) >>> 0),
    g5 = 0;
  function m5(t, e, n) {
    return t.call.apply(t.bind, arguments);
  }
  function v5(t, e, n) {
    if (!t) throw Error();
    if (2 < arguments.length) {
      var r = Array.prototype.slice.call(arguments, 2);
      return function () {
        var a = Array.prototype.slice.call(arguments);
        return Array.prototype.unshift.apply(a, r), t.apply(e, a);
      };
    }
    return function () {
      return t.apply(e, arguments);
    };
  }
  function qi(t, e, n) {
    return (
      Function.prototype.bind &&
      Function.prototype.bind.toString().indexOf("native code") != -1
        ? (qi = m5)
        : (qi = v5),
      qi.apply(null, arguments)
    );
  }
  function Qp(t, e) {
    var n = Array.prototype.slice.call(arguments, 1);
    return function () {
      var r = n.slice();
      return r.push.apply(r, arguments), t.apply(this, r);
    };
  }
  function bi(t, e) {
    function n() {}
    (n.prototype = e.prototype),
      (t.$ = e.prototype),
      (t.prototype = new n()),
      (t.prototype.constructor = t),
      (t.ac = function (r, a, o) {
        for (
          var u = Array(arguments.length - 2), g = 2;
          g < arguments.length;
          g++
        )
          u[g - 2] = arguments[g];
        return e.prototype[a].apply(r, u);
      });
  }
  function sc() {
    (this.s = this.s), (this.o = this.o);
  }
  var y5 = 0;
  sc.prototype.s = !1;
  sc.prototype.sa = function () {
    !this.s && ((this.s = !0), this.N(), y5 != 0) && p5(this);
  };
  sc.prototype.N = function () {
    if (this.o) for (; this.o.length; ) this.o.shift()();
  };
  const LR = Array.prototype.indexOf
    ? function (t, e) {
        return Array.prototype.indexOf.call(t, e, void 0);
      }
    : function (t, e) {
        if (typeof t == "string")
          return typeof e != "string" || e.length != 1 ? -1 : t.indexOf(e, 0);
        for (let n = 0; n < t.length; n++) if (n in t && t[n] === e) return n;
        return -1;
      };
  function d1(t) {
    const e = t.length;
    if (0 < e) {
      const n = Array(e);
      for (let r = 0; r < e; r++) n[r] = t[r];
      return n;
    }
    return [];
  }
  function xk(t, e) {
    for (let n = 1; n < arguments.length; n++) {
      const r = arguments[n];
      if (Av(r)) {
        const a = t.length || 0,
          o = r.length || 0;
        t.length = a + o;
        for (let u = 0; u < o; u++) t[a + u] = r[u];
      } else t.push(r);
    }
  }
  function Ki(t, e) {
    (this.type = t), (this.g = this.target = e), (this.defaultPrevented = !1);
  }
  Ki.prototype.h = function () {
    this.defaultPrevented = !0;
  };
  var x5 = (function () {
    if (!un.addEventListener || !Object.defineProperty) return !1;
    var t = !1,
      e = Object.defineProperty({}, "passive", {
        get: function () {
          t = !0;
        },
      });
    try {
      const n = () => {};
      un.addEventListener("test", n, e), un.removeEventListener("test", n, e);
    } catch {}
    return t;
  })();
  function pf(t) {
    return /^[\s\xa0]*$/.test(t);
  }
  function Cv() {
    var t = un.navigator;
    return t && (t = t.userAgent) ? t : "";
  }
  function Ja(t) {
    return Cv().indexOf(t) != -1;
  }
  function f1(t) {
    return f1[" "](t), t;
  }
  f1[" "] = function () {};
  function b5(t, e) {
    var n = dX;
    return Object.prototype.hasOwnProperty.call(n, t) ? n[t] : (n[t] = e(t));
  }
  var w5 = Ja("Opera"),
    mh = Ja("Trident") || Ja("MSIE"),
    DR = Ja("Edge"),
    Xb = DR || mh,
    MR =
      Ja("Gecko") &&
      !(Cv().toLowerCase().indexOf("webkit") != -1 && !Ja("Edge")) &&
      !(Ja("Trident") || Ja("MSIE")) &&
      !Ja("Edge"),
    _5 = Cv().toLowerCase().indexOf("webkit") != -1 && !Ja("Edge");
  function jR() {
    var t = un.document;
    return t ? t.documentMode : void 0;
  }
  var Yb;
  e: {
    var fx = "",
      px = (function () {
        var t = Cv();
        if (MR) return /rv:([^\);]+)(\)|;)/.exec(t);
        if (DR) return /Edge\/([\d\.]+)/.exec(t);
        if (mh) return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(t);
        if (_5) return /WebKit\/(\S+)/.exec(t);
        if (w5) return /(?:Version)[ \/]?(\S+)/.exec(t);
      })();
    if ((px && (fx = px ? px[1] : ""), mh)) {
      var gx = jR();
      if (gx != null && gx > parseFloat(fx)) {
        Yb = String(gx);
        break e;
      }
    }
    Yb = fx;
  }
  var Gb;
  if (un.document && mh) {
    var bk = jR();
    Gb = bk || parseInt(Yb, 10) || void 0;
  } else Gb = void 0;
  var S5 = Gb;
  function gf(t, e) {
    if (
      (Ki.call(this, t ? t.type : ""),
      (this.relatedTarget = this.g = this.target = null),
      (this.button =
        this.screenY =
        this.screenX =
        this.clientY =
        this.clientX =
          0),
      (this.key = ""),
      (this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1),
      (this.state = null),
      (this.pointerId = 0),
      (this.pointerType = ""),
      (this.i = null),
      t)
    ) {
      var n = (this.type = t.type),
        r =
          t.changedTouches && t.changedTouches.length
            ? t.changedTouches[0]
            : null;
      if (
        ((this.target = t.target || t.srcElement),
        (this.g = e),
        (e = t.relatedTarget))
      ) {
        if (MR) {
          e: {
            try {
              f1(e.nodeName);
              var a = !0;
              break e;
            } catch {}
            a = !1;
          }
          a || (e = null);
        }
      } else
        n == "mouseover"
          ? (e = t.fromElement)
          : n == "mouseout" && (e = t.toElement);
      (this.relatedTarget = e),
        r
          ? ((this.clientX = r.clientX !== void 0 ? r.clientX : r.pageX),
            (this.clientY = r.clientY !== void 0 ? r.clientY : r.pageY),
            (this.screenX = r.screenX || 0),
            (this.screenY = r.screenY || 0))
          : ((this.clientX = t.clientX !== void 0 ? t.clientX : t.pageX),
            (this.clientY = t.clientY !== void 0 ? t.clientY : t.pageY),
            (this.screenX = t.screenX || 0),
            (this.screenY = t.screenY || 0)),
        (this.button = t.button),
        (this.key = t.key || ""),
        (this.ctrlKey = t.ctrlKey),
        (this.altKey = t.altKey),
        (this.shiftKey = t.shiftKey),
        (this.metaKey = t.metaKey),
        (this.pointerId = t.pointerId || 0),
        (this.pointerType =
          typeof t.pointerType == "string"
            ? t.pointerType
            : E5[t.pointerType] || ""),
        (this.state = t.state),
        (this.i = t),
        t.defaultPrevented && gf.$.h.call(this);
    }
  }
  bi(gf, Ki);
  var E5 = { 2: "touch", 3: "pen", 4: "mouse" };
  gf.prototype.h = function () {
    gf.$.h.call(this);
    var t = this.i;
    t.preventDefault ? t.preventDefault() : (t.returnValue = !1);
  };
  var Yf = "closure_listenable_" + ((1e6 * Math.random()) | 0),
    k5 = 0;
  function A5(t, e, n, r, a) {
    (this.listener = t),
      (this.proxy = null),
      (this.src = e),
      (this.type = n),
      (this.capture = !!r),
      (this.la = a),
      (this.key = ++k5),
      (this.fa = this.ia = !1);
  }
  function Tv(t) {
    (t.fa = !0),
      (t.listener = null),
      (t.proxy = null),
      (t.src = null),
      (t.la = null);
  }
  function p1(t, e, n) {
    for (const r in t) e.call(n, t[r], r, t);
  }
  function C5(t, e) {
    for (const n in t) e.call(void 0, t[n], n, t);
  }
  function FR(t) {
    const e = {};
    for (const n in t) e[n] = t[n];
    return e;
  }
  const wk =
    "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(
      " "
    );
  function zR(t, e) {
    let n, r;
    for (let a = 1; a < arguments.length; a++) {
      r = arguments[a];
      for (n in r) t[n] = r[n];
      for (let o = 0; o < wk.length; o++)
        (n = wk[o]),
          Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
    }
  }
  function Iv(t) {
    (this.src = t), (this.g = {}), (this.h = 0);
  }
  Iv.prototype.add = function (t, e, n, r, a) {
    var o = t.toString();
    (t = this.g[o]), t || ((t = this.g[o] = []), this.h++);
    var u = Kb(t, e, r, a);
    return (
      -1 < u
        ? ((e = t[u]), n || (e.ia = !1))
        : ((e = new A5(e, this.src, o, !!r, a)), (e.ia = n), t.push(e)),
      e
    );
  };
  function qb(t, e) {
    var n = e.type;
    if (n in t.g) {
      var r = t.g[n],
        a = LR(r, e),
        o;
      (o = 0 <= a) && Array.prototype.splice.call(r, a, 1),
        o && (Tv(e), t.g[n].length == 0 && (delete t.g[n], t.h--));
    }
  }
  function Kb(t, e, n, r) {
    for (var a = 0; a < t.length; ++a) {
      var o = t[a];
      if (!o.fa && o.listener == e && o.capture == !!n && o.la == r) return a;
    }
    return -1;
  }
  var g1 = "closure_lm_" + ((1e6 * Math.random()) | 0),
    mx = {};
  function VR(t, e, n, r, a) {
    if (r && r.once) return BR(t, e, n, r, a);
    if (Array.isArray(e)) {
      for (var o = 0; o < e.length; o++) VR(t, e[o], n, r, a);
      return null;
    }
    return (
      (n = y1(n)),
      t && t[Yf]
        ? t.O(e, n, Xf(r) ? !!r.capture : !!r, a)
        : $R(t, e, n, !1, r, a)
    );
  }
  function $R(t, e, n, r, a, o) {
    if (!e) throw Error("Invalid event type");
    var u = Xf(a) ? !!a.capture : !!a,
      g = v1(t);
    if ((g || (t[g1] = g = new Iv(t)), (n = g.add(e, n, r, u, o)), n.proxy))
      return n;
    if (
      ((r = T5()),
      (n.proxy = r),
      (r.src = t),
      (r.listener = n),
      t.addEventListener)
    )
      x5 || (a = u),
        a === void 0 && (a = !1),
        t.addEventListener(e.toString(), r, a);
    else if (t.attachEvent) t.attachEvent(WR(e.toString()), r);
    else if (t.addListener && t.removeListener) t.addListener(r);
    else throw Error("addEventListener and attachEvent are unavailable.");
    return n;
  }
  function T5() {
    function t(n) {
      return e.call(t.src, t.listener, n);
    }
    const e = I5;
    return t;
  }
  function BR(t, e, n, r, a) {
    if (Array.isArray(e)) {
      for (var o = 0; o < e.length; o++) BR(t, e[o], n, r, a);
      return null;
    }
    return (
      (n = y1(n)),
      t && t[Yf]
        ? t.P(e, n, Xf(r) ? !!r.capture : !!r, a)
        : $R(t, e, n, !0, r, a)
    );
  }
  function HR(t, e, n, r, a) {
    if (Array.isArray(e))
      for (var o = 0; o < e.length; o++) HR(t, e[o], n, r, a);
    else
      (r = Xf(r) ? !!r.capture : !!r),
        (n = y1(n)),
        t && t[Yf]
          ? ((t = t.i),
            (e = String(e).toString()),
            e in t.g &&
              ((o = t.g[e]),
              (n = Kb(o, n, r, a)),
              -1 < n &&
                (Tv(o[n]),
                Array.prototype.splice.call(o, n, 1),
                o.length == 0 && (delete t.g[e], t.h--))))
          : t &&
            (t = v1(t)) &&
            ((e = t.g[e.toString()]),
            (t = -1),
            e && (t = Kb(e, n, r, a)),
            (n = -1 < t ? e[t] : null) && m1(n));
  }
  function m1(t) {
    if (typeof t != "number" && t && !t.fa) {
      var e = t.src;
      if (e && e[Yf]) qb(e.i, t);
      else {
        var n = t.type,
          r = t.proxy;
        e.removeEventListener
          ? e.removeEventListener(n, r, t.capture)
          : e.detachEvent
          ? e.detachEvent(WR(n), r)
          : e.addListener && e.removeListener && e.removeListener(r),
          (n = v1(e))
            ? (qb(n, t), n.h == 0 && ((n.src = null), (e[g1] = null)))
            : Tv(t);
      }
    }
  }
  function WR(t) {
    return t in mx ? mx[t] : (mx[t] = "on" + t);
  }
  function I5(t, e) {
    if (t.fa) t = !0;
    else {
      e = new gf(e, this);
      var n = t.listener,
        r = t.la || t.src;
      t.ia && m1(t), (t = n.call(r, e));
    }
    return t;
  }
  function v1(t) {
    return (t = t[g1]), t instanceof Iv ? t : null;
  }
  var vx = "__closure_events_fn_" + ((1e9 * Math.random()) >>> 0);
  function y1(t) {
    return typeof t == "function"
      ? t
      : (t[vx] ||
          (t[vx] = function (e) {
            return t.handleEvent(e);
          }),
        t[vx]);
  }
  function yi() {
    sc.call(this), (this.i = new Iv(this)), (this.S = this), (this.J = null);
  }
  bi(yi, sc);
  yi.prototype[Yf] = !0;
  yi.prototype.removeEventListener = function (t, e, n, r) {
    HR(this, t, e, n, r);
  };
  function Li(t, e) {
    var n,
      r = t.J;
    if (r) for (n = []; r; r = r.J) n.push(r);
    if (((t = t.S), (r = e.type || e), typeof e == "string")) e = new Ki(e, t);
    else if (e instanceof Ki) e.target = e.target || t;
    else {
      var a = e;
      (e = new Ki(r, t)), zR(e, a);
    }
    if (((a = !0), n))
      for (var o = n.length - 1; 0 <= o; o--) {
        var u = (e.g = n[o]);
        a = Zp(u, r, !0, e) && a;
      }
    if (
      ((u = e.g = t), (a = Zp(u, r, !0, e) && a), (a = Zp(u, r, !1, e) && a), n)
    )
      for (o = 0; o < n.length; o++)
        (u = e.g = n[o]), (a = Zp(u, r, !1, e) && a);
  }
  yi.prototype.N = function () {
    if ((yi.$.N.call(this), this.i)) {
      var t = this.i,
        e;
      for (e in t.g) {
        for (var n = t.g[e], r = 0; r < n.length; r++) Tv(n[r]);
        delete t.g[e], t.h--;
      }
    }
    this.J = null;
  };
  yi.prototype.O = function (t, e, n, r) {
    return this.i.add(String(t), e, !1, n, r);
  };
  yi.prototype.P = function (t, e, n, r) {
    return this.i.add(String(t), e, !0, n, r);
  };
  function Zp(t, e, n, r) {
    if (((e = t.i.g[String(e)]), !e)) return !0;
    e = e.concat();
    for (var a = !0, o = 0; o < e.length; ++o) {
      var u = e[o];
      if (u && !u.fa && u.capture == n) {
        var g = u.listener,
          x = u.la || u.src;
        u.ia && qb(t.i, u), (a = g.call(x, r) !== !1 && a);
      }
    }
    return a && !r.defaultPrevented;
  }
  var x1 = un.JSON.stringify;
  class P5 {
    constructor(e, n) {
      (this.i = e), (this.j = n), (this.h = 0), (this.g = null);
    }
    get() {
      let e;
      return (
        0 < this.h
          ? (this.h--, (e = this.g), (this.g = e.next), (e.next = null))
          : (e = this.i()),
        e
      );
    }
  }
  function R5() {
    var t = b1;
    let e = null;
    return (
      t.g &&
        ((e = t.g), (t.g = t.g.next), t.g || (t.h = null), (e.next = null)),
      e
    );
  }
  class O5 {
    constructor() {
      this.h = this.g = null;
    }
    add(e, n) {
      const r = UR.get();
      r.set(e, n), this.h ? (this.h.next = r) : (this.g = r), (this.h = r);
    }
  }
  var UR = new P5(
    () => new N5(),
    (t) => t.reset()
  );
  class N5 {
    constructor() {
      this.next = this.g = this.h = null;
    }
    set(e, n) {
      (this.h = e), (this.g = n), (this.next = null);
    }
    reset() {
      this.next = this.g = this.h = null;
    }
  }
  function L5(t) {
    var e = 1;
    t = t.split(":");
    const n = [];
    for (; 0 < e && t.length; ) n.push(t.shift()), e--;
    return t.length && n.push(t.join(":")), n;
  }
  function D5(t) {
    un.setTimeout(() => {
      throw t;
    }, 0);
  }
  let mf,
    vf = !1,
    b1 = new O5(),
    XR = () => {
      const t = un.Promise.resolve(void 0);
      mf = () => {
        t.then(M5);
      };
    };
  var M5 = () => {
    for (var t; (t = R5()); ) {
      try {
        t.h.call(t.g);
      } catch (n) {
        D5(n);
      }
      var e = UR;
      e.j(t), 100 > e.h && (e.h++, (t.next = e.g), (e.g = t));
    }
    vf = !1;
  };
  function Pv(t, e) {
    yi.call(this),
      (this.h = t || 1),
      (this.g = e || un),
      (this.j = qi(this.qb, this)),
      (this.l = Date.now());
  }
  bi(Pv, yi);
  kt = Pv.prototype;
  kt.ga = !1;
  kt.T = null;
  kt.qb = function () {
    if (this.ga) {
      var t = Date.now() - this.l;
      0 < t && t < 0.8 * this.h
        ? (this.T = this.g.setTimeout(this.j, this.h - t))
        : (this.T && (this.g.clearTimeout(this.T), (this.T = null)),
          Li(this, "tick"),
          this.ga && (w1(this), this.start()));
    }
  };
  kt.start = function () {
    (this.ga = !0),
      this.T ||
        ((this.T = this.g.setTimeout(this.j, this.h)), (this.l = Date.now()));
  };
  function w1(t) {
    (t.ga = !1), t.T && (t.g.clearTimeout(t.T), (t.T = null));
  }
  kt.N = function () {
    Pv.$.N.call(this), w1(this), delete this.g;
  };
  function _1(t, e, n) {
    if (typeof t == "function") n && (t = qi(t, n));
    else if (t && typeof t.handleEvent == "function") t = qi(t.handleEvent, t);
    else throw Error("Invalid listener argument");
    return 2147483647 < Number(e) ? -1 : un.setTimeout(t, e || 0);
  }
  function YR(t) {
    t.g = _1(() => {
      (t.g = null), t.i && ((t.i = !1), YR(t));
    }, t.j);
    const e = t.h;
    (t.h = null), t.m.apply(null, e);
  }
  class j5 extends sc {
    constructor(e, n) {
      super(),
        (this.m = e),
        (this.j = n),
        (this.h = null),
        (this.i = !1),
        (this.g = null);
    }
    l(e) {
      (this.h = arguments), this.g ? (this.i = !0) : YR(this);
    }
    N() {
      super.N(),
        this.g &&
          (un.clearTimeout(this.g),
          (this.g = null),
          (this.i = !1),
          (this.h = null));
    }
  }
  function yf(t) {
    sc.call(this), (this.h = t), (this.g = {});
  }
  bi(yf, sc);
  var _k = [];
  function GR(t, e, n, r) {
    Array.isArray(n) || (n && (_k[0] = n.toString()), (n = _k));
    for (var a = 0; a < n.length; a++) {
      var o = VR(e, n[a], r || t.handleEvent, !1, t.h || t);
      if (!o) break;
      t.g[o.key] = o;
    }
  }
  function qR(t) {
    p1(
      t.g,
      function (e, n) {
        this.g.hasOwnProperty(n) && m1(e);
      },
      t
    ),
      (t.g = {});
  }
  yf.prototype.N = function () {
    yf.$.N.call(this), qR(this);
  };
  yf.prototype.handleEvent = function () {
    throw Error("EventHandler.handleEvent not implemented");
  };
  function Rv() {
    this.g = !0;
  }
  Rv.prototype.Ea = function () {
    this.g = !1;
  };
  function F5(t, e, n, r, a, o) {
    t.info(function () {
      if (t.g)
        if (o)
          for (var u = "", g = o.split("&"), x = 0; x < g.length; x++) {
            var E = g[x].split("=");
            if (1 < E.length) {
              var L = E[0];
              E = E[1];
              var z = L.split("_");
              u =
                2 <= z.length && z[1] == "type"
                  ? u + (L + "=" + E + "&")
                  : u + (L + "=redacted&");
            }
          }
        else u = null;
      else u = o;
      return (
        "XMLHTTP REQ (" +
        r +
        ") [attempt " +
        a +
        "]: " +
        e +
        `
` +
        n +
        `
` +
        u
      );
    });
  }
  function z5(t, e, n, r, a, o, u) {
    t.info(function () {
      return (
        "XMLHTTP RESP (" +
        r +
        ") [ attempt " +
        a +
        "]: " +
        e +
        `
` +
        n +
        `
` +
        o +
        " " +
        u
      );
    });
  }
  function Gu(t, e, n, r) {
    t.info(function () {
      return "XMLHTTP TEXT (" + e + "): " + $5(t, n) + (r ? " " + r : "");
    });
  }
  function V5(t, e) {
    t.info(function () {
      return "TIMEOUT: " + e;
    });
  }
  Rv.prototype.info = function () {};
  function $5(t, e) {
    if (!t.g) return e;
    if (!e) return null;
    try {
      var n = JSON.parse(e);
      if (n) {
        for (t = 0; t < n.length; t++)
          if (Array.isArray(n[t])) {
            var r = n[t];
            if (!(2 > r.length)) {
              var a = r[1];
              if (Array.isArray(a) && !(1 > a.length)) {
                var o = a[0];
                if (o != "noop" && o != "stop" && o != "close")
                  for (var u = 1; u < a.length; u++) a[u] = "";
              }
            }
          }
      }
      return x1(n);
    } catch {
      return e;
    }
  }
  var du = {},
    Sk = null;
  function Ov() {
    return (Sk = Sk || new yi());
  }
  du.Ta = "serverreachability";
  function KR(t) {
    Ki.call(this, du.Ta, t);
  }
  bi(KR, Ki);
  function xf(t) {
    const e = Ov();
    Li(e, new KR(e));
  }
  du.STAT_EVENT = "statevent";
  function QR(t, e) {
    Ki.call(this, du.STAT_EVENT, t), (this.stat = e);
  }
  bi(QR, Ki);
  function us(t) {
    const e = Ov();
    Li(e, new QR(e, t));
  }
  du.Ua = "timingevent";
  function ZR(t, e) {
    Ki.call(this, du.Ua, t), (this.size = e);
  }
  bi(ZR, Ki);
  function Gf(t, e) {
    if (typeof t != "function")
      throw Error("Fn must not be null and must be a function");
    return un.setTimeout(function () {
      t();
    }, e);
  }
  var Nv = {
      NO_ERROR: 0,
      rb: 1,
      Eb: 2,
      Db: 3,
      yb: 4,
      Cb: 5,
      Fb: 6,
      Qa: 7,
      TIMEOUT: 8,
      Ib: 9,
    },
    JR = {
      wb: "complete",
      Sb: "success",
      Ra: "error",
      Qa: "abort",
      Kb: "ready",
      Lb: "readystatechange",
      TIMEOUT: "timeout",
      Gb: "incrementaldata",
      Jb: "progress",
      zb: "downloadprogress",
      $b: "uploadprogress",
    };
  function S1() {}
  S1.prototype.h = null;
  function Ek(t) {
    return t.h || (t.h = t.i());
  }
  function eO() {}
  var qf = { OPEN: "a", vb: "b", Ra: "c", Hb: "d" };
  function E1() {
    Ki.call(this, "d");
  }
  bi(E1, Ki);
  function k1() {
    Ki.call(this, "c");
  }
  bi(k1, Ki);
  var Qb;
  function Lv() {}
  bi(Lv, S1);
  Lv.prototype.g = function () {
    return new XMLHttpRequest();
  };
  Lv.prototype.i = function () {
    return {};
  };
  Qb = new Lv();
  function Kf(t, e, n, r) {
    (this.l = t),
      (this.j = e),
      (this.m = n),
      (this.W = r || 1),
      (this.U = new yf(this)),
      (this.P = B5),
      (t = Xb ? 125 : void 0),
      (this.V = new Pv(t)),
      (this.I = null),
      (this.i = !1),
      (this.u = this.B = this.A = this.L = this.G = this.Y = this.C = null),
      (this.F = []),
      (this.g = null),
      (this.o = 0),
      (this.s = this.v = null),
      (this.ca = -1),
      (this.J = !1),
      (this.O = 0),
      (this.M = null),
      (this.ba = this.K = this.aa = this.S = !1),
      (this.h = new tO());
  }
  function tO() {
    (this.i = null), (this.g = ""), (this.h = !1);
  }
  var B5 = 45e3,
    nO = {},
    Zb = {};
  kt = Kf.prototype;
  kt.setTimeout = function (t) {
    this.P = t;
  };
  function Jb(t, e, n) {
    (t.L = 1), (t.A = Mv(Xo(e))), (t.u = n), (t.S = !0), rO(t, null);
  }
  function rO(t, e) {
    (t.G = Date.now()), Qf(t), (t.B = Xo(t.A));
    var n = t.B,
      r = t.W;
    Array.isArray(r) || (r = [String(r)]),
      hO(n.i, "t", r),
      (t.o = 0),
      (n = t.l.J),
      (t.h = new tO()),
      (t.g = OO(t.l, n ? e : null, !t.u)),
      0 < t.O && (t.M = new j5(qi(t.Pa, t, t.g), t.O)),
      GR(t.U, t.g, "readystatechange", t.nb),
      (e = t.I ? FR(t.I) : {}),
      t.u
        ? (t.v || (t.v = "POST"),
          (e["Content-Type"] = "application/x-www-form-urlencoded"),
          t.g.ha(t.B, t.v, t.u, e))
        : ((t.v = "GET"), t.g.ha(t.B, t.v, null, e)),
      xf(),
      F5(t.j, t.v, t.B, t.m, t.W, t.u);
  }
  kt.nb = function (t) {
    t = t.target;
    const e = this.M;
    e && to(t) == 3 ? e.l() : this.Pa(t);
  };
  kt.Pa = function (t) {
    try {
      if (t == this.g)
        e: {
          const L = to(this.g);
          var e = this.g.Ia();
          const z = this.g.da();
          if (
            !(3 > L) &&
            (L != 3 ||
              Xb ||
              (this.g && (this.h.h || this.g.ja() || Tk(this.g))))
          ) {
            this.J || L != 4 || e == 7 || (e == 8 || 0 >= z ? xf(3) : xf(2)),
              Dv(this);
            var n = this.g.da();
            this.ca = n;
            t: if (iO(this)) {
              var r = Tk(this.g);
              t = "";
              var a = r.length,
                o = to(this.g) == 4;
              if (!this.h.i) {
                if (typeof TextDecoder > "u") {
                  Pc(this), jd(this);
                  var u = "";
                  break t;
                }
                this.h.i = new un.TextDecoder();
              }
              for (e = 0; e < a; e++)
                (this.h.h = !0),
                  (t += this.h.i.decode(r[e], { stream: o && e == a - 1 }));
              (r.length = 0), (this.h.g += t), (this.o = 0), (u = this.h.g);
            } else u = this.g.ja();
            if (
              ((this.i = n == 200),
              z5(this.j, this.v, this.B, this.m, this.W, L, n),
              this.i)
            ) {
              if (this.aa && !this.K) {
                t: {
                  if (this.g) {
                    var g,
                      x = this.g;
                    if (
                      (g = x.g
                        ? x.g.getResponseHeader("X-HTTP-Initial-Response")
                        : null) &&
                      !pf(g)
                    ) {
                      var E = g;
                      break t;
                    }
                  }
                  E = null;
                }
                if ((n = E))
                  Gu(
                    this.j,
                    this.m,
                    n,
                    "Initial handshake response via X-HTTP-Initial-Response"
                  ),
                    (this.K = !0),
                    e0(this, n);
                else {
                  (this.i = !1), (this.s = 3), us(12), Pc(this), jd(this);
                  break e;
                }
              }
              this.S
                ? (sO(this, L, u),
                  Xb &&
                    this.i &&
                    L == 3 &&
                    (GR(this.U, this.V, "tick", this.mb), this.V.start()))
                : (Gu(this.j, this.m, u, null), e0(this, u)),
                L == 4 && Pc(this),
                this.i &&
                  !this.J &&
                  (L == 4 ? TO(this.l, this) : ((this.i = !1), Qf(this)));
            } else
              cX(this.g),
                n == 400 && 0 < u.indexOf("Unknown SID")
                  ? ((this.s = 3), us(12))
                  : ((this.s = 0), us(13)),
                Pc(this),
                jd(this);
          }
        }
    } catch {
    } finally {
    }
  };
  function iO(t) {
    return t.g ? t.v == "GET" && t.L != 2 && t.l.Ha : !1;
  }
  function sO(t, e, n) {
    let r = !0,
      a;
    for (; !t.J && t.o < n.length; )
      if (((a = H5(t, n)), a == Zb)) {
        e == 4 && ((t.s = 4), us(14), (r = !1)),
          Gu(t.j, t.m, null, "[Incomplete Response]");
        break;
      } else if (a == nO) {
        (t.s = 4), us(15), Gu(t.j, t.m, n, "[Invalid Chunk]"), (r = !1);
        break;
      } else Gu(t.j, t.m, a, null), e0(t, a);
    iO(t) && t.o != 0 && ((t.h.g = t.h.g.slice(t.o)), (t.o = 0)),
      e != 4 || n.length != 0 || t.h.h || ((t.s = 1), us(16), (r = !1)),
      (t.i = t.i && r),
      r
        ? 0 < n.length &&
          !t.ba &&
          ((t.ba = !0),
          (e = t.l),
          e.g == t &&
            e.ca &&
            !e.M &&
            (e.l.info(
              "Great, no buffering proxy detected. Bytes received: " + n.length
            ),
            R1(e),
            (e.M = !0),
            us(11)))
        : (Gu(t.j, t.m, n, "[Invalid Chunked Response]"), Pc(t), jd(t));
  }
  kt.mb = function () {
    if (this.g) {
      var t = to(this.g),
        e = this.g.ja();
      this.o < e.length &&
        (Dv(this), sO(this, t, e), this.i && t != 4 && Qf(this));
    }
  };
  function H5(t, e) {
    var n = t.o,
      r = e.indexOf(
        `
`,
        n
      );
    return r == -1
      ? Zb
      : ((n = Number(e.substring(n, r))),
        isNaN(n)
          ? nO
          : ((r += 1),
            r + n > e.length
              ? Zb
              : ((e = e.slice(r, r + n)), (t.o = r + n), e)));
  }
  kt.cancel = function () {
    (this.J = !0), Pc(this);
  };
  function Qf(t) {
    (t.Y = Date.now() + t.P), aO(t, t.P);
  }
  function aO(t, e) {
    if (t.C != null) throw Error("WatchDog timer not null");
    t.C = Gf(qi(t.lb, t), e);
  }
  function Dv(t) {
    t.C && (un.clearTimeout(t.C), (t.C = null));
  }
  kt.lb = function () {
    this.C = null;
    const t = Date.now();
    0 <= t - this.Y
      ? (V5(this.j, this.B),
        this.L != 2 && (xf(), us(17)),
        Pc(this),
        (this.s = 2),
        jd(this))
      : aO(this, this.Y - t);
  };
  function jd(t) {
    t.l.H == 0 || t.J || TO(t.l, t);
  }
  function Pc(t) {
    Dv(t);
    var e = t.M;
    e && typeof e.sa == "function" && e.sa(),
      (t.M = null),
      w1(t.V),
      qR(t.U),
      t.g && ((e = t.g), (t.g = null), e.abort(), e.sa());
  }
  function e0(t, e) {
    try {
      var n = t.l;
      if (n.H != 0 && (n.g == t || t0(n.i, t))) {
        if (!t.K && t0(n.i, t) && n.H == 3) {
          try {
            var r = n.Ja.g.parse(e);
          } catch {
            r = null;
          }
          if (Array.isArray(r) && r.length == 3) {
            var a = r;
            if (a[0] == 0) {
              e: if (!n.u) {
                if (n.g)
                  if (n.g.G + 3e3 < t.G) xm(n), Vv(n);
                  else break e;
                P1(n), us(18);
              }
            } else
              (n.Fa = a[1]),
                0 < n.Fa - n.V &&
                  37500 > a[2] &&
                  n.G &&
                  n.A == 0 &&
                  !n.v &&
                  (n.v = Gf(qi(n.ib, n), 6e3));
            if (1 >= pO(n.i) && n.oa) {
              try {
                n.oa();
              } catch {}
              n.oa = void 0;
            }
          } else Rc(n, 11);
        } else if (((t.K || n.g == t) && xm(n), !pf(e)))
          for (a = n.Ja.g.parse(e), e = 0; e < a.length; e++) {
            let E = a[e];
            if (((n.V = E[0]), (E = E[1]), n.H == 2))
              if (E[0] == "c") {
                (n.K = E[1]), (n.pa = E[2]);
                const L = E[3];
                L != null && ((n.ra = L), n.l.info("VER=" + n.ra));
                const z = E[4];
                z != null && ((n.Ga = z), n.l.info("SVER=" + n.Ga));
                const B = E[5];
                B != null &&
                  typeof B == "number" &&
                  0 < B &&
                  ((r = 1.5 * B),
                  (n.L = r),
                  n.l.info("backChannelRequestTimeoutMs_=" + r)),
                  (r = n);
                const ae = t.g;
                if (ae) {
                  const se = ae.g
                    ? ae.g.getResponseHeader("X-Client-Wire-Protocol")
                    : null;
                  if (se) {
                    var o = r.i;
                    o.g ||
                      (se.indexOf("spdy") == -1 &&
                        se.indexOf("quic") == -1 &&
                        se.indexOf("h2") == -1) ||
                      ((o.j = o.l),
                      (o.g = new Set()),
                      o.h && (A1(o, o.h), (o.h = null)));
                  }
                  if (r.F) {
                    const le = ae.g
                      ? ae.g.getResponseHeader("X-HTTP-Session-Id")
                      : null;
                    le && ((r.Da = le), pr(r.I, r.F, le));
                  }
                }
                (n.H = 3),
                  n.h && n.h.Ba(),
                  n.ca &&
                    ((n.S = Date.now() - t.G),
                    n.l.info("Handshake RTT: " + n.S + "ms")),
                  (r = n);
                var u = t;
                if (((r.wa = RO(r, r.J ? r.pa : null, r.Y)), u.K)) {
                  gO(r.i, u);
                  var g = u,
                    x = r.L;
                  x && g.setTimeout(x), g.C && (Dv(g), Qf(g)), (r.g = u);
                } else AO(r);
                0 < n.j.length && $v(n);
              } else (E[0] != "stop" && E[0] != "close") || Rc(n, 7);
            else
              n.H == 3 &&
                (E[0] == "stop" || E[0] == "close"
                  ? E[0] == "stop"
                    ? Rc(n, 7)
                    : I1(n)
                  : E[0] != "noop" && n.h && n.h.Aa(E),
                (n.A = 0));
          }
      }
      xf(4);
    } catch {}
  }
  function W5(t) {
    if (t.Z && typeof t.Z == "function") return t.Z();
    if (
      (typeof Map < "u" && t instanceof Map) ||
      (typeof Set < "u" && t instanceof Set)
    )
      return Array.from(t.values());
    if (typeof t == "string") return t.split("");
    if (Av(t)) {
      for (var e = [], n = t.length, r = 0; r < n; r++) e.push(t[r]);
      return e;
    }
    (e = []), (n = 0);
    for (r in t) e[n++] = t[r];
    return e;
  }
  function U5(t) {
    if (t.ta && typeof t.ta == "function") return t.ta();
    if (!t.Z || typeof t.Z != "function") {
      if (typeof Map < "u" && t instanceof Map) return Array.from(t.keys());
      if (!(typeof Set < "u" && t instanceof Set)) {
        if (Av(t) || typeof t == "string") {
          var e = [];
          t = t.length;
          for (var n = 0; n < t; n++) e.push(n);
          return e;
        }
        (e = []), (n = 0);
        for (const r in t) e[n++] = r;
        return e;
      }
    }
  }
  function oO(t, e) {
    if (t.forEach && typeof t.forEach == "function") t.forEach(e, void 0);
    else if (Av(t) || typeof t == "string")
      Array.prototype.forEach.call(t, e, void 0);
    else
      for (var n = U5(t), r = W5(t), a = r.length, o = 0; o < a; o++)
        e.call(void 0, r[o], n && n[o], t);
  }
  var lO = RegExp(
    "^(?:([^:/?#.]+):)?(?://(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$"
  );
  function X5(t, e) {
    if (t) {
      t = t.split("&");
      for (var n = 0; n < t.length; n++) {
        var r = t[n].indexOf("="),
          a = null;
        if (0 <= r) {
          var o = t[n].substring(0, r);
          a = t[n].substring(r + 1);
        } else o = t[n];
        e(o, a ? decodeURIComponent(a.replace(/\+/g, " ")) : "");
      }
    }
  }
  function Fc(t) {
    if (
      ((this.g = this.s = this.j = ""),
      (this.m = null),
      (this.o = this.l = ""),
      (this.h = !1),
      t instanceof Fc)
    ) {
      (this.h = t.h),
        vm(this, t.j),
        (this.s = t.s),
        (this.g = t.g),
        ym(this, t.m),
        (this.l = t.l);
      var e = t.i,
        n = new bf();
      (n.i = e.i),
        e.g && ((n.g = new Map(e.g)), (n.h = e.h)),
        kk(this, n),
        (this.o = t.o);
    } else
      t && (e = String(t).match(lO))
        ? ((this.h = !1),
          vm(this, e[1] || "", !0),
          (this.s = wd(e[2] || "")),
          (this.g = wd(e[3] || "", !0)),
          ym(this, e[4]),
          (this.l = wd(e[5] || "", !0)),
          kk(this, e[6] || "", !0),
          (this.o = wd(e[7] || "")))
        : ((this.h = !1), (this.i = new bf(null, this.h)));
  }
  Fc.prototype.toString = function () {
    var t = [],
      e = this.j;
    e && t.push(_d(e, Ak, !0), ":");
    var n = this.g;
    return (
      (n || e == "file") &&
        (t.push("//"),
        (e = this.s) && t.push(_d(e, Ak, !0), "@"),
        t.push(
          encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")
        ),
        (n = this.m),
        n != null && t.push(":", String(n))),
      (n = this.l) &&
        (this.g && n.charAt(0) != "/" && t.push("/"),
        t.push(_d(n, n.charAt(0) == "/" ? q5 : G5, !0))),
      (n = this.i.toString()) && t.push("?", n),
      (n = this.o) && t.push("#", _d(n, Q5)),
      t.join("")
    );
  };
  function Xo(t) {
    return new Fc(t);
  }
  function vm(t, e, n) {
    (t.j = n ? wd(e, !0) : e), t.j && (t.j = t.j.replace(/:$/, ""));
  }
  function ym(t, e) {
    if (e) {
      if (((e = Number(e)), isNaN(e) || 0 > e))
        throw Error("Bad port number " + e);
      t.m = e;
    } else t.m = null;
  }
  function kk(t, e, n) {
    e instanceof bf
      ? ((t.i = e), Z5(t.i, t.h))
      : (n || (e = _d(e, K5)), (t.i = new bf(e, t.h)));
  }
  function pr(t, e, n) {
    t.i.set(e, n);
  }
  function Mv(t) {
    return (
      pr(
        t,
        "zx",
        Math.floor(2147483648 * Math.random()).toString(36) +
          Math.abs(
            Math.floor(2147483648 * Math.random()) ^ Date.now()
          ).toString(36)
      ),
      t
    );
  }
  function wd(t, e) {
    return t
      ? e
        ? decodeURI(t.replace(/%25/g, "%2525"))
        : decodeURIComponent(t)
      : "";
  }
  function _d(t, e, n) {
    return typeof t == "string"
      ? ((t = encodeURI(t).replace(e, Y5)),
        n && (t = t.replace(/%25([0-9a-fA-F]{2})/g, "%$1")),
        t)
      : null;
  }
  function Y5(t) {
    return (
      (t = t.charCodeAt(0)),
      "%" + ((t >> 4) & 15).toString(16) + (t & 15).toString(16)
    );
  }
  var Ak = /[#\/\?@]/g,
    G5 = /[#\?:]/g,
    q5 = /[#\?]/g,
    K5 = /[#\?@]/g,
    Q5 = /#/g;
  function bf(t, e) {
    (this.h = this.g = null), (this.i = t || null), (this.j = !!e);
  }
  function ac(t) {
    t.g ||
      ((t.g = new Map()),
      (t.h = 0),
      t.i &&
        X5(t.i, function (e, n) {
          t.add(decodeURIComponent(e.replace(/\+/g, " ")), n);
        }));
  }
  kt = bf.prototype;
  kt.add = function (t, e) {
    ac(this), (this.i = null), (t = Dh(this, t));
    var n = this.g.get(t);
    return n || this.g.set(t, (n = [])), n.push(e), (this.h += 1), this;
  };
  function cO(t, e) {
    ac(t),
      (e = Dh(t, e)),
      t.g.has(e) && ((t.i = null), (t.h -= t.g.get(e).length), t.g.delete(e));
  }
  function uO(t, e) {
    return ac(t), (e = Dh(t, e)), t.g.has(e);
  }
  kt.forEach = function (t, e) {
    ac(this),
      this.g.forEach(function (n, r) {
        n.forEach(function (a) {
          t.call(e, a, r, this);
        }, this);
      }, this);
  };
  kt.ta = function () {
    ac(this);
    const t = Array.from(this.g.values()),
      e = Array.from(this.g.keys()),
      n = [];
    for (let r = 0; r < e.length; r++) {
      const a = t[r];
      for (let o = 0; o < a.length; o++) n.push(e[r]);
    }
    return n;
  };
  kt.Z = function (t) {
    ac(this);
    let e = [];
    if (typeof t == "string")
      uO(this, t) && (e = e.concat(this.g.get(Dh(this, t))));
    else {
      t = Array.from(this.g.values());
      for (let n = 0; n < t.length; n++) e = e.concat(t[n]);
    }
    return e;
  };
  kt.set = function (t, e) {
    return (
      ac(this),
      (this.i = null),
      (t = Dh(this, t)),
      uO(this, t) && (this.h -= this.g.get(t).length),
      this.g.set(t, [e]),
      (this.h += 1),
      this
    );
  };
  kt.get = function (t, e) {
    return t ? ((t = this.Z(t)), 0 < t.length ? String(t[0]) : e) : e;
  };
  function hO(t, e, n) {
    cO(t, e),
      0 < n.length &&
        ((t.i = null), t.g.set(Dh(t, e), d1(n)), (t.h += n.length));
  }
  kt.toString = function () {
    if (this.i) return this.i;
    if (!this.g) return "";
    const t = [],
      e = Array.from(this.g.keys());
    for (var n = 0; n < e.length; n++) {
      var r = e[n];
      const o = encodeURIComponent(String(r)),
        u = this.Z(r);
      for (r = 0; r < u.length; r++) {
        var a = o;
        u[r] !== "" && (a += "=" + encodeURIComponent(String(u[r]))), t.push(a);
      }
    }
    return (this.i = t.join("&"));
  };
  function Dh(t, e) {
    return (e = String(e)), t.j && (e = e.toLowerCase()), e;
  }
  function Z5(t, e) {
    e &&
      !t.j &&
      (ac(t),
      (t.i = null),
      t.g.forEach(function (n, r) {
        var a = r.toLowerCase();
        r != a && (cO(this, r), hO(this, a, n));
      }, t)),
      (t.j = e);
  }
  var J5 = class {
    constructor(t, e) {
      (this.g = t), (this.map = e);
    }
  };
  function dO(t) {
    (this.l = t || eX),
      un.PerformanceNavigationTiming
        ? ((t = un.performance.getEntriesByType("navigation")),
          (t =
            0 < t.length &&
            (t[0].nextHopProtocol == "hq" || t[0].nextHopProtocol == "h2")))
        : (t = !!(un.g && un.g.Ka && un.g.Ka() && un.g.Ka().dc)),
      (this.j = t ? this.l : 1),
      (this.g = null),
      1 < this.j && (this.g = new Set()),
      (this.h = null),
      (this.i = []);
  }
  var eX = 10;
  function fO(t) {
    return t.h ? !0 : t.g ? t.g.size >= t.j : !1;
  }
  function pO(t) {
    return t.h ? 1 : t.g ? t.g.size : 0;
  }
  function t0(t, e) {
    return t.h ? t.h == e : t.g ? t.g.has(e) : !1;
  }
  function A1(t, e) {
    t.g ? t.g.add(e) : (t.h = e);
  }
  function gO(t, e) {
    t.h && t.h == e ? (t.h = null) : t.g && t.g.has(e) && t.g.delete(e);
  }
  dO.prototype.cancel = function () {
    if (((this.i = mO(this)), this.h)) this.h.cancel(), (this.h = null);
    else if (this.g && this.g.size !== 0) {
      for (const t of this.g.values()) t.cancel();
      this.g.clear();
    }
  };
  function mO(t) {
    if (t.h != null) return t.i.concat(t.h.F);
    if (t.g != null && t.g.size !== 0) {
      let e = t.i;
      for (const n of t.g.values()) e = e.concat(n.F);
      return e;
    }
    return d1(t.i);
  }
  var tX = class {
    stringify(t) {
      return un.JSON.stringify(t, void 0);
    }
    parse(t) {
      return un.JSON.parse(t, void 0);
    }
  };
  function nX() {
    this.g = new tX();
  }
  function rX(t, e, n) {
    const r = n || "";
    try {
      oO(t, function (a, o) {
        let u = a;
        Xf(a) && (u = x1(a)), e.push(r + o + "=" + encodeURIComponent(u));
      });
    } catch (a) {
      throw (e.push(r + "type=" + encodeURIComponent("_badmap")), a);
    }
  }
  function iX(t, e) {
    const n = new Rv();
    if (un.Image) {
      const r = new Image();
      (r.onload = Qp(Jp, n, r, "TestLoadImage: loaded", !0, e)),
        (r.onerror = Qp(Jp, n, r, "TestLoadImage: error", !1, e)),
        (r.onabort = Qp(Jp, n, r, "TestLoadImage: abort", !1, e)),
        (r.ontimeout = Qp(Jp, n, r, "TestLoadImage: timeout", !1, e)),
        un.setTimeout(function () {
          r.ontimeout && r.ontimeout();
        }, 1e4),
        (r.src = t);
    } else e(!1);
  }
  function Jp(t, e, n, r, a) {
    try {
      (e.onload = null),
        (e.onerror = null),
        (e.onabort = null),
        (e.ontimeout = null),
        a(r);
    } catch {}
  }
  function jv(t) {
    (this.l = t.ec || null), (this.j = t.ob || !1);
  }
  bi(jv, S1);
  jv.prototype.g = function () {
    return new Fv(this.l, this.j);
  };
  jv.prototype.i = (function (t) {
    return function () {
      return t;
    };
  })({});
  function Fv(t, e) {
    yi.call(this),
      (this.F = t),
      (this.u = e),
      (this.m = void 0),
      (this.readyState = C1),
      (this.status = 0),
      (this.responseType =
        this.responseText =
        this.response =
        this.statusText =
          ""),
      (this.onreadystatechange = null),
      (this.v = new Headers()),
      (this.h = null),
      (this.C = "GET"),
      (this.B = ""),
      (this.g = !1),
      (this.A = this.j = this.l = null);
  }
  bi(Fv, yi);
  var C1 = 0;
  kt = Fv.prototype;
  kt.open = function (t, e) {
    if (this.readyState != C1)
      throw (this.abort(), Error("Error reopening a connection"));
    (this.C = t), (this.B = e), (this.readyState = 1), wf(this);
  };
  kt.send = function (t) {
    if (this.readyState != 1)
      throw (this.abort(), Error("need to call open() first. "));
    this.g = !0;
    const e = {
      headers: this.v,
      method: this.C,
      credentials: this.m,
      cache: void 0,
    };
    t && (e.body = t),
      (this.F || un)
        .fetch(new Request(this.B, e))
        .then(this.$a.bind(this), this.ka.bind(this));
  };
  kt.abort = function () {
    (this.response = this.responseText = ""),
      (this.v = new Headers()),
      (this.status = 0),
      this.j && this.j.cancel("Request was aborted.").catch(() => {}),
      1 <= this.readyState &&
        this.g &&
        this.readyState != 4 &&
        ((this.g = !1), Zf(this)),
      (this.readyState = C1);
  };
  kt.$a = function (t) {
    if (
      this.g &&
      ((this.l = t),
      this.h ||
        ((this.status = this.l.status),
        (this.statusText = this.l.statusText),
        (this.h = t.headers),
        (this.readyState = 2),
        wf(this)),
      this.g && ((this.readyState = 3), wf(this), this.g))
    )
      if (this.responseType === "arraybuffer")
        t.arrayBuffer().then(this.Ya.bind(this), this.ka.bind(this));
      else if (typeof un.ReadableStream < "u" && "body" in t) {
        if (((this.j = t.body.getReader()), this.u)) {
          if (this.responseType)
            throw Error(
              'responseType must be empty for "streamBinaryChunks" mode responses.'
            );
          this.response = [];
        } else
          (this.response = this.responseText = ""),
            (this.A = new TextDecoder());
        vO(this);
      } else t.text().then(this.Za.bind(this), this.ka.bind(this));
  };
  function vO(t) {
    t.j.read().then(t.Xa.bind(t)).catch(t.ka.bind(t));
  }
  kt.Xa = function (t) {
    if (this.g) {
      if (this.u && t.value) this.response.push(t.value);
      else if (!this.u) {
        var e = t.value ? t.value : new Uint8Array(0);
        (e = this.A.decode(e, { stream: !t.done })) &&
          (this.response = this.responseText += e);
      }
      t.done ? Zf(this) : wf(this), this.readyState == 3 && vO(this);
    }
  };
  kt.Za = function (t) {
    this.g && ((this.response = this.responseText = t), Zf(this));
  };
  kt.Ya = function (t) {
    this.g && ((this.response = t), Zf(this));
  };
  kt.ka = function () {
    this.g && Zf(this);
  };
  function Zf(t) {
    (t.readyState = 4), (t.l = null), (t.j = null), (t.A = null), wf(t);
  }
  kt.setRequestHeader = function (t, e) {
    this.v.append(t, e);
  };
  kt.getResponseHeader = function (t) {
    return (this.h && this.h.get(t.toLowerCase())) || "";
  };
  kt.getAllResponseHeaders = function () {
    if (!this.h) return "";
    const t = [],
      e = this.h.entries();
    for (var n = e.next(); !n.done; )
      (n = n.value), t.push(n[0] + ": " + n[1]), (n = e.next());
    return t.join(`\r
`);
  };
  function wf(t) {
    t.onreadystatechange && t.onreadystatechange.call(t);
  }
  Object.defineProperty(Fv.prototype, "withCredentials", {
    get: function () {
      return this.m === "include";
    },
    set: function (t) {
      this.m = t ? "include" : "same-origin";
    },
  });
  var sX = un.JSON.parse;
  function Dr(t) {
    yi.call(this),
      (this.headers = new Map()),
      (this.u = t || null),
      (this.h = !1),
      (this.C = this.g = null),
      (this.I = ""),
      (this.m = 0),
      (this.j = ""),
      (this.l = this.G = this.v = this.F = !1),
      (this.B = 0),
      (this.A = null),
      (this.K = yO),
      (this.L = this.M = !1);
  }
  bi(Dr, yi);
  var yO = "",
    aX = /^https?$/i,
    oX = ["POST", "PUT"];
  kt = Dr.prototype;
  kt.Oa = function (t) {
    this.M = t;
  };
  kt.ha = function (t, e, n, r) {
    if (this.g)
      throw Error(
        "[goog.net.XhrIo] Object is active with another request=" +
          this.I +
          "; newUri=" +
          t
      );
    (e = e ? e.toUpperCase() : "GET"),
      (this.I = t),
      (this.j = ""),
      (this.m = 0),
      (this.F = !1),
      (this.h = !0),
      (this.g = this.u ? this.u.g() : Qb.g()),
      (this.C = this.u ? Ek(this.u) : Ek(Qb)),
      (this.g.onreadystatechange = qi(this.La, this));
    try {
      (this.G = !0), this.g.open(e, String(t), !0), (this.G = !1);
    } catch (o) {
      Ck(this, o);
      return;
    }
    if (((t = n || ""), (n = new Map(this.headers)), r))
      if (Object.getPrototypeOf(r) === Object.prototype)
        for (var a in r) n.set(a, r[a]);
      else if (typeof r.keys == "function" && typeof r.get == "function")
        for (const o of r.keys()) n.set(o, r.get(o));
      else throw Error("Unknown input type for opt_headers: " + String(r));
    (r = Array.from(n.keys()).find((o) => o.toLowerCase() == "content-type")),
      (a = un.FormData && t instanceof un.FormData),
      !(0 <= LR(oX, e)) ||
        r ||
        a ||
        n.set(
          "Content-Type",
          "application/x-www-form-urlencoded;charset=utf-8"
        );
    for (const [o, u] of n) this.g.setRequestHeader(o, u);
    this.K && (this.g.responseType = this.K),
      "withCredentials" in this.g &&
        this.g.withCredentials !== this.M &&
        (this.g.withCredentials = this.M);
    try {
      wO(this),
        0 < this.B &&
          ((this.L = lX(this.g))
            ? ((this.g.timeout = this.B),
              (this.g.ontimeout = qi(this.ua, this)))
            : (this.A = _1(this.ua, this.B, this))),
        (this.v = !0),
        this.g.send(t),
        (this.v = !1);
    } catch (o) {
      Ck(this, o);
    }
  };
  function lX(t) {
    return mh && typeof t.timeout == "number" && t.ontimeout !== void 0;
  }
  kt.ua = function () {
    typeof h1 < "u" &&
      this.g &&
      ((this.j = "Timed out after " + this.B + "ms, aborting"),
      (this.m = 8),
      Li(this, "timeout"),
      this.abort(8));
  };
  function Ck(t, e) {
    (t.h = !1),
      t.g && ((t.l = !0), t.g.abort(), (t.l = !1)),
      (t.j = e),
      (t.m = 5),
      xO(t),
      zv(t);
  }
  function xO(t) {
    t.F || ((t.F = !0), Li(t, "complete"), Li(t, "error"));
  }
  kt.abort = function (t) {
    this.g &&
      this.h &&
      ((this.h = !1),
      (this.l = !0),
      this.g.abort(),
      (this.l = !1),
      (this.m = t || 7),
      Li(this, "complete"),
      Li(this, "abort"),
      zv(this));
  };
  kt.N = function () {
    this.g &&
      (this.h && ((this.h = !1), (this.l = !0), this.g.abort(), (this.l = !1)),
      zv(this, !0)),
      Dr.$.N.call(this);
  };
  kt.La = function () {
    this.s || (this.G || this.v || this.l ? bO(this) : this.kb());
  };
  kt.kb = function () {
    bO(this);
  };
  function bO(t) {
    if (t.h && typeof h1 < "u" && (!t.C[1] || to(t) != 4 || t.da() != 2)) {
      if (t.v && to(t) == 4) _1(t.La, 0, t);
      else if ((Li(t, "readystatechange"), to(t) == 4)) {
        t.h = !1;
        try {
          const u = t.da();
          e: switch (u) {
            case 200:
            case 201:
            case 202:
            case 204:
            case 206:
            case 304:
            case 1223:
              var e = !0;
              break e;
            default:
              e = !1;
          }
          var n;
          if (!(n = e)) {
            var r;
            if ((r = u === 0)) {
              var a = String(t.I).match(lO)[1] || null;
              !a &&
                un.self &&
                un.self.location &&
                (a = un.self.location.protocol.slice(0, -1)),
                (r = !aX.test(a ? a.toLowerCase() : ""));
            }
            n = r;
          }
          if (n) Li(t, "complete"), Li(t, "success");
          else {
            t.m = 6;
            try {
              var o = 2 < to(t) ? t.g.statusText : "";
            } catch {
              o = "";
            }
            (t.j = o + " [" + t.da() + "]"), xO(t);
          }
        } finally {
          zv(t);
        }
      }
    }
  }
  function zv(t, e) {
    if (t.g) {
      wO(t);
      const n = t.g,
        r = t.C[0] ? () => {} : null;
      (t.g = null), (t.C = null), e || Li(t, "ready");
      try {
        n.onreadystatechange = r;
      } catch {}
    }
  }
  function wO(t) {
    t.g && t.L && (t.g.ontimeout = null),
      t.A && (un.clearTimeout(t.A), (t.A = null));
  }
  kt.isActive = function () {
    return !!this.g;
  };
  function to(t) {
    return t.g ? t.g.readyState : 0;
  }
  kt.da = function () {
    try {
      return 2 < to(this) ? this.g.status : -1;
    } catch {
      return -1;
    }
  };
  kt.ja = function () {
    try {
      return this.g ? this.g.responseText : "";
    } catch {
      return "";
    }
  };
  kt.Wa = function (t) {
    if (this.g) {
      var e = this.g.responseText;
      return t && e.indexOf(t) == 0 && (e = e.substring(t.length)), sX(e);
    }
  };
  function Tk(t) {
    try {
      if (!t.g) return null;
      if ("response" in t.g) return t.g.response;
      switch (t.K) {
        case yO:
        case "text":
          return t.g.responseText;
        case "arraybuffer":
          if ("mozResponseArrayBuffer" in t.g)
            return t.g.mozResponseArrayBuffer;
      }
      return null;
    } catch {
      return null;
    }
  }
  function cX(t) {
    const e = {};
    t = ((t.g && 2 <= to(t) && t.g.getAllResponseHeaders()) || "").split(`\r
`);
    for (let r = 0; r < t.length; r++) {
      if (pf(t[r])) continue;
      var n = L5(t[r]);
      const a = n[0];
      if (((n = n[1]), typeof n != "string")) continue;
      n = n.trim();
      const o = e[a] || [];
      (e[a] = o), o.push(n);
    }
    C5(e, function (r) {
      return r.join(", ");
    });
  }
  kt.Ia = function () {
    return this.m;
  };
  kt.Sa = function () {
    return typeof this.j == "string" ? this.j : String(this.j);
  };
  function _O(t) {
    let e = "";
    return (
      p1(t, function (n, r) {
        (e += r),
          (e += ":"),
          (e += n),
          (e += `\r
`);
      }),
      e
    );
  }
  function T1(t, e, n) {
    e: {
      for (r in n) {
        var r = !1;
        break e;
      }
      r = !0;
    }
    r ||
      ((n = _O(n)),
      typeof t == "string"
        ? n != null && encodeURIComponent(String(n))
        : pr(t, e, n));
  }
  function ud(t, e, n) {
    return (n && n.internalChannelParams && n.internalChannelParams[t]) || e;
  }
  function SO(t) {
    (this.Ga = 0),
      (this.j = []),
      (this.l = new Rv()),
      (this.pa =
        this.wa =
        this.I =
        this.Y =
        this.g =
        this.Da =
        this.F =
        this.na =
        this.o =
        this.U =
        this.s =
          null),
      (this.fb = this.W = 0),
      (this.cb = ud("failFast", !1, t)),
      (this.G = this.v = this.u = this.m = this.h = null),
      (this.aa = !0),
      (this.Fa = this.V = -1),
      (this.ba = this.A = this.C = 0),
      (this.ab = ud("baseRetryDelayMs", 5e3, t)),
      (this.hb = ud("retryDelaySeedMs", 1e4, t)),
      (this.eb = ud("forwardChannelMaxRetries", 2, t)),
      (this.xa = ud("forwardChannelRequestTimeoutMs", 2e4, t)),
      (this.va = (t && t.xmlHttpFactory) || void 0),
      (this.Ha = (t && t.useFetchStreams) || !1),
      (this.L = void 0),
      (this.J = (t && t.supportsCrossDomainXhr) || !1),
      (this.K = ""),
      (this.i = new dO(t && t.concurrentRequestLimit)),
      (this.Ja = new nX()),
      (this.P = (t && t.fastHandshake) || !1),
      (this.O = (t && t.encodeInitMessageHeaders) || !1),
      this.P && this.O && (this.O = !1),
      (this.bb = (t && t.bc) || !1),
      t && t.Ea && this.l.Ea(),
      t && t.forceLongPolling && (this.aa = !1),
      (this.ca = (!this.P && this.aa && t && t.detectBufferingProxy) || !1),
      (this.qa = void 0),
      t &&
        t.longPollingTimeout &&
        0 < t.longPollingTimeout &&
        (this.qa = t.longPollingTimeout),
      (this.oa = void 0),
      (this.S = 0),
      (this.M = !1),
      (this.ma = this.B = null);
  }
  kt = SO.prototype;
  kt.ra = 8;
  kt.H = 1;
  function I1(t) {
    if ((EO(t), t.H == 3)) {
      var e = t.W++,
        n = Xo(t.I);
      if (
        (pr(n, "SID", t.K),
        pr(n, "RID", e),
        pr(n, "TYPE", "terminate"),
        Jf(t, n),
        (e = new Kf(t, t.l, e)),
        (e.L = 2),
        (e.A = Mv(Xo(n))),
        (n = !1),
        un.navigator && un.navigator.sendBeacon)
      )
        try {
          n = un.navigator.sendBeacon(e.A.toString(), "");
        } catch {}
      !n && un.Image && ((new Image().src = e.A), (n = !0)),
        n || ((e.g = OO(e.l, null)), e.g.ha(e.A)),
        (e.G = Date.now()),
        Qf(e);
    }
    PO(t);
  }
  function Vv(t) {
    t.g && (R1(t), t.g.cancel(), (t.g = null));
  }
  function EO(t) {
    Vv(t),
      t.u && (un.clearTimeout(t.u), (t.u = null)),
      xm(t),
      t.i.cancel(),
      t.m && (typeof t.m == "number" && un.clearTimeout(t.m), (t.m = null));
  }
  function $v(t) {
    if (!fO(t.i) && !t.m) {
      t.m = !0;
      var e = t.Na;
      mf || XR(), vf || (mf(), (vf = !0)), b1.add(e, t), (t.C = 0);
    }
  }
  function uX(t, e) {
    return pO(t.i) >= t.i.j - (t.m ? 1 : 0)
      ? !1
      : t.m
      ? ((t.j = e.F.concat(t.j)), !0)
      : t.H == 1 || t.H == 2 || t.C >= (t.cb ? 0 : t.eb)
      ? !1
      : ((t.m = Gf(qi(t.Na, t, e), IO(t, t.C))), t.C++, !0);
  }
  kt.Na = function (t) {
    if (this.m)
      if (((this.m = null), this.H == 1)) {
        if (!t) {
          (this.W = Math.floor(1e5 * Math.random())), (t = this.W++);
          const a = new Kf(this, this.l, t);
          let o = this.s;
          if (
            (this.U && (o ? ((o = FR(o)), zR(o, this.U)) : (o = this.U)),
            this.o !== null || this.O || ((a.I = o), (o = null)),
            this.P)
          )
            e: {
              for (var e = 0, n = 0; n < this.j.length; n++) {
                t: {
                  var r = this.j[n];
                  if (
                    "__data__" in r.map &&
                    ((r = r.map.__data__), typeof r == "string")
                  ) {
                    r = r.length;
                    break t;
                  }
                  r = void 0;
                }
                if (r === void 0) break;
                if (((e += r), 4096 < e)) {
                  e = n;
                  break e;
                }
                if (e === 4096 || n === this.j.length - 1) {
                  e = n + 1;
                  break e;
                }
              }
              e = 1e3;
            }
          else e = 1e3;
          (e = kO(this, a, e)),
            (n = Xo(this.I)),
            pr(n, "RID", t),
            pr(n, "CVER", 22),
            this.F && pr(n, "X-HTTP-Session-Id", this.F),
            Jf(this, n),
            o &&
              (this.O
                ? (e = "headers=" + encodeURIComponent(String(_O(o))) + "&" + e)
                : this.o && T1(n, this.o, o)),
            A1(this.i, a),
            this.bb && pr(n, "TYPE", "init"),
            this.P
              ? (pr(n, "$req", e),
                pr(n, "SID", "null"),
                (a.aa = !0),
                Jb(a, n, null))
              : Jb(a, n, e),
            (this.H = 2);
        }
      } else
        this.H == 3 &&
          (t ? Ik(this, t) : this.j.length == 0 || fO(this.i) || Ik(this));
  };
  function Ik(t, e) {
    var n;
    e ? (n = e.m) : (n = t.W++);
    const r = Xo(t.I);
    pr(r, "SID", t.K),
      pr(r, "RID", n),
      pr(r, "AID", t.V),
      Jf(t, r),
      t.o && t.s && T1(r, t.o, t.s),
      (n = new Kf(t, t.l, n, t.C + 1)),
      t.o === null && (n.I = t.s),
      e && (t.j = e.F.concat(t.j)),
      (e = kO(t, n, 1e3)),
      n.setTimeout(
        Math.round(0.5 * t.xa) + Math.round(0.5 * t.xa * Math.random())
      ),
      A1(t.i, n),
      Jb(n, r, e);
  }
  function Jf(t, e) {
    t.na &&
      p1(t.na, function (n, r) {
        pr(e, r, n);
      }),
      t.h &&
        oO({}, function (n, r) {
          pr(e, r, n);
        });
  }
  function kO(t, e, n) {
    n = Math.min(t.j.length, n);
    var r = t.h ? qi(t.h.Va, t.h, t) : null;
    e: {
      var a = t.j;
      let o = -1;
      for (;;) {
        const u = ["count=" + n];
        o == -1
          ? 0 < n
            ? ((o = a[0].g), u.push("ofs=" + o))
            : (o = 0)
          : u.push("ofs=" + o);
        let g = !0;
        for (let x = 0; x < n; x++) {
          let E = a[x].g;
          const L = a[x].map;
          if (((E -= o), 0 > E)) (o = Math.max(0, a[x].g - 100)), (g = !1);
          else
            try {
              rX(L, u, "req" + E + "_");
            } catch {
              r && r(L);
            }
        }
        if (g) {
          r = u.join("&");
          break e;
        }
      }
    }
    return (t = t.j.splice(0, n)), (e.F = t), r;
  }
  function AO(t) {
    if (!t.g && !t.u) {
      t.ba = 1;
      var e = t.Ma;
      mf || XR(), vf || (mf(), (vf = !0)), b1.add(e, t), (t.A = 0);
    }
  }
  function P1(t) {
    return t.g || t.u || 3 <= t.A
      ? !1
      : (t.ba++, (t.u = Gf(qi(t.Ma, t), IO(t, t.A))), t.A++, !0);
  }
  kt.Ma = function () {
    if (
      ((this.u = null),
      CO(this),
      this.ca && !(this.M || this.g == null || 0 >= this.S))
    ) {
      var t = 2 * this.S;
      this.l.info("BP detection timer enabled: " + t),
        (this.B = Gf(qi(this.jb, this), t));
    }
  };
  kt.jb = function () {
    this.B &&
      ((this.B = null),
      this.l.info("BP detection timeout reached."),
      this.l.info("Buffering proxy detected and switch to long-polling!"),
      (this.G = !1),
      (this.M = !0),
      us(10),
      Vv(this),
      CO(this));
  };
  function R1(t) {
    t.B != null && (un.clearTimeout(t.B), (t.B = null));
  }
  function CO(t) {
    (t.g = new Kf(t, t.l, "rpc", t.ba)),
      t.o === null && (t.g.I = t.s),
      (t.g.O = 0);
    var e = Xo(t.wa);
    pr(e, "RID", "rpc"),
      pr(e, "SID", t.K),
      pr(e, "AID", t.V),
      pr(e, "CI", t.G ? "0" : "1"),
      !t.G && t.qa && pr(e, "TO", t.qa),
      pr(e, "TYPE", "xmlhttp"),
      Jf(t, e),
      t.o && t.s && T1(e, t.o, t.s),
      t.L && t.g.setTimeout(t.L);
    var n = t.g;
    (t = t.pa),
      (n.L = 1),
      (n.A = Mv(Xo(e))),
      (n.u = null),
      (n.S = !0),
      rO(n, t);
  }
  kt.ib = function () {
    this.v != null && ((this.v = null), Vv(this), P1(this), us(19));
  };
  function xm(t) {
    t.v != null && (un.clearTimeout(t.v), (t.v = null));
  }
  function TO(t, e) {
    var n = null;
    if (t.g == e) {
      xm(t), R1(t), (t.g = null);
      var r = 2;
    } else if (t0(t.i, e)) (n = e.F), gO(t.i, e), (r = 1);
    else return;
    if (t.H != 0) {
      if (e.i)
        if (r == 1) {
          (n = e.u ? e.u.length : 0), (e = Date.now() - e.G);
          var a = t.C;
          (r = Ov()), Li(r, new ZR(r, n)), $v(t);
        } else AO(t);
      else if (
        ((a = e.s),
        a == 3 ||
          (a == 0 && 0 < e.ca) ||
          !((r == 1 && uX(t, e)) || (r == 2 && P1(t))))
      )
        switch ((n && 0 < n.length && ((e = t.i), (e.i = e.i.concat(n))), a)) {
          case 1:
            Rc(t, 5);
            break;
          case 4:
            Rc(t, 10);
            break;
          case 3:
            Rc(t, 6);
            break;
          default:
            Rc(t, 2);
        }
    }
  }
  function IO(t, e) {
    let n = t.ab + Math.floor(Math.random() * t.hb);
    return t.isActive() || (n *= 2), n * e;
  }
  function Rc(t, e) {
    if ((t.l.info("Error code " + e), e == 2)) {
      var n = null;
      t.h && (n = null);
      var r = qi(t.pb, t);
      n ||
        ((n = new Fc("//www.google.com/images/cleardot.gif")),
        (un.location && un.location.protocol == "http") || vm(n, "https"),
        Mv(n)),
        iX(n.toString(), r);
    } else us(2);
    (t.H = 0), t.h && t.h.za(e), PO(t), EO(t);
  }
  kt.pb = function (t) {
    t
      ? (this.l.info("Successfully pinged google.com"), us(2))
      : (this.l.info("Failed to ping google.com"), us(1));
  };
  function PO(t) {
    if (((t.H = 0), (t.ma = []), t.h)) {
      const e = mO(t.i);
      (e.length != 0 || t.j.length != 0) &&
        (xk(t.ma, e),
        xk(t.ma, t.j),
        (t.i.i.length = 0),
        d1(t.j),
        (t.j.length = 0)),
        t.h.ya();
    }
  }
  function RO(t, e, n) {
    var r = n instanceof Fc ? Xo(n) : new Fc(n);
    if (r.g != "") e && (r.g = e + "." + r.g), ym(r, r.m);
    else {
      var a = un.location;
      (r = a.protocol),
        (e = e ? e + "." + a.hostname : a.hostname),
        (a = +a.port);
      var o = new Fc(null);
      r && vm(o, r), e && (o.g = e), a && ym(o, a), n && (o.l = n), (r = o);
    }
    return (
      (n = t.F),
      (e = t.Da),
      n && e && pr(r, n, e),
      pr(r, "VER", t.ra),
      Jf(t, r),
      r
    );
  }
  function OO(t, e, n) {
    if (e && !t.J)
      throw Error("Can't create secondary domain capable XhrIo object.");
    return (
      (e = t.Ha && !t.va ? new Dr(new jv({ ob: n })) : new Dr(t.va)),
      e.Oa(t.J),
      e
    );
  }
  kt.isActive = function () {
    return !!this.h && this.h.isActive(this);
  };
  function NO() {}
  kt = NO.prototype;
  kt.Ba = function () {};
  kt.Aa = function () {};
  kt.za = function () {};
  kt.ya = function () {};
  kt.isActive = function () {
    return !0;
  };
  kt.Va = function () {};
  function bm() {
    if (mh && !(10 <= Number(S5)))
      throw Error("Environmental error: no available transport.");
  }
  bm.prototype.g = function (t, e) {
    return new Us(t, e);
  };
  function Us(t, e) {
    yi.call(this),
      (this.g = new SO(e)),
      (this.l = t),
      (this.h = (e && e.messageUrlParams) || null),
      (t = (e && e.messageHeaders) || null),
      e &&
        e.clientProtocolHeaderRequired &&
        (t
          ? (t["X-Client-Protocol"] = "webchannel")
          : (t = { "X-Client-Protocol": "webchannel" })),
      (this.g.s = t),
      (t = (e && e.initMessageHeaders) || null),
      e &&
        e.messageContentType &&
        (t
          ? (t["X-WebChannel-Content-Type"] = e.messageContentType)
          : (t = { "X-WebChannel-Content-Type": e.messageContentType })),
      e &&
        e.Ca &&
        (t
          ? (t["X-WebChannel-Client-Profile"] = e.Ca)
          : (t = { "X-WebChannel-Client-Profile": e.Ca })),
      (this.g.U = t),
      (t = e && e.cc) && !pf(t) && (this.g.o = t),
      (this.A = (e && e.supportsCrossDomainXhr) || !1),
      (this.v = (e && e.sendRawJson) || !1),
      (e = e && e.httpSessionIdParam) &&
        !pf(e) &&
        ((this.g.F = e),
        (t = this.h),
        t !== null && e in t && ((t = this.h), e in t && delete t[e])),
      (this.j = new Mh(this));
  }
  bi(Us, yi);
  Us.prototype.m = function () {
    (this.g.h = this.j), this.A && (this.g.J = !0);
    var t = this.g,
      e = this.l,
      n = this.h || void 0;
    us(0),
      (t.Y = e),
      (t.na = n || {}),
      (t.G = t.aa),
      (t.I = RO(t, null, t.Y)),
      $v(t);
  };
  Us.prototype.close = function () {
    I1(this.g);
  };
  Us.prototype.u = function (t) {
    var e = this.g;
    if (typeof t == "string") {
      var n = {};
      (n.__data__ = t), (t = n);
    } else this.v && ((n = {}), (n.__data__ = x1(t)), (t = n));
    e.j.push(new J5(e.fb++, t)), e.H == 3 && $v(e);
  };
  Us.prototype.N = function () {
    (this.g.h = null),
      delete this.j,
      I1(this.g),
      delete this.g,
      Us.$.N.call(this);
  };
  function LO(t) {
    E1.call(this),
      t.__headers__ &&
        ((this.headers = t.__headers__),
        (this.statusCode = t.__status__),
        delete t.__headers__,
        delete t.__status__);
    var e = t.__sm__;
    if (e) {
      e: {
        for (const n in e) {
          t = n;
          break e;
        }
        t = void 0;
      }
      (this.i = t) &&
        ((t = this.i), (e = e !== null && t in e ? e[t] : void 0)),
        (this.data = e);
    } else this.data = t;
  }
  bi(LO, E1);
  function DO() {
    k1.call(this), (this.status = 1);
  }
  bi(DO, k1);
  function Mh(t) {
    this.g = t;
  }
  bi(Mh, NO);
  Mh.prototype.Ba = function () {
    Li(this.g, "a");
  };
  Mh.prototype.Aa = function (t) {
    Li(this.g, new LO(t));
  };
  Mh.prototype.za = function (t) {
    Li(this.g, new DO());
  };
  Mh.prototype.ya = function () {
    Li(this.g, "b");
  };
  function hX() {
    this.blockSize = -1;
  }
  function Ra() {
    (this.blockSize = -1),
      (this.blockSize = 64),
      (this.g = Array(4)),
      (this.m = Array(this.blockSize)),
      (this.i = this.h = 0),
      this.reset();
  }
  bi(Ra, hX);
  Ra.prototype.reset = function () {
    (this.g[0] = 1732584193),
      (this.g[1] = 4023233417),
      (this.g[2] = 2562383102),
      (this.g[3] = 271733878),
      (this.i = this.h = 0);
  };
  function yx(t, e, n) {
    n || (n = 0);
    var r = Array(16);
    if (typeof e == "string")
      for (var a = 0; 16 > a; ++a)
        r[a] =
          e.charCodeAt(n++) |
          (e.charCodeAt(n++) << 8) |
          (e.charCodeAt(n++) << 16) |
          (e.charCodeAt(n++) << 24);
    else
      for (a = 0; 16 > a; ++a)
        r[a] = e[n++] | (e[n++] << 8) | (e[n++] << 16) | (e[n++] << 24);
    (e = t.g[0]), (n = t.g[1]), (a = t.g[2]);
    var o = t.g[3],
      u = (e + (o ^ (n & (a ^ o))) + r[0] + 3614090360) & 4294967295;
    (e = n + (((u << 7) & 4294967295) | (u >>> 25))),
      (u = (o + (a ^ (e & (n ^ a))) + r[1] + 3905402710) & 4294967295),
      (o = e + (((u << 12) & 4294967295) | (u >>> 20))),
      (u = (a + (n ^ (o & (e ^ n))) + r[2] + 606105819) & 4294967295),
      (a = o + (((u << 17) & 4294967295) | (u >>> 15))),
      (u = (n + (e ^ (a & (o ^ e))) + r[3] + 3250441966) & 4294967295),
      (n = a + (((u << 22) & 4294967295) | (u >>> 10))),
      (u = (e + (o ^ (n & (a ^ o))) + r[4] + 4118548399) & 4294967295),
      (e = n + (((u << 7) & 4294967295) | (u >>> 25))),
      (u = (o + (a ^ (e & (n ^ a))) + r[5] + 1200080426) & 4294967295),
      (o = e + (((u << 12) & 4294967295) | (u >>> 20))),
      (u = (a + (n ^ (o & (e ^ n))) + r[6] + 2821735955) & 4294967295),
      (a = o + (((u << 17) & 4294967295) | (u >>> 15))),
      (u = (n + (e ^ (a & (o ^ e))) + r[7] + 4249261313) & 4294967295),
      (n = a + (((u << 22) & 4294967295) | (u >>> 10))),
      (u = (e + (o ^ (n & (a ^ o))) + r[8] + 1770035416) & 4294967295),
      (e = n + (((u << 7) & 4294967295) | (u >>> 25))),
      (u = (o + (a ^ (e & (n ^ a))) + r[9] + 2336552879) & 4294967295),
      (o = e + (((u << 12) & 4294967295) | (u >>> 20))),
      (u = (a + (n ^ (o & (e ^ n))) + r[10] + 4294925233) & 4294967295),
      (a = o + (((u << 17) & 4294967295) | (u >>> 15))),
      (u = (n + (e ^ (a & (o ^ e))) + r[11] + 2304563134) & 4294967295),
      (n = a + (((u << 22) & 4294967295) | (u >>> 10))),
      (u = (e + (o ^ (n & (a ^ o))) + r[12] + 1804603682) & 4294967295),
      (e = n + (((u << 7) & 4294967295) | (u >>> 25))),
      (u = (o + (a ^ (e & (n ^ a))) + r[13] + 4254626195) & 4294967295),
      (o = e + (((u << 12) & 4294967295) | (u >>> 20))),
      (u = (a + (n ^ (o & (e ^ n))) + r[14] + 2792965006) & 4294967295),
      (a = o + (((u << 17) & 4294967295) | (u >>> 15))),
      (u = (n + (e ^ (a & (o ^ e))) + r[15] + 1236535329) & 4294967295),
      (n = a + (((u << 22) & 4294967295) | (u >>> 10))),
      (u = (e + (a ^ (o & (n ^ a))) + r[1] + 4129170786) & 4294967295),
      (e = n + (((u << 5) & 4294967295) | (u >>> 27))),
      (u = (o + (n ^ (a & (e ^ n))) + r[6] + 3225465664) & 4294967295),
      (o = e + (((u << 9) & 4294967295) | (u >>> 23))),
      (u = (a + (e ^ (n & (o ^ e))) + r[11] + 643717713) & 4294967295),
      (a = o + (((u << 14) & 4294967295) | (u >>> 18))),
      (u = (n + (o ^ (e & (a ^ o))) + r[0] + 3921069994) & 4294967295),
      (n = a + (((u << 20) & 4294967295) | (u >>> 12))),
      (u = (e + (a ^ (o & (n ^ a))) + r[5] + 3593408605) & 4294967295),
      (e = n + (((u << 5) & 4294967295) | (u >>> 27))),
      (u = (o + (n ^ (a & (e ^ n))) + r[10] + 38016083) & 4294967295),
      (o = e + (((u << 9) & 4294967295) | (u >>> 23))),
      (u = (a + (e ^ (n & (o ^ e))) + r[15] + 3634488961) & 4294967295),
      (a = o + (((u << 14) & 4294967295) | (u >>> 18))),
      (u = (n + (o ^ (e & (a ^ o))) + r[4] + 3889429448) & 4294967295),
      (n = a + (((u << 20) & 4294967295) | (u >>> 12))),
      (u = (e + (a ^ (o & (n ^ a))) + r[9] + 568446438) & 4294967295),
      (e = n + (((u << 5) & 4294967295) | (u >>> 27))),
      (u = (o + (n ^ (a & (e ^ n))) + r[14] + 3275163606) & 4294967295),
      (o = e + (((u << 9) & 4294967295) | (u >>> 23))),
      (u = (a + (e ^ (n & (o ^ e))) + r[3] + 4107603335) & 4294967295),
      (a = o + (((u << 14) & 4294967295) | (u >>> 18))),
      (u = (n + (o ^ (e & (a ^ o))) + r[8] + 1163531501) & 4294967295),
      (n = a + (((u << 20) & 4294967295) | (u >>> 12))),
      (u = (e + (a ^ (o & (n ^ a))) + r[13] + 2850285829) & 4294967295),
      (e = n + (((u << 5) & 4294967295) | (u >>> 27))),
      (u = (o + (n ^ (a & (e ^ n))) + r[2] + 4243563512) & 4294967295),
      (o = e + (((u << 9) & 4294967295) | (u >>> 23))),
      (u = (a + (e ^ (n & (o ^ e))) + r[7] + 1735328473) & 4294967295),
      (a = o + (((u << 14) & 4294967295) | (u >>> 18))),
      (u = (n + (o ^ (e & (a ^ o))) + r[12] + 2368359562) & 4294967295),
      (n = a + (((u << 20) & 4294967295) | (u >>> 12))),
      (u = (e + (n ^ a ^ o) + r[5] + 4294588738) & 4294967295),
      (e = n + (((u << 4) & 4294967295) | (u >>> 28))),
      (u = (o + (e ^ n ^ a) + r[8] + 2272392833) & 4294967295),
      (o = e + (((u << 11) & 4294967295) | (u >>> 21))),
      (u = (a + (o ^ e ^ n) + r[11] + 1839030562) & 4294967295),
      (a = o + (((u << 16) & 4294967295) | (u >>> 16))),
      (u = (n + (a ^ o ^ e) + r[14] + 4259657740) & 4294967295),
      (n = a + (((u << 23) & 4294967295) | (u >>> 9))),
      (u = (e + (n ^ a ^ o) + r[1] + 2763975236) & 4294967295),
      (e = n + (((u << 4) & 4294967295) | (u >>> 28))),
      (u = (o + (e ^ n ^ a) + r[4] + 1272893353) & 4294967295),
      (o = e + (((u << 11) & 4294967295) | (u >>> 21))),
      (u = (a + (o ^ e ^ n) + r[7] + 4139469664) & 4294967295),
      (a = o + (((u << 16) & 4294967295) | (u >>> 16))),
      (u = (n + (a ^ o ^ e) + r[10] + 3200236656) & 4294967295),
      (n = a + (((u << 23) & 4294967295) | (u >>> 9))),
      (u = (e + (n ^ a ^ o) + r[13] + 681279174) & 4294967295),
      (e = n + (((u << 4) & 4294967295) | (u >>> 28))),
      (u = (o + (e ^ n ^ a) + r[0] + 3936430074) & 4294967295),
      (o = e + (((u << 11) & 4294967295) | (u >>> 21))),
      (u = (a + (o ^ e ^ n) + r[3] + 3572445317) & 4294967295),
      (a = o + (((u << 16) & 4294967295) | (u >>> 16))),
      (u = (n + (a ^ o ^ e) + r[6] + 76029189) & 4294967295),
      (n = a + (((u << 23) & 4294967295) | (u >>> 9))),
      (u = (e + (n ^ a ^ o) + r[9] + 3654602809) & 4294967295),
      (e = n + (((u << 4) & 4294967295) | (u >>> 28))),
      (u = (o + (e ^ n ^ a) + r[12] + 3873151461) & 4294967295),
      (o = e + (((u << 11) & 4294967295) | (u >>> 21))),
      (u = (a + (o ^ e ^ n) + r[15] + 530742520) & 4294967295),
      (a = o + (((u << 16) & 4294967295) | (u >>> 16))),
      (u = (n + (a ^ o ^ e) + r[2] + 3299628645) & 4294967295),
      (n = a + (((u << 23) & 4294967295) | (u >>> 9))),
      (u = (e + (a ^ (n | ~o)) + r[0] + 4096336452) & 4294967295),
      (e = n + (((u << 6) & 4294967295) | (u >>> 26))),
      (u = (o + (n ^ (e | ~a)) + r[7] + 1126891415) & 4294967295),
      (o = e + (((u << 10) & 4294967295) | (u >>> 22))),
      (u = (a + (e ^ (o | ~n)) + r[14] + 2878612391) & 4294967295),
      (a = o + (((u << 15) & 4294967295) | (u >>> 17))),
      (u = (n + (o ^ (a | ~e)) + r[5] + 4237533241) & 4294967295),
      (n = a + (((u << 21) & 4294967295) | (u >>> 11))),
      (u = (e + (a ^ (n | ~o)) + r[12] + 1700485571) & 4294967295),
      (e = n + (((u << 6) & 4294967295) | (u >>> 26))),
      (u = (o + (n ^ (e | ~a)) + r[3] + 2399980690) & 4294967295),
      (o = e + (((u << 10) & 4294967295) | (u >>> 22))),
      (u = (a + (e ^ (o | ~n)) + r[10] + 4293915773) & 4294967295),
      (a = o + (((u << 15) & 4294967295) | (u >>> 17))),
      (u = (n + (o ^ (a | ~e)) + r[1] + 2240044497) & 4294967295),
      (n = a + (((u << 21) & 4294967295) | (u >>> 11))),
      (u = (e + (a ^ (n | ~o)) + r[8] + 1873313359) & 4294967295),
      (e = n + (((u << 6) & 4294967295) | (u >>> 26))),
      (u = (o + (n ^ (e | ~a)) + r[15] + 4264355552) & 4294967295),
      (o = e + (((u << 10) & 4294967295) | (u >>> 22))),
      (u = (a + (e ^ (o | ~n)) + r[6] + 2734768916) & 4294967295),
      (a = o + (((u << 15) & 4294967295) | (u >>> 17))),
      (u = (n + (o ^ (a | ~e)) + r[13] + 1309151649) & 4294967295),
      (n = a + (((u << 21) & 4294967295) | (u >>> 11))),
      (u = (e + (a ^ (n | ~o)) + r[4] + 4149444226) & 4294967295),
      (e = n + (((u << 6) & 4294967295) | (u >>> 26))),
      (u = (o + (n ^ (e | ~a)) + r[11] + 3174756917) & 4294967295),
      (o = e + (((u << 10) & 4294967295) | (u >>> 22))),
      (u = (a + (e ^ (o | ~n)) + r[2] + 718787259) & 4294967295),
      (a = o + (((u << 15) & 4294967295) | (u >>> 17))),
      (u = (n + (o ^ (a | ~e)) + r[9] + 3951481745) & 4294967295),
      (t.g[0] = (t.g[0] + e) & 4294967295),
      (t.g[1] =
        (t.g[1] + (a + (((u << 21) & 4294967295) | (u >>> 11)))) & 4294967295),
      (t.g[2] = (t.g[2] + a) & 4294967295),
      (t.g[3] = (t.g[3] + o) & 4294967295);
  }
  Ra.prototype.j = function (t, e) {
    e === void 0 && (e = t.length);
    for (var n = e - this.blockSize, r = this.m, a = this.h, o = 0; o < e; ) {
      if (a == 0) for (; o <= n; ) yx(this, t, o), (o += this.blockSize);
      if (typeof t == "string") {
        for (; o < e; )
          if (((r[a++] = t.charCodeAt(o++)), a == this.blockSize)) {
            yx(this, r), (a = 0);
            break;
          }
      } else
        for (; o < e; )
          if (((r[a++] = t[o++]), a == this.blockSize)) {
            yx(this, r), (a = 0);
            break;
          }
    }
    (this.h = a), (this.i += e);
  };
  Ra.prototype.l = function () {
    var t = Array((56 > this.h ? this.blockSize : 2 * this.blockSize) - this.h);
    t[0] = 128;
    for (var e = 1; e < t.length - 8; ++e) t[e] = 0;
    var n = 8 * this.i;
    for (e = t.length - 8; e < t.length; ++e) (t[e] = n & 255), (n /= 256);
    for (this.j(t), t = Array(16), e = n = 0; 4 > e; ++e)
      for (var r = 0; 32 > r; r += 8) t[n++] = (this.g[e] >>> r) & 255;
    return t;
  };
  function Zn(t, e) {
    this.h = e;
    for (var n = [], r = !0, a = t.length - 1; 0 <= a; a--) {
      var o = t[a] | 0;
      (r && o == e) || ((n[a] = o), (r = !1));
    }
    this.g = n;
  }
  var dX = {};
  function O1(t) {
    return -128 <= t && 128 > t
      ? b5(t, function (e) {
          return new Zn([e | 0], 0 > e ? -1 : 0);
        })
      : new Zn([t | 0], 0 > t ? -1 : 0);
  }
  function no(t) {
    if (isNaN(t) || !isFinite(t)) return rh;
    if (0 > t) return Ri(no(-t));
    for (var e = [], n = 1, r = 0; t >= n; r++) (e[r] = (t / n) | 0), (n *= n0);
    return new Zn(e, 0);
  }
  function MO(t, e) {
    if (t.length == 0) throw Error("number format error: empty string");
    if (((e = e || 10), 2 > e || 36 < e))
      throw Error("radix out of range: " + e);
    if (t.charAt(0) == "-") return Ri(MO(t.substring(1), e));
    if (0 <= t.indexOf("-"))
      throw Error('number format error: interior "-" character');
    for (var n = no(Math.pow(e, 8)), r = rh, a = 0; a < t.length; a += 8) {
      var o = Math.min(8, t.length - a),
        u = parseInt(t.substring(a, a + o), e);
      8 > o
        ? ((o = no(Math.pow(e, o))), (r = r.R(o).add(no(u))))
        : ((r = r.R(n)), (r = r.add(no(u))));
    }
    return r;
  }
  var n0 = 4294967296,
    rh = O1(0),
    r0 = O1(1),
    Pk = O1(16777216);
  kt = Zn.prototype;
  kt.ea = function () {
    if (ia(this)) return -Ri(this).ea();
    for (var t = 0, e = 1, n = 0; n < this.g.length; n++) {
      var r = this.D(n);
      (t += (0 <= r ? r : n0 + r) * e), (e *= n0);
    }
    return t;
  };
  kt.toString = function (t) {
    if (((t = t || 10), 2 > t || 36 < t))
      throw Error("radix out of range: " + t);
    if (No(this)) return "0";
    if (ia(this)) return "-" + Ri(this).toString(t);
    for (var e = no(Math.pow(t, 6)), n = this, r = ""; ; ) {
      var a = _m(n, e).g;
      n = wm(n, a.R(e));
      var o = ((0 < n.g.length ? n.g[0] : n.h) >>> 0).toString(t);
      if (((n = a), No(n))) return o + r;
      for (; 6 > o.length; ) o = "0" + o;
      r = o + r;
    }
  };
  kt.D = function (t) {
    return 0 > t ? 0 : t < this.g.length ? this.g[t] : this.h;
  };
  function No(t) {
    if (t.h != 0) return !1;
    for (var e = 0; e < t.g.length; e++) if (t.g[e] != 0) return !1;
    return !0;
  }
  function ia(t) {
    return t.h == -1;
  }
  kt.X = function (t) {
    return (t = wm(this, t)), ia(t) ? -1 : No(t) ? 0 : 1;
  };
  function Ri(t) {
    for (var e = t.g.length, n = [], r = 0; r < e; r++) n[r] = ~t.g[r];
    return new Zn(n, ~t.h).add(r0);
  }
  kt.abs = function () {
    return ia(this) ? Ri(this) : this;
  };
  kt.add = function (t) {
    for (
      var e = Math.max(this.g.length, t.g.length), n = [], r = 0, a = 0;
      a <= e;
      a++
    ) {
      var o = r + (this.D(a) & 65535) + (t.D(a) & 65535),
        u = (o >>> 16) + (this.D(a) >>> 16) + (t.D(a) >>> 16);
      (r = u >>> 16), (o &= 65535), (u &= 65535), (n[a] = (u << 16) | o);
    }
    return new Zn(n, n[n.length - 1] & -2147483648 ? -1 : 0);
  };
  function wm(t, e) {
    return t.add(Ri(e));
  }
  kt.R = function (t) {
    if (No(this) || No(t)) return rh;
    if (ia(this)) return ia(t) ? Ri(this).R(Ri(t)) : Ri(Ri(this).R(t));
    if (ia(t)) return Ri(this.R(Ri(t)));
    if (0 > this.X(Pk) && 0 > t.X(Pk)) return no(this.ea() * t.ea());
    for (var e = this.g.length + t.g.length, n = [], r = 0; r < 2 * e; r++)
      n[r] = 0;
    for (r = 0; r < this.g.length; r++)
      for (var a = 0; a < t.g.length; a++) {
        var o = this.D(r) >>> 16,
          u = this.D(r) & 65535,
          g = t.D(a) >>> 16,
          x = t.D(a) & 65535;
        (n[2 * r + 2 * a] += u * x),
          eg(n, 2 * r + 2 * a),
          (n[2 * r + 2 * a + 1] += o * x),
          eg(n, 2 * r + 2 * a + 1),
          (n[2 * r + 2 * a + 1] += u * g),
          eg(n, 2 * r + 2 * a + 1),
          (n[2 * r + 2 * a + 2] += o * g),
          eg(n, 2 * r + 2 * a + 2);
      }
    for (r = 0; r < e; r++) n[r] = (n[2 * r + 1] << 16) | n[2 * r];
    for (r = e; r < 2 * e; r++) n[r] = 0;
    return new Zn(n, 0);
  };
  function eg(t, e) {
    for (; (t[e] & 65535) != t[e]; )
      (t[e + 1] += t[e] >>> 16), (t[e] &= 65535), e++;
  }
  function hd(t, e) {
    (this.g = t), (this.h = e);
  }
  function _m(t, e) {
    if (No(e)) throw Error("division by zero");
    if (No(t)) return new hd(rh, rh);
    if (ia(t)) return (e = _m(Ri(t), e)), new hd(Ri(e.g), Ri(e.h));
    if (ia(e)) return (e = _m(t, Ri(e))), new hd(Ri(e.g), e.h);
    if (30 < t.g.length) {
      if (ia(t) || ia(e))
        throw Error("slowDivide_ only works with positive integers.");
      for (var n = r0, r = e; 0 >= r.X(t); ) (n = Rk(n)), (r = Rk(r));
      var a = Pu(n, 1),
        o = Pu(r, 1);
      for (r = Pu(r, 2), n = Pu(n, 2); !No(r); ) {
        var u = o.add(r);
        0 >= u.X(t) && ((a = a.add(n)), (o = u)),
          (r = Pu(r, 1)),
          (n = Pu(n, 1));
      }
      return (e = wm(t, a.R(e))), new hd(a, e);
    }
    for (a = rh; 0 <= t.X(e); ) {
      for (
        n = Math.max(1, Math.floor(t.ea() / e.ea())),
          r = Math.ceil(Math.log(n) / Math.LN2),
          r = 48 >= r ? 1 : Math.pow(2, r - 48),
          o = no(n),
          u = o.R(e);
        ia(u) || 0 < u.X(t);

      )
        (n -= r), (o = no(n)), (u = o.R(e));
      No(o) && (o = r0), (a = a.add(o)), (t = wm(t, u));
    }
    return new hd(a, t);
  }
  kt.gb = function (t) {
    return _m(this, t).h;
  };
  kt.and = function (t) {
    for (var e = Math.max(this.g.length, t.g.length), n = [], r = 0; r < e; r++)
      n[r] = this.D(r) & t.D(r);
    return new Zn(n, this.h & t.h);
  };
  kt.or = function (t) {
    for (var e = Math.max(this.g.length, t.g.length), n = [], r = 0; r < e; r++)
      n[r] = this.D(r) | t.D(r);
    return new Zn(n, this.h | t.h);
  };
  kt.xor = function (t) {
    for (var e = Math.max(this.g.length, t.g.length), n = [], r = 0; r < e; r++)
      n[r] = this.D(r) ^ t.D(r);
    return new Zn(n, this.h ^ t.h);
  };
  function Rk(t) {
    for (var e = t.g.length + 1, n = [], r = 0; r < e; r++)
      n[r] = (t.D(r) << 1) | (t.D(r - 1) >>> 31);
    return new Zn(n, t.h);
  }
  function Pu(t, e) {
    var n = e >> 5;
    e %= 32;
    for (var r = t.g.length - n, a = [], o = 0; o < r; o++)
      a[o] =
        0 < e ? (t.D(o + n) >>> e) | (t.D(o + n + 1) << (32 - e)) : t.D(o + n);
    return new Zn(a, t.h);
  }
  bm.prototype.createWebChannel = bm.prototype.g;
  Us.prototype.send = Us.prototype.u;
  Us.prototype.open = Us.prototype.m;
  Us.prototype.close = Us.prototype.close;
  Nv.NO_ERROR = 0;
  Nv.TIMEOUT = 8;
  Nv.HTTP_ERROR = 6;
  JR.COMPLETE = "complete";
  eO.EventType = qf;
  qf.OPEN = "a";
  qf.CLOSE = "b";
  qf.ERROR = "c";
  qf.MESSAGE = "d";
  yi.prototype.listen = yi.prototype.O;
  Dr.prototype.listenOnce = Dr.prototype.P;
  Dr.prototype.getLastError = Dr.prototype.Sa;
  Dr.prototype.getLastErrorCode = Dr.prototype.Ia;
  Dr.prototype.getStatus = Dr.prototype.da;
  Dr.prototype.getResponseJson = Dr.prototype.Wa;
  Dr.prototype.getResponseText = Dr.prototype.ja;
  Dr.prototype.send = Dr.prototype.ha;
  Dr.prototype.setWithCredentials = Dr.prototype.Oa;
  Ra.prototype.digest = Ra.prototype.l;
  Ra.prototype.reset = Ra.prototype.reset;
  Ra.prototype.update = Ra.prototype.j;
  Zn.prototype.add = Zn.prototype.add;
  Zn.prototype.multiply = Zn.prototype.R;
  Zn.prototype.modulo = Zn.prototype.gb;
  Zn.prototype.compare = Zn.prototype.X;
  Zn.prototype.toNumber = Zn.prototype.ea;
  Zn.prototype.toString = Zn.prototype.toString;
  Zn.prototype.getBits = Zn.prototype.D;
  Zn.fromNumber = no;
  Zn.fromString = MO;
  var fX = function () {
      return new bm();
    },
    pX = function () {
      return Ov();
    },
    xx = Nv,
    gX = JR,
    mX = du,
    Ok = {
      xb: 0,
      Ab: 1,
      Bb: 2,
      Ub: 3,
      Zb: 4,
      Wb: 5,
      Xb: 6,
      Vb: 7,
      Tb: 8,
      Yb: 9,
      PROXY: 10,
      NOPROXY: 11,
      Rb: 12,
      Nb: 13,
      Ob: 14,
      Mb: 15,
      Pb: 16,
      Qb: 17,
      tb: 18,
      sb: 19,
      ub: 20,
    },
    tg = eO,
    vX = Dr,
    yX = Ra,
    ih = Zn;
  const Nk = "@firebase/firestore";
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Xi {
    constructor(e) {
      this.uid = e;
    }
    isAuthenticated() {
      return this.uid != null;
    }
    toKey() {
      return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
    }
    isEqual(e) {
      return e.uid === this.uid;
    }
  }
  (Xi.UNAUTHENTICATED = new Xi(null)),
    (Xi.GOOGLE_CREDENTIALS = new Xi("google-credentials-uid")),
    (Xi.FIRST_PARTY = new Xi("first-party-uid")),
    (Xi.MOCK_USER = new Xi("mock-user"));
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ let jh = "10.7.0";
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Kc = new Jw("@firebase/firestore");
  function dd() {
    return Kc.logLevel;
  }
  function Ft(t, ...e) {
    if (Kc.logLevel <= In.DEBUG) {
      const n = e.map(N1);
      Kc.debug(`Firestore (${jh}): ${t}`, ...n);
    }
  }
  function Yo(t, ...e) {
    if (Kc.logLevel <= In.ERROR) {
      const n = e.map(N1);
      Kc.error(`Firestore (${jh}): ${t}`, ...n);
    }
  }
  function vh(t, ...e) {
    if (Kc.logLevel <= In.WARN) {
      const n = e.map(N1);
      Kc.warn(`Firestore (${jh}): ${t}`, ...n);
    }
  }
  function N1(t) {
    if (typeof t == "string") return t;
    try {
      /**
       * @license
       * Copyright 2020 Google LLC
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */ return (function (n) {
        return JSON.stringify(n);
      })(t);
    } catch {
      return t;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function on(t = "Unexpected state") {
    const e = `FIRESTORE (${jh}) INTERNAL ASSERTION FAILED: ` + t;
    throw (Yo(e), new Error(e));
  }
  function ur(t, e) {
    t || on();
  }
  function gn(t, e) {
    return t;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const rt = {
    OK: "ok",
    CANCELLED: "cancelled",
    UNKNOWN: "unknown",
    INVALID_ARGUMENT: "invalid-argument",
    DEADLINE_EXCEEDED: "deadline-exceeded",
    NOT_FOUND: "not-found",
    ALREADY_EXISTS: "already-exists",
    PERMISSION_DENIED: "permission-denied",
    UNAUTHENTICATED: "unauthenticated",
    RESOURCE_EXHAUSTED: "resource-exhausted",
    FAILED_PRECONDITION: "failed-precondition",
    ABORTED: "aborted",
    OUT_OF_RANGE: "out-of-range",
    UNIMPLEMENTED: "unimplemented",
    INTERNAL: "internal",
    UNAVAILABLE: "unavailable",
    DATA_LOSS: "data-loss",
  };
  class Yt extends po {
    constructor(e, n) {
      super(e, n),
        (this.code = e),
        (this.message = n),
        (this.toString = () =>
          `${this.name}: [code=${this.code}]: ${this.message}`);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class $l {
    constructor() {
      this.promise = new Promise((e, n) => {
        (this.resolve = e), (this.reject = n);
      });
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class jO {
    constructor(e, n) {
      (this.user = n),
        (this.type = "OAuth"),
        (this.headers = new Map()),
        this.headers.set("Authorization", `Bearer ${e}`);
    }
  }
  class xX {
    getToken() {
      return Promise.resolve(null);
    }
    invalidateToken() {}
    start(e, n) {
      e.enqueueRetryable(() => n(Xi.UNAUTHENTICATED));
    }
    shutdown() {}
  }
  class bX {
    constructor(e) {
      (this.token = e), (this.changeListener = null);
    }
    getToken() {
      return Promise.resolve(this.token);
    }
    invalidateToken() {}
    start(e, n) {
      (this.changeListener = n), e.enqueueRetryable(() => n(this.token.user));
    }
    shutdown() {
      this.changeListener = null;
    }
  }
  class wX {
    constructor(e) {
      (this.t = e),
        (this.currentUser = Xi.UNAUTHENTICATED),
        (this.i = 0),
        (this.forceRefresh = !1),
        (this.auth = null);
    }
    start(e, n) {
      let r = this.i;
      const a = (x) =>
        this.i !== r ? ((r = this.i), n(x)) : Promise.resolve();
      let o = new $l();
      this.o = () => {
        this.i++,
          (this.currentUser = this.u()),
          o.resolve(),
          (o = new $l()),
          e.enqueueRetryable(() => a(this.currentUser));
      };
      const u = () => {
          const x = o;
          e.enqueueRetryable(async () => {
            await x.promise, await a(this.currentUser);
          });
        },
        g = (x) => {
          Ft("FirebaseAuthCredentialsProvider", "Auth detected"),
            (this.auth = x),
            this.auth.addAuthTokenListener(this.o),
            u();
        };
      this.t.onInit((x) => g(x)),
        setTimeout(() => {
          if (!this.auth) {
            const x = this.t.getImmediate({ optional: !0 });
            x
              ? g(x)
              : (Ft("FirebaseAuthCredentialsProvider", "Auth not yet detected"),
                o.resolve(),
                (o = new $l()));
          }
        }, 0),
        u();
    }
    getToken() {
      const e = this.i,
        n = this.forceRefresh;
      return (
        (this.forceRefresh = !1),
        this.auth
          ? this.auth
              .getToken(n)
              .then((r) =>
                this.i !== e
                  ? (Ft(
                      "FirebaseAuthCredentialsProvider",
                      "getToken aborted due to token change."
                    ),
                    this.getToken())
                  : r
                  ? (ur(typeof r.accessToken == "string"),
                    new jO(r.accessToken, this.currentUser))
                  : null
              )
          : Promise.resolve(null)
      );
    }
    invalidateToken() {
      this.forceRefresh = !0;
    }
    shutdown() {
      this.auth && this.auth.removeAuthTokenListener(this.o);
    }
    u() {
      const e = this.auth && this.auth.getUid();
      return ur(e === null || typeof e == "string"), new Xi(e);
    }
  }
  class _X {
    constructor(e, n, r) {
      (this.l = e),
        (this.h = n),
        (this.P = r),
        (this.type = "FirstParty"),
        (this.user = Xi.FIRST_PARTY),
        (this.I = new Map());
    }
    T() {
      return this.P ? this.P() : null;
    }
    get headers() {
      this.I.set("X-Goog-AuthUser", this.l);
      const e = this.T();
      return (
        e && this.I.set("Authorization", e),
        this.h && this.I.set("X-Goog-Iam-Authorization-Token", this.h),
        this.I
      );
    }
  }
  class SX {
    constructor(e, n, r) {
      (this.l = e), (this.h = n), (this.P = r);
    }
    getToken() {
      return Promise.resolve(new _X(this.l, this.h, this.P));
    }
    start(e, n) {
      e.enqueueRetryable(() => n(Xi.FIRST_PARTY));
    }
    shutdown() {}
    invalidateToken() {}
  }
  class EX {
    constructor(e) {
      (this.value = e),
        (this.type = "AppCheck"),
        (this.headers = new Map()),
        e &&
          e.length > 0 &&
          this.headers.set("x-firebase-appcheck", this.value);
    }
  }
  class kX {
    constructor(e) {
      (this.A = e),
        (this.forceRefresh = !1),
        (this.appCheck = null),
        (this.R = null);
    }
    start(e, n) {
      const r = (o) => {
        o.error != null &&
          Ft(
            "FirebaseAppCheckTokenProvider",
            `Error getting App Check token; using placeholder token instead. Error: ${o.error.message}`
          );
        const u = o.token !== this.R;
        return (
          (this.R = o.token),
          Ft(
            "FirebaseAppCheckTokenProvider",
            `Received ${u ? "new" : "existing"} token.`
          ),
          u ? n(o.token) : Promise.resolve()
        );
      };
      this.o = (o) => {
        e.enqueueRetryable(() => r(o));
      };
      const a = (o) => {
        Ft("FirebaseAppCheckTokenProvider", "AppCheck detected"),
          (this.appCheck = o),
          this.appCheck.addTokenListener(this.o);
      };
      this.A.onInit((o) => a(o)),
        setTimeout(() => {
          if (!this.appCheck) {
            const o = this.A.getImmediate({ optional: !0 });
            o
              ? a(o)
              : Ft(
                  "FirebaseAppCheckTokenProvider",
                  "AppCheck not yet detected"
                );
          }
        }, 0);
    }
    getToken() {
      const e = this.forceRefresh;
      return (
        (this.forceRefresh = !1),
        this.appCheck
          ? this.appCheck
              .getToken(e)
              .then((n) =>
                n
                  ? (ur(typeof n.token == "string"),
                    (this.R = n.token),
                    new EX(n.token))
                  : null
              )
          : Promise.resolve(null)
      );
    }
    invalidateToken() {
      this.forceRefresh = !0;
    }
    shutdown() {
      this.appCheck && this.appCheck.removeTokenListener(this.o);
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function AX(t) {
    const e = typeof self < "u" && (self.crypto || self.msCrypto),
      n = new Uint8Array(t);
    if (e && typeof e.getRandomValues == "function") e.getRandomValues(n);
    else for (let r = 0; r < t; r++) n[r] = Math.floor(256 * Math.random());
    return n;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class FO {
    static newId() {
      const e =
          "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
        n = Math.floor(256 / e.length) * e.length;
      let r = "";
      for (; r.length < 20; ) {
        const a = AX(40);
        for (let o = 0; o < a.length; ++o)
          r.length < 20 && a[o] < n && (r += e.charAt(a[o] % e.length));
      }
      return r;
    }
  }
  function Xn(t, e) {
    return t < e ? -1 : t > e ? 1 : 0;
  }
  function yh(t, e, n) {
    return t.length === e.length && t.every((r, a) => n(r, e[a]));
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class li {
    constructor(e, n) {
      if (((this.seconds = e), (this.nanoseconds = n), n < 0))
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Timestamp nanoseconds out of range: " + n
        );
      if (n >= 1e9)
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Timestamp nanoseconds out of range: " + n
        );
      if (e < -62135596800)
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Timestamp seconds out of range: " + e
        );
      if (e >= 253402300800)
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Timestamp seconds out of range: " + e
        );
    }
    static now() {
      return li.fromMillis(Date.now());
    }
    static fromDate(e) {
      return li.fromMillis(e.getTime());
    }
    static fromMillis(e) {
      const n = Math.floor(e / 1e3),
        r = Math.floor(1e6 * (e - 1e3 * n));
      return new li(n, r);
    }
    toDate() {
      return new Date(this.toMillis());
    }
    toMillis() {
      return 1e3 * this.seconds + this.nanoseconds / 1e6;
    }
    _compareTo(e) {
      return this.seconds === e.seconds
        ? Xn(this.nanoseconds, e.nanoseconds)
        : Xn(this.seconds, e.seconds);
    }
    isEqual(e) {
      return e.seconds === this.seconds && e.nanoseconds === this.nanoseconds;
    }
    toString() {
      return (
        "Timestamp(seconds=" +
        this.seconds +
        ", nanoseconds=" +
        this.nanoseconds +
        ")"
      );
    }
    toJSON() {
      return { seconds: this.seconds, nanoseconds: this.nanoseconds };
    }
    valueOf() {
      const e = this.seconds - -62135596800;
      return (
        String(e).padStart(12, "0") +
        "." +
        String(this.nanoseconds).padStart(9, "0")
      );
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class hn {
    constructor(e) {
      this.timestamp = e;
    }
    static fromTimestamp(e) {
      return new hn(e);
    }
    static min() {
      return new hn(new li(0, 0));
    }
    static max() {
      return new hn(new li(253402300799, 999999999));
    }
    compareTo(e) {
      return this.timestamp._compareTo(e.timestamp);
    }
    isEqual(e) {
      return this.timestamp.isEqual(e.timestamp);
    }
    toMicroseconds() {
      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
    }
    toString() {
      return "SnapshotVersion(" + this.timestamp.toString() + ")";
    }
    toTimestamp() {
      return this.timestamp;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class _f {
    constructor(e, n, r) {
      n === void 0 ? (n = 0) : n > e.length && on(),
        r === void 0 ? (r = e.length - n) : r > e.length - n && on(),
        (this.segments = e),
        (this.offset = n),
        (this.len = r);
    }
    get length() {
      return this.len;
    }
    isEqual(e) {
      return _f.comparator(this, e) === 0;
    }
    child(e) {
      const n = this.segments.slice(this.offset, this.limit());
      return (
        e instanceof _f
          ? e.forEach((r) => {
              n.push(r);
            })
          : n.push(e),
        this.construct(n)
      );
    }
    limit() {
      return this.offset + this.length;
    }
    popFirst(e) {
      return (
        (e = e === void 0 ? 1 : e),
        this.construct(this.segments, this.offset + e, this.length - e)
      );
    }
    popLast() {
      return this.construct(this.segments, this.offset, this.length - 1);
    }
    firstSegment() {
      return this.segments[this.offset];
    }
    lastSegment() {
      return this.get(this.length - 1);
    }
    get(e) {
      return this.segments[this.offset + e];
    }
    isEmpty() {
      return this.length === 0;
    }
    isPrefixOf(e) {
      if (e.length < this.length) return !1;
      for (let n = 0; n < this.length; n++)
        if (this.get(n) !== e.get(n)) return !1;
      return !0;
    }
    isImmediateParentOf(e) {
      if (this.length + 1 !== e.length) return !1;
      for (let n = 0; n < this.length; n++)
        if (this.get(n) !== e.get(n)) return !1;
      return !0;
    }
    forEach(e) {
      for (let n = this.offset, r = this.limit(); n < r; n++)
        e(this.segments[n]);
    }
    toArray() {
      return this.segments.slice(this.offset, this.limit());
    }
    static comparator(e, n) {
      const r = Math.min(e.length, n.length);
      for (let a = 0; a < r; a++) {
        const o = e.get(a),
          u = n.get(a);
        if (o < u) return -1;
        if (o > u) return 1;
      }
      return e.length < n.length ? -1 : e.length > n.length ? 1 : 0;
    }
  }
  class wr extends _f {
    construct(e, n, r) {
      return new wr(e, n, r);
    }
    canonicalString() {
      return this.toArray().join("/");
    }
    toString() {
      return this.canonicalString();
    }
    static fromString(...e) {
      const n = [];
      for (const r of e) {
        if (r.indexOf("//") >= 0)
          throw new Yt(
            rt.INVALID_ARGUMENT,
            `Invalid segment (${r}). Paths must not contain // in them.`
          );
        n.push(...r.split("/").filter((a) => a.length > 0));
      }
      return new wr(n);
    }
    static emptyPath() {
      return new wr([]);
    }
  }
  const CX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
  class Oi extends _f {
    construct(e, n, r) {
      return new Oi(e, n, r);
    }
    static isValidIdentifier(e) {
      return CX.test(e);
    }
    canonicalString() {
      return this.toArray()
        .map(
          (e) => (
            (e = e.replace(/\\/g, "\\\\").replace(/`/g, "\\`")),
            Oi.isValidIdentifier(e) || (e = "`" + e + "`"),
            e
          )
        )
        .join(".");
    }
    toString() {
      return this.canonicalString();
    }
    isKeyField() {
      return this.length === 1 && this.get(0) === "__name__";
    }
    static keyField() {
      return new Oi(["__name__"]);
    }
    static fromServerFormat(e) {
      const n = [];
      let r = "",
        a = 0;
      const o = () => {
        if (r.length === 0)
          throw new Yt(
            rt.INVALID_ARGUMENT,
            `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`
          );
        n.push(r), (r = "");
      };
      let u = !1;
      for (; a < e.length; ) {
        const g = e[a];
        if (g === "\\") {
          if (a + 1 === e.length)
            throw new Yt(
              rt.INVALID_ARGUMENT,
              "Path has trailing escape character: " + e
            );
          const x = e[a + 1];
          if (x !== "\\" && x !== "." && x !== "`")
            throw new Yt(
              rt.INVALID_ARGUMENT,
              "Path has invalid escape sequence: " + e
            );
          (r += x), (a += 2);
        } else
          g === "`"
            ? ((u = !u), a++)
            : g !== "." || u
            ? ((r += g), a++)
            : (o(), a++);
      }
      if ((o(), u))
        throw new Yt(rt.INVALID_ARGUMENT, "Unterminated ` in path: " + e);
      return new Oi(n);
    }
    static emptyPath() {
      return new Oi([]);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Kt {
    constructor(e) {
      this.path = e;
    }
    static fromPath(e) {
      return new Kt(wr.fromString(e));
    }
    static fromName(e) {
      return new Kt(wr.fromString(e).popFirst(5));
    }
    static empty() {
      return new Kt(wr.emptyPath());
    }
    get collectionGroup() {
      return this.path.popLast().lastSegment();
    }
    hasCollectionId(e) {
      return this.path.length >= 2 && this.path.get(this.path.length - 2) === e;
    }
    getCollectionGroup() {
      return this.path.get(this.path.length - 2);
    }
    getCollectionPath() {
      return this.path.popLast();
    }
    isEqual(e) {
      return e !== null && wr.comparator(this.path, e.path) === 0;
    }
    toString() {
      return this.path.toString();
    }
    static comparator(e, n) {
      return wr.comparator(e.path, n.path);
    }
    static isDocumentKey(e) {
      return e.length % 2 == 0;
    }
    static fromSegments(e) {
      return new Kt(new wr(e.slice()));
    }
  }
  function TX(t, e) {
    const n = t.toTimestamp().seconds,
      r = t.toTimestamp().nanoseconds + 1,
      a = hn.fromTimestamp(r === 1e9 ? new li(n + 1, 0) : new li(n, r));
    return new ql(a, Kt.empty(), e);
  }
  function IX(t) {
    return new ql(t.readTime, t.key, -1);
  }
  class ql {
    constructor(e, n, r) {
      (this.readTime = e), (this.documentKey = n), (this.largestBatchId = r);
    }
    static min() {
      return new ql(hn.min(), Kt.empty(), -1);
    }
    static max() {
      return new ql(hn.max(), Kt.empty(), -1);
    }
  }
  function PX(t, e) {
    let n = t.readTime.compareTo(e.readTime);
    return n !== 0
      ? n
      : ((n = Kt.comparator(t.documentKey, e.documentKey)),
        n !== 0 ? n : Xn(t.largestBatchId, e.largestBatchId));
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const RX =
    "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.";
  class OX {
    constructor() {
      this.onCommittedListeners = [];
    }
    addOnCommittedListener(e) {
      this.onCommittedListeners.push(e);
    }
    raiseOnCommittedEvent() {
      this.onCommittedListeners.forEach((e) => e());
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function ep(t) {
    if (t.code !== rt.FAILED_PRECONDITION || t.message !== RX) throw t;
    Ft("LocalStore", "Unexpectedly lost primary lease");
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class it {
    constructor(e) {
      (this.nextCallback = null),
        (this.catchCallback = null),
        (this.result = void 0),
        (this.error = void 0),
        (this.isDone = !1),
        (this.callbackAttached = !1),
        e(
          (n) => {
            (this.isDone = !0),
              (this.result = n),
              this.nextCallback && this.nextCallback(n);
          },
          (n) => {
            (this.isDone = !0),
              (this.error = n),
              this.catchCallback && this.catchCallback(n);
          }
        );
    }
    catch(e) {
      return this.next(void 0, e);
    }
    next(e, n) {
      return (
        this.callbackAttached && on(),
        (this.callbackAttached = !0),
        this.isDone
          ? this.error
            ? this.wrapFailure(n, this.error)
            : this.wrapSuccess(e, this.result)
          : new it((r, a) => {
              (this.nextCallback = (o) => {
                this.wrapSuccess(e, o).next(r, a);
              }),
                (this.catchCallback = (o) => {
                  this.wrapFailure(n, o).next(r, a);
                });
            })
      );
    }
    toPromise() {
      return new Promise((e, n) => {
        this.next(e, n);
      });
    }
    wrapUserFunction(e) {
      try {
        const n = e();
        return n instanceof it ? n : it.resolve(n);
      } catch (n) {
        return it.reject(n);
      }
    }
    wrapSuccess(e, n) {
      return e ? this.wrapUserFunction(() => e(n)) : it.resolve(n);
    }
    wrapFailure(e, n) {
      return e ? this.wrapUserFunction(() => e(n)) : it.reject(n);
    }
    static resolve(e) {
      return new it((n, r) => {
        n(e);
      });
    }
    static reject(e) {
      return new it((n, r) => {
        r(e);
      });
    }
    static waitFor(e) {
      return new it((n, r) => {
        let a = 0,
          o = 0,
          u = !1;
        e.forEach((g) => {
          ++a,
            g.next(
              () => {
                ++o, u && o === a && n();
              },
              (x) => r(x)
            );
        }),
          (u = !0),
          o === a && n();
      });
    }
    static or(e) {
      let n = it.resolve(!1);
      for (const r of e) n = n.next((a) => (a ? it.resolve(a) : r()));
      return n;
    }
    static forEach(e, n) {
      const r = [];
      return (
        e.forEach((a, o) => {
          r.push(n.call(this, a, o));
        }),
        this.waitFor(r)
      );
    }
    static mapArray(e, n) {
      return new it((r, a) => {
        const o = e.length,
          u = new Array(o);
        let g = 0;
        for (let x = 0; x < o; x++) {
          const E = x;
          n(e[E]).next(
            (L) => {
              (u[E] = L), ++g, g === o && r(u);
            },
            (L) => a(L)
          );
        }
      });
    }
    static doWhile(e, n) {
      return new it((r, a) => {
        const o = () => {
          e() === !0
            ? n().next(() => {
                o();
              }, a)
            : r();
        };
        o();
      });
    }
  }
  function tp(t) {
    return t.name === "IndexedDbTransactionError";
  }
  /**
   * @license
   * Copyright 2018 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class L1 {
    constructor(e, n) {
      (this.previousValue = e),
        n &&
          ((n.sequenceNumberHandler = (r) => this.se(r)),
          (this.oe = (r) => n.writeSequenceNumber(r)));
    }
    se(e) {
      return (
        (this.previousValue = Math.max(e, this.previousValue)),
        this.previousValue
      );
    }
    next() {
      const e = ++this.previousValue;
      return this.oe && this.oe(e), e;
    }
  }
  L1._e = -1;
  function Bv(t) {
    return t == null;
  }
  function Sm(t) {
    return t === 0 && 1 / t == -1 / 0;
  }
  function NX(t) {
    return (
      typeof t == "number" &&
      Number.isInteger(t) &&
      !Sm(t) &&
      t <= Number.MAX_SAFE_INTEGER &&
      t >= Number.MIN_SAFE_INTEGER
    );
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function Lk(t) {
    let e = 0;
    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;
    return e;
  }
  function fu(t, e) {
    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);
  }
  function zO(t) {
    for (const e in t)
      if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
    return !0;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Ir {
    constructor(e, n) {
      (this.comparator = e), (this.root = n || Pi.EMPTY);
    }
    insert(e, n) {
      return new Ir(
        this.comparator,
        this.root
          .insert(e, n, this.comparator)
          .copy(null, null, Pi.BLACK, null, null)
      );
    }
    remove(e) {
      return new Ir(
        this.comparator,
        this.root
          .remove(e, this.comparator)
          .copy(null, null, Pi.BLACK, null, null)
      );
    }
    get(e) {
      let n = this.root;
      for (; !n.isEmpty(); ) {
        const r = this.comparator(e, n.key);
        if (r === 0) return n.value;
        r < 0 ? (n = n.left) : r > 0 && (n = n.right);
      }
      return null;
    }
    indexOf(e) {
      let n = 0,
        r = this.root;
      for (; !r.isEmpty(); ) {
        const a = this.comparator(e, r.key);
        if (a === 0) return n + r.left.size;
        a < 0 ? (r = r.left) : ((n += r.left.size + 1), (r = r.right));
      }
      return -1;
    }
    isEmpty() {
      return this.root.isEmpty();
    }
    get size() {
      return this.root.size;
    }
    minKey() {
      return this.root.minKey();
    }
    maxKey() {
      return this.root.maxKey();
    }
    inorderTraversal(e) {
      return this.root.inorderTraversal(e);
    }
    forEach(e) {
      this.inorderTraversal((n, r) => (e(n, r), !1));
    }
    toString() {
      const e = [];
      return (
        this.inorderTraversal((n, r) => (e.push(`${n}:${r}`), !1)),
        `{${e.join(", ")}}`
      );
    }
    reverseTraversal(e) {
      return this.root.reverseTraversal(e);
    }
    getIterator() {
      return new ng(this.root, null, this.comparator, !1);
    }
    getIteratorFrom(e) {
      return new ng(this.root, e, this.comparator, !1);
    }
    getReverseIterator() {
      return new ng(this.root, null, this.comparator, !0);
    }
    getReverseIteratorFrom(e) {
      return new ng(this.root, e, this.comparator, !0);
    }
  }
  class ng {
    constructor(e, n, r, a) {
      (this.isReverse = a), (this.nodeStack = []);
      let o = 1;
      for (; !e.isEmpty(); )
        if (((o = n ? r(e.key, n) : 1), n && a && (o *= -1), o < 0))
          e = this.isReverse ? e.left : e.right;
        else {
          if (o === 0) {
            this.nodeStack.push(e);
            break;
          }
          this.nodeStack.push(e), (e = this.isReverse ? e.right : e.left);
        }
    }
    getNext() {
      let e = this.nodeStack.pop();
      const n = { key: e.key, value: e.value };
      if (this.isReverse)
        for (e = e.left; !e.isEmpty(); ) this.nodeStack.push(e), (e = e.right);
      else
        for (e = e.right; !e.isEmpty(); ) this.nodeStack.push(e), (e = e.left);
      return n;
    }
    hasNext() {
      return this.nodeStack.length > 0;
    }
    peek() {
      if (this.nodeStack.length === 0) return null;
      const e = this.nodeStack[this.nodeStack.length - 1];
      return { key: e.key, value: e.value };
    }
  }
  class Pi {
    constructor(e, n, r, a, o) {
      (this.key = e),
        (this.value = n),
        (this.color = r ?? Pi.RED),
        (this.left = a ?? Pi.EMPTY),
        (this.right = o ?? Pi.EMPTY),
        (this.size = this.left.size + 1 + this.right.size);
    }
    copy(e, n, r, a, o) {
      return new Pi(
        e ?? this.key,
        n ?? this.value,
        r ?? this.color,
        a ?? this.left,
        o ?? this.right
      );
    }
    isEmpty() {
      return !1;
    }
    inorderTraversal(e) {
      return (
        this.left.inorderTraversal(e) ||
        e(this.key, this.value) ||
        this.right.inorderTraversal(e)
      );
    }
    reverseTraversal(e) {
      return (
        this.right.reverseTraversal(e) ||
        e(this.key, this.value) ||
        this.left.reverseTraversal(e)
      );
    }
    min() {
      return this.left.isEmpty() ? this : this.left.min();
    }
    minKey() {
      return this.min().key;
    }
    maxKey() {
      return this.right.isEmpty() ? this.key : this.right.maxKey();
    }
    insert(e, n, r) {
      let a = this;
      const o = r(e, a.key);
      return (
        (a =
          o < 0
            ? a.copy(null, null, null, a.left.insert(e, n, r), null)
            : o === 0
            ? a.copy(null, n, null, null, null)
            : a.copy(null, null, null, null, a.right.insert(e, n, r))),
        a.fixUp()
      );
    }
    removeMin() {
      if (this.left.isEmpty()) return Pi.EMPTY;
      let e = this;
      return (
        e.left.isRed() || e.left.left.isRed() || (e = e.moveRedLeft()),
        (e = e.copy(null, null, null, e.left.removeMin(), null)),
        e.fixUp()
      );
    }
    remove(e, n) {
      let r,
        a = this;
      if (n(e, a.key) < 0)
        a.left.isEmpty() ||
          a.left.isRed() ||
          a.left.left.isRed() ||
          (a = a.moveRedLeft()),
          (a = a.copy(null, null, null, a.left.remove(e, n), null));
      else {
        if (
          (a.left.isRed() && (a = a.rotateRight()),
          a.right.isEmpty() ||
            a.right.isRed() ||
            a.right.left.isRed() ||
            (a = a.moveRedRight()),
          n(e, a.key) === 0)
        ) {
          if (a.right.isEmpty()) return Pi.EMPTY;
          (r = a.right.min()),
            (a = a.copy(r.key, r.value, null, null, a.right.removeMin()));
        }
        a = a.copy(null, null, null, null, a.right.remove(e, n));
      }
      return a.fixUp();
    }
    isRed() {
      return this.color;
    }
    fixUp() {
      let e = this;
      return (
        e.right.isRed() && !e.left.isRed() && (e = e.rotateLeft()),
        e.left.isRed() && e.left.left.isRed() && (e = e.rotateRight()),
        e.left.isRed() && e.right.isRed() && (e = e.colorFlip()),
        e
      );
    }
    moveRedLeft() {
      let e = this.colorFlip();
      return (
        e.right.left.isRed() &&
          ((e = e.copy(null, null, null, null, e.right.rotateRight())),
          (e = e.rotateLeft()),
          (e = e.colorFlip())),
        e
      );
    }
    moveRedRight() {
      let e = this.colorFlip();
      return (
        e.left.left.isRed() && ((e = e.rotateRight()), (e = e.colorFlip())), e
      );
    }
    rotateLeft() {
      const e = this.copy(null, null, Pi.RED, null, this.right.left);
      return this.right.copy(null, null, this.color, e, null);
    }
    rotateRight() {
      const e = this.copy(null, null, Pi.RED, this.left.right, null);
      return this.left.copy(null, null, this.color, null, e);
    }
    colorFlip() {
      const e = this.left.copy(null, null, !this.left.color, null, null),
        n = this.right.copy(null, null, !this.right.color, null, null);
      return this.copy(null, null, !this.color, e, n);
    }
    checkMaxDepth() {
      const e = this.check();
      return Math.pow(2, e) <= this.size + 1;
    }
    check() {
      if ((this.isRed() && this.left.isRed()) || this.right.isRed()) throw on();
      const e = this.left.check();
      if (e !== this.right.check()) throw on();
      return e + (this.isRed() ? 0 : 1);
    }
  }
  (Pi.EMPTY = null), (Pi.RED = !0), (Pi.BLACK = !1);
  Pi.EMPTY = new (class {
    constructor() {
      this.size = 0;
    }
    get key() {
      throw on();
    }
    get value() {
      throw on();
    }
    get color() {
      throw on();
    }
    get left() {
      throw on();
    }
    get right() {
      throw on();
    }
    copy(e, n, r, a, o) {
      return this;
    }
    insert(e, n, r) {
      return new Pi(e, n);
    }
    remove(e, n) {
      return this;
    }
    isEmpty() {
      return !0;
    }
    inorderTraversal(e) {
      return !1;
    }
    reverseTraversal(e) {
      return !1;
    }
    minKey() {
      return null;
    }
    maxKey() {
      return null;
    }
    isRed() {
      return !1;
    }
    checkMaxDepth() {
      return !0;
    }
    check() {
      return 0;
    }
  })();
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Di {
    constructor(e) {
      (this.comparator = e), (this.data = new Ir(this.comparator));
    }
    has(e) {
      return this.data.get(e) !== null;
    }
    first() {
      return this.data.minKey();
    }
    last() {
      return this.data.maxKey();
    }
    get size() {
      return this.data.size;
    }
    indexOf(e) {
      return this.data.indexOf(e);
    }
    forEach(e) {
      this.data.inorderTraversal((n, r) => (e(n), !1));
    }
    forEachInRange(e, n) {
      const r = this.data.getIteratorFrom(e[0]);
      for (; r.hasNext(); ) {
        const a = r.getNext();
        if (this.comparator(a.key, e[1]) >= 0) return;
        n(a.key);
      }
    }
    forEachWhile(e, n) {
      let r;
      for (
        r =
          n !== void 0 ? this.data.getIteratorFrom(n) : this.data.getIterator();
        r.hasNext();

      )
        if (!e(r.getNext().key)) return;
    }
    firstAfterOrEqual(e) {
      const n = this.data.getIteratorFrom(e);
      return n.hasNext() ? n.getNext().key : null;
    }
    getIterator() {
      return new Dk(this.data.getIterator());
    }
    getIteratorFrom(e) {
      return new Dk(this.data.getIteratorFrom(e));
    }
    add(e) {
      return this.copy(this.data.remove(e).insert(e, !0));
    }
    delete(e) {
      return this.has(e) ? this.copy(this.data.remove(e)) : this;
    }
    isEmpty() {
      return this.data.isEmpty();
    }
    unionWith(e) {
      let n = this;
      return (
        n.size < e.size && ((n = e), (e = this)),
        e.forEach((r) => {
          n = n.add(r);
        }),
        n
      );
    }
    isEqual(e) {
      if (!(e instanceof Di) || this.size !== e.size) return !1;
      const n = this.data.getIterator(),
        r = e.data.getIterator();
      for (; n.hasNext(); ) {
        const a = n.getNext().key,
          o = r.getNext().key;
        if (this.comparator(a, o) !== 0) return !1;
      }
      return !0;
    }
    toArray() {
      const e = [];
      return (
        this.forEach((n) => {
          e.push(n);
        }),
        e
      );
    }
    toString() {
      const e = [];
      return this.forEach((n) => e.push(n)), "SortedSet(" + e.toString() + ")";
    }
    copy(e) {
      const n = new Di(this.comparator);
      return (n.data = e), n;
    }
  }
  class Dk {
    constructor(e) {
      this.iter = e;
    }
    getNext() {
      return this.iter.getNext().key;
    }
    hasNext() {
      return this.iter.hasNext();
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class $s {
    constructor(e) {
      (this.fields = e), e.sort(Oi.comparator);
    }
    static empty() {
      return new $s([]);
    }
    unionWith(e) {
      let n = new Di(Oi.comparator);
      for (const r of this.fields) n = n.add(r);
      for (const r of e) n = n.add(r);
      return new $s(n.toArray());
    }
    covers(e) {
      for (const n of this.fields) if (n.isPrefixOf(e)) return !0;
      return !1;
    }
    isEqual(e) {
      return yh(this.fields, e.fields, (n, r) => n.isEqual(r));
    }
  }
  /**
   * @license
   * Copyright 2023 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class VO extends Error {
    constructor() {
      super(...arguments), (this.name = "Base64DecodeError");
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Ji {
    constructor(e) {
      this.binaryString = e;
    }
    static fromBase64String(e) {
      const n = (function (a) {
        try {
          return atob(a);
        } catch (o) {
          throw typeof DOMException < "u" && o instanceof DOMException
            ? new VO("Invalid base64 string: " + o)
            : o;
        }
      })(e);
      return new Ji(n);
    }
    static fromUint8Array(e) {
      const n = (function (a) {
        let o = "";
        for (let u = 0; u < a.length; ++u) o += String.fromCharCode(a[u]);
        return o;
      })(e);
      return new Ji(n);
    }
    [Symbol.iterator]() {
      let e = 0;
      return {
        next: () =>
          e < this.binaryString.length
            ? { value: this.binaryString.charCodeAt(e++), done: !1 }
            : { value: void 0, done: !0 },
      };
    }
    toBase64() {
      return (function (n) {
        return btoa(n);
      })(this.binaryString);
    }
    toUint8Array() {
      return (function (n) {
        const r = new Uint8Array(n.length);
        for (let a = 0; a < n.length; a++) r[a] = n.charCodeAt(a);
        return r;
      })(this.binaryString);
    }
    approximateByteSize() {
      return 2 * this.binaryString.length;
    }
    compareTo(e) {
      return Xn(this.binaryString, e.binaryString);
    }
    isEqual(e) {
      return this.binaryString === e.binaryString;
    }
  }
  Ji.EMPTY_BYTE_STRING = new Ji("");
  const LX = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
  function Kl(t) {
    if ((ur(!!t), typeof t == "string")) {
      let e = 0;
      const n = LX.exec(t);
      if ((ur(!!n), n[1])) {
        let a = n[1];
        (a = (a + "000000000").substr(0, 9)), (e = Number(a));
      }
      const r = new Date(t);
      return { seconds: Math.floor(r.getTime() / 1e3), nanos: e };
    }
    return { seconds: qr(t.seconds), nanos: qr(t.nanos) };
  }
  function qr(t) {
    return typeof t == "number" ? t : typeof t == "string" ? Number(t) : 0;
  }
  function Qc(t) {
    return typeof t == "string" ? Ji.fromBase64String(t) : Ji.fromUint8Array(t);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function D1(t) {
    var e, n;
    return (
      ((n = (
        ((e = t == null ? void 0 : t.mapValue) === null || e === void 0
          ? void 0
          : e.fields) || {}
      ).__type__) === null || n === void 0
        ? void 0
        : n.stringValue) === "server_timestamp"
    );
  }
  function M1(t) {
    const e = t.mapValue.fields.__previous_value__;
    return D1(e) ? M1(e) : e;
  }
  function Sf(t) {
    const e = Kl(t.mapValue.fields.__local_write_time__.timestampValue);
    return new li(e.seconds, e.nanos);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class DX {
    constructor(e, n, r, a, o, u, g, x, E) {
      (this.databaseId = e),
        (this.appId = n),
        (this.persistenceKey = r),
        (this.host = a),
        (this.ssl = o),
        (this.forceLongPolling = u),
        (this.autoDetectLongPolling = g),
        (this.longPollingOptions = x),
        (this.useFetchStreams = E);
    }
  }
  class Ef {
    constructor(e, n) {
      (this.projectId = e), (this.database = n || "(default)");
    }
    static empty() {
      return new Ef("", "");
    }
    get isDefaultDatabase() {
      return this.database === "(default)";
    }
    isEqual(e) {
      return (
        e instanceof Ef &&
        e.projectId === this.projectId &&
        e.database === this.database
      );
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const rg = {
    mapValue: { fields: { __type__: { stringValue: "__max__" } } },
  };
  function Zc(t) {
    return "nullValue" in t
      ? 0
      : "booleanValue" in t
      ? 1
      : "integerValue" in t || "doubleValue" in t
      ? 2
      : "timestampValue" in t
      ? 3
      : "stringValue" in t
      ? 5
      : "bytesValue" in t
      ? 6
      : "referenceValue" in t
      ? 7
      : "geoPointValue" in t
      ? 8
      : "arrayValue" in t
      ? 9
      : "mapValue" in t
      ? D1(t)
        ? 4
        : MX(t)
        ? 9007199254740991
        : 10
      : on();
  }
  function uo(t, e) {
    if (t === e) return !0;
    const n = Zc(t);
    if (n !== Zc(e)) return !1;
    switch (n) {
      case 0:
      case 9007199254740991:
        return !0;
      case 1:
        return t.booleanValue === e.booleanValue;
      case 4:
        return Sf(t).isEqual(Sf(e));
      case 3:
        return (function (a, o) {
          if (
            typeof a.timestampValue == "string" &&
            typeof o.timestampValue == "string" &&
            a.timestampValue.length === o.timestampValue.length
          )
            return a.timestampValue === o.timestampValue;
          const u = Kl(a.timestampValue),
            g = Kl(o.timestampValue);
          return u.seconds === g.seconds && u.nanos === g.nanos;
        })(t, e);
      case 5:
        return t.stringValue === e.stringValue;
      case 6:
        return (function (a, o) {
          return Qc(a.bytesValue).isEqual(Qc(o.bytesValue));
        })(t, e);
      case 7:
        return t.referenceValue === e.referenceValue;
      case 8:
        return (function (a, o) {
          return (
            qr(a.geoPointValue.latitude) === qr(o.geoPointValue.latitude) &&
            qr(a.geoPointValue.longitude) === qr(o.geoPointValue.longitude)
          );
        })(t, e);
      case 2:
        return (function (a, o) {
          if ("integerValue" in a && "integerValue" in o)
            return qr(a.integerValue) === qr(o.integerValue);
          if ("doubleValue" in a && "doubleValue" in o) {
            const u = qr(a.doubleValue),
              g = qr(o.doubleValue);
            return u === g ? Sm(u) === Sm(g) : isNaN(u) && isNaN(g);
          }
          return !1;
        })(t, e);
      case 9:
        return yh(t.arrayValue.values || [], e.arrayValue.values || [], uo);
      case 10:
        return (function (a, o) {
          const u = a.mapValue.fields || {},
            g = o.mapValue.fields || {};
          if (Lk(u) !== Lk(g)) return !1;
          for (const x in u)
            if (u.hasOwnProperty(x) && (g[x] === void 0 || !uo(u[x], g[x])))
              return !1;
          return !0;
        })(t, e);
      default:
        return on();
    }
  }
  function kf(t, e) {
    return (t.values || []).find((n) => uo(n, e)) !== void 0;
  }
  function xh(t, e) {
    if (t === e) return 0;
    const n = Zc(t),
      r = Zc(e);
    if (n !== r) return Xn(n, r);
    switch (n) {
      case 0:
      case 9007199254740991:
        return 0;
      case 1:
        return Xn(t.booleanValue, e.booleanValue);
      case 2:
        return (function (o, u) {
          const g = qr(o.integerValue || o.doubleValue),
            x = qr(u.integerValue || u.doubleValue);
          return g < x
            ? -1
            : g > x
            ? 1
            : g === x
            ? 0
            : isNaN(g)
            ? isNaN(x)
              ? 0
              : -1
            : 1;
        })(t, e);
      case 3:
        return Mk(t.timestampValue, e.timestampValue);
      case 4:
        return Mk(Sf(t), Sf(e));
      case 5:
        return Xn(t.stringValue, e.stringValue);
      case 6:
        return (function (o, u) {
          const g = Qc(o),
            x = Qc(u);
          return g.compareTo(x);
        })(t.bytesValue, e.bytesValue);
      case 7:
        return (function (o, u) {
          const g = o.split("/"),
            x = u.split("/");
          for (let E = 0; E < g.length && E < x.length; E++) {
            const L = Xn(g[E], x[E]);
            if (L !== 0) return L;
          }
          return Xn(g.length, x.length);
        })(t.referenceValue, e.referenceValue);
      case 8:
        return (function (o, u) {
          const g = Xn(qr(o.latitude), qr(u.latitude));
          return g !== 0 ? g : Xn(qr(o.longitude), qr(u.longitude));
        })(t.geoPointValue, e.geoPointValue);
      case 9:
        return (function (o, u) {
          const g = o.values || [],
            x = u.values || [];
          for (let E = 0; E < g.length && E < x.length; ++E) {
            const L = xh(g[E], x[E]);
            if (L) return L;
          }
          return Xn(g.length, x.length);
        })(t.arrayValue, e.arrayValue);
      case 10:
        return (function (o, u) {
          if (o === rg.mapValue && u === rg.mapValue) return 0;
          if (o === rg.mapValue) return 1;
          if (u === rg.mapValue) return -1;
          const g = o.fields || {},
            x = Object.keys(g),
            E = u.fields || {},
            L = Object.keys(E);
          x.sort(), L.sort();
          for (let z = 0; z < x.length && z < L.length; ++z) {
            const B = Xn(x[z], L[z]);
            if (B !== 0) return B;
            const ae = xh(g[x[z]], E[L[z]]);
            if (ae !== 0) return ae;
          }
          return Xn(x.length, L.length);
        })(t.mapValue, e.mapValue);
      default:
        throw on();
    }
  }
  function Mk(t, e) {
    if (typeof t == "string" && typeof e == "string" && t.length === e.length)
      return Xn(t, e);
    const n = Kl(t),
      r = Kl(e),
      a = Xn(n.seconds, r.seconds);
    return a !== 0 ? a : Xn(n.nanos, r.nanos);
  }
  function bh(t) {
    return i0(t);
  }
  function i0(t) {
    return "nullValue" in t
      ? "null"
      : "booleanValue" in t
      ? "" + t.booleanValue
      : "integerValue" in t
      ? "" + t.integerValue
      : "doubleValue" in t
      ? "" + t.doubleValue
      : "timestampValue" in t
      ? (function (n) {
          const r = Kl(n);
          return `time(${r.seconds},${r.nanos})`;
        })(t.timestampValue)
      : "stringValue" in t
      ? t.stringValue
      : "bytesValue" in t
      ? (function (n) {
          return Qc(n).toBase64();
        })(t.bytesValue)
      : "referenceValue" in t
      ? (function (n) {
          return Kt.fromName(n).toString();
        })(t.referenceValue)
      : "geoPointValue" in t
      ? (function (n) {
          return `geo(${n.latitude},${n.longitude})`;
        })(t.geoPointValue)
      : "arrayValue" in t
      ? (function (n) {
          let r = "[",
            a = !0;
          for (const o of n.values || [])
            a ? (a = !1) : (r += ","), (r += i0(o));
          return r + "]";
        })(t.arrayValue)
      : "mapValue" in t
      ? (function (n) {
          const r = Object.keys(n.fields || {}).sort();
          let a = "{",
            o = !0;
          for (const u of r)
            o ? (o = !1) : (a += ","), (a += `${u}:${i0(n.fields[u])}`);
          return a + "}";
        })(t.mapValue)
      : on();
  }
  function s0(t) {
    return !!t && "integerValue" in t;
  }
  function j1(t) {
    return !!t && "arrayValue" in t;
  }
  function jk(t) {
    return !!t && "nullValue" in t;
  }
  function Fk(t) {
    return !!t && "doubleValue" in t && isNaN(Number(t.doubleValue));
  }
  function Ag(t) {
    return !!t && "mapValue" in t;
  }
  function Fd(t) {
    if (t.geoPointValue)
      return { geoPointValue: Object.assign({}, t.geoPointValue) };
    if (t.timestampValue && typeof t.timestampValue == "object")
      return { timestampValue: Object.assign({}, t.timestampValue) };
    if (t.mapValue) {
      const e = { mapValue: { fields: {} } };
      return fu(t.mapValue.fields, (n, r) => (e.mapValue.fields[n] = Fd(r))), e;
    }
    if (t.arrayValue) {
      const e = { arrayValue: { values: [] } };
      for (let n = 0; n < (t.arrayValue.values || []).length; ++n)
        e.arrayValue.values[n] = Fd(t.arrayValue.values[n]);
      return e;
    }
    return Object.assign({}, t);
  }
  function MX(t) {
    return (
      (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue ===
      "__max__"
    );
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class ks {
    constructor(e) {
      this.value = e;
    }
    static empty() {
      return new ks({ mapValue: {} });
    }
    field(e) {
      if (e.isEmpty()) return this.value;
      {
        let n = this.value;
        for (let r = 0; r < e.length - 1; ++r)
          if (((n = (n.mapValue.fields || {})[e.get(r)]), !Ag(n))) return null;
        return (n = (n.mapValue.fields || {})[e.lastSegment()]), n || null;
      }
    }
    set(e, n) {
      this.getFieldsMap(e.popLast())[e.lastSegment()] = Fd(n);
    }
    setAll(e) {
      let n = Oi.emptyPath(),
        r = {},
        a = [];
      e.forEach((u, g) => {
        if (!n.isImmediateParentOf(g)) {
          const x = this.getFieldsMap(n);
          this.applyChanges(x, r, a), (r = {}), (a = []), (n = g.popLast());
        }
        u ? (r[g.lastSegment()] = Fd(u)) : a.push(g.lastSegment());
      });
      const o = this.getFieldsMap(n);
      this.applyChanges(o, r, a);
    }
    delete(e) {
      const n = this.field(e.popLast());
      Ag(n) && n.mapValue.fields && delete n.mapValue.fields[e.lastSegment()];
    }
    isEqual(e) {
      return uo(this.value, e.value);
    }
    getFieldsMap(e) {
      let n = this.value;
      n.mapValue.fields || (n.mapValue = { fields: {} });
      for (let r = 0; r < e.length; ++r) {
        let a = n.mapValue.fields[e.get(r)];
        (Ag(a) && a.mapValue.fields) ||
          ((a = { mapValue: { fields: {} } }),
          (n.mapValue.fields[e.get(r)] = a)),
          (n = a);
      }
      return n.mapValue.fields;
    }
    applyChanges(e, n, r) {
      fu(n, (a, o) => (e[a] = o));
      for (const a of r) delete e[a];
    }
    clone() {
      return new ks(Fd(this.value));
    }
  }
  function $O(t) {
    const e = [];
    return (
      fu(t.fields, (n, r) => {
        const a = new Oi([n]);
        if (Ag(r)) {
          const o = $O(r.mapValue).fields;
          if (o.length === 0) e.push(a);
          else for (const u of o) e.push(a.child(u));
        } else e.push(a);
      }),
      new $s(e)
    );
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Gi {
    constructor(e, n, r, a, o, u, g) {
      (this.key = e),
        (this.documentType = n),
        (this.version = r),
        (this.readTime = a),
        (this.createTime = o),
        (this.data = u),
        (this.documentState = g);
    }
    static newInvalidDocument(e) {
      return new Gi(e, 0, hn.min(), hn.min(), hn.min(), ks.empty(), 0);
    }
    static newFoundDocument(e, n, r, a) {
      return new Gi(e, 1, n, hn.min(), r, a, 0);
    }
    static newNoDocument(e, n) {
      return new Gi(e, 2, n, hn.min(), hn.min(), ks.empty(), 0);
    }
    static newUnknownDocument(e, n) {
      return new Gi(e, 3, n, hn.min(), hn.min(), ks.empty(), 2);
    }
    convertToFoundDocument(e, n) {
      return (
        !this.createTime.isEqual(hn.min()) ||
          (this.documentType !== 2 && this.documentType !== 0) ||
          (this.createTime = e),
        (this.version = e),
        (this.documentType = 1),
        (this.data = n),
        (this.documentState = 0),
        this
      );
    }
    convertToNoDocument(e) {
      return (
        (this.version = e),
        (this.documentType = 2),
        (this.data = ks.empty()),
        (this.documentState = 0),
        this
      );
    }
    convertToUnknownDocument(e) {
      return (
        (this.version = e),
        (this.documentType = 3),
        (this.data = ks.empty()),
        (this.documentState = 2),
        this
      );
    }
    setHasCommittedMutations() {
      return (this.documentState = 2), this;
    }
    setHasLocalMutations() {
      return (this.documentState = 1), (this.version = hn.min()), this;
    }
    setReadTime(e) {
      return (this.readTime = e), this;
    }
    get hasLocalMutations() {
      return this.documentState === 1;
    }
    get hasCommittedMutations() {
      return this.documentState === 2;
    }
    get hasPendingWrites() {
      return this.hasLocalMutations || this.hasCommittedMutations;
    }
    isValidDocument() {
      return this.documentType !== 0;
    }
    isFoundDocument() {
      return this.documentType === 1;
    }
    isNoDocument() {
      return this.documentType === 2;
    }
    isUnknownDocument() {
      return this.documentType === 3;
    }
    isEqual(e) {
      return (
        e instanceof Gi &&
        this.key.isEqual(e.key) &&
        this.version.isEqual(e.version) &&
        this.documentType === e.documentType &&
        this.documentState === e.documentState &&
        this.data.isEqual(e.data)
      );
    }
    mutableCopy() {
      return new Gi(
        this.key,
        this.documentType,
        this.version,
        this.readTime,
        this.createTime,
        this.data.clone(),
        this.documentState
      );
    }
    toString() {
      return `Document(${this.key}, ${this.version}, ${JSON.stringify(
        this.data.value
      )}, {createTime: ${this.createTime}}), {documentType: ${
        this.documentType
      }}), {documentState: ${this.documentState}})`;
    }
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Em {
    constructor(e, n) {
      (this.position = e), (this.inclusive = n);
    }
  }
  function zk(t, e, n) {
    let r = 0;
    for (let a = 0; a < t.position.length; a++) {
      const o = e[a],
        u = t.position[a];
      if (
        (o.field.isKeyField()
          ? (r = Kt.comparator(Kt.fromName(u.referenceValue), n.key))
          : (r = xh(u, n.data.field(o.field))),
        o.dir === "desc" && (r *= -1),
        r !== 0)
      )
        break;
    }
    return r;
  }
  function Vk(t, e) {
    if (t === null) return e === null;
    if (
      e === null ||
      t.inclusive !== e.inclusive ||
      t.position.length !== e.position.length
    )
      return !1;
    for (let n = 0; n < t.position.length; n++)
      if (!uo(t.position[n], e.position[n])) return !1;
    return !0;
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class km {
    constructor(e, n = "asc") {
      (this.field = e), (this.dir = n);
    }
  }
  function jX(t, e) {
    return t.dir === e.dir && t.field.isEqual(e.field);
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class BO {}
  class ai extends BO {
    constructor(e, n, r) {
      super(), (this.field = e), (this.op = n), (this.value = r);
    }
    static create(e, n, r) {
      return e.isKeyField()
        ? n === "in" || n === "not-in"
          ? this.createKeyFieldInFilter(e, n, r)
          : new zX(e, n, r)
        : n === "array-contains"
        ? new BX(e, r)
        : n === "in"
        ? new HX(e, r)
        : n === "not-in"
        ? new WX(e, r)
        : n === "array-contains-any"
        ? new UX(e, r)
        : new ai(e, n, r);
    }
    static createKeyFieldInFilter(e, n, r) {
      return n === "in" ? new VX(e, r) : new $X(e, r);
    }
    matches(e) {
      const n = e.data.field(this.field);
      return this.op === "!="
        ? n !== null && this.matchesComparison(xh(n, this.value))
        : n !== null &&
            Zc(this.value) === Zc(n) &&
            this.matchesComparison(xh(n, this.value));
    }
    matchesComparison(e) {
      switch (this.op) {
        case "<":
          return e < 0;
        case "<=":
          return e <= 0;
        case "==":
          return e === 0;
        case "!=":
          return e !== 0;
        case ">":
          return e > 0;
        case ">=":
          return e >= 0;
        default:
          return on();
      }
    }
    isInequality() {
      return ["<", "<=", ">", ">=", "!=", "not-in"].indexOf(this.op) >= 0;
    }
    getFlattenedFilters() {
      return [this];
    }
    getFilters() {
      return [this];
    }
  }
  class ho extends BO {
    constructor(e, n) {
      super(), (this.filters = e), (this.op = n), (this.ue = null);
    }
    static create(e, n) {
      return new ho(e, n);
    }
    matches(e) {
      return HO(this)
        ? this.filters.find((n) => !n.matches(e)) === void 0
        : this.filters.find((n) => n.matches(e)) !== void 0;
    }
    getFlattenedFilters() {
      return (
        this.ue !== null ||
          (this.ue = this.filters.reduce(
            (e, n) => e.concat(n.getFlattenedFilters()),
            []
          )),
        this.ue
      );
    }
    getFilters() {
      return Object.assign([], this.filters);
    }
  }
  function HO(t) {
    return t.op === "and";
  }
  function WO(t) {
    return FX(t) && HO(t);
  }
  function FX(t) {
    for (const e of t.filters) if (e instanceof ho) return !1;
    return !0;
  }
  function a0(t) {
    if (t instanceof ai)
      return t.field.canonicalString() + t.op.toString() + bh(t.value);
    if (WO(t)) return t.filters.map((e) => a0(e)).join(",");
    {
      const e = t.filters.map((n) => a0(n)).join(",");
      return `${t.op}(${e})`;
    }
  }
  function UO(t, e) {
    return t instanceof ai
      ? (function (r, a) {
          return (
            a instanceof ai &&
            r.op === a.op &&
            r.field.isEqual(a.field) &&
            uo(r.value, a.value)
          );
        })(t, e)
      : t instanceof ho
      ? (function (r, a) {
          return a instanceof ho &&
            r.op === a.op &&
            r.filters.length === a.filters.length
            ? r.filters.reduce((o, u, g) => o && UO(u, a.filters[g]), !0)
            : !1;
        })(t, e)
      : void on();
  }
  function XO(t) {
    return t instanceof ai
      ? (function (n) {
          return `${n.field.canonicalString()} ${n.op} ${bh(n.value)}`;
        })(t)
      : t instanceof ho
      ? (function (n) {
          return (
            n.op.toString() + " {" + n.getFilters().map(XO).join(" ,") + "}"
          );
        })(t)
      : "Filter";
  }
  class zX extends ai {
    constructor(e, n, r) {
      super(e, n, r), (this.key = Kt.fromName(r.referenceValue));
    }
    matches(e) {
      const n = Kt.comparator(e.key, this.key);
      return this.matchesComparison(n);
    }
  }
  class VX extends ai {
    constructor(e, n) {
      super(e, "in", n), (this.keys = YO("in", n));
    }
    matches(e) {
      return this.keys.some((n) => n.isEqual(e.key));
    }
  }
  class $X extends ai {
    constructor(e, n) {
      super(e, "not-in", n), (this.keys = YO("not-in", n));
    }
    matches(e) {
      return !this.keys.some((n) => n.isEqual(e.key));
    }
  }
  function YO(t, e) {
    var n;
    return (
      ((n = e.arrayValue) === null || n === void 0 ? void 0 : n.values) || []
    ).map((r) => Kt.fromName(r.referenceValue));
  }
  class BX extends ai {
    constructor(e, n) {
      super(e, "array-contains", n);
    }
    matches(e) {
      const n = e.data.field(this.field);
      return j1(n) && kf(n.arrayValue, this.value);
    }
  }
  class HX extends ai {
    constructor(e, n) {
      super(e, "in", n);
    }
    matches(e) {
      const n = e.data.field(this.field);
      return n !== null && kf(this.value.arrayValue, n);
    }
  }
  class WX extends ai {
    constructor(e, n) {
      super(e, "not-in", n);
    }
    matches(e) {
      if (kf(this.value.arrayValue, { nullValue: "NULL_VALUE" })) return !1;
      const n = e.data.field(this.field);
      return n !== null && !kf(this.value.arrayValue, n);
    }
  }
  class UX extends ai {
    constructor(e, n) {
      super(e, "array-contains-any", n);
    }
    matches(e) {
      const n = e.data.field(this.field);
      return (
        !(!j1(n) || !n.arrayValue.values) &&
        n.arrayValue.values.some((r) => kf(this.value.arrayValue, r))
      );
    }
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class XX {
    constructor(e, n = null, r = [], a = [], o = null, u = null, g = null) {
      (this.path = e),
        (this.collectionGroup = n),
        (this.orderBy = r),
        (this.filters = a),
        (this.limit = o),
        (this.startAt = u),
        (this.endAt = g),
        (this.ce = null);
    }
  }
  function $k(t, e = null, n = [], r = [], a = null, o = null, u = null) {
    return new XX(t, e, n, r, a, o, u);
  }
  function F1(t) {
    const e = gn(t);
    if (e.ce === null) {
      let n = e.path.canonicalString();
      e.collectionGroup !== null && (n += "|cg:" + e.collectionGroup),
        (n += "|f:"),
        (n += e.filters.map((r) => a0(r)).join(",")),
        (n += "|ob:"),
        (n += e.orderBy
          .map((r) =>
            (function (o) {
              return o.field.canonicalString() + o.dir;
            })(r)
          )
          .join(",")),
        Bv(e.limit) || ((n += "|l:"), (n += e.limit)),
        e.startAt &&
          ((n += "|lb:"),
          (n += e.startAt.inclusive ? "b:" : "a:"),
          (n += e.startAt.position.map((r) => bh(r)).join(","))),
        e.endAt &&
          ((n += "|ub:"),
          (n += e.endAt.inclusive ? "a:" : "b:"),
          (n += e.endAt.position.map((r) => bh(r)).join(","))),
        (e.ce = n);
    }
    return e.ce;
  }
  function z1(t, e) {
    if (t.limit !== e.limit || t.orderBy.length !== e.orderBy.length) return !1;
    for (let n = 0; n < t.orderBy.length; n++)
      if (!jX(t.orderBy[n], e.orderBy[n])) return !1;
    if (t.filters.length !== e.filters.length) return !1;
    for (let n = 0; n < t.filters.length; n++)
      if (!UO(t.filters[n], e.filters[n])) return !1;
    return (
      t.collectionGroup === e.collectionGroup &&
      !!t.path.isEqual(e.path) &&
      !!Vk(t.startAt, e.startAt) &&
      Vk(t.endAt, e.endAt)
    );
  }
  function o0(t) {
    return (
      Kt.isDocumentKey(t.path) &&
      t.collectionGroup === null &&
      t.filters.length === 0
    );
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Hv {
    constructor(
      e,
      n = null,
      r = [],
      a = [],
      o = null,
      u = "F",
      g = null,
      x = null
    ) {
      (this.path = e),
        (this.collectionGroup = n),
        (this.explicitOrderBy = r),
        (this.filters = a),
        (this.limit = o),
        (this.limitType = u),
        (this.startAt = g),
        (this.endAt = x),
        (this.le = null),
        (this.he = null),
        (this.Pe = null),
        this.startAt,
        this.endAt;
    }
  }
  function YX(t, e, n, r, a, o, u, g) {
    return new Hv(t, e, n, r, a, o, u, g);
  }
  function GO(t) {
    return new Hv(t);
  }
  function Bk(t) {
    return (
      t.filters.length === 0 &&
      t.limit === null &&
      t.startAt == null &&
      t.endAt == null &&
      (t.explicitOrderBy.length === 0 ||
        (t.explicitOrderBy.length === 1 &&
          t.explicitOrderBy[0].field.isKeyField()))
    );
  }
  function GX(t) {
    return t.collectionGroup !== null;
  }
  function zd(t) {
    const e = gn(t);
    if (e.le === null) {
      e.le = [];
      const n = new Set();
      for (const o of e.explicitOrderBy)
        e.le.push(o), n.add(o.field.canonicalString());
      const r =
        e.explicitOrderBy.length > 0
          ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir
          : "asc";
      (function (u) {
        let g = new Di(Oi.comparator);
        return (
          u.filters.forEach((x) => {
            x.getFlattenedFilters().forEach((E) => {
              E.isInequality() && (g = g.add(E.field));
            });
          }),
          g
        );
      })(e).forEach((o) => {
        n.has(o.canonicalString()) || o.isKeyField() || e.le.push(new km(o, r));
      }),
        n.has(Oi.keyField().canonicalString()) ||
          e.le.push(new km(Oi.keyField(), r));
    }
    return e.le;
  }
  function ao(t) {
    const e = gn(t);
    return e.he || (e.he = qX(e, zd(t))), e.he;
  }
  function qX(t, e) {
    if (t.limitType === "F")
      return $k(
        t.path,
        t.collectionGroup,
        e,
        t.filters,
        t.limit,
        t.startAt,
        t.endAt
      );
    {
      e = e.map((a) => {
        const o = a.dir === "desc" ? "asc" : "desc";
        return new km(a.field, o);
      });
      const n = t.endAt ? new Em(t.endAt.position, t.endAt.inclusive) : null,
        r = t.startAt ? new Em(t.startAt.position, t.startAt.inclusive) : null;
      return $k(t.path, t.collectionGroup, e, t.filters, t.limit, n, r);
    }
  }
  function l0(t, e, n) {
    return new Hv(
      t.path,
      t.collectionGroup,
      t.explicitOrderBy.slice(),
      t.filters.slice(),
      e,
      n,
      t.startAt,
      t.endAt
    );
  }
  function Wv(t, e) {
    return z1(ao(t), ao(e)) && t.limitType === e.limitType;
  }
  function qO(t) {
    return `${F1(ao(t))}|lt:${t.limitType}`;
  }
  function Ru(t) {
    return `Query(target=${(function (n) {
      let r = n.path.canonicalString();
      return (
        n.collectionGroup !== null &&
          (r += " collectionGroup=" + n.collectionGroup),
        n.filters.length > 0 &&
          (r += `, filters: [${n.filters.map((a) => XO(a)).join(", ")}]`),
        Bv(n.limit) || (r += ", limit: " + n.limit),
        n.orderBy.length > 0 &&
          (r += `, orderBy: [${n.orderBy
            .map((a) =>
              (function (u) {
                return `${u.field.canonicalString()} (${u.dir})`;
              })(a)
            )
            .join(", ")}]`),
        n.startAt &&
          ((r += ", startAt: "),
          (r += n.startAt.inclusive ? "b:" : "a:"),
          (r += n.startAt.position.map((a) => bh(a)).join(","))),
        n.endAt &&
          ((r += ", endAt: "),
          (r += n.endAt.inclusive ? "a:" : "b:"),
          (r += n.endAt.position.map((a) => bh(a)).join(","))),
        `Target(${r})`
      );
    })(ao(t))}; limitType=${t.limitType})`;
  }
  function Uv(t, e) {
    return (
      e.isFoundDocument() &&
      (function (r, a) {
        const o = a.key.path;
        return r.collectionGroup !== null
          ? a.key.hasCollectionId(r.collectionGroup) && r.path.isPrefixOf(o)
          : Kt.isDocumentKey(r.path)
          ? r.path.isEqual(o)
          : r.path.isImmediateParentOf(o);
      })(t, e) &&
      (function (r, a) {
        for (const o of zd(r))
          if (!o.field.isKeyField() && a.data.field(o.field) === null)
            return !1;
        return !0;
      })(t, e) &&
      (function (r, a) {
        for (const o of r.filters) if (!o.matches(a)) return !1;
        return !0;
      })(t, e) &&
      (function (r, a) {
        return !(
          (r.startAt &&
            !(function (u, g, x) {
              const E = zk(u, g, x);
              return u.inclusive ? E <= 0 : E < 0;
            })(r.startAt, zd(r), a)) ||
          (r.endAt &&
            !(function (u, g, x) {
              const E = zk(u, g, x);
              return u.inclusive ? E >= 0 : E > 0;
            })(r.endAt, zd(r), a))
        );
      })(t, e)
    );
  }
  function KX(t) {
    return (
      t.collectionGroup ||
      (t.path.length % 2 == 1
        ? t.path.lastSegment()
        : t.path.get(t.path.length - 2))
    );
  }
  function KO(t) {
    return (e, n) => {
      let r = !1;
      for (const a of zd(t)) {
        const o = QX(a, e, n);
        if (o !== 0) return o;
        r = r || a.field.isKeyField();
      }
      return 0;
    };
  }
  function QX(t, e, n) {
    const r = t.field.isKeyField()
      ? Kt.comparator(e.key, n.key)
      : (function (o, u, g) {
          const x = u.data.field(o),
            E = g.data.field(o);
          return x !== null && E !== null ? xh(x, E) : on();
        })(t.field, e, n);
    switch (t.dir) {
      case "asc":
        return r;
      case "desc":
        return -1 * r;
      default:
        return on();
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Fh {
    constructor(e, n) {
      (this.mapKeyFn = e),
        (this.equalsFn = n),
        (this.inner = {}),
        (this.innerSize = 0);
    }
    get(e) {
      const n = this.mapKeyFn(e),
        r = this.inner[n];
      if (r !== void 0) {
        for (const [a, o] of r) if (this.equalsFn(a, e)) return o;
      }
    }
    has(e) {
      return this.get(e) !== void 0;
    }
    set(e, n) {
      const r = this.mapKeyFn(e),
        a = this.inner[r];
      if (a === void 0)
        return (this.inner[r] = [[e, n]]), void this.innerSize++;
      for (let o = 0; o < a.length; o++)
        if (this.equalsFn(a[o][0], e)) return void (a[o] = [e, n]);
      a.push([e, n]), this.innerSize++;
    }
    delete(e) {
      const n = this.mapKeyFn(e),
        r = this.inner[n];
      if (r === void 0) return !1;
      for (let a = 0; a < r.length; a++)
        if (this.equalsFn(r[a][0], e))
          return (
            r.length === 1 ? delete this.inner[n] : r.splice(a, 1),
            this.innerSize--,
            !0
          );
      return !1;
    }
    forEach(e) {
      fu(this.inner, (n, r) => {
        for (const [a, o] of r) e(a, o);
      });
    }
    isEmpty() {
      return zO(this.inner);
    }
    size() {
      return this.innerSize;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const ZX = new Ir(Kt.comparator);
  function Go() {
    return ZX;
  }
  const QO = new Ir(Kt.comparator);
  function Sd(...t) {
    let e = QO;
    for (const n of t) e = e.insert(n.key, n);
    return e;
  }
  function ZO(t) {
    let e = QO;
    return t.forEach((n, r) => (e = e.insert(n, r.overlayedDocument))), e;
  }
  function Oc() {
    return Vd();
  }
  function JO() {
    return Vd();
  }
  function Vd() {
    return new Fh(
      (t) => t.toString(),
      (t, e) => t.isEqual(e)
    );
  }
  const JX = new Ir(Kt.comparator),
    e6 = new Di(Kt.comparator);
  function Cn(...t) {
    let e = e6;
    for (const n of t) e = e.add(n);
    return e;
  }
  const t6 = new Di(Xn);
  function n6() {
    return t6;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function eN(t, e) {
    if (t.useProto3Json) {
      if (isNaN(e)) return { doubleValue: "NaN" };
      if (e === 1 / 0) return { doubleValue: "Infinity" };
      if (e === -1 / 0) return { doubleValue: "-Infinity" };
    }
    return { doubleValue: Sm(e) ? "-0" : e };
  }
  function tN(t) {
    return { integerValue: "" + t };
  }
  function r6(t, e) {
    return NX(e) ? tN(e) : eN(t, e);
  }
  /**
   * @license
   * Copyright 2018 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Xv {
    constructor() {
      this._ = void 0;
    }
  }
  function i6(t, e, n) {
    return t instanceof Af
      ? (function (a, o) {
          const u = {
            fields: {
              __type__: { stringValue: "server_timestamp" },
              __local_write_time__: {
                timestampValue: { seconds: a.seconds, nanos: a.nanoseconds },
              },
            },
          };
          return (
            o && D1(o) && (o = M1(o)),
            o && (u.fields.__previous_value__ = o),
            { mapValue: u }
          );
        })(n, e)
      : t instanceof Cf
      ? rN(t, e)
      : t instanceof Tf
      ? iN(t, e)
      : (function (a, o) {
          const u = nN(a, o),
            g = Hk(u) + Hk(a.Ie);
          return s0(u) && s0(a.Ie) ? tN(g) : eN(a.serializer, g);
        })(t, e);
  }
  function s6(t, e, n) {
    return t instanceof Cf ? rN(t, e) : t instanceof Tf ? iN(t, e) : n;
  }
  function nN(t, e) {
    return t instanceof Am
      ? (function (r) {
          return (
            s0(r) ||
            (function (o) {
              return !!o && "doubleValue" in o;
            })(r)
          );
        })(e)
        ? e
        : { integerValue: 0 }
      : null;
  }
  class Af extends Xv {}
  class Cf extends Xv {
    constructor(e) {
      super(), (this.elements = e);
    }
  }
  function rN(t, e) {
    const n = sN(e);
    for (const r of t.elements) n.some((a) => uo(a, r)) || n.push(r);
    return { arrayValue: { values: n } };
  }
  class Tf extends Xv {
    constructor(e) {
      super(), (this.elements = e);
    }
  }
  function iN(t, e) {
    let n = sN(e);
    for (const r of t.elements) n = n.filter((a) => !uo(a, r));
    return { arrayValue: { values: n } };
  }
  class Am extends Xv {
    constructor(e, n) {
      super(), (this.serializer = e), (this.Ie = n);
    }
  }
  function Hk(t) {
    return qr(t.integerValue || t.doubleValue);
  }
  function sN(t) {
    return j1(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class a6 {
    constructor(e, n) {
      (this.field = e), (this.transform = n);
    }
  }
  function o6(t, e) {
    return (
      t.field.isEqual(e.field) &&
      (function (r, a) {
        return (r instanceof Cf && a instanceof Cf) ||
          (r instanceof Tf && a instanceof Tf)
          ? yh(r.elements, a.elements, uo)
          : r instanceof Am && a instanceof Am
          ? uo(r.Ie, a.Ie)
          : r instanceof Af && a instanceof Af;
      })(t.transform, e.transform)
    );
  }
  class l6 {
    constructor(e, n) {
      (this.version = e), (this.transformResults = n);
    }
  }
  class Ca {
    constructor(e, n) {
      (this.updateTime = e), (this.exists = n);
    }
    static none() {
      return new Ca();
    }
    static exists(e) {
      return new Ca(void 0, e);
    }
    static updateTime(e) {
      return new Ca(e);
    }
    get isNone() {
      return this.updateTime === void 0 && this.exists === void 0;
    }
    isEqual(e) {
      return (
        this.exists === e.exists &&
        (this.updateTime
          ? !!e.updateTime && this.updateTime.isEqual(e.updateTime)
          : !e.updateTime)
      );
    }
  }
  function Cg(t, e) {
    return t.updateTime !== void 0
      ? e.isFoundDocument() && e.version.isEqual(t.updateTime)
      : t.exists === void 0 || t.exists === e.isFoundDocument();
  }
  class Yv {}
  function aN(t, e) {
    if (!t.hasLocalMutations || (e && e.fields.length === 0)) return null;
    if (e === null)
      return t.isNoDocument()
        ? new V1(t.key, Ca.none())
        : new np(t.key, t.data, Ca.none());
    {
      const n = t.data,
        r = ks.empty();
      let a = new Di(Oi.comparator);
      for (let o of e.fields)
        if (!a.has(o)) {
          let u = n.field(o);
          u === null && o.length > 1 && ((o = o.popLast()), (u = n.field(o))),
            u === null ? r.delete(o) : r.set(o, u),
            (a = a.add(o));
        }
      return new oc(t.key, r, new $s(a.toArray()), Ca.none());
    }
  }
  function c6(t, e, n) {
    t instanceof np
      ? (function (a, o, u) {
          const g = a.value.clone(),
            x = Uk(a.fieldTransforms, o, u.transformResults);
          g.setAll(x),
            o.convertToFoundDocument(u.version, g).setHasCommittedMutations();
        })(t, e, n)
      : t instanceof oc
      ? (function (a, o, u) {
          if (!Cg(a.precondition, o))
            return void o.convertToUnknownDocument(u.version);
          const g = Uk(a.fieldTransforms, o, u.transformResults),
            x = o.data;
          x.setAll(oN(a)),
            x.setAll(g),
            o.convertToFoundDocument(u.version, x).setHasCommittedMutations();
        })(t, e, n)
      : (function (a, o, u) {
          o.convertToNoDocument(u.version).setHasCommittedMutations();
        })(0, e, n);
  }
  function $d(t, e, n, r) {
    return t instanceof np
      ? (function (o, u, g, x) {
          if (!Cg(o.precondition, u)) return g;
          const E = o.value.clone(),
            L = Xk(o.fieldTransforms, x, u);
          return (
            E.setAll(L),
            u.convertToFoundDocument(u.version, E).setHasLocalMutations(),
            null
          );
        })(t, e, n, r)
      : t instanceof oc
      ? (function (o, u, g, x) {
          if (!Cg(o.precondition, u)) return g;
          const E = Xk(o.fieldTransforms, x, u),
            L = u.data;
          return (
            L.setAll(oN(o)),
            L.setAll(E),
            u.convertToFoundDocument(u.version, L).setHasLocalMutations(),
            g === null
              ? null
              : g
                  .unionWith(o.fieldMask.fields)
                  .unionWith(o.fieldTransforms.map((z) => z.field))
          );
        })(t, e, n, r)
      : (function (o, u, g) {
          return Cg(o.precondition, u)
            ? (u.convertToNoDocument(u.version).setHasLocalMutations(), null)
            : g;
        })(t, e, n);
  }
  function u6(t, e) {
    let n = null;
    for (const r of t.fieldTransforms) {
      const a = e.data.field(r.field),
        o = nN(r.transform, a || null);
      o != null && (n === null && (n = ks.empty()), n.set(r.field, o));
    }
    return n || null;
  }
  function Wk(t, e) {
    return (
      t.type === e.type &&
      !!t.key.isEqual(e.key) &&
      !!t.precondition.isEqual(e.precondition) &&
      !!(function (r, a) {
        return (
          (r === void 0 && a === void 0) ||
          (!(!r || !a) && yh(r, a, (o, u) => o6(o, u)))
        );
      })(t.fieldTransforms, e.fieldTransforms) &&
      (t.type === 0
        ? t.value.isEqual(e.value)
        : t.type !== 1 ||
          (t.data.isEqual(e.data) && t.fieldMask.isEqual(e.fieldMask)))
    );
  }
  class np extends Yv {
    constructor(e, n, r, a = []) {
      super(),
        (this.key = e),
        (this.value = n),
        (this.precondition = r),
        (this.fieldTransforms = a),
        (this.type = 0);
    }
    getFieldMask() {
      return null;
    }
  }
  class oc extends Yv {
    constructor(e, n, r, a, o = []) {
      super(),
        (this.key = e),
        (this.data = n),
        (this.fieldMask = r),
        (this.precondition = a),
        (this.fieldTransforms = o),
        (this.type = 1);
    }
    getFieldMask() {
      return this.fieldMask;
    }
  }
  function oN(t) {
    const e = new Map();
    return (
      t.fieldMask.fields.forEach((n) => {
        if (!n.isEmpty()) {
          const r = t.data.field(n);
          e.set(n, r);
        }
      }),
      e
    );
  }
  function Uk(t, e, n) {
    const r = new Map();
    ur(t.length === n.length);
    for (let a = 0; a < n.length; a++) {
      const o = t[a],
        u = o.transform,
        g = e.data.field(o.field);
      r.set(o.field, s6(u, g, n[a]));
    }
    return r;
  }
  function Xk(t, e, n) {
    const r = new Map();
    for (const a of t) {
      const o = a.transform,
        u = n.data.field(a.field);
      r.set(a.field, i6(o, u, e));
    }
    return r;
  }
  class V1 extends Yv {
    constructor(e, n) {
      super(),
        (this.key = e),
        (this.precondition = n),
        (this.type = 2),
        (this.fieldTransforms = []);
    }
    getFieldMask() {
      return null;
    }
  }
  class h6 extends Yv {
    constructor(e, n) {
      super(),
        (this.key = e),
        (this.precondition = n),
        (this.type = 3),
        (this.fieldTransforms = []);
    }
    getFieldMask() {
      return null;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class d6 {
    constructor(e, n, r, a) {
      (this.batchId = e),
        (this.localWriteTime = n),
        (this.baseMutations = r),
        (this.mutations = a);
    }
    applyToRemoteDocument(e, n) {
      const r = n.mutationResults;
      for (let a = 0; a < this.mutations.length; a++) {
        const o = this.mutations[a];
        o.key.isEqual(e.key) && c6(o, e, r[a]);
      }
    }
    applyToLocalView(e, n) {
      for (const r of this.baseMutations)
        r.key.isEqual(e.key) && (n = $d(r, e, n, this.localWriteTime));
      for (const r of this.mutations)
        r.key.isEqual(e.key) && (n = $d(r, e, n, this.localWriteTime));
      return n;
    }
    applyToLocalDocumentSet(e, n) {
      const r = JO();
      return (
        this.mutations.forEach((a) => {
          const o = e.get(a.key),
            u = o.overlayedDocument;
          let g = this.applyToLocalView(u, o.mutatedFields);
          g = n.has(a.key) ? null : g;
          const x = aN(u, g);
          x !== null && r.set(a.key, x),
            u.isValidDocument() || u.convertToNoDocument(hn.min());
        }),
        r
      );
    }
    keys() {
      return this.mutations.reduce((e, n) => e.add(n.key), Cn());
    }
    isEqual(e) {
      return (
        this.batchId === e.batchId &&
        yh(this.mutations, e.mutations, (n, r) => Wk(n, r)) &&
        yh(this.baseMutations, e.baseMutations, (n, r) => Wk(n, r))
      );
    }
  }
  class $1 {
    constructor(e, n, r, a) {
      (this.batch = e),
        (this.commitVersion = n),
        (this.mutationResults = r),
        (this.docVersions = a);
    }
    static from(e, n, r) {
      ur(e.mutations.length === r.length);
      let a = (function () {
        return JX;
      })();
      const o = e.mutations;
      for (let u = 0; u < o.length; u++) a = a.insert(o[u].key, r[u].version);
      return new $1(e, n, r, a);
    }
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class f6 {
    constructor(e, n) {
      (this.largestBatchId = e), (this.mutation = n);
    }
    getKey() {
      return this.mutation.key;
    }
    isEqual(e) {
      return e !== null && this.mutation === e.mutation;
    }
    toString() {
      return `Overlay{
      largestBatchId: ${this.largestBatchId},
      mutation: ${this.mutation.toString()}
    }`;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class p6 {
    constructor(e, n) {
      (this.count = e), (this.unchangedNames = n);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ var Yr, Nn;
  function g6(t) {
    switch (t) {
      default:
        return on();
      case rt.CANCELLED:
      case rt.UNKNOWN:
      case rt.DEADLINE_EXCEEDED:
      case rt.RESOURCE_EXHAUSTED:
      case rt.INTERNAL:
      case rt.UNAVAILABLE:
      case rt.UNAUTHENTICATED:
        return !1;
      case rt.INVALID_ARGUMENT:
      case rt.NOT_FOUND:
      case rt.ALREADY_EXISTS:
      case rt.PERMISSION_DENIED:
      case rt.FAILED_PRECONDITION:
      case rt.ABORTED:
      case rt.OUT_OF_RANGE:
      case rt.UNIMPLEMENTED:
      case rt.DATA_LOSS:
        return !0;
    }
  }
  function lN(t) {
    if (t === void 0) return Yo("GRPC error has no .code"), rt.UNKNOWN;
    switch (t) {
      case Yr.OK:
        return rt.OK;
      case Yr.CANCELLED:
        return rt.CANCELLED;
      case Yr.UNKNOWN:
        return rt.UNKNOWN;
      case Yr.DEADLINE_EXCEEDED:
        return rt.DEADLINE_EXCEEDED;
      case Yr.RESOURCE_EXHAUSTED:
        return rt.RESOURCE_EXHAUSTED;
      case Yr.INTERNAL:
        return rt.INTERNAL;
      case Yr.UNAVAILABLE:
        return rt.UNAVAILABLE;
      case Yr.UNAUTHENTICATED:
        return rt.UNAUTHENTICATED;
      case Yr.INVALID_ARGUMENT:
        return rt.INVALID_ARGUMENT;
      case Yr.NOT_FOUND:
        return rt.NOT_FOUND;
      case Yr.ALREADY_EXISTS:
        return rt.ALREADY_EXISTS;
      case Yr.PERMISSION_DENIED:
        return rt.PERMISSION_DENIED;
      case Yr.FAILED_PRECONDITION:
        return rt.FAILED_PRECONDITION;
      case Yr.ABORTED:
        return rt.ABORTED;
      case Yr.OUT_OF_RANGE:
        return rt.OUT_OF_RANGE;
      case Yr.UNIMPLEMENTED:
        return rt.UNIMPLEMENTED;
      case Yr.DATA_LOSS:
        return rt.DATA_LOSS;
      default:
        return on();
    }
  }
  ((Nn = Yr || (Yr = {}))[(Nn.OK = 0)] = "OK"),
    (Nn[(Nn.CANCELLED = 1)] = "CANCELLED"),
    (Nn[(Nn.UNKNOWN = 2)] = "UNKNOWN"),
    (Nn[(Nn.INVALID_ARGUMENT = 3)] = "INVALID_ARGUMENT"),
    (Nn[(Nn.DEADLINE_EXCEEDED = 4)] = "DEADLINE_EXCEEDED"),
    (Nn[(Nn.NOT_FOUND = 5)] = "NOT_FOUND"),
    (Nn[(Nn.ALREADY_EXISTS = 6)] = "ALREADY_EXISTS"),
    (Nn[(Nn.PERMISSION_DENIED = 7)] = "PERMISSION_DENIED"),
    (Nn[(Nn.UNAUTHENTICATED = 16)] = "UNAUTHENTICATED"),
    (Nn[(Nn.RESOURCE_EXHAUSTED = 8)] = "RESOURCE_EXHAUSTED"),
    (Nn[(Nn.FAILED_PRECONDITION = 9)] = "FAILED_PRECONDITION"),
    (Nn[(Nn.ABORTED = 10)] = "ABORTED"),
    (Nn[(Nn.OUT_OF_RANGE = 11)] = "OUT_OF_RANGE"),
    (Nn[(Nn.UNIMPLEMENTED = 12)] = "UNIMPLEMENTED"),
    (Nn[(Nn.INTERNAL = 13)] = "INTERNAL"),
    (Nn[(Nn.UNAVAILABLE = 14)] = "UNAVAILABLE"),
    (Nn[(Nn.DATA_LOSS = 15)] = "DATA_LOSS");
  /**
   * @license
   * Copyright 2023 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function m6() {
    return new TextEncoder();
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const v6 = new ih([4294967295, 4294967295], 0);
  function Yk(t) {
    const e = m6().encode(t),
      n = new yX();
    return n.update(e), new Uint8Array(n.digest());
  }
  function Gk(t) {
    const e = new DataView(t.buffer),
      n = e.getUint32(0, !0),
      r = e.getUint32(4, !0),
      a = e.getUint32(8, !0),
      o = e.getUint32(12, !0);
    return [new ih([n, r], 0), new ih([a, o], 0)];
  }
  class B1 {
    constructor(e, n, r) {
      if (
        ((this.bitmap = e),
        (this.padding = n),
        (this.hashCount = r),
        n < 0 || n >= 8)
      )
        throw new Ed(`Invalid padding: ${n}`);
      if (r < 0) throw new Ed(`Invalid hash count: ${r}`);
      if (e.length > 0 && this.hashCount === 0)
        throw new Ed(`Invalid hash count: ${r}`);
      if (e.length === 0 && n !== 0)
        throw new Ed(`Invalid padding when bitmap length is 0: ${n}`);
      (this.Te = 8 * e.length - n), (this.Ee = ih.fromNumber(this.Te));
    }
    de(e, n, r) {
      let a = e.add(n.multiply(ih.fromNumber(r)));
      return (
        a.compare(v6) === 1 && (a = new ih([a.getBits(0), a.getBits(1)], 0)),
        a.modulo(this.Ee).toNumber()
      );
    }
    Ae(e) {
      return (this.bitmap[Math.floor(e / 8)] & (1 << e % 8)) != 0;
    }
    mightContain(e) {
      if (this.Te === 0) return !1;
      const n = Yk(e),
        [r, a] = Gk(n);
      for (let o = 0; o < this.hashCount; o++) {
        const u = this.de(r, a, o);
        if (!this.Ae(u)) return !1;
      }
      return !0;
    }
    static create(e, n, r) {
      const a = e % 8 == 0 ? 0 : 8 - (e % 8),
        o = new Uint8Array(Math.ceil(e / 8)),
        u = new B1(o, a, n);
      return r.forEach((g) => u.insert(g)), u;
    }
    insert(e) {
      if (this.Te === 0) return;
      const n = Yk(e),
        [r, a] = Gk(n);
      for (let o = 0; o < this.hashCount; o++) {
        const u = this.de(r, a, o);
        this.Re(u);
      }
    }
    Re(e) {
      const n = Math.floor(e / 8),
        r = e % 8;
      this.bitmap[n] |= 1 << r;
    }
  }
  class Ed extends Error {
    constructor() {
      super(...arguments), (this.name = "BloomFilterError");
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Gv {
    constructor(e, n, r, a, o) {
      (this.snapshotVersion = e),
        (this.targetChanges = n),
        (this.targetMismatches = r),
        (this.documentUpdates = a),
        (this.resolvedLimboDocuments = o);
    }
    static createSynthesizedRemoteEventForCurrentChange(e, n, r) {
      const a = new Map();
      return (
        a.set(e, rp.createSynthesizedTargetChangeForCurrentChange(e, n, r)),
        new Gv(hn.min(), a, new Ir(Xn), Go(), Cn())
      );
    }
  }
  class rp {
    constructor(e, n, r, a, o) {
      (this.resumeToken = e),
        (this.current = n),
        (this.addedDocuments = r),
        (this.modifiedDocuments = a),
        (this.removedDocuments = o);
    }
    static createSynthesizedTargetChangeForCurrentChange(e, n, r) {
      return new rp(r, n, Cn(), Cn(), Cn());
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Tg {
    constructor(e, n, r, a) {
      (this.Ve = e), (this.removedTargetIds = n), (this.key = r), (this.me = a);
    }
  }
  class cN {
    constructor(e, n) {
      (this.targetId = e), (this.fe = n);
    }
  }
  class uN {
    constructor(e, n, r = Ji.EMPTY_BYTE_STRING, a = null) {
      (this.state = e),
        (this.targetIds = n),
        (this.resumeToken = r),
        (this.cause = a);
    }
  }
  class qk {
    constructor() {
      (this.ge = 0),
        (this.pe = Qk()),
        (this.ye = Ji.EMPTY_BYTE_STRING),
        (this.we = !1),
        (this.Se = !0);
    }
    get current() {
      return this.we;
    }
    get resumeToken() {
      return this.ye;
    }
    get be() {
      return this.ge !== 0;
    }
    get De() {
      return this.Se;
    }
    Ce(e) {
      e.approximateByteSize() > 0 && ((this.Se = !0), (this.ye = e));
    }
    ve() {
      let e = Cn(),
        n = Cn(),
        r = Cn();
      return (
        this.pe.forEach((a, o) => {
          switch (o) {
            case 0:
              e = e.add(a);
              break;
            case 2:
              n = n.add(a);
              break;
            case 1:
              r = r.add(a);
              break;
            default:
              on();
          }
        }),
        new rp(this.ye, this.we, e, n, r)
      );
    }
    Fe() {
      (this.Se = !1), (this.pe = Qk());
    }
    Me(e, n) {
      (this.Se = !0), (this.pe = this.pe.insert(e, n));
    }
    xe(e) {
      (this.Se = !0), (this.pe = this.pe.remove(e));
    }
    Oe() {
      this.ge += 1;
    }
    Ne() {
      (this.ge -= 1), ur(this.ge >= 0);
    }
    Be() {
      (this.Se = !0), (this.we = !0);
    }
  }
  class y6 {
    constructor(e) {
      (this.Le = e),
        (this.ke = new Map()),
        (this.qe = Go()),
        (this.Qe = Kk()),
        (this.Ke = new Ir(Xn));
    }
    $e(e) {
      for (const n of e.Ve)
        e.me && e.me.isFoundDocument()
          ? this.Ue(n, e.me)
          : this.We(n, e.key, e.me);
      for (const n of e.removedTargetIds) this.We(n, e.key, e.me);
    }
    Ge(e) {
      this.forEachTarget(e, (n) => {
        const r = this.ze(n);
        switch (e.state) {
          case 0:
            this.je(n) && r.Ce(e.resumeToken);
            break;
          case 1:
            r.Ne(), r.be || r.Fe(), r.Ce(e.resumeToken);
            break;
          case 2:
            r.Ne(), r.be || this.removeTarget(n);
            break;
          case 3:
            this.je(n) && (r.Be(), r.Ce(e.resumeToken));
            break;
          case 4:
            this.je(n) && (this.He(n), r.Ce(e.resumeToken));
            break;
          default:
            on();
        }
      });
    }
    forEachTarget(e, n) {
      e.targetIds.length > 0
        ? e.targetIds.forEach(n)
        : this.ke.forEach((r, a) => {
            this.je(a) && n(a);
          });
    }
    Je(e) {
      const n = e.targetId,
        r = e.fe.count,
        a = this.Ye(n);
      if (a) {
        const o = a.target;
        if (o0(o))
          if (r === 0) {
            const u = new Kt(o.path);
            this.We(n, u, Gi.newNoDocument(u, hn.min()));
          } else ur(r === 1);
        else {
          const u = this.Ze(n);
          if (u !== r) {
            const g = this.Xe(e),
              x = g ? this.et(g, e, u) : 1;
            if (x !== 0) {
              this.He(n);
              const E =
                x === 2
                  ? "TargetPurposeExistenceFilterMismatchBloom"
                  : "TargetPurposeExistenceFilterMismatch";
              this.Ke = this.Ke.insert(n, E);
            }
          }
        }
      }
    }
    Xe(e) {
      const n = e.fe.unchangedNames;
      if (!n || !n.bits) return null;
      const {
        bits: { bitmap: r = "", padding: a = 0 },
        hashCount: o = 0,
      } = n;
      let u, g;
      try {
        u = Qc(r).toUint8Array();
      } catch (x) {
        if (x instanceof VO)
          return (
            vh(
              "Decoding the base64 bloom filter in existence filter failed (" +
                x.message +
                "); ignoring the bloom filter and falling back to full re-query."
            ),
            null
          );
        throw x;
      }
      try {
        g = new B1(u, a, o);
      } catch (x) {
        return (
          vh(
            x instanceof Ed
              ? "BloomFilter error: "
              : "Applying bloom filter failed: ",
            x
          ),
          null
        );
      }
      return g.Te === 0 ? null : g;
    }
    et(e, n, r) {
      return n.fe.count === r - this.rt(e, n.targetId) ? 0 : 2;
    }
    rt(e, n) {
      const r = this.Le.getRemoteKeysForTarget(n);
      let a = 0;
      return (
        r.forEach((o) => {
          const u = this.Le.nt(),
            g = `projects/${u.projectId}/databases/${
              u.database
            }/documents/${o.path.canonicalString()}`;
          e.mightContain(g) || (this.We(n, o, null), a++);
        }),
        a
      );
    }
    it(e) {
      const n = new Map();
      this.ke.forEach((o, u) => {
        const g = this.Ye(u);
        if (g) {
          if (o.current && o0(g.target)) {
            const x = new Kt(g.target.path);
            this.qe.get(x) !== null ||
              this.st(u, x) ||
              this.We(u, x, Gi.newNoDocument(x, e));
          }
          o.De && (n.set(u, o.ve()), o.Fe());
        }
      });
      let r = Cn();
      this.Qe.forEach((o, u) => {
        let g = !0;
        u.forEachWhile((x) => {
          const E = this.Ye(x);
          return (
            !E || E.purpose === "TargetPurposeLimboResolution" || ((g = !1), !1)
          );
        }),
          g && (r = r.add(o));
      }),
        this.qe.forEach((o, u) => u.setReadTime(e));
      const a = new Gv(e, n, this.Ke, this.qe, r);
      return (this.qe = Go()), (this.Qe = Kk()), (this.Ke = new Ir(Xn)), a;
    }
    Ue(e, n) {
      if (!this.je(e)) return;
      const r = this.st(e, n.key) ? 2 : 0;
      this.ze(e).Me(n.key, r),
        (this.qe = this.qe.insert(n.key, n)),
        (this.Qe = this.Qe.insert(n.key, this.ot(n.key).add(e)));
    }
    We(e, n, r) {
      if (!this.je(e)) return;
      const a = this.ze(e);
      this.st(e, n) ? a.Me(n, 1) : a.xe(n),
        (this.Qe = this.Qe.insert(n, this.ot(n).delete(e))),
        r && (this.qe = this.qe.insert(n, r));
    }
    removeTarget(e) {
      this.ke.delete(e);
    }
    Ze(e) {
      const n = this.ze(e).ve();
      return (
        this.Le.getRemoteKeysForTarget(e).size +
        n.addedDocuments.size -
        n.removedDocuments.size
      );
    }
    Oe(e) {
      this.ze(e).Oe();
    }
    ze(e) {
      let n = this.ke.get(e);
      return n || ((n = new qk()), this.ke.set(e, n)), n;
    }
    ot(e) {
      let n = this.Qe.get(e);
      return n || ((n = new Di(Xn)), (this.Qe = this.Qe.insert(e, n))), n;
    }
    je(e) {
      const n = this.Ye(e) !== null;
      return n || Ft("WatchChangeAggregator", "Detected inactive target", e), n;
    }
    Ye(e) {
      const n = this.ke.get(e);
      return n && n.be ? null : this.Le._t(e);
    }
    He(e) {
      this.ke.set(e, new qk()),
        this.Le.getRemoteKeysForTarget(e).forEach((n) => {
          this.We(e, n, null);
        });
    }
    st(e, n) {
      return this.Le.getRemoteKeysForTarget(e).has(n);
    }
  }
  function Kk() {
    return new Ir(Kt.comparator);
  }
  function Qk() {
    return new Ir(Kt.comparator);
  }
  const x6 = { asc: "ASCENDING", desc: "DESCENDING" },
    b6 = {
      "<": "LESS_THAN",
      "<=": "LESS_THAN_OR_EQUAL",
      ">": "GREATER_THAN",
      ">=": "GREATER_THAN_OR_EQUAL",
      "==": "EQUAL",
      "!=": "NOT_EQUAL",
      "array-contains": "ARRAY_CONTAINS",
      in: "IN",
      "not-in": "NOT_IN",
      "array-contains-any": "ARRAY_CONTAINS_ANY",
    },
    w6 = { and: "AND", or: "OR" };
  class _6 {
    constructor(e, n) {
      (this.databaseId = e), (this.useProto3Json = n);
    }
  }
  function c0(t, e) {
    return t.useProto3Json || Bv(e) ? e : { value: e };
  }
  function Cm(t, e) {
    return t.useProto3Json
      ? `${new Date(1e3 * e.seconds)
          .toISOString()
          .replace(/\.\d*/, "")
          .replace("Z", "")}.${("000000000" + e.nanoseconds).slice(-9)}Z`
      : { seconds: "" + e.seconds, nanos: e.nanoseconds };
  }
  function hN(t, e) {
    return t.useProto3Json ? e.toBase64() : e.toUint8Array();
  }
  function S6(t, e) {
    return Cm(t, e.toTimestamp());
  }
  function oo(t) {
    return (
      ur(!!t),
      hn.fromTimestamp(
        (function (n) {
          const r = Kl(n);
          return new li(r.seconds, r.nanos);
        })(t)
      )
    );
  }
  function H1(t, e) {
    return (function (r) {
      return new wr(["projects", r.projectId, "databases", r.database]);
    })(t)
      .child("documents")
      .child(e)
      .canonicalString();
  }
  function dN(t) {
    const e = wr.fromString(t);
    return ur(mN(e)), e;
  }
  function u0(t, e) {
    return H1(t.databaseId, e.path);
  }
  function bx(t, e) {
    const n = dN(e);
    if (n.get(1) !== t.databaseId.projectId)
      throw new Yt(
        rt.INVALID_ARGUMENT,
        "Tried to deserialize key from different project: " +
          n.get(1) +
          " vs " +
          t.databaseId.projectId
      );
    if (n.get(3) !== t.databaseId.database)
      throw new Yt(
        rt.INVALID_ARGUMENT,
        "Tried to deserialize key from different database: " +
          n.get(3) +
          " vs " +
          t.databaseId.database
      );
    return new Kt(fN(n));
  }
  function h0(t, e) {
    return H1(t.databaseId, e);
  }
  function E6(t) {
    const e = dN(t);
    return e.length === 4 ? wr.emptyPath() : fN(e);
  }
  function d0(t) {
    return new wr([
      "projects",
      t.databaseId.projectId,
      "databases",
      t.databaseId.database,
    ]).canonicalString();
  }
  function fN(t) {
    return ur(t.length > 4 && t.get(4) === "documents"), t.popFirst(5);
  }
  function Zk(t, e, n) {
    return { name: u0(t, e), fields: n.value.mapValue.fields };
  }
  function k6(t, e) {
    let n;
    if ("targetChange" in e) {
      e.targetChange;
      const r = (function (E) {
          return E === "NO_CHANGE"
            ? 0
            : E === "ADD"
            ? 1
            : E === "REMOVE"
            ? 2
            : E === "CURRENT"
            ? 3
            : E === "RESET"
            ? 4
            : on();
        })(e.targetChange.targetChangeType || "NO_CHANGE"),
        a = e.targetChange.targetIds || [],
        o = (function (E, L) {
          return E.useProto3Json
            ? (ur(L === void 0 || typeof L == "string"),
              Ji.fromBase64String(L || ""))
            : (ur(L === void 0 || L instanceof Uint8Array),
              Ji.fromUint8Array(L || new Uint8Array()));
        })(t, e.targetChange.resumeToken),
        u = e.targetChange.cause,
        g =
          u &&
          (function (E) {
            const L = E.code === void 0 ? rt.UNKNOWN : lN(E.code);
            return new Yt(L, E.message || "");
          })(u);
      n = new uN(r, a, o, g || null);
    } else if ("documentChange" in e) {
      e.documentChange;
      const r = e.documentChange;
      r.document, r.document.name, r.document.updateTime;
      const a = bx(t, r.document.name),
        o = oo(r.document.updateTime),
        u = r.document.createTime ? oo(r.document.createTime) : hn.min(),
        g = new ks({ mapValue: { fields: r.document.fields } }),
        x = Gi.newFoundDocument(a, o, u, g),
        E = r.targetIds || [],
        L = r.removedTargetIds || [];
      n = new Tg(E, L, x.key, x);
    } else if ("documentDelete" in e) {
      e.documentDelete;
      const r = e.documentDelete;
      r.document;
      const a = bx(t, r.document),
        o = r.readTime ? oo(r.readTime) : hn.min(),
        u = Gi.newNoDocument(a, o),
        g = r.removedTargetIds || [];
      n = new Tg([], g, u.key, u);
    } else if ("documentRemove" in e) {
      e.documentRemove;
      const r = e.documentRemove;
      r.document;
      const a = bx(t, r.document),
        o = r.removedTargetIds || [];
      n = new Tg([], o, a, null);
    } else {
      if (!("filter" in e)) return on();
      {
        e.filter;
        const r = e.filter;
        r.targetId;
        const { count: a = 0, unchangedNames: o } = r,
          u = new p6(a, o),
          g = r.targetId;
        n = new cN(g, u);
      }
    }
    return n;
  }
  function A6(t, e) {
    let n;
    if (e instanceof np) n = { update: Zk(t, e.key, e.value) };
    else if (e instanceof V1) n = { delete: u0(t, e.key) };
    else if (e instanceof oc)
      n = { update: Zk(t, e.key, e.data), updateMask: D6(e.fieldMask) };
    else {
      if (!(e instanceof h6)) return on();
      n = { verify: u0(t, e.key) };
    }
    return (
      e.fieldTransforms.length > 0 &&
        (n.updateTransforms = e.fieldTransforms.map((r) =>
          (function (o, u) {
            const g = u.transform;
            if (g instanceof Af)
              return {
                fieldPath: u.field.canonicalString(),
                setToServerValue: "REQUEST_TIME",
              };
            if (g instanceof Cf)
              return {
                fieldPath: u.field.canonicalString(),
                appendMissingElements: { values: g.elements },
              };
            if (g instanceof Tf)
              return {
                fieldPath: u.field.canonicalString(),
                removeAllFromArray: { values: g.elements },
              };
            if (g instanceof Am)
              return { fieldPath: u.field.canonicalString(), increment: g.Ie };
            throw on();
          })(0, r)
        )),
      e.precondition.isNone ||
        (n.currentDocument = (function (a, o) {
          return o.updateTime !== void 0
            ? { updateTime: S6(a, o.updateTime) }
            : o.exists !== void 0
            ? { exists: o.exists }
            : on();
        })(t, e.precondition)),
      n
    );
  }
  function C6(t, e) {
    return t && t.length > 0
      ? (ur(e !== void 0),
        t.map((n) =>
          (function (a, o) {
            let u = a.updateTime ? oo(a.updateTime) : oo(o);
            return (
              u.isEqual(hn.min()) && (u = oo(o)),
              new l6(u, a.transformResults || [])
            );
          })(n, e)
        ))
      : [];
  }
  function T6(t, e) {
    return { documents: [h0(t, e.path)] };
  }
  function I6(t, e) {
    const n = { structuredQuery: {} },
      r = e.path;
    e.collectionGroup !== null
      ? ((n.parent = h0(t, r)),
        (n.structuredQuery.from = [
          { collectionId: e.collectionGroup, allDescendants: !0 },
        ]))
      : ((n.parent = h0(t, r.popLast())),
        (n.structuredQuery.from = [{ collectionId: r.lastSegment() }]));
    const a = (function (x) {
      if (x.length !== 0) return gN(ho.create(x, "and"));
    })(e.filters);
    a && (n.structuredQuery.where = a);
    const o = (function (x) {
      if (x.length !== 0)
        return x.map((E) =>
          (function (z) {
            return { field: Ou(z.field), direction: O6(z.dir) };
          })(E)
        );
    })(e.orderBy);
    o && (n.structuredQuery.orderBy = o);
    const u = c0(t, e.limit);
    return (
      u !== null && (n.structuredQuery.limit = u),
      e.startAt &&
        (n.structuredQuery.startAt = (function (x) {
          return { before: x.inclusive, values: x.position };
        })(e.startAt)),
      e.endAt &&
        (n.structuredQuery.endAt = (function (x) {
          return { before: !x.inclusive, values: x.position };
        })(e.endAt)),
      n
    );
  }
  function P6(t) {
    let e = E6(t.parent);
    const n = t.structuredQuery,
      r = n.from ? n.from.length : 0;
    let a = null;
    if (r > 0) {
      ur(r === 1);
      const L = n.from[0];
      L.allDescendants ? (a = L.collectionId) : (e = e.child(L.collectionId));
    }
    let o = [];
    n.where &&
      (o = (function (z) {
        const B = pN(z);
        return B instanceof ho && WO(B) ? B.getFilters() : [B];
      })(n.where));
    let u = [];
    n.orderBy &&
      (u = (function (z) {
        return z.map((B) =>
          (function (se) {
            return new km(
              Nu(se.field),
              (function (he) {
                switch (he) {
                  case "ASCENDING":
                    return "asc";
                  case "DESCENDING":
                    return "desc";
                  default:
                    return;
                }
              })(se.direction)
            );
          })(B)
        );
      })(n.orderBy));
    let g = null;
    n.limit &&
      (g = (function (z) {
        let B;
        return (B = typeof z == "object" ? z.value : z), Bv(B) ? null : B;
      })(n.limit));
    let x = null;
    n.startAt &&
      (x = (function (z) {
        const B = !!z.before,
          ae = z.values || [];
        return new Em(ae, B);
      })(n.startAt));
    let E = null;
    return (
      n.endAt &&
        (E = (function (z) {
          const B = !z.before,
            ae = z.values || [];
          return new Em(ae, B);
        })(n.endAt)),
      YX(e, a, u, o, g, "F", x, E)
    );
  }
  function R6(t, e) {
    const n = (function (a) {
      switch (a) {
        case "TargetPurposeListen":
          return null;
        case "TargetPurposeExistenceFilterMismatch":
          return "existence-filter-mismatch";
        case "TargetPurposeExistenceFilterMismatchBloom":
          return "existence-filter-mismatch-bloom";
        case "TargetPurposeLimboResolution":
          return "limbo-document";
        default:
          return on();
      }
    })(e.purpose);
    return n == null ? null : { "goog-listen-tags": n };
  }
  function pN(t) {
    return t.unaryFilter !== void 0
      ? (function (n) {
          switch (n.unaryFilter.op) {
            case "IS_NAN":
              const r = Nu(n.unaryFilter.field);
              return ai.create(r, "==", { doubleValue: NaN });
            case "IS_NULL":
              const a = Nu(n.unaryFilter.field);
              return ai.create(a, "==", { nullValue: "NULL_VALUE" });
            case "IS_NOT_NAN":
              const o = Nu(n.unaryFilter.field);
              return ai.create(o, "!=", { doubleValue: NaN });
            case "IS_NOT_NULL":
              const u = Nu(n.unaryFilter.field);
              return ai.create(u, "!=", { nullValue: "NULL_VALUE" });
            default:
              return on();
          }
        })(t)
      : t.fieldFilter !== void 0
      ? (function (n) {
          return ai.create(
            Nu(n.fieldFilter.field),
            (function (a) {
              switch (a) {
                case "EQUAL":
                  return "==";
                case "NOT_EQUAL":
                  return "!=";
                case "GREATER_THAN":
                  return ">";
                case "GREATER_THAN_OR_EQUAL":
                  return ">=";
                case "LESS_THAN":
                  return "<";
                case "LESS_THAN_OR_EQUAL":
                  return "<=";
                case "ARRAY_CONTAINS":
                  return "array-contains";
                case "IN":
                  return "in";
                case "NOT_IN":
                  return "not-in";
                case "ARRAY_CONTAINS_ANY":
                  return "array-contains-any";
                default:
                  return on();
              }
            })(n.fieldFilter.op),
            n.fieldFilter.value
          );
        })(t)
      : t.compositeFilter !== void 0
      ? (function (n) {
          return ho.create(
            n.compositeFilter.filters.map((r) => pN(r)),
            (function (a) {
              switch (a) {
                case "AND":
                  return "and";
                case "OR":
                  return "or";
                default:
                  return on();
              }
            })(n.compositeFilter.op)
          );
        })(t)
      : on();
  }
  function O6(t) {
    return x6[t];
  }
  function N6(t) {
    return b6[t];
  }
  function L6(t) {
    return w6[t];
  }
  function Ou(t) {
    return { fieldPath: t.canonicalString() };
  }
  function Nu(t) {
    return Oi.fromServerFormat(t.fieldPath);
  }
  function gN(t) {
    return t instanceof ai
      ? (function (n) {
          if (n.op === "==") {
            if (Fk(n.value))
              return { unaryFilter: { field: Ou(n.field), op: "IS_NAN" } };
            if (jk(n.value))
              return { unaryFilter: { field: Ou(n.field), op: "IS_NULL" } };
          } else if (n.op === "!=") {
            if (Fk(n.value))
              return { unaryFilter: { field: Ou(n.field), op: "IS_NOT_NAN" } };
            if (jk(n.value))
              return { unaryFilter: { field: Ou(n.field), op: "IS_NOT_NULL" } };
          }
          return {
            fieldFilter: { field: Ou(n.field), op: N6(n.op), value: n.value },
          };
        })(t)
      : t instanceof ho
      ? (function (n) {
          const r = n.getFilters().map((a) => gN(a));
          return r.length === 1
            ? r[0]
            : { compositeFilter: { op: L6(n.op), filters: r } };
        })(t)
      : on();
  }
  function D6(t) {
    const e = [];
    return (
      t.fields.forEach((n) => e.push(n.canonicalString())), { fieldPaths: e }
    );
  }
  function mN(t) {
    return t.length >= 4 && t.get(0) === "projects" && t.get(2) === "databases";
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Tl {
    constructor(
      e,
      n,
      r,
      a,
      o = hn.min(),
      u = hn.min(),
      g = Ji.EMPTY_BYTE_STRING,
      x = null
    ) {
      (this.target = e),
        (this.targetId = n),
        (this.purpose = r),
        (this.sequenceNumber = a),
        (this.snapshotVersion = o),
        (this.lastLimboFreeSnapshotVersion = u),
        (this.resumeToken = g),
        (this.expectedCount = x);
    }
    withSequenceNumber(e) {
      return new Tl(
        this.target,
        this.targetId,
        this.purpose,
        e,
        this.snapshotVersion,
        this.lastLimboFreeSnapshotVersion,
        this.resumeToken,
        this.expectedCount
      );
    }
    withResumeToken(e, n) {
      return new Tl(
        this.target,
        this.targetId,
        this.purpose,
        this.sequenceNumber,
        n,
        this.lastLimboFreeSnapshotVersion,
        e,
        null
      );
    }
    withExpectedCount(e) {
      return new Tl(
        this.target,
        this.targetId,
        this.purpose,
        this.sequenceNumber,
        this.snapshotVersion,
        this.lastLimboFreeSnapshotVersion,
        this.resumeToken,
        e
      );
    }
    withLastLimboFreeSnapshotVersion(e) {
      return new Tl(
        this.target,
        this.targetId,
        this.purpose,
        this.sequenceNumber,
        this.snapshotVersion,
        e,
        this.resumeToken,
        this.expectedCount
      );
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class M6 {
    constructor(e) {
      this.ut = e;
    }
  }
  function j6(t) {
    const e = P6({ parent: t.parent, structuredQuery: t.structuredQuery });
    return t.limitType === "LAST" ? l0(e, e.limit, "L") : e;
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class F6 {
    constructor() {
      this.on = new z6();
    }
    addToCollectionParentIndex(e, n) {
      return this.on.add(n), it.resolve();
    }
    getCollectionParents(e, n) {
      return it.resolve(this.on.getEntries(n));
    }
    addFieldIndex(e, n) {
      return it.resolve();
    }
    deleteFieldIndex(e, n) {
      return it.resolve();
    }
    deleteAllFieldIndexes(e) {
      return it.resolve();
    }
    createTargetIndexes(e, n) {
      return it.resolve();
    }
    getDocumentsMatchingTarget(e, n) {
      return it.resolve(null);
    }
    getIndexType(e, n) {
      return it.resolve(0);
    }
    getFieldIndexes(e, n) {
      return it.resolve([]);
    }
    getNextCollectionGroupToUpdate(e) {
      return it.resolve(null);
    }
    getMinOffset(e, n) {
      return it.resolve(ql.min());
    }
    getMinOffsetFromCollectionGroup(e, n) {
      return it.resolve(ql.min());
    }
    updateCollectionGroup(e, n, r) {
      return it.resolve();
    }
    updateIndexEntries(e, n) {
      return it.resolve();
    }
  }
  class z6 {
    constructor() {
      this.index = {};
    }
    add(e) {
      const n = e.lastSegment(),
        r = e.popLast(),
        a = this.index[n] || new Di(wr.comparator),
        o = !a.has(r);
      return (this.index[n] = a.add(r)), o;
    }
    has(e) {
      const n = e.lastSegment(),
        r = e.popLast(),
        a = this.index[n];
      return a && a.has(r);
    }
    getEntries(e) {
      return (this.index[e] || new Di(wr.comparator)).toArray();
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class wh {
    constructor(e) {
      this.xn = e;
    }
    next() {
      return (this.xn += 2), this.xn;
    }
    static On() {
      return new wh(0);
    }
    static Nn() {
      return new wh(-1);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class V6 {
    constructor() {
      (this.changes = new Fh(
        (e) => e.toString(),
        (e, n) => e.isEqual(n)
      )),
        (this.changesApplied = !1);
    }
    addEntry(e) {
      this.assertNotApplied(), this.changes.set(e.key, e);
    }
    removeEntry(e, n) {
      this.assertNotApplied(),
        this.changes.set(e, Gi.newInvalidDocument(e).setReadTime(n));
    }
    getEntry(e, n) {
      this.assertNotApplied();
      const r = this.changes.get(n);
      return r !== void 0 ? it.resolve(r) : this.getFromCache(e, n);
    }
    getEntries(e, n) {
      return this.getAllFromCache(e, n);
    }
    apply(e) {
      return (
        this.assertNotApplied(),
        (this.changesApplied = !0),
        this.applyChanges(e)
      );
    }
    assertNotApplied() {}
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class $6 {
    constructor(e, n) {
      (this.overlayedDocument = e), (this.mutatedFields = n);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class B6 {
    constructor(e, n, r, a) {
      (this.remoteDocumentCache = e),
        (this.mutationQueue = n),
        (this.documentOverlayCache = r),
        (this.indexManager = a);
    }
    getDocument(e, n) {
      let r = null;
      return this.documentOverlayCache
        .getOverlay(e, n)
        .next((a) => ((r = a), this.remoteDocumentCache.getEntry(e, n)))
        .next(
          (a) => (r !== null && $d(r.mutation, a, $s.empty(), li.now()), a)
        );
    }
    getDocuments(e, n) {
      return this.remoteDocumentCache
        .getEntries(e, n)
        .next((r) => this.getLocalViewOfDocuments(e, r, Cn()).next(() => r));
    }
    getLocalViewOfDocuments(e, n, r = Cn()) {
      const a = Oc();
      return this.populateOverlays(e, a, n).next(() =>
        this.computeViews(e, n, a, r).next((o) => {
          let u = Sd();
          return (
            o.forEach((g, x) => {
              u = u.insert(g, x.overlayedDocument);
            }),
            u
          );
        })
      );
    }
    getOverlayedDocuments(e, n) {
      const r = Oc();
      return this.populateOverlays(e, r, n).next(() =>
        this.computeViews(e, n, r, Cn())
      );
    }
    populateOverlays(e, n, r) {
      const a = [];
      return (
        r.forEach((o) => {
          n.has(o) || a.push(o);
        }),
        this.documentOverlayCache.getOverlays(e, a).next((o) => {
          o.forEach((u, g) => {
            n.set(u, g);
          });
        })
      );
    }
    computeViews(e, n, r, a) {
      let o = Go();
      const u = Vd(),
        g = (function () {
          return Vd();
        })();
      return (
        n.forEach((x, E) => {
          const L = r.get(E.key);
          a.has(E.key) && (L === void 0 || L.mutation instanceof oc)
            ? (o = o.insert(E.key, E))
            : L !== void 0
            ? (u.set(E.key, L.mutation.getFieldMask()),
              $d(L.mutation, E, L.mutation.getFieldMask(), li.now()))
            : u.set(E.key, $s.empty());
        }),
        this.recalculateAndSaveOverlays(e, o).next(
          (x) => (
            x.forEach((E, L) => u.set(E, L)),
            n.forEach((E, L) => {
              var z;
              return g.set(
                E,
                new $6(L, (z = u.get(E)) !== null && z !== void 0 ? z : null)
              );
            }),
            g
          )
        )
      );
    }
    recalculateAndSaveOverlays(e, n) {
      const r = Vd();
      let a = new Ir((u, g) => u - g),
        o = Cn();
      return this.mutationQueue
        .getAllMutationBatchesAffectingDocumentKeys(e, n)
        .next((u) => {
          for (const g of u)
            g.keys().forEach((x) => {
              const E = n.get(x);
              if (E === null) return;
              let L = r.get(x) || $s.empty();
              (L = g.applyToLocalView(E, L)), r.set(x, L);
              const z = (a.get(g.batchId) || Cn()).add(x);
              a = a.insert(g.batchId, z);
            });
        })
        .next(() => {
          const u = [],
            g = a.getReverseIterator();
          for (; g.hasNext(); ) {
            const x = g.getNext(),
              E = x.key,
              L = x.value,
              z = JO();
            L.forEach((B) => {
              if (!o.has(B)) {
                const ae = aN(n.get(B), r.get(B));
                ae !== null && z.set(B, ae), (o = o.add(B));
              }
            }),
              u.push(this.documentOverlayCache.saveOverlays(e, E, z));
          }
          return it.waitFor(u);
        })
        .next(() => r);
    }
    recalculateAndSaveOverlaysForDocumentKeys(e, n) {
      return this.remoteDocumentCache
        .getEntries(e, n)
        .next((r) => this.recalculateAndSaveOverlays(e, r));
    }
    getDocumentsMatchingQuery(e, n, r, a) {
      return (function (u) {
        return (
          Kt.isDocumentKey(u.path) &&
          u.collectionGroup === null &&
          u.filters.length === 0
        );
      })(n)
        ? this.getDocumentsMatchingDocumentQuery(e, n.path)
        : GX(n)
        ? this.getDocumentsMatchingCollectionGroupQuery(e, n, r, a)
        : this.getDocumentsMatchingCollectionQuery(e, n, r, a);
    }
    getNextDocuments(e, n, r, a) {
      return this.remoteDocumentCache
        .getAllFromCollectionGroup(e, n, r, a)
        .next((o) => {
          const u =
            a - o.size > 0
              ? this.documentOverlayCache.getOverlaysForCollectionGroup(
                  e,
                  n,
                  r.largestBatchId,
                  a - o.size
                )
              : it.resolve(Oc());
          let g = -1,
            x = o;
          return u.next((E) =>
            it
              .forEach(
                E,
                (L, z) => (
                  g < z.largestBatchId && (g = z.largestBatchId),
                  o.get(L)
                    ? it.resolve()
                    : this.remoteDocumentCache.getEntry(e, L).next((B) => {
                        x = x.insert(L, B);
                      })
                )
              )
              .next(() => this.populateOverlays(e, E, o))
              .next(() => this.computeViews(e, x, E, Cn()))
              .next((L) => ({ batchId: g, changes: ZO(L) }))
          );
        });
    }
    getDocumentsMatchingDocumentQuery(e, n) {
      return this.getDocument(e, new Kt(n)).next((r) => {
        let a = Sd();
        return r.isFoundDocument() && (a = a.insert(r.key, r)), a;
      });
    }
    getDocumentsMatchingCollectionGroupQuery(e, n, r, a) {
      const o = n.collectionGroup;
      let u = Sd();
      return this.indexManager.getCollectionParents(e, o).next((g) =>
        it
          .forEach(g, (x) => {
            const E = (function (z, B) {
              return new Hv(
                B,
                null,
                z.explicitOrderBy.slice(),
                z.filters.slice(),
                z.limit,
                z.limitType,
                z.startAt,
                z.endAt
              );
            })(n, x.child(o));
            return this.getDocumentsMatchingCollectionQuery(e, E, r, a).next(
              (L) => {
                L.forEach((z, B) => {
                  u = u.insert(z, B);
                });
              }
            );
          })
          .next(() => u)
      );
    }
    getDocumentsMatchingCollectionQuery(e, n, r, a) {
      let o;
      return this.documentOverlayCache
        .getOverlaysForCollection(e, n.path, r.largestBatchId)
        .next(
          (u) => (
            (o = u),
            this.remoteDocumentCache.getDocumentsMatchingQuery(e, n, r, o, a)
          )
        )
        .next((u) => {
          o.forEach((x, E) => {
            const L = E.getKey();
            u.get(L) === null && (u = u.insert(L, Gi.newInvalidDocument(L)));
          });
          let g = Sd();
          return (
            u.forEach((x, E) => {
              const L = o.get(x);
              L !== void 0 && $d(L.mutation, E, $s.empty(), li.now()),
                Uv(n, E) && (g = g.insert(x, E));
            }),
            g
          );
        });
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class H6 {
    constructor(e) {
      (this.serializer = e), (this.ur = new Map()), (this.cr = new Map());
    }
    getBundleMetadata(e, n) {
      return it.resolve(this.ur.get(n));
    }
    saveBundleMetadata(e, n) {
      return (
        this.ur.set(
          n.id,
          (function (a) {
            return {
              id: a.id,
              version: a.version,
              createTime: oo(a.createTime),
            };
          })(n)
        ),
        it.resolve()
      );
    }
    getNamedQuery(e, n) {
      return it.resolve(this.cr.get(n));
    }
    saveNamedQuery(e, n) {
      return (
        this.cr.set(
          n.name,
          (function (a) {
            return {
              name: a.name,
              query: j6(a.bundledQuery),
              readTime: oo(a.readTime),
            };
          })(n)
        ),
        it.resolve()
      );
    }
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class W6 {
    constructor() {
      (this.overlays = new Ir(Kt.comparator)), (this.lr = new Map());
    }
    getOverlay(e, n) {
      return it.resolve(this.overlays.get(n));
    }
    getOverlays(e, n) {
      const r = Oc();
      return it
        .forEach(n, (a) =>
          this.getOverlay(e, a).next((o) => {
            o !== null && r.set(a, o);
          })
        )
        .next(() => r);
    }
    saveOverlays(e, n, r) {
      return (
        r.forEach((a, o) => {
          this.lt(e, n, o);
        }),
        it.resolve()
      );
    }
    removeOverlaysForBatchId(e, n, r) {
      const a = this.lr.get(r);
      return (
        a !== void 0 &&
          (a.forEach((o) => (this.overlays = this.overlays.remove(o))),
          this.lr.delete(r)),
        it.resolve()
      );
    }
    getOverlaysForCollection(e, n, r) {
      const a = Oc(),
        o = n.length + 1,
        u = new Kt(n.child("")),
        g = this.overlays.getIteratorFrom(u);
      for (; g.hasNext(); ) {
        const x = g.getNext().value,
          E = x.getKey();
        if (!n.isPrefixOf(E.path)) break;
        E.path.length === o && x.largestBatchId > r && a.set(x.getKey(), x);
      }
      return it.resolve(a);
    }
    getOverlaysForCollectionGroup(e, n, r, a) {
      let o = new Ir((E, L) => E - L);
      const u = this.overlays.getIterator();
      for (; u.hasNext(); ) {
        const E = u.getNext().value;
        if (E.getKey().getCollectionGroup() === n && E.largestBatchId > r) {
          let L = o.get(E.largestBatchId);
          L === null && ((L = Oc()), (o = o.insert(E.largestBatchId, L))),
            L.set(E.getKey(), E);
        }
      }
      const g = Oc(),
        x = o.getIterator();
      for (
        ;
        x.hasNext() &&
        (x.getNext().value.forEach((E, L) => g.set(E, L)), !(g.size() >= a));

      );
      return it.resolve(g);
    }
    lt(e, n, r) {
      const a = this.overlays.get(r.key);
      if (a !== null) {
        const u = this.lr.get(a.largestBatchId).delete(r.key);
        this.lr.set(a.largestBatchId, u);
      }
      this.overlays = this.overlays.insert(r.key, new f6(n, r));
      let o = this.lr.get(n);
      o === void 0 && ((o = Cn()), this.lr.set(n, o)),
        this.lr.set(n, o.add(r.key));
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class W1 {
    constructor() {
      (this.hr = new Di(gi.Pr)), (this.Ir = new Di(gi.Tr));
    }
    isEmpty() {
      return this.hr.isEmpty();
    }
    addReference(e, n) {
      const r = new gi(e, n);
      (this.hr = this.hr.add(r)), (this.Ir = this.Ir.add(r));
    }
    Er(e, n) {
      e.forEach((r) => this.addReference(r, n));
    }
    removeReference(e, n) {
      this.dr(new gi(e, n));
    }
    Ar(e, n) {
      e.forEach((r) => this.removeReference(r, n));
    }
    Rr(e) {
      const n = new Kt(new wr([])),
        r = new gi(n, e),
        a = new gi(n, e + 1),
        o = [];
      return (
        this.Ir.forEachInRange([r, a], (u) => {
          this.dr(u), o.push(u.key);
        }),
        o
      );
    }
    Vr() {
      this.hr.forEach((e) => this.dr(e));
    }
    dr(e) {
      (this.hr = this.hr.delete(e)), (this.Ir = this.Ir.delete(e));
    }
    mr(e) {
      const n = new Kt(new wr([])),
        r = new gi(n, e),
        a = new gi(n, e + 1);
      let o = Cn();
      return (
        this.Ir.forEachInRange([r, a], (u) => {
          o = o.add(u.key);
        }),
        o
      );
    }
    containsKey(e) {
      const n = new gi(e, 0),
        r = this.hr.firstAfterOrEqual(n);
      return r !== null && e.isEqual(r.key);
    }
  }
  class gi {
    constructor(e, n) {
      (this.key = e), (this.gr = n);
    }
    static Pr(e, n) {
      return Kt.comparator(e.key, n.key) || Xn(e.gr, n.gr);
    }
    static Tr(e, n) {
      return Xn(e.gr, n.gr) || Kt.comparator(e.key, n.key);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class U6 {
    constructor(e, n) {
      (this.indexManager = e),
        (this.referenceDelegate = n),
        (this.mutationQueue = []),
        (this.pr = 1),
        (this.yr = new Di(gi.Pr));
    }
    checkEmpty(e) {
      return it.resolve(this.mutationQueue.length === 0);
    }
    addMutationBatch(e, n, r, a) {
      const o = this.pr;
      this.pr++,
        this.mutationQueue.length > 0 &&
          this.mutationQueue[this.mutationQueue.length - 1];
      const u = new d6(o, n, r, a);
      this.mutationQueue.push(u);
      for (const g of a)
        (this.yr = this.yr.add(new gi(g.key, o))),
          this.indexManager.addToCollectionParentIndex(e, g.key.path.popLast());
      return it.resolve(u);
    }
    lookupMutationBatch(e, n) {
      return it.resolve(this.wr(n));
    }
    getNextMutationBatchAfterBatchId(e, n) {
      const r = n + 1,
        a = this.Sr(r),
        o = a < 0 ? 0 : a;
      return it.resolve(
        this.mutationQueue.length > o ? this.mutationQueue[o] : null
      );
    }
    getHighestUnacknowledgedBatchId() {
      return it.resolve(this.mutationQueue.length === 0 ? -1 : this.pr - 1);
    }
    getAllMutationBatches(e) {
      return it.resolve(this.mutationQueue.slice());
    }
    getAllMutationBatchesAffectingDocumentKey(e, n) {
      const r = new gi(n, 0),
        a = new gi(n, Number.POSITIVE_INFINITY),
        o = [];
      return (
        this.yr.forEachInRange([r, a], (u) => {
          const g = this.wr(u.gr);
          o.push(g);
        }),
        it.resolve(o)
      );
    }
    getAllMutationBatchesAffectingDocumentKeys(e, n) {
      let r = new Di(Xn);
      return (
        n.forEach((a) => {
          const o = new gi(a, 0),
            u = new gi(a, Number.POSITIVE_INFINITY);
          this.yr.forEachInRange([o, u], (g) => {
            r = r.add(g.gr);
          });
        }),
        it.resolve(this.br(r))
      );
    }
    getAllMutationBatchesAffectingQuery(e, n) {
      const r = n.path,
        a = r.length + 1;
      let o = r;
      Kt.isDocumentKey(o) || (o = o.child(""));
      const u = new gi(new Kt(o), 0);
      let g = new Di(Xn);
      return (
        this.yr.forEachWhile((x) => {
          const E = x.key.path;
          return !!r.isPrefixOf(E) && (E.length === a && (g = g.add(x.gr)), !0);
        }, u),
        it.resolve(this.br(g))
      );
    }
    br(e) {
      const n = [];
      return (
        e.forEach((r) => {
          const a = this.wr(r);
          a !== null && n.push(a);
        }),
        n
      );
    }
    removeMutationBatch(e, n) {
      ur(this.Dr(n.batchId, "removed") === 0), this.mutationQueue.shift();
      let r = this.yr;
      return it
        .forEach(n.mutations, (a) => {
          const o = new gi(a.key, n.batchId);
          return (
            (r = r.delete(o)),
            this.referenceDelegate.markPotentiallyOrphaned(e, a.key)
          );
        })
        .next(() => {
          this.yr = r;
        });
    }
    Fn(e) {}
    containsKey(e, n) {
      const r = new gi(n, 0),
        a = this.yr.firstAfterOrEqual(r);
      return it.resolve(n.isEqual(a && a.key));
    }
    performConsistencyCheck(e) {
      return this.mutationQueue.length, it.resolve();
    }
    Dr(e, n) {
      return this.Sr(e);
    }
    Sr(e) {
      return this.mutationQueue.length === 0
        ? 0
        : e - this.mutationQueue[0].batchId;
    }
    wr(e) {
      const n = this.Sr(e);
      return n < 0 || n >= this.mutationQueue.length
        ? null
        : this.mutationQueue[n];
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class X6 {
    constructor(e) {
      (this.Cr = e),
        (this.docs = (function () {
          return new Ir(Kt.comparator);
        })()),
        (this.size = 0);
    }
    setIndexManager(e) {
      this.indexManager = e;
    }
    addEntry(e, n) {
      const r = n.key,
        a = this.docs.get(r),
        o = a ? a.size : 0,
        u = this.Cr(n);
      return (
        (this.docs = this.docs.insert(r, {
          document: n.mutableCopy(),
          size: u,
        })),
        (this.size += u - o),
        this.indexManager.addToCollectionParentIndex(e, r.path.popLast())
      );
    }
    removeEntry(e) {
      const n = this.docs.get(e);
      n && ((this.docs = this.docs.remove(e)), (this.size -= n.size));
    }
    getEntry(e, n) {
      const r = this.docs.get(n);
      return it.resolve(
        r ? r.document.mutableCopy() : Gi.newInvalidDocument(n)
      );
    }
    getEntries(e, n) {
      let r = Go();
      return (
        n.forEach((a) => {
          const o = this.docs.get(a);
          r = r.insert(
            a,
            o ? o.document.mutableCopy() : Gi.newInvalidDocument(a)
          );
        }),
        it.resolve(r)
      );
    }
    getDocumentsMatchingQuery(e, n, r, a) {
      let o = Go();
      const u = n.path,
        g = new Kt(u.child("")),
        x = this.docs.getIteratorFrom(g);
      for (; x.hasNext(); ) {
        const {
          key: E,
          value: { document: L },
        } = x.getNext();
        if (!u.isPrefixOf(E.path)) break;
        E.path.length > u.length + 1 ||
          PX(IX(L), r) <= 0 ||
          ((a.has(L.key) || Uv(n, L)) &&
            (o = o.insert(L.key, L.mutableCopy())));
      }
      return it.resolve(o);
    }
    getAllFromCollectionGroup(e, n, r, a) {
      on();
    }
    vr(e, n) {
      return it.forEach(this.docs, (r) => n(r));
    }
    newChangeBuffer(e) {
      return new Y6(this);
    }
    getSize(e) {
      return it.resolve(this.size);
    }
  }
  class Y6 extends V6 {
    constructor(e) {
      super(), (this._r = e);
    }
    applyChanges(e) {
      const n = [];
      return (
        this.changes.forEach((r, a) => {
          a.isValidDocument()
            ? n.push(this._r.addEntry(e, a))
            : this._r.removeEntry(r);
        }),
        it.waitFor(n)
      );
    }
    getFromCache(e, n) {
      return this._r.getEntry(e, n);
    }
    getAllFromCache(e, n) {
      return this._r.getEntries(e, n);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class G6 {
    constructor(e) {
      (this.persistence = e),
        (this.Fr = new Fh((n) => F1(n), z1)),
        (this.lastRemoteSnapshotVersion = hn.min()),
        (this.highestTargetId = 0),
        (this.Mr = 0),
        (this.Or = new W1()),
        (this.targetCount = 0),
        (this.Nr = wh.On());
    }
    forEachTarget(e, n) {
      return this.Fr.forEach((r, a) => n(a)), it.resolve();
    }
    getLastRemoteSnapshotVersion(e) {
      return it.resolve(this.lastRemoteSnapshotVersion);
    }
    getHighestSequenceNumber(e) {
      return it.resolve(this.Mr);
    }
    allocateTargetId(e) {
      return (
        (this.highestTargetId = this.Nr.next()),
        it.resolve(this.highestTargetId)
      );
    }
    setTargetsMetadata(e, n, r) {
      return (
        r && (this.lastRemoteSnapshotVersion = r),
        n > this.Mr && (this.Mr = n),
        it.resolve()
      );
    }
    kn(e) {
      this.Fr.set(e.target, e);
      const n = e.targetId;
      n > this.highestTargetId &&
        ((this.Nr = new wh(n)), (this.highestTargetId = n)),
        e.sequenceNumber > this.Mr && (this.Mr = e.sequenceNumber);
    }
    addTargetData(e, n) {
      return this.kn(n), (this.targetCount += 1), it.resolve();
    }
    updateTargetData(e, n) {
      return this.kn(n), it.resolve();
    }
    removeTargetData(e, n) {
      return (
        this.Fr.delete(n.target),
        this.Or.Rr(n.targetId),
        (this.targetCount -= 1),
        it.resolve()
      );
    }
    removeTargets(e, n, r) {
      let a = 0;
      const o = [];
      return (
        this.Fr.forEach((u, g) => {
          g.sequenceNumber <= n &&
            r.get(g.targetId) === null &&
            (this.Fr.delete(u),
            o.push(this.removeMatchingKeysForTargetId(e, g.targetId)),
            a++);
        }),
        it.waitFor(o).next(() => a)
      );
    }
    getTargetCount(e) {
      return it.resolve(this.targetCount);
    }
    getTargetData(e, n) {
      const r = this.Fr.get(n) || null;
      return it.resolve(r);
    }
    addMatchingKeys(e, n, r) {
      return this.Or.Er(n, r), it.resolve();
    }
    removeMatchingKeys(e, n, r) {
      this.Or.Ar(n, r);
      const a = this.persistence.referenceDelegate,
        o = [];
      return (
        a &&
          n.forEach((u) => {
            o.push(a.markPotentiallyOrphaned(e, u));
          }),
        it.waitFor(o)
      );
    }
    removeMatchingKeysForTargetId(e, n) {
      return this.Or.Rr(n), it.resolve();
    }
    getMatchingKeysForTargetId(e, n) {
      const r = this.Or.mr(n);
      return it.resolve(r);
    }
    containsKey(e, n) {
      return it.resolve(this.Or.containsKey(n));
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class q6 {
    constructor(e, n) {
      (this.Br = {}),
        (this.overlays = {}),
        (this.Lr = new L1(0)),
        (this.kr = !1),
        (this.kr = !0),
        (this.referenceDelegate = e(this)),
        (this.qr = new G6(this)),
        (this.indexManager = new F6()),
        (this.remoteDocumentCache = (function (a) {
          return new X6(a);
        })((r) => this.referenceDelegate.Qr(r))),
        (this.serializer = new M6(n)),
        (this.Kr = new H6(this.serializer));
    }
    start() {
      return Promise.resolve();
    }
    shutdown() {
      return (this.kr = !1), Promise.resolve();
    }
    get started() {
      return this.kr;
    }
    setDatabaseDeletedListener() {}
    setNetworkEnabled() {}
    getIndexManager(e) {
      return this.indexManager;
    }
    getDocumentOverlayCache(e) {
      let n = this.overlays[e.toKey()];
      return n || ((n = new W6()), (this.overlays[e.toKey()] = n)), n;
    }
    getMutationQueue(e, n) {
      let r = this.Br[e.toKey()];
      return (
        r ||
          ((r = new U6(n, this.referenceDelegate)), (this.Br[e.toKey()] = r)),
        r
      );
    }
    getTargetCache() {
      return this.qr;
    }
    getRemoteDocumentCache() {
      return this.remoteDocumentCache;
    }
    getBundleCache() {
      return this.Kr;
    }
    runTransaction(e, n, r) {
      Ft("MemoryPersistence", "Starting transaction:", e);
      const a = new K6(this.Lr.next());
      return (
        this.referenceDelegate.$r(),
        r(a)
          .next((o) => this.referenceDelegate.Ur(a).next(() => o))
          .toPromise()
          .then((o) => (a.raiseOnCommittedEvent(), o))
      );
    }
    Wr(e, n) {
      return it.or(
        Object.values(this.Br).map((r) => () => r.containsKey(e, n))
      );
    }
  }
  class K6 extends OX {
    constructor(e) {
      super(), (this.currentSequenceNumber = e);
    }
  }
  class U1 {
    constructor(e) {
      (this.persistence = e), (this.Gr = new W1()), (this.zr = null);
    }
    static jr(e) {
      return new U1(e);
    }
    get Hr() {
      if (this.zr) return this.zr;
      throw on();
    }
    addReference(e, n, r) {
      return (
        this.Gr.addReference(r, n), this.Hr.delete(r.toString()), it.resolve()
      );
    }
    removeReference(e, n, r) {
      return (
        this.Gr.removeReference(r, n), this.Hr.add(r.toString()), it.resolve()
      );
    }
    markPotentiallyOrphaned(e, n) {
      return this.Hr.add(n.toString()), it.resolve();
    }
    removeTarget(e, n) {
      this.Gr.Rr(n.targetId).forEach((a) => this.Hr.add(a.toString()));
      const r = this.persistence.getTargetCache();
      return r
        .getMatchingKeysForTargetId(e, n.targetId)
        .next((a) => {
          a.forEach((o) => this.Hr.add(o.toString()));
        })
        .next(() => r.removeTargetData(e, n));
    }
    $r() {
      this.zr = new Set();
    }
    Ur(e) {
      const n = this.persistence.getRemoteDocumentCache().newChangeBuffer();
      return it
        .forEach(this.Hr, (r) => {
          const a = Kt.fromPath(r);
          return this.Jr(e, a).next((o) => {
            o || n.removeEntry(a, hn.min());
          });
        })
        .next(() => ((this.zr = null), n.apply(e)));
    }
    updateLimboDocument(e, n) {
      return this.Jr(e, n).next((r) => {
        r ? this.Hr.delete(n.toString()) : this.Hr.add(n.toString());
      });
    }
    Qr(e) {
      return 0;
    }
    Jr(e, n) {
      return it.or([
        () => it.resolve(this.Gr.containsKey(n)),
        () => this.persistence.getTargetCache().containsKey(e, n),
        () => this.persistence.Wr(e, n),
      ]);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class X1 {
    constructor(e, n, r, a) {
      (this.targetId = e), (this.fromCache = n), (this.ki = r), (this.qi = a);
    }
    static Qi(e, n) {
      let r = Cn(),
        a = Cn();
      for (const o of n.docChanges)
        switch (o.type) {
          case 0:
            r = r.add(o.doc.key);
            break;
          case 1:
            a = a.add(o.doc.key);
        }
      return new X1(e, n.fromCache, r, a);
    }
  }
  /**
   * @license
   * Copyright 2023 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Q6 {
    constructor() {
      this._documentReadCount = 0;
    }
    get documentReadCount() {
      return this._documentReadCount;
    }
    incrementDocumentReadCount(e) {
      this._documentReadCount += e;
    }
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Z6 {
    constructor() {
      (this.Ki = !1), (this.$i = !1), (this.Ui = 100), (this.Wi = 8);
    }
    initialize(e, n) {
      (this.Gi = e), (this.indexManager = n), (this.Ki = !0);
    }
    getDocumentsMatchingQuery(e, n, r, a) {
      const o = { result: null };
      return this.zi(e, n)
        .next((u) => {
          o.result = u;
        })
        .next(() => {
          if (!o.result)
            return this.ji(e, n, a, r).next((u) => {
              o.result = u;
            });
        })
        .next(() => {
          if (o.result) return;
          const u = new Q6();
          return this.Hi(e, n, u).next((g) => {
            if (((o.result = g), this.$i)) return this.Ji(e, n, u, g.size);
          });
        })
        .next(() => o.result);
    }
    Ji(e, n, r, a) {
      return r.documentReadCount < this.Ui
        ? (dd() <= In.DEBUG &&
            Ft(
              "QueryEngine",
              "SDK will not create cache indexes for query:",
              Ru(n),
              "since it only creates cache indexes for collection contains",
              "more than or equal to",
              this.Ui,
              "documents"
            ),
          it.resolve())
        : (dd() <= In.DEBUG &&
            Ft(
              "QueryEngine",
              "Query:",
              Ru(n),
              "scans",
              r.documentReadCount,
              "local documents and returns",
              a,
              "documents as results."
            ),
          r.documentReadCount > this.Wi * a
            ? (dd() <= In.DEBUG &&
                Ft(
                  "QueryEngine",
                  "The SDK decides to create cache indexes for query:",
                  Ru(n),
                  "as using cache indexes may help improve performance."
                ),
              this.indexManager.createTargetIndexes(e, ao(n)))
            : it.resolve());
    }
    zi(e, n) {
      if (Bk(n)) return it.resolve(null);
      let r = ao(n);
      return this.indexManager.getIndexType(e, r).next((a) =>
        a === 0
          ? null
          : (n.limit !== null &&
              a === 1 &&
              ((n = l0(n, null, "F")), (r = ao(n))),
            this.indexManager.getDocumentsMatchingTarget(e, r).next((o) => {
              const u = Cn(...o);
              return this.Gi.getDocuments(e, u).next((g) =>
                this.indexManager.getMinOffset(e, r).next((x) => {
                  const E = this.Yi(n, g);
                  return this.Zi(n, E, u, x.readTime)
                    ? this.zi(e, l0(n, null, "F"))
                    : this.Xi(e, E, n, x);
                })
              );
            }))
      );
    }
    ji(e, n, r, a) {
      return Bk(n) || a.isEqual(hn.min())
        ? it.resolve(null)
        : this.Gi.getDocuments(e, r).next((o) => {
            const u = this.Yi(n, o);
            return this.Zi(n, u, r, a)
              ? it.resolve(null)
              : (dd() <= In.DEBUG &&
                  Ft(
                    "QueryEngine",
                    "Re-using previous result from %s to execute query: %s",
                    a.toString(),
                    Ru(n)
                  ),
                this.Xi(e, u, n, TX(a, -1)).next((g) => g));
          });
    }
    Yi(e, n) {
      let r = new Di(KO(e));
      return (
        n.forEach((a, o) => {
          Uv(e, o) && (r = r.add(o));
        }),
        r
      );
    }
    Zi(e, n, r, a) {
      if (e.limit === null) return !1;
      if (r.size !== n.size) return !0;
      const o = e.limitType === "F" ? n.last() : n.first();
      return !!o && (o.hasPendingWrites || o.version.compareTo(a) > 0);
    }
    Hi(e, n, r) {
      return (
        dd() <= In.DEBUG &&
          Ft(
            "QueryEngine",
            "Using full collection scan to execute query:",
            Ru(n)
          ),
        this.Gi.getDocumentsMatchingQuery(e, n, ql.min(), r)
      );
    }
    Xi(e, n, r, a) {
      return this.Gi.getDocumentsMatchingQuery(e, r, a).next(
        (o) => (
          n.forEach((u) => {
            o = o.insert(u.key, u);
          }),
          o
        )
      );
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class J6 {
    constructor(e, n, r, a) {
      (this.persistence = e),
        (this.es = n),
        (this.serializer = a),
        (this.ts = new Ir(Xn)),
        (this.ns = new Fh((o) => F1(o), z1)),
        (this.rs = new Map()),
        (this.ss = e.getRemoteDocumentCache()),
        (this.qr = e.getTargetCache()),
        (this.Kr = e.getBundleCache()),
        this.os(r);
    }
    os(e) {
      (this.documentOverlayCache = this.persistence.getDocumentOverlayCache(e)),
        (this.indexManager = this.persistence.getIndexManager(e)),
        (this.mutationQueue = this.persistence.getMutationQueue(
          e,
          this.indexManager
        )),
        (this.localDocuments = new B6(
          this.ss,
          this.mutationQueue,
          this.documentOverlayCache,
          this.indexManager
        )),
        this.ss.setIndexManager(this.indexManager),
        this.es.initialize(this.localDocuments, this.indexManager);
    }
    collectGarbage(e) {
      return this.persistence.runTransaction(
        "Collect garbage",
        "readwrite-primary",
        (n) => e.collect(n, this.ts)
      );
    }
  }
  function e9(t, e, n, r) {
    return new J6(t, e, n, r);
  }
  async function vN(t, e) {
    const n = gn(t);
    return await n.persistence.runTransaction(
      "Handle user change",
      "readonly",
      (r) => {
        let a;
        return n.mutationQueue
          .getAllMutationBatches(r)
          .next(
            (o) => ((a = o), n.os(e), n.mutationQueue.getAllMutationBatches(r))
          )
          .next((o) => {
            const u = [],
              g = [];
            let x = Cn();
            for (const E of a) {
              u.push(E.batchId);
              for (const L of E.mutations) x = x.add(L.key);
            }
            for (const E of o) {
              g.push(E.batchId);
              for (const L of E.mutations) x = x.add(L.key);
            }
            return n.localDocuments
              .getDocuments(r, x)
              .next((E) => ({ _s: E, removedBatchIds: u, addedBatchIds: g }));
          });
      }
    );
  }
  function t9(t, e) {
    const n = gn(t);
    return n.persistence.runTransaction(
      "Acknowledge batch",
      "readwrite-primary",
      (r) => {
        const a = e.batch.keys(),
          o = n.ss.newChangeBuffer({ trackRemovals: !0 });
        return (function (g, x, E, L) {
          const z = E.batch,
            B = z.keys();
          let ae = it.resolve();
          return (
            B.forEach((se) => {
              ae = ae
                .next(() => L.getEntry(x, se))
                .next((le) => {
                  const he = E.docVersions.get(se);
                  ur(he !== null),
                    le.version.compareTo(he) < 0 &&
                      (z.applyToRemoteDocument(le, E),
                      le.isValidDocument() &&
                        (le.setReadTime(E.commitVersion), L.addEntry(le)));
                });
            }),
            ae.next(() => g.mutationQueue.removeMutationBatch(x, z))
          );
        })(n, r, e, o)
          .next(() => o.apply(r))
          .next(() => n.mutationQueue.performConsistencyCheck(r))
          .next(() =>
            n.documentOverlayCache.removeOverlaysForBatchId(
              r,
              a,
              e.batch.batchId
            )
          )
          .next(() =>
            n.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(
              r,
              (function (g) {
                let x = Cn();
                for (let E = 0; E < g.mutationResults.length; ++E)
                  g.mutationResults[E].transformResults.length > 0 &&
                    (x = x.add(g.batch.mutations[E].key));
                return x;
              })(e)
            )
          )
          .next(() => n.localDocuments.getDocuments(r, a));
      }
    );
  }
  function yN(t) {
    const e = gn(t);
    return e.persistence.runTransaction(
      "Get last remote snapshot version",
      "readonly",
      (n) => e.qr.getLastRemoteSnapshotVersion(n)
    );
  }
  function n9(t, e) {
    const n = gn(t),
      r = e.snapshotVersion;
    let a = n.ts;
    return n.persistence
      .runTransaction("Apply remote event", "readwrite-primary", (o) => {
        const u = n.ss.newChangeBuffer({ trackRemovals: !0 });
        a = n.ts;
        const g = [];
        e.targetChanges.forEach((L, z) => {
          const B = a.get(z);
          if (!B) return;
          g.push(
            n.qr
              .removeMatchingKeys(o, L.removedDocuments, z)
              .next(() => n.qr.addMatchingKeys(o, L.addedDocuments, z))
          );
          let ae = B.withSequenceNumber(o.currentSequenceNumber);
          e.targetMismatches.get(z) !== null
            ? (ae = ae
                .withResumeToken(Ji.EMPTY_BYTE_STRING, hn.min())
                .withLastLimboFreeSnapshotVersion(hn.min()))
            : L.resumeToken.approximateByteSize() > 0 &&
              (ae = ae.withResumeToken(L.resumeToken, r)),
            (a = a.insert(z, ae)),
            (function (le, he, oe) {
              return le.resumeToken.approximateByteSize() === 0 ||
                he.snapshotVersion.toMicroseconds() -
                  le.snapshotVersion.toMicroseconds() >=
                  3e8
                ? !0
                : oe.addedDocuments.size +
                    oe.modifiedDocuments.size +
                    oe.removedDocuments.size >
                    0;
            })(B, ae, L) && g.push(n.qr.updateTargetData(o, ae));
        });
        let x = Go(),
          E = Cn();
        if (
          (e.documentUpdates.forEach((L) => {
            e.resolvedLimboDocuments.has(L) &&
              g.push(n.persistence.referenceDelegate.updateLimboDocument(o, L));
          }),
          g.push(
            r9(o, u, e.documentUpdates).next((L) => {
              (x = L.us), (E = L.cs);
            })
          ),
          !r.isEqual(hn.min()))
        ) {
          const L = n.qr
            .getLastRemoteSnapshotVersion(o)
            .next((z) =>
              n.qr.setTargetsMetadata(o, o.currentSequenceNumber, r)
            );
          g.push(L);
        }
        return it
          .waitFor(g)
          .next(() => u.apply(o))
          .next(() => n.localDocuments.getLocalViewOfDocuments(o, x, E))
          .next(() => x);
      })
      .then((o) => ((n.ts = a), o));
  }
  function r9(t, e, n) {
    let r = Cn(),
      a = Cn();
    return (
      n.forEach((o) => (r = r.add(o))),
      e.getEntries(t, r).next((o) => {
        let u = Go();
        return (
          n.forEach((g, x) => {
            const E = o.get(g);
            x.isFoundDocument() !== E.isFoundDocument() && (a = a.add(g)),
              x.isNoDocument() && x.version.isEqual(hn.min())
                ? (e.removeEntry(g, x.readTime), (u = u.insert(g, x)))
                : !E.isValidDocument() ||
                  x.version.compareTo(E.version) > 0 ||
                  (x.version.compareTo(E.version) === 0 && E.hasPendingWrites)
                ? (e.addEntry(x), (u = u.insert(g, x)))
                : Ft(
                    "LocalStore",
                    "Ignoring outdated watch update for ",
                    g,
                    ". Current version:",
                    E.version,
                    " Watch version:",
                    x.version
                  );
          }),
          { us: u, cs: a }
        );
      })
    );
  }
  function i9(t, e) {
    const n = gn(t);
    return n.persistence.runTransaction(
      "Get next mutation batch",
      "readonly",
      (r) => (
        e === void 0 && (e = -1),
        n.mutationQueue.getNextMutationBatchAfterBatchId(r, e)
      )
    );
  }
  function s9(t, e) {
    const n = gn(t);
    return n.persistence
      .runTransaction("Allocate target", "readwrite", (r) => {
        let a;
        return n.qr
          .getTargetData(r, e)
          .next((o) =>
            o
              ? ((a = o), it.resolve(a))
              : n.qr
                  .allocateTargetId(r)
                  .next(
                    (u) => (
                      (a = new Tl(
                        e,
                        u,
                        "TargetPurposeListen",
                        r.currentSequenceNumber
                      )),
                      n.qr.addTargetData(r, a).next(() => a)
                    )
                  )
          );
      })
      .then((r) => {
        const a = n.ts.get(r.targetId);
        return (
          (a === null || r.snapshotVersion.compareTo(a.snapshotVersion) > 0) &&
            ((n.ts = n.ts.insert(r.targetId, r)), n.ns.set(e, r.targetId)),
          r
        );
      });
  }
  async function f0(t, e, n) {
    const r = gn(t),
      a = r.ts.get(e),
      o = n ? "readwrite" : "readwrite-primary";
    try {
      n ||
        (await r.persistence.runTransaction("Release target", o, (u) =>
          r.persistence.referenceDelegate.removeTarget(u, a)
        ));
    } catch (u) {
      if (!tp(u)) throw u;
      Ft(
        "LocalStore",
        `Failed to update sequence numbers for target ${e}: ${u}`
      );
    }
    (r.ts = r.ts.remove(e)), r.ns.delete(a.target);
  }
  function Jk(t, e, n) {
    const r = gn(t);
    let a = hn.min(),
      o = Cn();
    return r.persistence.runTransaction("Execute query", "readwrite", (u) =>
      (function (x, E, L) {
        const z = gn(x),
          B = z.ns.get(L);
        return B !== void 0
          ? it.resolve(z.ts.get(B))
          : z.qr.getTargetData(E, L);
      })(r, u, ao(e))
        .next((g) => {
          if (g)
            return (
              (a = g.lastLimboFreeSnapshotVersion),
              r.qr.getMatchingKeysForTargetId(u, g.targetId).next((x) => {
                o = x;
              })
            );
        })
        .next(() =>
          r.es.getDocumentsMatchingQuery(u, e, n ? a : hn.min(), n ? o : Cn())
        )
        .next((g) => (a9(r, KX(e), g), { documents: g, ls: o }))
    );
  }
  function a9(t, e, n) {
    let r = t.rs.get(e) || hn.min();
    n.forEach((a, o) => {
      o.readTime.compareTo(r) > 0 && (r = o.readTime);
    }),
      t.rs.set(e, r);
  }
  class eA {
    constructor() {
      this.activeTargetIds = n6();
    }
    ds(e) {
      this.activeTargetIds = this.activeTargetIds.add(e);
    }
    As(e) {
      this.activeTargetIds = this.activeTargetIds.delete(e);
    }
    Es() {
      const e = {
        activeTargetIds: this.activeTargetIds.toArray(),
        updateTimeMs: Date.now(),
      };
      return JSON.stringify(e);
    }
  }
  class o9 {
    constructor() {
      (this.eo = new eA()),
        (this.no = {}),
        (this.onlineStateHandler = null),
        (this.sequenceNumberHandler = null);
    }
    addPendingMutation(e) {}
    updateMutationState(e, n, r) {}
    addLocalQueryTarget(e) {
      return this.eo.ds(e), this.no[e] || "not-current";
    }
    updateQueryState(e, n, r) {
      this.no[e] = n;
    }
    removeLocalQueryTarget(e) {
      this.eo.As(e);
    }
    isLocalQueryTarget(e) {
      return this.eo.activeTargetIds.has(e);
    }
    clearQueryState(e) {
      delete this.no[e];
    }
    getAllActiveQueryTargets() {
      return this.eo.activeTargetIds;
    }
    isActiveQueryTarget(e) {
      return this.eo.activeTargetIds.has(e);
    }
    start() {
      return (this.eo = new eA()), Promise.resolve();
    }
    handleUserChange(e, n, r) {}
    setOnlineState(e) {}
    shutdown() {}
    writeSequenceNumber(e) {}
    notifyBundleLoaded(e) {}
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class l9 {
    ro(e) {}
    shutdown() {}
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class tA {
    constructor() {
      (this.io = () => this.so()),
        (this.oo = () => this._o()),
        (this.ao = []),
        this.uo();
    }
    ro(e) {
      this.ao.push(e);
    }
    shutdown() {
      window.removeEventListener("online", this.io),
        window.removeEventListener("offline", this.oo);
    }
    uo() {
      window.addEventListener("online", this.io),
        window.addEventListener("offline", this.oo);
    }
    so() {
      Ft("ConnectivityMonitor", "Network connectivity changed: AVAILABLE");
      for (const e of this.ao) e(0);
    }
    _o() {
      Ft("ConnectivityMonitor", "Network connectivity changed: UNAVAILABLE");
      for (const e of this.ao) e(1);
    }
    static D() {
      return (
        typeof window < "u" &&
        window.addEventListener !== void 0 &&
        window.removeEventListener !== void 0
      );
    }
  }
  /**
   * @license
   * Copyright 2023 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ let ig = null;
  function wx() {
    return (
      ig === null
        ? (ig = (function () {
            return 268435456 + Math.round(2147483648 * Math.random());
          })())
        : ig++,
      "0x" + ig.toString(16)
    );
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const c9 = {
    BatchGetDocuments: "batchGet",
    Commit: "commit",
    RunQuery: "runQuery",
    RunAggregationQuery: "runAggregationQuery",
  };
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class u9 {
    constructor(e) {
      (this.co = e.co), (this.lo = e.lo);
    }
    ho(e) {
      this.Po = e;
    }
    Io(e) {
      this.To = e;
    }
    onMessage(e) {
      this.Eo = e;
    }
    close() {
      this.lo();
    }
    send(e) {
      this.co(e);
    }
    Ao() {
      this.Po();
    }
    Ro(e) {
      this.To(e);
    }
    Vo(e) {
      this.Eo(e);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Ui = "WebChannelConnection";
  class h9 extends class {
    constructor(n) {
      (this.databaseInfo = n), (this.databaseId = n.databaseId);
      const r = n.ssl ? "https" : "http",
        a = encodeURIComponent(this.databaseId.projectId),
        o = encodeURIComponent(this.databaseId.database);
      (this.mo = r + "://" + n.host),
        (this.fo = `projects/${a}/databases/${o}`),
        (this.po =
          this.databaseId.database === "(default)"
            ? `project_id=${a}`
            : `project_id=${a}&database_id=${o}`);
    }
    get yo() {
      return !1;
    }
    wo(n, r, a, o, u) {
      const g = wx(),
        x = this.So(n, r);
      Ft("RestConnection", `Sending RPC '${n}' ${g}:`, x, a);
      const E = {
        "google-cloud-resource-prefix": this.fo,
        "x-goog-request-params": this.po,
      };
      return (
        this.bo(E, o, u),
        this.Do(n, x, E, a).then(
          (L) => (Ft("RestConnection", `Received RPC '${n}' ${g}: `, L), L),
          (L) => {
            throw (
              (vh(
                "RestConnection",
                `RPC '${n}' ${g} failed with error: `,
                L,
                "url: ",
                x,
                "request:",
                a
              ),
              L)
            );
          }
        )
      );
    }
    Co(n, r, a, o, u, g) {
      return this.wo(n, r, a, o, u);
    }
    bo(n, r, a) {
      (n["X-Goog-Api-Client"] = (function () {
        return "gl-js/ fire/" + jh;
      })()),
        (n["Content-Type"] = "text/plain"),
        this.databaseInfo.appId &&
          (n["X-Firebase-GMPID"] = this.databaseInfo.appId),
        r && r.headers.forEach((o, u) => (n[u] = o)),
        a && a.headers.forEach((o, u) => (n[u] = o));
    }
    So(n, r) {
      const a = c9[n];
      return `${this.mo}/v1/${r}:${a}`;
    }
  } {
    constructor(e) {
      super(e),
        (this.forceLongPolling = e.forceLongPolling),
        (this.autoDetectLongPolling = e.autoDetectLongPolling),
        (this.useFetchStreams = e.useFetchStreams),
        (this.longPollingOptions = e.longPollingOptions);
    }
    Do(e, n, r, a) {
      const o = wx();
      return new Promise((u, g) => {
        const x = new vX();
        x.setWithCredentials(!0),
          x.listenOnce(gX.COMPLETE, () => {
            try {
              switch (x.getLastErrorCode()) {
                case xx.NO_ERROR:
                  const L = x.getResponseJson();
                  Ft(
                    Ui,
                    `XHR for RPC '${e}' ${o} received:`,
                    JSON.stringify(L)
                  ),
                    u(L);
                  break;
                case xx.TIMEOUT:
                  Ft(Ui, `RPC '${e}' ${o} timed out`),
                    g(new Yt(rt.DEADLINE_EXCEEDED, "Request time out"));
                  break;
                case xx.HTTP_ERROR:
                  const z = x.getStatus();
                  if (
                    (Ft(
                      Ui,
                      `RPC '${e}' ${o} failed with status:`,
                      z,
                      "response text:",
                      x.getResponseText()
                    ),
                    z > 0)
                  ) {
                    let B = x.getResponseJson();
                    Array.isArray(B) && (B = B[0]);
                    const ae = B == null ? void 0 : B.error;
                    if (ae && ae.status && ae.message) {
                      const se = (function (he) {
                        const oe = he.toLowerCase().replace(/_/g, "-");
                        return Object.values(rt).indexOf(oe) >= 0
                          ? oe
                          : rt.UNKNOWN;
                      })(ae.status);
                      g(new Yt(se, ae.message));
                    } else
                      g(
                        new Yt(
                          rt.UNKNOWN,
                          "Server responded with status " + x.getStatus()
                        )
                      );
                  } else g(new Yt(rt.UNAVAILABLE, "Connection failed."));
                  break;
                default:
                  on();
              }
            } finally {
              Ft(Ui, `RPC '${e}' ${o} completed.`);
            }
          });
        const E = JSON.stringify(a);
        Ft(Ui, `RPC '${e}' ${o} sending request:`, a),
          x.send(n, "POST", E, r, 15);
      });
    }
    vo(e, n, r) {
      const a = wx(),
        o = [this.mo, "/", "google.firestore.v1.Firestore", "/", e, "/channel"],
        u = fX(),
        g = pX(),
        x = {
          httpSessionIdParam: "gsessionid",
          initMessageHeaders: {},
          messageUrlParams: {
            database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`,
          },
          sendRawJson: !0,
          supportsCrossDomainXhr: !0,
          internalChannelParams: { forwardChannelRequestTimeoutMs: 6e5 },
          forceLongPolling: this.forceLongPolling,
          detectBufferingProxy: this.autoDetectLongPolling,
        },
        E = this.longPollingOptions.timeoutSeconds;
      E !== void 0 && (x.longPollingTimeout = Math.round(1e3 * E)),
        this.useFetchStreams && (x.useFetchStreams = !0),
        this.bo(x.initMessageHeaders, n, r),
        (x.encodeInitMessageHeaders = !0);
      const L = o.join("");
      Ft(Ui, `Creating RPC '${e}' stream ${a}: ${L}`, x);
      const z = u.createWebChannel(L, x);
      let B = !1,
        ae = !1;
      const se = new u9({
          co: (he) => {
            ae
              ? Ft(
                  Ui,
                  `Not sending because RPC '${e}' stream ${a} is closed:`,
                  he
                )
              : (B ||
                  (Ft(Ui, `Opening RPC '${e}' stream ${a} transport.`),
                  z.open(),
                  (B = !0)),
                Ft(Ui, `RPC '${e}' stream ${a} sending:`, he),
                z.send(he));
          },
          lo: () => z.close(),
        }),
        le = (he, oe, F) => {
          he.listen(oe, (ce) => {
            try {
              F(ce);
            } catch (ye) {
              setTimeout(() => {
                throw ye;
              }, 0);
            }
          });
        };
      return (
        le(z, tg.EventType.OPEN, () => {
          ae || Ft(Ui, `RPC '${e}' stream ${a} transport opened.`);
        }),
        le(z, tg.EventType.CLOSE, () => {
          ae ||
            ((ae = !0),
            Ft(Ui, `RPC '${e}' stream ${a} transport closed`),
            se.Ro());
        }),
        le(z, tg.EventType.ERROR, (he) => {
          ae ||
            ((ae = !0),
            vh(Ui, `RPC '${e}' stream ${a} transport errored:`, he),
            se.Ro(
              new Yt(rt.UNAVAILABLE, "The operation could not be completed")
            ));
        }),
        le(z, tg.EventType.MESSAGE, (he) => {
          var oe;
          if (!ae) {
            const F = he.data[0];
            ur(!!F);
            const ce = F,
              ye =
                ce.error ||
                ((oe = ce[0]) === null || oe === void 0 ? void 0 : oe.error);
            if (ye) {
              Ft(Ui, `RPC '${e}' stream ${a} received error:`, ye);
              const C = ye.status;
              let ke = (function (Ct) {
                  const xt = Yr[Ct];
                  if (xt !== void 0) return lN(xt);
                })(C),
                je = ye.message;
              ke === void 0 &&
                ((ke = rt.INTERNAL),
                (je =
                  "Unknown error status: " +
                  C +
                  " with message " +
                  ye.message)),
                (ae = !0),
                se.Ro(new Yt(ke, je)),
                z.close();
            } else Ft(Ui, `RPC '${e}' stream ${a} received:`, F), se.Vo(F);
          }
        }),
        le(g, mX.STAT_EVENT, (he) => {
          he.stat === Ok.PROXY
            ? Ft(Ui, `RPC '${e}' stream ${a} detected buffering proxy`)
            : he.stat === Ok.NOPROXY &&
              Ft(Ui, `RPC '${e}' stream ${a} detected no buffering proxy`);
        }),
        setTimeout(() => {
          se.Ao();
        }, 0),
        se
      );
    }
  }
  function _x() {
    return typeof document < "u" ? document : null;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function qv(t) {
    return new _6(t, !0);
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class xN {
    constructor(e, n, r = 1e3, a = 1.5, o = 6e4) {
      (this.si = e),
        (this.timerId = n),
        (this.Fo = r),
        (this.Mo = a),
        (this.xo = o),
        (this.Oo = 0),
        (this.No = null),
        (this.Bo = Date.now()),
        this.reset();
    }
    reset() {
      this.Oo = 0;
    }
    Lo() {
      this.Oo = this.xo;
    }
    ko(e) {
      this.cancel();
      const n = Math.floor(this.Oo + this.qo()),
        r = Math.max(0, Date.now() - this.Bo),
        a = Math.max(0, n - r);
      a > 0 &&
        Ft(
          "ExponentialBackoff",
          `Backing off for ${a} ms (base delay: ${this.Oo} ms, delay with jitter: ${n} ms, last attempt: ${r} ms ago)`
        ),
        (this.No = this.si.enqueueAfterDelay(
          this.timerId,
          a,
          () => ((this.Bo = Date.now()), e())
        )),
        (this.Oo *= this.Mo),
        this.Oo < this.Fo && (this.Oo = this.Fo),
        this.Oo > this.xo && (this.Oo = this.xo);
    }
    Qo() {
      this.No !== null && (this.No.skipDelay(), (this.No = null));
    }
    cancel() {
      this.No !== null && (this.No.cancel(), (this.No = null));
    }
    qo() {
      return (Math.random() - 0.5) * this.Oo;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class bN {
    constructor(e, n, r, a, o, u, g, x) {
      (this.si = e),
        (this.Ko = r),
        (this.$o = a),
        (this.connection = o),
        (this.authCredentialsProvider = u),
        (this.appCheckCredentialsProvider = g),
        (this.listener = x),
        (this.state = 0),
        (this.Uo = 0),
        (this.Wo = null),
        (this.Go = null),
        (this.stream = null),
        (this.zo = new xN(e, n));
    }
    jo() {
      return this.state === 1 || this.state === 5 || this.Ho();
    }
    Ho() {
      return this.state === 2 || this.state === 3;
    }
    start() {
      this.state !== 4 ? this.auth() : this.Jo();
    }
    async stop() {
      this.jo() && (await this.close(0));
    }
    Yo() {
      (this.state = 0), this.zo.reset();
    }
    Zo() {
      this.Ho() &&
        this.Wo === null &&
        (this.Wo = this.si.enqueueAfterDelay(this.Ko, 6e4, () => this.Xo()));
    }
    e_(e) {
      this.t_(), this.stream.send(e);
    }
    async Xo() {
      if (this.Ho()) return this.close(0);
    }
    t_() {
      this.Wo && (this.Wo.cancel(), (this.Wo = null));
    }
    n_() {
      this.Go && (this.Go.cancel(), (this.Go = null));
    }
    async close(e, n) {
      this.t_(),
        this.n_(),
        this.zo.cancel(),
        this.Uo++,
        e !== 4
          ? this.zo.reset()
          : n && n.code === rt.RESOURCE_EXHAUSTED
          ? (Yo(n.toString()),
            Yo(
              "Using maximum backoff delay to prevent overloading the backend."
            ),
            this.zo.Lo())
          : n &&
            n.code === rt.UNAUTHENTICATED &&
            this.state !== 3 &&
            (this.authCredentialsProvider.invalidateToken(),
            this.appCheckCredentialsProvider.invalidateToken()),
        this.stream !== null &&
          (this.r_(), this.stream.close(), (this.stream = null)),
        (this.state = e),
        await this.listener.Io(n);
    }
    r_() {}
    auth() {
      this.state = 1;
      const e = this.i_(this.Uo),
        n = this.Uo;
      Promise.all([
        this.authCredentialsProvider.getToken(),
        this.appCheckCredentialsProvider.getToken(),
      ]).then(
        ([r, a]) => {
          this.Uo === n && this.s_(r, a);
        },
        (r) => {
          e(() => {
            const a = new Yt(
              rt.UNKNOWN,
              "Fetching auth token failed: " + r.message
            );
            return this.o_(a);
          });
        }
      );
    }
    s_(e, n) {
      const r = this.i_(this.Uo);
      (this.stream = this.__(e, n)),
        this.stream.ho(() => {
          r(
            () => (
              (this.state = 2),
              (this.Go = this.si.enqueueAfterDelay(
                this.$o,
                1e4,
                () => (this.Ho() && (this.state = 3), Promise.resolve())
              )),
              this.listener.ho()
            )
          );
        }),
        this.stream.Io((a) => {
          r(() => this.o_(a));
        }),
        this.stream.onMessage((a) => {
          r(() => this.onMessage(a));
        });
    }
    Jo() {
      (this.state = 5),
        this.zo.ko(async () => {
          (this.state = 0), this.start();
        });
    }
    o_(e) {
      return (
        Ft("PersistentStream", `close with error: ${e}`),
        (this.stream = null),
        this.close(4, e)
      );
    }
    i_(e) {
      return (n) => {
        this.si.enqueueAndForget(() =>
          this.Uo === e
            ? n()
            : (Ft(
                "PersistentStream",
                "stream callback skipped by getCloseGuardedDispatcher."
              ),
              Promise.resolve())
        );
      };
    }
  }
  class d9 extends bN {
    constructor(e, n, r, a, o, u) {
      super(
        e,
        "listen_stream_connection_backoff",
        "listen_stream_idle",
        "health_check_timeout",
        n,
        r,
        a,
        u
      ),
        (this.serializer = o);
    }
    __(e, n) {
      return this.connection.vo("Listen", e, n);
    }
    onMessage(e) {
      this.zo.reset();
      const n = k6(this.serializer, e),
        r = (function (o) {
          if (!("targetChange" in o)) return hn.min();
          const u = o.targetChange;
          return u.targetIds && u.targetIds.length
            ? hn.min()
            : u.readTime
            ? oo(u.readTime)
            : hn.min();
        })(e);
      return this.listener.a_(n, r);
    }
    u_(e) {
      const n = {};
      (n.database = d0(this.serializer)),
        (n.addTarget = (function (o, u) {
          let g;
          const x = u.target;
          if (
            ((g = o0(x) ? { documents: T6(o, x) } : { query: I6(o, x) }),
            (g.targetId = u.targetId),
            u.resumeToken.approximateByteSize() > 0)
          ) {
            g.resumeToken = hN(o, u.resumeToken);
            const E = c0(o, u.expectedCount);
            E !== null && (g.expectedCount = E);
          } else if (u.snapshotVersion.compareTo(hn.min()) > 0) {
            g.readTime = Cm(o, u.snapshotVersion.toTimestamp());
            const E = c0(o, u.expectedCount);
            E !== null && (g.expectedCount = E);
          }
          return g;
        })(this.serializer, e));
      const r = R6(this.serializer, e);
      r && (n.labels = r), this.e_(n);
    }
    c_(e) {
      const n = {};
      (n.database = d0(this.serializer)), (n.removeTarget = e), this.e_(n);
    }
  }
  class f9 extends bN {
    constructor(e, n, r, a, o, u) {
      super(
        e,
        "write_stream_connection_backoff",
        "write_stream_idle",
        "health_check_timeout",
        n,
        r,
        a,
        u
      ),
        (this.serializer = o),
        (this.l_ = !1);
    }
    get h_() {
      return this.l_;
    }
    start() {
      (this.l_ = !1), (this.lastStreamToken = void 0), super.start();
    }
    r_() {
      this.l_ && this.P_([]);
    }
    __(e, n) {
      return this.connection.vo("Write", e, n);
    }
    onMessage(e) {
      if (
        (ur(!!e.streamToken), (this.lastStreamToken = e.streamToken), this.l_)
      ) {
        this.zo.reset();
        const n = C6(e.writeResults, e.commitTime),
          r = oo(e.commitTime);
        return this.listener.I_(r, n);
      }
      return (
        ur(!e.writeResults || e.writeResults.length === 0),
        (this.l_ = !0),
        this.listener.T_()
      );
    }
    E_() {
      const e = {};
      (e.database = d0(this.serializer)), this.e_(e);
    }
    P_(e) {
      const n = {
        streamToken: this.lastStreamToken,
        writes: e.map((r) => A6(this.serializer, r)),
      };
      this.e_(n);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class p9 extends class {} {
    constructor(e, n, r, a) {
      super(),
        (this.authCredentials = e),
        (this.appCheckCredentials = n),
        (this.connection = r),
        (this.serializer = a),
        (this.d_ = !1);
    }
    A_() {
      if (this.d_)
        throw new Yt(
          rt.FAILED_PRECONDITION,
          "The client has already been terminated."
        );
    }
    wo(e, n, r) {
      return (
        this.A_(),
        Promise.all([
          this.authCredentials.getToken(),
          this.appCheckCredentials.getToken(),
        ])
          .then(([a, o]) => this.connection.wo(e, n, r, a, o))
          .catch((a) => {
            throw a.name === "FirebaseError"
              ? (a.code === rt.UNAUTHENTICATED &&
                  (this.authCredentials.invalidateToken(),
                  this.appCheckCredentials.invalidateToken()),
                a)
              : new Yt(rt.UNKNOWN, a.toString());
          })
      );
    }
    Co(e, n, r, a) {
      return (
        this.A_(),
        Promise.all([
          this.authCredentials.getToken(),
          this.appCheckCredentials.getToken(),
        ])
          .then(([o, u]) => this.connection.Co(e, n, r, o, u, a))
          .catch((o) => {
            throw o.name === "FirebaseError"
              ? (o.code === rt.UNAUTHENTICATED &&
                  (this.authCredentials.invalidateToken(),
                  this.appCheckCredentials.invalidateToken()),
                o)
              : new Yt(rt.UNKNOWN, o.toString());
          })
      );
    }
    terminate() {
      this.d_ = !0;
    }
  }
  class g9 {
    constructor(e, n) {
      (this.asyncQueue = e),
        (this.onlineStateHandler = n),
        (this.state = "Unknown"),
        (this.V_ = 0),
        (this.m_ = null),
        (this.f_ = !0);
    }
    g_() {
      this.V_ === 0 &&
        (this.p_("Unknown"),
        (this.m_ = this.asyncQueue.enqueueAfterDelay(
          "online_state_timeout",
          1e4,
          () => (
            (this.m_ = null),
            this.y_("Backend didn't respond within 10 seconds."),
            this.p_("Offline"),
            Promise.resolve()
          )
        )));
    }
    w_(e) {
      this.state === "Online"
        ? this.p_("Unknown")
        : (this.V_++,
          this.V_ >= 1 &&
            (this.S_(),
            this.y_(
              `Connection failed 1 times. Most recent error: ${e.toString()}`
            ),
            this.p_("Offline")));
    }
    set(e) {
      this.S_(), (this.V_ = 0), e === "Online" && (this.f_ = !1), this.p_(e);
    }
    p_(e) {
      e !== this.state && ((this.state = e), this.onlineStateHandler(e));
    }
    y_(e) {
      const n = `Could not reach Cloud Firestore backend. ${e}
This typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;
      this.f_ ? (Yo(n), (this.f_ = !1)) : Ft("OnlineStateTracker", n);
    }
    S_() {
      this.m_ !== null && (this.m_.cancel(), (this.m_ = null));
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class m9 {
    constructor(e, n, r, a, o) {
      (this.localStore = e),
        (this.datastore = n),
        (this.asyncQueue = r),
        (this.remoteSyncer = {}),
        (this.b_ = []),
        (this.D_ = new Map()),
        (this.C_ = new Set()),
        (this.v_ = []),
        (this.F_ = o),
        this.F_.ro((u) => {
          r.enqueueAndForget(async () => {
            pu(this) &&
              (Ft(
                "RemoteStore",
                "Restarting streams for network reachability change."
              ),
              await (async function (x) {
                const E = gn(x);
                E.C_.add(4),
                  await ip(E),
                  E.M_.set("Unknown"),
                  E.C_.delete(4),
                  await Kv(E);
              })(this));
          });
        }),
        (this.M_ = new g9(r, a));
    }
  }
  async function Kv(t) {
    if (pu(t)) for (const e of t.v_) await e(!0);
  }
  async function ip(t) {
    for (const e of t.v_) await e(!1);
  }
  function wN(t, e) {
    const n = gn(t);
    n.D_.has(e.targetId) ||
      (n.D_.set(e.targetId, e), q1(n) ? G1(n) : zh(n).Ho() && Y1(n, e));
  }
  function _N(t, e) {
    const n = gn(t),
      r = zh(n);
    n.D_.delete(e),
      r.Ho() && SN(n, e),
      n.D_.size === 0 && (r.Ho() ? r.Zo() : pu(n) && n.M_.set("Unknown"));
  }
  function Y1(t, e) {
    if (
      (t.x_.Oe(e.targetId),
      e.resumeToken.approximateByteSize() > 0 ||
        e.snapshotVersion.compareTo(hn.min()) > 0)
    ) {
      const n = t.remoteSyncer.getRemoteKeysForTarget(e.targetId).size;
      e = e.withExpectedCount(n);
    }
    zh(t).u_(e);
  }
  function SN(t, e) {
    t.x_.Oe(e), zh(t).c_(e);
  }
  function G1(t) {
    (t.x_ = new y6({
      getRemoteKeysForTarget: (e) => t.remoteSyncer.getRemoteKeysForTarget(e),
      _t: (e) => t.D_.get(e) || null,
      nt: () => t.datastore.serializer.databaseId,
    })),
      zh(t).start(),
      t.M_.g_();
  }
  function q1(t) {
    return pu(t) && !zh(t).jo() && t.D_.size > 0;
  }
  function pu(t) {
    return gn(t).C_.size === 0;
  }
  function EN(t) {
    t.x_ = void 0;
  }
  async function v9(t) {
    t.D_.forEach((e, n) => {
      Y1(t, e);
    });
  }
  async function y9(t, e) {
    EN(t), q1(t) ? (t.M_.w_(e), G1(t)) : t.M_.set("Unknown");
  }
  async function x9(t, e, n) {
    if ((t.M_.set("Online"), e instanceof uN && e.state === 2 && e.cause))
      try {
        await (async function (a, o) {
          const u = o.cause;
          for (const g of o.targetIds)
            a.D_.has(g) &&
              (await a.remoteSyncer.rejectListen(g, u),
              a.D_.delete(g),
              a.x_.removeTarget(g));
        })(t, e);
      } catch (r) {
        Ft(
          "RemoteStore",
          "Failed to remove targets %s: %s ",
          e.targetIds.join(","),
          r
        ),
          await Tm(t, r);
      }
    else if (
      (e instanceof Tg ? t.x_.$e(e) : e instanceof cN ? t.x_.Je(e) : t.x_.Ge(e),
      !n.isEqual(hn.min()))
    )
      try {
        const r = await yN(t.localStore);
        n.compareTo(r) >= 0 &&
          (await (function (o, u) {
            const g = o.x_.it(u);
            return (
              g.targetChanges.forEach((x, E) => {
                if (x.resumeToken.approximateByteSize() > 0) {
                  const L = o.D_.get(E);
                  L && o.D_.set(E, L.withResumeToken(x.resumeToken, u));
                }
              }),
              g.targetMismatches.forEach((x, E) => {
                const L = o.D_.get(x);
                if (!L) return;
                o.D_.set(
                  x,
                  L.withResumeToken(Ji.EMPTY_BYTE_STRING, L.snapshotVersion)
                ),
                  SN(o, x);
                const z = new Tl(L.target, x, E, L.sequenceNumber);
                Y1(o, z);
              }),
              o.remoteSyncer.applyRemoteEvent(g)
            );
          })(t, n));
      } catch (r) {
        Ft("RemoteStore", "Failed to raise snapshot:", r), await Tm(t, r);
      }
  }
  async function Tm(t, e, n) {
    if (!tp(e)) throw e;
    t.C_.add(1),
      await ip(t),
      t.M_.set("Offline"),
      n || (n = () => yN(t.localStore)),
      t.asyncQueue.enqueueRetryable(async () => {
        Ft("RemoteStore", "Retrying IndexedDB access"),
          await n(),
          t.C_.delete(1),
          await Kv(t);
      });
  }
  function kN(t, e) {
    return e().catch((n) => Tm(t, n, e));
  }
  async function Qv(t) {
    const e = gn(t),
      n = Ql(e);
    let r = e.b_.length > 0 ? e.b_[e.b_.length - 1].batchId : -1;
    for (; b9(e); )
      try {
        const a = await i9(e.localStore, r);
        if (a === null) {
          e.b_.length === 0 && n.Zo();
          break;
        }
        (r = a.batchId), w9(e, a);
      } catch (a) {
        await Tm(e, a);
      }
    AN(e) && CN(e);
  }
  function b9(t) {
    return pu(t) && t.b_.length < 10;
  }
  function w9(t, e) {
    t.b_.push(e);
    const n = Ql(t);
    n.Ho() && n.h_ && n.P_(e.mutations);
  }
  function AN(t) {
    return pu(t) && !Ql(t).jo() && t.b_.length > 0;
  }
  function CN(t) {
    Ql(t).start();
  }
  async function _9(t) {
    Ql(t).E_();
  }
  async function S9(t) {
    const e = Ql(t);
    for (const n of t.b_) e.P_(n.mutations);
  }
  async function E9(t, e, n) {
    const r = t.b_.shift(),
      a = $1.from(r, e, n);
    await kN(t, () => t.remoteSyncer.applySuccessfulWrite(a)), await Qv(t);
  }
  async function k9(t, e) {
    e &&
      Ql(t).h_ &&
      (await (async function (r, a) {
        if (
          (function (u) {
            return g6(u) && u !== rt.ABORTED;
          })(a.code)
        ) {
          const o = r.b_.shift();
          Ql(r).Yo(),
            await kN(r, () => r.remoteSyncer.rejectFailedWrite(o.batchId, a)),
            await Qv(r);
        }
      })(t, e)),
      AN(t) && CN(t);
  }
  async function nA(t, e) {
    const n = gn(t);
    n.asyncQueue.verifyOperationInProgress(),
      Ft("RemoteStore", "RemoteStore received new credentials");
    const r = pu(n);
    n.C_.add(3),
      await ip(n),
      r && n.M_.set("Unknown"),
      await n.remoteSyncer.handleCredentialChange(e),
      n.C_.delete(3),
      await Kv(n);
  }
  async function A9(t, e) {
    const n = gn(t);
    e
      ? (n.C_.delete(2), await Kv(n))
      : e || (n.C_.add(2), await ip(n), n.M_.set("Unknown"));
  }
  function zh(t) {
    return (
      t.O_ ||
        ((t.O_ = (function (n, r, a) {
          const o = gn(n);
          return (
            o.A_(),
            new d9(
              r,
              o.connection,
              o.authCredentials,
              o.appCheckCredentials,
              o.serializer,
              a
            )
          );
        })(t.datastore, t.asyncQueue, {
          ho: v9.bind(null, t),
          Io: y9.bind(null, t),
          a_: x9.bind(null, t),
        })),
        t.v_.push(async (e) => {
          e
            ? (t.O_.Yo(), q1(t) ? G1(t) : t.M_.set("Unknown"))
            : (await t.O_.stop(), EN(t));
        })),
      t.O_
    );
  }
  function Ql(t) {
    return (
      t.N_ ||
        ((t.N_ = (function (n, r, a) {
          const o = gn(n);
          return (
            o.A_(),
            new f9(
              r,
              o.connection,
              o.authCredentials,
              o.appCheckCredentials,
              o.serializer,
              a
            )
          );
        })(t.datastore, t.asyncQueue, {
          ho: _9.bind(null, t),
          Io: k9.bind(null, t),
          T_: S9.bind(null, t),
          I_: E9.bind(null, t),
        })),
        t.v_.push(async (e) => {
          e
            ? (t.N_.Yo(), await Qv(t))
            : (await t.N_.stop(),
              t.b_.length > 0 &&
                (Ft(
                  "RemoteStore",
                  `Stopping write stream with ${t.b_.length} pending writes`
                ),
                (t.b_ = [])));
        })),
      t.N_
    );
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class K1 {
    constructor(e, n, r, a, o) {
      (this.asyncQueue = e),
        (this.timerId = n),
        (this.targetTimeMs = r),
        (this.op = a),
        (this.removalCallback = o),
        (this.deferred = new $l()),
        (this.then = this.deferred.promise.then.bind(this.deferred.promise)),
        this.deferred.promise.catch((u) => {});
    }
    get promise() {
      return this.deferred.promise;
    }
    static createAndSchedule(e, n, r, a, o) {
      const u = Date.now() + r,
        g = new K1(e, n, u, a, o);
      return g.start(r), g;
    }
    start(e) {
      this.timerHandle = setTimeout(() => this.handleDelayElapsed(), e);
    }
    skipDelay() {
      return this.handleDelayElapsed();
    }
    cancel(e) {
      this.timerHandle !== null &&
        (this.clearTimeout(),
        this.deferred.reject(
          new Yt(rt.CANCELLED, "Operation cancelled" + (e ? ": " + e : ""))
        ));
    }
    handleDelayElapsed() {
      this.asyncQueue.enqueueAndForget(() =>
        this.timerHandle !== null
          ? (this.clearTimeout(),
            this.op().then((e) => this.deferred.resolve(e)))
          : Promise.resolve()
      );
    }
    clearTimeout() {
      this.timerHandle !== null &&
        (this.removalCallback(this),
        clearTimeout(this.timerHandle),
        (this.timerHandle = null));
    }
  }
  function Q1(t, e) {
    if ((Yo("AsyncQueue", `${e}: ${t}`), tp(t)))
      return new Yt(rt.UNAVAILABLE, `${e}: ${t}`);
    throw t;
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class sh {
    constructor(e) {
      (this.comparator = e
        ? (n, r) => e(n, r) || Kt.comparator(n.key, r.key)
        : (n, r) => Kt.comparator(n.key, r.key)),
        (this.keyedMap = Sd()),
        (this.sortedSet = new Ir(this.comparator));
    }
    static emptySet(e) {
      return new sh(e.comparator);
    }
    has(e) {
      return this.keyedMap.get(e) != null;
    }
    get(e) {
      return this.keyedMap.get(e);
    }
    first() {
      return this.sortedSet.minKey();
    }
    last() {
      return this.sortedSet.maxKey();
    }
    isEmpty() {
      return this.sortedSet.isEmpty();
    }
    indexOf(e) {
      const n = this.keyedMap.get(e);
      return n ? this.sortedSet.indexOf(n) : -1;
    }
    get size() {
      return this.sortedSet.size;
    }
    forEach(e) {
      this.sortedSet.inorderTraversal((n, r) => (e(n), !1));
    }
    add(e) {
      const n = this.delete(e.key);
      return n.copy(n.keyedMap.insert(e.key, e), n.sortedSet.insert(e, null));
    }
    delete(e) {
      const n = this.get(e);
      return n
        ? this.copy(this.keyedMap.remove(e), this.sortedSet.remove(n))
        : this;
    }
    isEqual(e) {
      if (!(e instanceof sh) || this.size !== e.size) return !1;
      const n = this.sortedSet.getIterator(),
        r = e.sortedSet.getIterator();
      for (; n.hasNext(); ) {
        const a = n.getNext().key,
          o = r.getNext().key;
        if (!a.isEqual(o)) return !1;
      }
      return !0;
    }
    toString() {
      const e = [];
      return (
        this.forEach((n) => {
          e.push(n.toString());
        }),
        e.length === 0
          ? "DocumentSet ()"
          : `DocumentSet (
  ` +
            e.join(`  
`) +
            `
)`
      );
    }
    copy(e, n) {
      const r = new sh();
      return (
        (r.comparator = this.comparator), (r.keyedMap = e), (r.sortedSet = n), r
      );
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class rA {
    constructor() {
      this.B_ = new Ir(Kt.comparator);
    }
    track(e) {
      const n = e.doc.key,
        r = this.B_.get(n);
      r
        ? e.type !== 0 && r.type === 3
          ? (this.B_ = this.B_.insert(n, e))
          : e.type === 3 && r.type !== 1
          ? (this.B_ = this.B_.insert(n, { type: r.type, doc: e.doc }))
          : e.type === 2 && r.type === 2
          ? (this.B_ = this.B_.insert(n, { type: 2, doc: e.doc }))
          : e.type === 2 && r.type === 0
          ? (this.B_ = this.B_.insert(n, { type: 0, doc: e.doc }))
          : e.type === 1 && r.type === 0
          ? (this.B_ = this.B_.remove(n))
          : e.type === 1 && r.type === 2
          ? (this.B_ = this.B_.insert(n, { type: 1, doc: r.doc }))
          : e.type === 0 && r.type === 1
          ? (this.B_ = this.B_.insert(n, { type: 2, doc: e.doc }))
          : on()
        : (this.B_ = this.B_.insert(n, e));
    }
    L_() {
      const e = [];
      return (
        this.B_.inorderTraversal((n, r) => {
          e.push(r);
        }),
        e
      );
    }
  }
  class _h {
    constructor(e, n, r, a, o, u, g, x, E) {
      (this.query = e),
        (this.docs = n),
        (this.oldDocs = r),
        (this.docChanges = a),
        (this.mutatedKeys = o),
        (this.fromCache = u),
        (this.syncStateChanged = g),
        (this.excludesMetadataChanges = x),
        (this.hasCachedResults = E);
    }
    static fromInitialDocuments(e, n, r, a, o) {
      const u = [];
      return (
        n.forEach((g) => {
          u.push({ type: 0, doc: g });
        }),
        new _h(e, n, sh.emptySet(n), u, r, a, !0, !1, o)
      );
    }
    get hasPendingWrites() {
      return !this.mutatedKeys.isEmpty();
    }
    isEqual(e) {
      if (
        !(
          this.fromCache === e.fromCache &&
          this.hasCachedResults === e.hasCachedResults &&
          this.syncStateChanged === e.syncStateChanged &&
          this.mutatedKeys.isEqual(e.mutatedKeys) &&
          Wv(this.query, e.query) &&
          this.docs.isEqual(e.docs) &&
          this.oldDocs.isEqual(e.oldDocs)
        )
      )
        return !1;
      const n = this.docChanges,
        r = e.docChanges;
      if (n.length !== r.length) return !1;
      for (let a = 0; a < n.length; a++)
        if (n[a].type !== r[a].type || !n[a].doc.isEqual(r[a].doc)) return !1;
      return !0;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class C9 {
    constructor() {
      (this.k_ = void 0), (this.listeners = []);
    }
  }
  class T9 {
    constructor() {
      (this.queries = new Fh((e) => qO(e), Wv)),
        (this.onlineState = "Unknown"),
        (this.q_ = new Set());
    }
  }
  async function I9(t, e) {
    const n = gn(t),
      r = e.query;
    let a = !1,
      o = n.queries.get(r);
    if ((o || ((a = !0), (o = new C9())), a))
      try {
        o.k_ = await n.onListen(r);
      } catch (u) {
        const g = Q1(u, `Initialization of query '${Ru(e.query)}' failed`);
        return void e.onError(g);
      }
    n.queries.set(r, o),
      o.listeners.push(e),
      e.Q_(n.onlineState),
      o.k_ && e.K_(o.k_) && Z1(n);
  }
  async function P9(t, e) {
    const n = gn(t),
      r = e.query;
    let a = !1;
    const o = n.queries.get(r);
    if (o) {
      const u = o.listeners.indexOf(e);
      u >= 0 && (o.listeners.splice(u, 1), (a = o.listeners.length === 0));
    }
    if (a) return n.queries.delete(r), n.onUnlisten(r);
  }
  function R9(t, e) {
    const n = gn(t);
    let r = !1;
    for (const a of e) {
      const o = a.query,
        u = n.queries.get(o);
      if (u) {
        for (const g of u.listeners) g.K_(a) && (r = !0);
        u.k_ = a;
      }
    }
    r && Z1(n);
  }
  function O9(t, e, n) {
    const r = gn(t),
      a = r.queries.get(e);
    if (a) for (const o of a.listeners) o.onError(n);
    r.queries.delete(e);
  }
  function Z1(t) {
    t.q_.forEach((e) => {
      e.next();
    });
  }
  class N9 {
    constructor(e, n, r) {
      (this.query = e),
        (this.U_ = n),
        (this.W_ = !1),
        (this.G_ = null),
        (this.onlineState = "Unknown"),
        (this.options = r || {});
    }
    K_(e) {
      if (!this.options.includeMetadataChanges) {
        const r = [];
        for (const a of e.docChanges) a.type !== 3 && r.push(a);
        e = new _h(
          e.query,
          e.docs,
          e.oldDocs,
          r,
          e.mutatedKeys,
          e.fromCache,
          e.syncStateChanged,
          !0,
          e.hasCachedResults
        );
      }
      let n = !1;
      return (
        this.W_
          ? this.z_(e) && (this.U_.next(e), (n = !0))
          : this.j_(e, this.onlineState) && (this.H_(e), (n = !0)),
        (this.G_ = e),
        n
      );
    }
    onError(e) {
      this.U_.error(e);
    }
    Q_(e) {
      this.onlineState = e;
      let n = !1;
      return (
        this.G_ &&
          !this.W_ &&
          this.j_(this.G_, e) &&
          (this.H_(this.G_), (n = !0)),
        n
      );
    }
    j_(e, n) {
      if (!e.fromCache) return !0;
      const r = n !== "Offline";
      return (
        (!this.options.J_ || !r) &&
        (!e.docs.isEmpty() || e.hasCachedResults || n === "Offline")
      );
    }
    z_(e) {
      if (e.docChanges.length > 0) return !0;
      const n = this.G_ && this.G_.hasPendingWrites !== e.hasPendingWrites;
      return (
        !(!e.syncStateChanged && !n) &&
        this.options.includeMetadataChanges === !0
      );
    }
    H_(e) {
      (e = _h.fromInitialDocuments(
        e.query,
        e.docs,
        e.mutatedKeys,
        e.fromCache,
        e.hasCachedResults
      )),
        (this.W_ = !0),
        this.U_.next(e);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class TN {
    constructor(e) {
      this.key = e;
    }
  }
  class IN {
    constructor(e) {
      this.key = e;
    }
  }
  class L9 {
    constructor(e, n) {
      (this.query = e),
        (this.ia = n),
        (this.sa = null),
        (this.hasCachedResults = !1),
        (this.current = !1),
        (this.oa = Cn()),
        (this.mutatedKeys = Cn()),
        (this._a = KO(e)),
        (this.aa = new sh(this._a));
    }
    get ua() {
      return this.ia;
    }
    ca(e, n) {
      const r = n ? n.la : new rA(),
        a = n ? n.aa : this.aa;
      let o = n ? n.mutatedKeys : this.mutatedKeys,
        u = a,
        g = !1;
      const x =
          this.query.limitType === "F" && a.size === this.query.limit
            ? a.last()
            : null,
        E =
          this.query.limitType === "L" && a.size === this.query.limit
            ? a.first()
            : null;
      if (
        (e.inorderTraversal((L, z) => {
          const B = a.get(L),
            ae = Uv(this.query, z) ? z : null,
            se = !!B && this.mutatedKeys.has(B.key),
            le =
              !!ae &&
              (ae.hasLocalMutations ||
                (this.mutatedKeys.has(ae.key) && ae.hasCommittedMutations));
          let he = !1;
          B && ae
            ? B.data.isEqual(ae.data)
              ? se !== le && (r.track({ type: 3, doc: ae }), (he = !0))
              : this.ha(B, ae) ||
                (r.track({ type: 2, doc: ae }),
                (he = !0),
                ((x && this._a(ae, x) > 0) || (E && this._a(ae, E) < 0)) &&
                  (g = !0))
            : !B && ae
            ? (r.track({ type: 0, doc: ae }), (he = !0))
            : B &&
              !ae &&
              (r.track({ type: 1, doc: B }), (he = !0), (x || E) && (g = !0)),
            he &&
              (ae
                ? ((u = u.add(ae)), (o = le ? o.add(L) : o.delete(L)))
                : ((u = u.delete(L)), (o = o.delete(L))));
        }),
        this.query.limit !== null)
      )
        for (; u.size > this.query.limit; ) {
          const L = this.query.limitType === "F" ? u.last() : u.first();
          (u = u.delete(L.key)),
            (o = o.delete(L.key)),
            r.track({ type: 1, doc: L });
        }
      return { aa: u, la: r, Zi: g, mutatedKeys: o };
    }
    ha(e, n) {
      return (
        e.hasLocalMutations && n.hasCommittedMutations && !n.hasLocalMutations
      );
    }
    applyChanges(e, n, r, a) {
      const o = this.aa;
      (this.aa = e.aa), (this.mutatedKeys = e.mutatedKeys);
      const u = e.la.L_();
      u.sort(
        (L, z) =>
          (function (ae, se) {
            const le = (he) => {
              switch (he) {
                case 0:
                  return 1;
                case 2:
                case 3:
                  return 2;
                case 1:
                  return 0;
                default:
                  return on();
              }
            };
            return le(ae) - le(se);
          })(L.type, z.type) || this._a(L.doc, z.doc)
      ),
        this.Pa(r),
        (a = a != null && a);
      const g = n && !a ? this.Ia() : [],
        x = this.oa.size === 0 && this.current && !a ? 1 : 0,
        E = x !== this.sa;
      return (
        (this.sa = x),
        u.length !== 0 || E
          ? {
              snapshot: new _h(
                this.query,
                e.aa,
                o,
                u,
                e.mutatedKeys,
                x === 0,
                E,
                !1,
                !!r && r.resumeToken.approximateByteSize() > 0
              ),
              Ta: g,
            }
          : { Ta: g }
      );
    }
    Q_(e) {
      return this.current && e === "Offline"
        ? ((this.current = !1),
          this.applyChanges(
            {
              aa: this.aa,
              la: new rA(),
              mutatedKeys: this.mutatedKeys,
              Zi: !1,
            },
            !1
          ))
        : { Ta: [] };
    }
    Ea(e) {
      return (
        !this.ia.has(e) && !!this.aa.has(e) && !this.aa.get(e).hasLocalMutations
      );
    }
    Pa(e) {
      e &&
        (e.addedDocuments.forEach((n) => (this.ia = this.ia.add(n))),
        e.modifiedDocuments.forEach((n) => {}),
        e.removedDocuments.forEach((n) => (this.ia = this.ia.delete(n))),
        (this.current = e.current));
    }
    Ia() {
      if (!this.current) return [];
      const e = this.oa;
      (this.oa = Cn()),
        this.aa.forEach((r) => {
          this.Ea(r.key) && (this.oa = this.oa.add(r.key));
        });
      const n = [];
      return (
        e.forEach((r) => {
          this.oa.has(r) || n.push(new IN(r));
        }),
        this.oa.forEach((r) => {
          e.has(r) || n.push(new TN(r));
        }),
        n
      );
    }
    da(e) {
      (this.ia = e.ls), (this.oa = Cn());
      const n = this.ca(e.documents);
      return this.applyChanges(n, !0);
    }
    Aa() {
      return _h.fromInitialDocuments(
        this.query,
        this.aa,
        this.mutatedKeys,
        this.sa === 0,
        this.hasCachedResults
      );
    }
  }
  class D9 {
    constructor(e, n, r) {
      (this.query = e), (this.targetId = n), (this.view = r);
    }
  }
  class M9 {
    constructor(e) {
      (this.key = e), (this.Ra = !1);
    }
  }
  class j9 {
    constructor(e, n, r, a, o, u) {
      (this.localStore = e),
        (this.remoteStore = n),
        (this.eventManager = r),
        (this.sharedClientState = a),
        (this.currentUser = o),
        (this.maxConcurrentLimboResolutions = u),
        (this.Va = {}),
        (this.ma = new Fh((g) => qO(g), Wv)),
        (this.fa = new Map()),
        (this.ga = new Set()),
        (this.pa = new Ir(Kt.comparator)),
        (this.ya = new Map()),
        (this.wa = new W1()),
        (this.Sa = {}),
        (this.ba = new Map()),
        (this.Da = wh.Nn()),
        (this.onlineState = "Unknown"),
        (this.Ca = void 0);
    }
    get isPrimaryClient() {
      return this.Ca === !0;
    }
  }
  async function F9(t, e) {
    const n = G9(t);
    let r, a;
    const o = n.ma.get(e);
    if (o)
      (r = o.targetId),
        n.sharedClientState.addLocalQueryTarget(r),
        (a = o.view.Aa());
    else {
      const u = await s9(n.localStore, ao(e)),
        g = n.sharedClientState.addLocalQueryTarget(u.targetId);
      (r = u.targetId),
        (a = await z9(n, e, r, g === "current", u.resumeToken)),
        n.isPrimaryClient && wN(n.remoteStore, u);
    }
    return a;
  }
  async function z9(t, e, n, r, a) {
    t.va = (z, B, ae) =>
      (async function (le, he, oe, F) {
        let ce = he.view.ca(oe);
        ce.Zi &&
          (ce = await Jk(le.localStore, he.query, !1).then(
            ({ documents: je }) => he.view.ca(je, ce)
          ));
        const ye = F && F.targetChanges.get(he.targetId),
          C = F && F.targetMismatches.get(he.targetId) != null,
          ke = he.view.applyChanges(ce, le.isPrimaryClient, ye, C);
        return sA(le, he.targetId, ke.Ta), ke.snapshot;
      })(t, z, B, ae);
    const o = await Jk(t.localStore, e, !0),
      u = new L9(e, o.ls),
      g = u.ca(o.documents),
      x = rp.createSynthesizedTargetChangeForCurrentChange(
        n,
        r && t.onlineState !== "Offline",
        a
      ),
      E = u.applyChanges(g, t.isPrimaryClient, x);
    sA(t, n, E.Ta);
    const L = new D9(e, n, u);
    return (
      t.ma.set(e, L),
      t.fa.has(n) ? t.fa.get(n).push(e) : t.fa.set(n, [e]),
      E.snapshot
    );
  }
  async function V9(t, e) {
    const n = gn(t),
      r = n.ma.get(e),
      a = n.fa.get(r.targetId);
    if (a.length > 1)
      return (
        n.fa.set(
          r.targetId,
          a.filter((o) => !Wv(o, e))
        ),
        void n.ma.delete(e)
      );
    n.isPrimaryClient
      ? (n.sharedClientState.removeLocalQueryTarget(r.targetId),
        n.sharedClientState.isActiveQueryTarget(r.targetId) ||
          (await f0(n.localStore, r.targetId, !1)
            .then(() => {
              n.sharedClientState.clearQueryState(r.targetId),
                _N(n.remoteStore, r.targetId),
                p0(n, r.targetId);
            })
            .catch(ep)))
      : (p0(n, r.targetId), await f0(n.localStore, r.targetId, !0));
  }
  async function $9(t, e, n) {
    const r = q9(t);
    try {
      const a = await (function (u, g) {
        const x = gn(u),
          E = li.now(),
          L = g.reduce((ae, se) => ae.add(se.key), Cn());
        let z, B;
        return x.persistence
          .runTransaction("Locally write mutations", "readwrite", (ae) => {
            let se = Go(),
              le = Cn();
            return x.ss
              .getEntries(ae, L)
              .next((he) => {
                (se = he),
                  se.forEach((oe, F) => {
                    F.isValidDocument() || (le = le.add(oe));
                  });
              })
              .next(() => x.localDocuments.getOverlayedDocuments(ae, se))
              .next((he) => {
                z = he;
                const oe = [];
                for (const F of g) {
                  const ce = u6(F, z.get(F.key).overlayedDocument);
                  ce != null &&
                    oe.push(
                      new oc(F.key, ce, $O(ce.value.mapValue), Ca.exists(!0))
                    );
                }
                return x.mutationQueue.addMutationBatch(ae, E, oe, g);
              })
              .next((he) => {
                B = he;
                const oe = he.applyToLocalDocumentSet(z, le);
                return x.documentOverlayCache.saveOverlays(ae, he.batchId, oe);
              });
          })
          .then(() => ({ batchId: B.batchId, changes: ZO(z) }));
      })(r.localStore, e);
      r.sharedClientState.addPendingMutation(a.batchId),
        (function (u, g, x) {
          let E = u.Sa[u.currentUser.toKey()];
          E || (E = new Ir(Xn)),
            (E = E.insert(g, x)),
            (u.Sa[u.currentUser.toKey()] = E);
        })(r, a.batchId, n),
        await sp(r, a.changes),
        await Qv(r.remoteStore);
    } catch (a) {
      const o = Q1(a, "Failed to persist write");
      n.reject(o);
    }
  }
  async function PN(t, e) {
    const n = gn(t);
    try {
      const r = await n9(n.localStore, e);
      e.targetChanges.forEach((a, o) => {
        const u = n.ya.get(o);
        u &&
          (ur(
            a.addedDocuments.size +
              a.modifiedDocuments.size +
              a.removedDocuments.size <=
              1
          ),
          a.addedDocuments.size > 0
            ? (u.Ra = !0)
            : a.modifiedDocuments.size > 0
            ? ur(u.Ra)
            : a.removedDocuments.size > 0 && (ur(u.Ra), (u.Ra = !1)));
      }),
        await sp(n, r, e);
    } catch (r) {
      await ep(r);
    }
  }
  function iA(t, e, n) {
    const r = gn(t);
    if ((r.isPrimaryClient && n === 0) || (!r.isPrimaryClient && n === 1)) {
      const a = [];
      r.ma.forEach((o, u) => {
        const g = u.view.Q_(e);
        g.snapshot && a.push(g.snapshot);
      }),
        (function (u, g) {
          const x = gn(u);
          x.onlineState = g;
          let E = !1;
          x.queries.forEach((L, z) => {
            for (const B of z.listeners) B.Q_(g) && (E = !0);
          }),
            E && Z1(x);
        })(r.eventManager, e),
        a.length && r.Va.a_(a),
        (r.onlineState = e),
        r.isPrimaryClient && r.sharedClientState.setOnlineState(e);
    }
  }
  async function B9(t, e, n) {
    const r = gn(t);
    r.sharedClientState.updateQueryState(e, "rejected", n);
    const a = r.ya.get(e),
      o = a && a.key;
    if (o) {
      let u = new Ir(Kt.comparator);
      u = u.insert(o, Gi.newNoDocument(o, hn.min()));
      const g = Cn().add(o),
        x = new Gv(hn.min(), new Map(), new Ir(Xn), u, g);
      await PN(r, x), (r.pa = r.pa.remove(o)), r.ya.delete(e), J1(r);
    } else
      await f0(r.localStore, e, !1)
        .then(() => p0(r, e, n))
        .catch(ep);
  }
  async function H9(t, e) {
    const n = gn(t),
      r = e.batch.batchId;
    try {
      const a = await t9(n.localStore, e);
      ON(n, r, null),
        RN(n, r),
        n.sharedClientState.updateMutationState(r, "acknowledged"),
        await sp(n, a);
    } catch (a) {
      await ep(a);
    }
  }
  async function W9(t, e, n) {
    const r = gn(t);
    try {
      const a = await (function (u, g) {
        const x = gn(u);
        return x.persistence.runTransaction(
          "Reject batch",
          "readwrite-primary",
          (E) => {
            let L;
            return x.mutationQueue
              .lookupMutationBatch(E, g)
              .next(
                (z) => (
                  ur(z !== null),
                  (L = z.keys()),
                  x.mutationQueue.removeMutationBatch(E, z)
                )
              )
              .next(() => x.mutationQueue.performConsistencyCheck(E))
              .next(() =>
                x.documentOverlayCache.removeOverlaysForBatchId(E, L, g)
              )
              .next(() =>
                x.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(E, L)
              )
              .next(() => x.localDocuments.getDocuments(E, L));
          }
        );
      })(r.localStore, e);
      ON(r, e, n),
        RN(r, e),
        r.sharedClientState.updateMutationState(e, "rejected", n),
        await sp(r, a);
    } catch (a) {
      await ep(a);
    }
  }
  function RN(t, e) {
    (t.ba.get(e) || []).forEach((n) => {
      n.resolve();
    }),
      t.ba.delete(e);
  }
  function ON(t, e, n) {
    const r = gn(t);
    let a = r.Sa[r.currentUser.toKey()];
    if (a) {
      const o = a.get(e);
      o && (n ? o.reject(n) : o.resolve(), (a = a.remove(e))),
        (r.Sa[r.currentUser.toKey()] = a);
    }
  }
  function p0(t, e, n = null) {
    t.sharedClientState.removeLocalQueryTarget(e);
    for (const r of t.fa.get(e)) t.ma.delete(r), n && t.Va.Fa(r, n);
    t.fa.delete(e),
      t.isPrimaryClient &&
        t.wa.Rr(e).forEach((r) => {
          t.wa.containsKey(r) || NN(t, r);
        });
  }
  function NN(t, e) {
    t.ga.delete(e.path.canonicalString());
    const n = t.pa.get(e);
    n !== null &&
      (_N(t.remoteStore, n), (t.pa = t.pa.remove(e)), t.ya.delete(n), J1(t));
  }
  function sA(t, e, n) {
    for (const r of n)
      r instanceof TN
        ? (t.wa.addReference(r.key, e), U9(t, r))
        : r instanceof IN
        ? (Ft("SyncEngine", "Document no longer in limbo: " + r.key),
          t.wa.removeReference(r.key, e),
          t.wa.containsKey(r.key) || NN(t, r.key))
        : on();
  }
  function U9(t, e) {
    const n = e.key,
      r = n.path.canonicalString();
    t.pa.get(n) ||
      t.ga.has(r) ||
      (Ft("SyncEngine", "New document in limbo: " + n), t.ga.add(r), J1(t));
  }
  function J1(t) {
    for (; t.ga.size > 0 && t.pa.size < t.maxConcurrentLimboResolutions; ) {
      const e = t.ga.values().next().value;
      t.ga.delete(e);
      const n = new Kt(wr.fromString(e)),
        r = t.Da.next();
      t.ya.set(r, new M9(n)),
        (t.pa = t.pa.insert(n, r)),
        wN(
          t.remoteStore,
          new Tl(ao(GO(n.path)), r, "TargetPurposeLimboResolution", L1._e)
        );
    }
  }
  async function sp(t, e, n) {
    const r = gn(t),
      a = [],
      o = [],
      u = [];
    r.ma.isEmpty() ||
      (r.ma.forEach((g, x) => {
        u.push(
          r.va(x, e, n).then((E) => {
            if (
              ((E || n) &&
                r.isPrimaryClient &&
                r.sharedClientState.updateQueryState(
                  x.targetId,
                  E != null && E.fromCache ? "not-current" : "current"
                ),
              E)
            ) {
              a.push(E);
              const L = X1.Qi(x.targetId, E);
              o.push(L);
            }
          })
        );
      }),
      await Promise.all(u),
      r.Va.a_(a),
      await (async function (x, E) {
        const L = gn(x);
        try {
          await L.persistence.runTransaction(
            "notifyLocalViewChanges",
            "readwrite",
            (z) =>
              it.forEach(E, (B) =>
                it
                  .forEach(B.ki, (ae) =>
                    L.persistence.referenceDelegate.addReference(
                      z,
                      B.targetId,
                      ae
                    )
                  )
                  .next(() =>
                    it.forEach(B.qi, (ae) =>
                      L.persistence.referenceDelegate.removeReference(
                        z,
                        B.targetId,
                        ae
                      )
                    )
                  )
              )
          );
        } catch (z) {
          if (!tp(z)) throw z;
          Ft("LocalStore", "Failed to update sequence numbers: " + z);
        }
        for (const z of E) {
          const B = z.targetId;
          if (!z.fromCache) {
            const ae = L.ts.get(B),
              se = ae.snapshotVersion,
              le = ae.withLastLimboFreeSnapshotVersion(se);
            L.ts = L.ts.insert(B, le);
          }
        }
      })(r.localStore, o));
  }
  async function X9(t, e) {
    const n = gn(t);
    if (!n.currentUser.isEqual(e)) {
      Ft("SyncEngine", "User change. New user:", e.toKey());
      const r = await vN(n.localStore, e);
      (n.currentUser = e),
        (function (o, u) {
          o.ba.forEach((g) => {
            g.forEach((x) => {
              x.reject(new Yt(rt.CANCELLED, u));
            });
          }),
            o.ba.clear();
        })(
          n,
          "'waitForPendingWrites' promise is rejected due to a user change."
        ),
        n.sharedClientState.handleUserChange(
          e,
          r.removedBatchIds,
          r.addedBatchIds
        ),
        await sp(n, r._s);
    }
  }
  function Y9(t, e) {
    const n = gn(t),
      r = n.ya.get(e);
    if (r && r.Ra) return Cn().add(r.key);
    {
      let a = Cn();
      const o = n.fa.get(e);
      if (!o) return a;
      for (const u of o) {
        const g = n.ma.get(u);
        a = a.unionWith(g.view.ua);
      }
      return a;
    }
  }
  function G9(t) {
    const e = gn(t);
    return (
      (e.remoteStore.remoteSyncer.applyRemoteEvent = PN.bind(null, e)),
      (e.remoteStore.remoteSyncer.getRemoteKeysForTarget = Y9.bind(null, e)),
      (e.remoteStore.remoteSyncer.rejectListen = B9.bind(null, e)),
      (e.Va.a_ = R9.bind(null, e.eventManager)),
      (e.Va.Fa = O9.bind(null, e.eventManager)),
      e
    );
  }
  function q9(t) {
    const e = gn(t);
    return (
      (e.remoteStore.remoteSyncer.applySuccessfulWrite = H9.bind(null, e)),
      (e.remoteStore.remoteSyncer.rejectFailedWrite = W9.bind(null, e)),
      e
    );
  }
  class aA {
    constructor() {
      this.synchronizeTabs = !1;
    }
    async initialize(e) {
      (this.serializer = qv(e.databaseInfo.databaseId)),
        (this.sharedClientState = this.createSharedClientState(e)),
        (this.persistence = this.createPersistence(e)),
        await this.persistence.start(),
        (this.localStore = this.createLocalStore(e)),
        (this.gcScheduler = this.createGarbageCollectionScheduler(
          e,
          this.localStore
        )),
        (this.indexBackfillerScheduler = this.createIndexBackfillerScheduler(
          e,
          this.localStore
        ));
    }
    createGarbageCollectionScheduler(e, n) {
      return null;
    }
    createIndexBackfillerScheduler(e, n) {
      return null;
    }
    createLocalStore(e) {
      return e9(this.persistence, new Z6(), e.initialUser, this.serializer);
    }
    createPersistence(e) {
      return new q6(U1.jr, this.serializer);
    }
    createSharedClientState(e) {
      return new o9();
    }
    async terminate() {
      this.gcScheduler && this.gcScheduler.stop(),
        await this.sharedClientState.shutdown(),
        await this.persistence.shutdown();
    }
  }
  class K9 {
    async initialize(e, n) {
      this.localStore ||
        ((this.localStore = e.localStore),
        (this.sharedClientState = e.sharedClientState),
        (this.datastore = this.createDatastore(n)),
        (this.remoteStore = this.createRemoteStore(n)),
        (this.eventManager = this.createEventManager(n)),
        (this.syncEngine = this.createSyncEngine(n, !e.synchronizeTabs)),
        (this.sharedClientState.onlineStateHandler = (r) =>
          iA(this.syncEngine, r, 1)),
        (this.remoteStore.remoteSyncer.handleCredentialChange = X9.bind(
          null,
          this.syncEngine
        )),
        await A9(this.remoteStore, this.syncEngine.isPrimaryClient));
    }
    createEventManager(e) {
      return (function () {
        return new T9();
      })();
    }
    createDatastore(e) {
      const n = qv(e.databaseInfo.databaseId),
        r = (function (o) {
          return new h9(o);
        })(e.databaseInfo);
      return (function (o, u, g, x) {
        return new p9(o, u, g, x);
      })(e.authCredentials, e.appCheckCredentials, r, n);
    }
    createRemoteStore(e) {
      return (function (r, a, o, u, g) {
        return new m9(r, a, o, u, g);
      })(
        this.localStore,
        this.datastore,
        e.asyncQueue,
        (n) => iA(this.syncEngine, n, 0),
        (function () {
          return tA.D() ? new tA() : new l9();
        })()
      );
    }
    createSyncEngine(e, n) {
      return (function (a, o, u, g, x, E, L) {
        const z = new j9(a, o, u, g, x, E);
        return L && (z.Ca = !0), z;
      })(
        this.localStore,
        this.remoteStore,
        this.eventManager,
        this.sharedClientState,
        e.initialUser,
        e.maxConcurrentLimboResolutions,
        n
      );
    }
    terminate() {
      return (async function (n) {
        const r = gn(n);
        Ft("RemoteStore", "RemoteStore shutting down."),
          r.C_.add(5),
          await ip(r),
          r.F_.shutdown(),
          r.M_.set("Unknown");
      })(this.remoteStore);
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Q9 {
    constructor(e) {
      (this.observer = e), (this.muted = !1);
    }
    next(e) {
      this.observer.next && this.Oa(this.observer.next, e);
    }
    error(e) {
      this.observer.error
        ? this.Oa(this.observer.error, e)
        : Yo("Uncaught Error in snapshot listener:", e.toString());
    }
    Na() {
      this.muted = !0;
    }
    Oa(e, n) {
      this.muted ||
        setTimeout(() => {
          this.muted || e(n);
        }, 0);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Z9 {
    constructor(e, n, r, a) {
      (this.authCredentials = e),
        (this.appCheckCredentials = n),
        (this.asyncQueue = r),
        (this.databaseInfo = a),
        (this.user = Xi.UNAUTHENTICATED),
        (this.clientId = FO.newId()),
        (this.authCredentialListener = () => Promise.resolve()),
        (this.appCheckCredentialListener = () => Promise.resolve()),
        this.authCredentials.start(r, async (o) => {
          Ft("FirestoreClient", "Received user=", o.uid),
            await this.authCredentialListener(o),
            (this.user = o);
        }),
        this.appCheckCredentials.start(
          r,
          (o) => (
            Ft("FirestoreClient", "Received new app check token=", o),
            this.appCheckCredentialListener(o, this.user)
          )
        );
    }
    async getConfiguration() {
      return {
        asyncQueue: this.asyncQueue,
        databaseInfo: this.databaseInfo,
        clientId: this.clientId,
        authCredentials: this.authCredentials,
        appCheckCredentials: this.appCheckCredentials,
        initialUser: this.user,
        maxConcurrentLimboResolutions: 100,
      };
    }
    setCredentialChangeListener(e) {
      this.authCredentialListener = e;
    }
    setAppCheckTokenChangeListener(e) {
      this.appCheckCredentialListener = e;
    }
    verifyNotTerminated() {
      if (this.asyncQueue.isShuttingDown)
        throw new Yt(
          rt.FAILED_PRECONDITION,
          "The client has already been terminated."
        );
    }
    terminate() {
      this.asyncQueue.enterRestrictedMode();
      const e = new $l();
      return (
        this.asyncQueue.enqueueAndForgetEvenWhileRestricted(async () => {
          try {
            this._onlineComponents &&
              (await this._onlineComponents.terminate()),
              this._offlineComponents &&
                (await this._offlineComponents.terminate()),
              this.authCredentials.shutdown(),
              this.appCheckCredentials.shutdown(),
              e.resolve();
          } catch (n) {
            const r = Q1(n, "Failed to shutdown persistence");
            e.reject(r);
          }
        }),
        e.promise
      );
    }
  }
  async function Sx(t, e) {
    t.asyncQueue.verifyOperationInProgress(),
      Ft("FirestoreClient", "Initializing OfflineComponentProvider");
    const n = await t.getConfiguration();
    await e.initialize(n);
    let r = n.initialUser;
    t.setCredentialChangeListener(async (a) => {
      r.isEqual(a) || (await vN(e.localStore, a), (r = a));
    }),
      e.persistence.setDatabaseDeletedListener(() => t.terminate()),
      (t._offlineComponents = e);
  }
  async function oA(t, e) {
    t.asyncQueue.verifyOperationInProgress();
    const n = await eY(t);
    Ft("FirestoreClient", "Initializing OnlineComponentProvider");
    const r = await t.getConfiguration();
    await e.initialize(n, r),
      t.setCredentialChangeListener((a) => nA(e.remoteStore, a)),
      t.setAppCheckTokenChangeListener((a, o) => nA(e.remoteStore, o)),
      (t._onlineComponents = e);
  }
  function J9(t) {
    return t.name === "FirebaseError"
      ? t.code === rt.FAILED_PRECONDITION || t.code === rt.UNIMPLEMENTED
      : !(typeof DOMException < "u" && t instanceof DOMException) ||
          t.code === 22 ||
          t.code === 20 ||
          t.code === 11;
  }
  async function eY(t) {
    if (!t._offlineComponents)
      if (t._uninitializedComponentsProvider) {
        Ft("FirestoreClient", "Using user provided OfflineComponentProvider");
        try {
          await Sx(t, t._uninitializedComponentsProvider._offline);
        } catch (e) {
          const n = e;
          if (!J9(n)) throw n;
          vh(
            "Error using user provided cache. Falling back to memory cache: " +
              n
          ),
            await Sx(t, new aA());
        }
      } else
        Ft("FirestoreClient", "Using default OfflineComponentProvider"),
          await Sx(t, new aA());
    return t._offlineComponents;
  }
  async function LN(t) {
    return (
      t._onlineComponents ||
        (t._uninitializedComponentsProvider
          ? (Ft(
              "FirestoreClient",
              "Using user provided OnlineComponentProvider"
            ),
            await oA(t, t._uninitializedComponentsProvider._online))
          : (Ft("FirestoreClient", "Using default OnlineComponentProvider"),
            await oA(t, new K9()))),
      t._onlineComponents
    );
  }
  function tY(t) {
    return LN(t).then((e) => e.syncEngine);
  }
  async function nY(t) {
    const e = await LN(t),
      n = e.eventManager;
    return (
      (n.onListen = F9.bind(null, e.syncEngine)),
      (n.onUnlisten = V9.bind(null, e.syncEngine)),
      n
    );
  }
  function rY(t, e, n = {}) {
    const r = new $l();
    return (
      t.asyncQueue.enqueueAndForget(async () =>
        (function (o, u, g, x, E) {
          const L = new Q9({
              next: (B) => {
                u.enqueueAndForget(() => P9(o, z)),
                  B.fromCache && x.source === "server"
                    ? E.reject(
                        new Yt(
                          rt.UNAVAILABLE,
                          'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)'
                        )
                      )
                    : E.resolve(B);
              },
              error: (B) => E.reject(B),
            }),
            z = new N9(g, L, { includeMetadataChanges: !0, J_: !0 });
          return I9(o, z);
        })(await nY(t), t.asyncQueue, e, n, r)
      ),
      r.promise
    );
  }
  /**
   * @license
   * Copyright 2023 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function DN(t) {
    const e = {};
    return (
      t.timeoutSeconds !== void 0 && (e.timeoutSeconds = t.timeoutSeconds), e
    );
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const lA = new Map();
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function MN(t, e, n) {
    if (!n)
      throw new Yt(
        rt.INVALID_ARGUMENT,
        `Function ${t}() cannot be called with an empty ${e}.`
      );
  }
  function iY(t, e, n, r) {
    if (e === !0 && r === !0)
      throw new Yt(
        rt.INVALID_ARGUMENT,
        `${t} and ${n} cannot be used together.`
      );
  }
  function cA(t) {
    if (!Kt.isDocumentKey(t))
      throw new Yt(
        rt.INVALID_ARGUMENT,
        `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`
      );
  }
  function uA(t) {
    if (Kt.isDocumentKey(t))
      throw new Yt(
        rt.INVALID_ARGUMENT,
        `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`
      );
  }
  function e_(t) {
    if (t === void 0) return "undefined";
    if (t === null) return "null";
    if (typeof t == "string")
      return (
        t.length > 20 && (t = `${t.substring(0, 20)}...`), JSON.stringify(t)
      );
    if (typeof t == "number" || typeof t == "boolean") return "" + t;
    if (typeof t == "object") {
      if (t instanceof Array) return "an array";
      {
        const e = (function (r) {
          return r.constructor ? r.constructor.name : null;
        })(t);
        return e ? `a custom ${e} object` : "an object";
      }
    }
    return typeof t == "function" ? "a function" : on();
  }
  function Jc(t, e) {
    if (("_delegate" in t && (t = t._delegate), !(t instanceof e))) {
      if (e.name === t.constructor.name)
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?"
        );
      {
        const n = e_(t);
        throw new Yt(
          rt.INVALID_ARGUMENT,
          `Expected type '${e.name}', but it was: ${n}`
        );
      }
    }
    return t;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class hA {
    constructor(e) {
      var n, r;
      if (e.host === void 0) {
        if (e.ssl !== void 0)
          throw new Yt(
            rt.INVALID_ARGUMENT,
            "Can't provide ssl option if host option is not set"
          );
        (this.host = "firestore.googleapis.com"), (this.ssl = !0);
      } else
        (this.host = e.host),
          (this.ssl = (n = e.ssl) === null || n === void 0 || n);
      if (
        ((this.credentials = e.credentials),
        (this.ignoreUndefinedProperties = !!e.ignoreUndefinedProperties),
        (this.localCache = e.localCache),
        e.cacheSizeBytes === void 0)
      )
        this.cacheSizeBytes = 41943040;
      else {
        if (e.cacheSizeBytes !== -1 && e.cacheSizeBytes < 1048576)
          throw new Yt(
            rt.INVALID_ARGUMENT,
            "cacheSizeBytes must be at least 1048576"
          );
        this.cacheSizeBytes = e.cacheSizeBytes;
      }
      iY(
        "experimentalForceLongPolling",
        e.experimentalForceLongPolling,
        "experimentalAutoDetectLongPolling",
        e.experimentalAutoDetectLongPolling
      ),
        (this.experimentalForceLongPolling = !!e.experimentalForceLongPolling),
        this.experimentalForceLongPolling
          ? (this.experimentalAutoDetectLongPolling = !1)
          : e.experimentalAutoDetectLongPolling === void 0
          ? (this.experimentalAutoDetectLongPolling = !0)
          : (this.experimentalAutoDetectLongPolling =
              !!e.experimentalAutoDetectLongPolling),
        (this.experimentalLongPollingOptions = DN(
          (r = e.experimentalLongPollingOptions) !== null && r !== void 0
            ? r
            : {}
        )),
        (function (o) {
          if (o.timeoutSeconds !== void 0) {
            if (isNaN(o.timeoutSeconds))
              throw new Yt(
                rt.INVALID_ARGUMENT,
                `invalid long polling timeout: ${o.timeoutSeconds} (must not be NaN)`
              );
            if (o.timeoutSeconds < 5)
              throw new Yt(
                rt.INVALID_ARGUMENT,
                `invalid long polling timeout: ${o.timeoutSeconds} (minimum allowed value is 5)`
              );
            if (o.timeoutSeconds > 30)
              throw new Yt(
                rt.INVALID_ARGUMENT,
                `invalid long polling timeout: ${o.timeoutSeconds} (maximum allowed value is 30)`
              );
          }
        })(this.experimentalLongPollingOptions),
        (this.useFetchStreams = !!e.useFetchStreams);
    }
    isEqual(e) {
      return (
        this.host === e.host &&
        this.ssl === e.ssl &&
        this.credentials === e.credentials &&
        this.cacheSizeBytes === e.cacheSizeBytes &&
        this.experimentalForceLongPolling === e.experimentalForceLongPolling &&
        this.experimentalAutoDetectLongPolling ===
          e.experimentalAutoDetectLongPolling &&
        (function (r, a) {
          return r.timeoutSeconds === a.timeoutSeconds;
        })(
          this.experimentalLongPollingOptions,
          e.experimentalLongPollingOptions
        ) &&
        this.ignoreUndefinedProperties === e.ignoreUndefinedProperties &&
        this.useFetchStreams === e.useFetchStreams
      );
    }
  }
  class Zv {
    constructor(e, n, r, a) {
      (this._authCredentials = e),
        (this._appCheckCredentials = n),
        (this._databaseId = r),
        (this._app = a),
        (this.type = "firestore-lite"),
        (this._persistenceKey = "(lite)"),
        (this._settings = new hA({})),
        (this._settingsFrozen = !1);
    }
    get app() {
      if (!this._app)
        throw new Yt(
          rt.FAILED_PRECONDITION,
          "Firestore was not initialized using the Firebase SDK. 'app' is not available"
        );
      return this._app;
    }
    get _initialized() {
      return this._settingsFrozen;
    }
    get _terminated() {
      return this._terminateTask !== void 0;
    }
    _setSettings(e) {
      if (this._settingsFrozen)
        throw new Yt(
          rt.FAILED_PRECONDITION,
          "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object."
        );
      (this._settings = new hA(e)),
        e.credentials !== void 0 &&
          (this._authCredentials = (function (r) {
            if (!r) return new xX();
            switch (r.type) {
              case "firstParty":
                return new SX(
                  r.sessionIndex || "0",
                  r.iamToken || null,
                  r.authTokenFactory || null
                );
              case "provider":
                return r.client;
              default:
                throw new Yt(
                  rt.INVALID_ARGUMENT,
                  "makeAuthCredentialsProvider failed due to invalid credential type"
                );
            }
          })(e.credentials));
    }
    _getSettings() {
      return this._settings;
    }
    _freezeSettings() {
      return (this._settingsFrozen = !0), this._settings;
    }
    _delete() {
      return (
        this._terminateTask || (this._terminateTask = this._terminate()),
        this._terminateTask
      );
    }
    toJSON() {
      return {
        app: this._app,
        databaseId: this._databaseId,
        settings: this._settings,
      };
    }
    _terminate() {
      return (
        (function (n) {
          const r = lA.get(n);
          r &&
            (Ft("ComponentProvider", "Removing Datastore"),
            lA.delete(n),
            r.terminate());
        })(this),
        Promise.resolve()
      );
    }
  }
  function sY(t, e, n, r = {}) {
    var a;
    const o = (t = Jc(t, Zv))._getSettings(),
      u = `${e}:${n}`;
    if (
      (o.host !== "firestore.googleapis.com" &&
        o.host !== u &&
        vh(
          "Host has been set in both settings() and connectFirestoreEmulator(), emulator host will be used."
        ),
      t._setSettings(Object.assign(Object.assign({}, o), { host: u, ssl: !1 })),
      r.mockUserToken)
    ) {
      let g, x;
      if (typeof r.mockUserToken == "string")
        (g = r.mockUserToken), (x = Xi.MOCK_USER);
      else {
        g = hR(
          r.mockUserToken,
          (a = t._app) === null || a === void 0 ? void 0 : a.options.projectId
        );
        const E = r.mockUserToken.sub || r.mockUserToken.user_id;
        if (!E)
          throw new Yt(
            rt.INVALID_ARGUMENT,
            "mockUserToken must contain 'sub' or 'user_id' field!"
          );
        x = new Xi(E);
      }
      t._authCredentials = new bX(new jO(g, x));
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Jv {
    constructor(e, n, r) {
      (this.converter = n),
        (this._query = r),
        (this.type = "query"),
        (this.firestore = e);
    }
    withConverter(e) {
      return new Jv(this.firestore, e, this._query);
    }
  }
  class oa {
    constructor(e, n, r) {
      (this.converter = n),
        (this._key = r),
        (this.type = "document"),
        (this.firestore = e);
    }
    get _path() {
      return this._key.path;
    }
    get id() {
      return this._key.path.lastSegment();
    }
    get path() {
      return this._key.path.canonicalString();
    }
    get parent() {
      return new Bl(this.firestore, this.converter, this._key.path.popLast());
    }
    withConverter(e) {
      return new oa(this.firestore, e, this._key);
    }
  }
  class Bl extends Jv {
    constructor(e, n, r) {
      super(e, n, GO(r)), (this._path = r), (this.type = "collection");
    }
    get id() {
      return this._query.path.lastSegment();
    }
    get path() {
      return this._query.path.canonicalString();
    }
    get parent() {
      const e = this._path.popLast();
      return e.isEmpty() ? null : new oa(this.firestore, null, new Kt(e));
    }
    withConverter(e) {
      return new Bl(this.firestore, e, this._path);
    }
  }
  function Hl(t, e, ...n) {
    if (((t = ci(t)), MN("collection", "path", e), t instanceof Zv)) {
      const r = wr.fromString(e, ...n);
      return uA(r), new Bl(t, null, r);
    }
    {
      if (!(t instanceof oa || t instanceof Bl))
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore"
        );
      const r = t._path.child(wr.fromString(e, ...n));
      return uA(r), new Bl(t.firestore, null, r);
    }
  }
  function Zl(t, e, ...n) {
    if (
      ((t = ci(t)),
      arguments.length === 1 && (e = FO.newId()),
      MN("doc", "path", e),
      t instanceof Zv)
    ) {
      const r = wr.fromString(e, ...n);
      return cA(r), new oa(t, null, new Kt(r));
    }
    {
      if (!(t instanceof oa || t instanceof Bl))
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore"
        );
      const r = t._path.child(wr.fromString(e, ...n));
      return (
        cA(r),
        new oa(t.firestore, t instanceof Bl ? t.converter : null, new Kt(r))
      );
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class aY {
    constructor() {
      (this.Ja = Promise.resolve()),
        (this.Ya = []),
        (this.Za = !1),
        (this.Xa = []),
        (this.eu = null),
        (this.tu = !1),
        (this.nu = !1),
        (this.ru = []),
        (this.zo = new xN(this, "async_queue_retry")),
        (this.iu = () => {
          const n = _x();
          n &&
            Ft(
              "AsyncQueue",
              "Visibility state changed to " + n.visibilityState
            ),
            this.zo.Qo();
        });
      const e = _x();
      e &&
        typeof e.addEventListener == "function" &&
        e.addEventListener("visibilitychange", this.iu);
    }
    get isShuttingDown() {
      return this.Za;
    }
    enqueueAndForget(e) {
      this.enqueue(e);
    }
    enqueueAndForgetEvenWhileRestricted(e) {
      this.su(), this.ou(e);
    }
    enterRestrictedMode(e) {
      if (!this.Za) {
        (this.Za = !0), (this.nu = e || !1);
        const n = _x();
        n &&
          typeof n.removeEventListener == "function" &&
          n.removeEventListener("visibilitychange", this.iu);
      }
    }
    enqueue(e) {
      if ((this.su(), this.Za)) return new Promise(() => {});
      const n = new $l();
      return this.ou(() =>
        this.Za && this.nu
          ? Promise.resolve()
          : (e().then(n.resolve, n.reject), n.promise)
      ).then(() => n.promise);
    }
    enqueueRetryable(e) {
      this.enqueueAndForget(() => (this.Ya.push(e), this._u()));
    }
    async _u() {
      if (this.Ya.length !== 0) {
        try {
          await this.Ya[0](), this.Ya.shift(), this.zo.reset();
        } catch (e) {
          if (!tp(e)) throw e;
          Ft("AsyncQueue", "Operation failed with retryable error: " + e);
        }
        this.Ya.length > 0 && this.zo.ko(() => this._u());
      }
    }
    ou(e) {
      const n = this.Ja.then(
        () => (
          (this.tu = !0),
          e()
            .catch((r) => {
              (this.eu = r), (this.tu = !1);
              const a = (function (u) {
                let g = u.message || "";
                return (
                  u.stack &&
                    (g = u.stack.includes(u.message)
                      ? u.stack
                      : u.message +
                        `
` +
                        u.stack),
                  g
                );
              })(r);
              throw (Yo("INTERNAL UNHANDLED ERROR: ", a), r);
            })
            .then((r) => ((this.tu = !1), r))
        )
      );
      return (this.Ja = n), n;
    }
    enqueueAfterDelay(e, n, r) {
      this.su(), this.ru.indexOf(e) > -1 && (n = 0);
      const a = K1.createAndSchedule(this, e, n, r, (o) => this.au(o));
      return this.Xa.push(a), a;
    }
    su() {
      this.eu && on();
    }
    verifyOperationInProgress() {}
    async uu() {
      let e;
      do (e = this.Ja), await e;
      while (e !== this.Ja);
    }
    cu(e) {
      for (const n of this.Xa) if (n.timerId === e) return !0;
      return !1;
    }
    lu(e) {
      return this.uu().then(() => {
        this.Xa.sort((n, r) => n.targetTimeMs - r.targetTimeMs);
        for (const n of this.Xa)
          if ((n.skipDelay(), e !== "all" && n.timerId === e)) break;
        return this.uu();
      });
    }
    hu(e) {
      this.ru.push(e);
    }
    au(e) {
      const n = this.Xa.indexOf(e);
      this.Xa.splice(n, 1);
    }
  }
  class ap extends Zv {
    constructor(e, n, r, a) {
      super(e, n, r, a),
        (this.type = "firestore"),
        (this._queue = (function () {
          return new aY();
        })()),
        (this._persistenceKey = (a == null ? void 0 : a.name) || "[DEFAULT]");
    }
    _terminate() {
      return (
        this._firestoreClient || FN(this), this._firestoreClient.terminate()
      );
    }
  }
  function Ta(t, e) {
    const n = typeof t == "object" ? t : t1(),
      r = typeof t == "string" ? t : e || "(default)",
      a = kv(n, "firestore").getImmediate({ identifier: r });
    if (!a._initialized) {
      const o = lR("firestore");
      o && sY(a, ...o);
    }
    return a;
  }
  function jN(t) {
    return (
      t._firestoreClient || FN(t),
      t._firestoreClient.verifyNotTerminated(),
      t._firestoreClient
    );
  }
  function FN(t) {
    var e, n, r;
    const a = t._freezeSettings(),
      o = (function (g, x, E, L) {
        return new DX(
          g,
          x,
          E,
          L.host,
          L.ssl,
          L.experimentalForceLongPolling,
          L.experimentalAutoDetectLongPolling,
          DN(L.experimentalLongPollingOptions),
          L.useFetchStreams
        );
      })(
        t._databaseId,
        ((e = t._app) === null || e === void 0 ? void 0 : e.options.appId) ||
          "",
        t._persistenceKey,
        a
      );
    (t._firestoreClient = new Z9(
      t._authCredentials,
      t._appCheckCredentials,
      t._queue,
      o
    )),
      !((n = a.localCache) === null || n === void 0) &&
        n._offlineComponentProvider &&
        !((r = a.localCache) === null || r === void 0) &&
        r._onlineComponentProvider &&
        (t._firestoreClient._uninitializedComponentsProvider = {
          _offlineKind: a.localCache.kind,
          _offline: a.localCache._offlineComponentProvider,
          _online: a.localCache._onlineComponentProvider,
        });
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Sh {
    constructor(e) {
      this._byteString = e;
    }
    static fromBase64String(e) {
      try {
        return new Sh(Ji.fromBase64String(e));
      } catch (n) {
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Failed to construct data from Base64 string: " + n
        );
      }
    }
    static fromUint8Array(e) {
      return new Sh(Ji.fromUint8Array(e));
    }
    toBase64() {
      return this._byteString.toBase64();
    }
    toUint8Array() {
      return this._byteString.toUint8Array();
    }
    toString() {
      return "Bytes(base64: " + this.toBase64() + ")";
    }
    isEqual(e) {
      return this._byteString.isEqual(e._byteString);
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class ey {
    constructor(...e) {
      for (let n = 0; n < e.length; ++n)
        if (e[n].length === 0)
          throw new Yt(
            rt.INVALID_ARGUMENT,
            "Invalid field name at argument $(i + 1). Field names must not be empty."
          );
      this._internalPath = new Oi(e);
    }
    isEqual(e) {
      return this._internalPath.isEqual(e._internalPath);
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class ty {
    constructor(e) {
      this._methodName = e;
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class t_ {
    constructor(e, n) {
      if (!isFinite(e) || e < -90 || e > 90)
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Latitude must be a number between -90 and 90, but was: " + e
        );
      if (!isFinite(n) || n < -180 || n > 180)
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "Longitude must be a number between -180 and 180, but was: " + n
        );
      (this._lat = e), (this._long = n);
    }
    get latitude() {
      return this._lat;
    }
    get longitude() {
      return this._long;
    }
    isEqual(e) {
      return this._lat === e._lat && this._long === e._long;
    }
    toJSON() {
      return { latitude: this._lat, longitude: this._long };
    }
    _compareTo(e) {
      return Xn(this._lat, e._lat) || Xn(this._long, e._long);
    }
  }
  /**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const oY = /^__.*__$/;
  class lY {
    constructor(e, n, r) {
      (this.data = e), (this.fieldMask = n), (this.fieldTransforms = r);
    }
    toMutation(e, n) {
      return this.fieldMask !== null
        ? new oc(e, this.data, this.fieldMask, n, this.fieldTransforms)
        : new np(e, this.data, n, this.fieldTransforms);
    }
  }
  class zN {
    constructor(e, n, r) {
      (this.data = e), (this.fieldMask = n), (this.fieldTransforms = r);
    }
    toMutation(e, n) {
      return new oc(e, this.data, this.fieldMask, n, this.fieldTransforms);
    }
  }
  function VN(t) {
    switch (t) {
      case 0:
      case 2:
      case 1:
        return !0;
      case 3:
      case 4:
        return !1;
      default:
        throw on();
    }
  }
  class n_ {
    constructor(e, n, r, a, o, u) {
      (this.settings = e),
        (this.databaseId = n),
        (this.serializer = r),
        (this.ignoreUndefinedProperties = a),
        o === void 0 && this.Pu(),
        (this.fieldTransforms = o || []),
        (this.fieldMask = u || []);
    }
    get path() {
      return this.settings.path;
    }
    get Iu() {
      return this.settings.Iu;
    }
    Tu(e) {
      return new n_(
        Object.assign(Object.assign({}, this.settings), e),
        this.databaseId,
        this.serializer,
        this.ignoreUndefinedProperties,
        this.fieldTransforms,
        this.fieldMask
      );
    }
    Eu(e) {
      var n;
      const r = (n = this.path) === null || n === void 0 ? void 0 : n.child(e),
        a = this.Tu({ path: r, du: !1 });
      return a.Au(e), a;
    }
    Ru(e) {
      var n;
      const r = (n = this.path) === null || n === void 0 ? void 0 : n.child(e),
        a = this.Tu({ path: r, du: !1 });
      return a.Pu(), a;
    }
    Vu(e) {
      return this.Tu({ path: void 0, du: !0 });
    }
    mu(e) {
      return Im(
        e,
        this.settings.methodName,
        this.settings.fu || !1,
        this.path,
        this.settings.gu
      );
    }
    contains(e) {
      return (
        this.fieldMask.find((n) => e.isPrefixOf(n)) !== void 0 ||
        this.fieldTransforms.find((n) => e.isPrefixOf(n.field)) !== void 0
      );
    }
    Pu() {
      if (this.path)
        for (let e = 0; e < this.path.length; e++) this.Au(this.path.get(e));
    }
    Au(e) {
      if (e.length === 0) throw this.mu("Document fields must not be empty");
      if (VN(this.Iu) && oY.test(e))
        throw this.mu('Document fields cannot begin and end with "__"');
    }
  }
  class cY {
    constructor(e, n, r) {
      (this.databaseId = e),
        (this.ignoreUndefinedProperties = n),
        (this.serializer = r || qv(e));
    }
    pu(e, n, r, a = !1) {
      return new n_(
        { Iu: e, methodName: n, gu: r, path: Oi.emptyPath(), du: !1, fu: a },
        this.databaseId,
        this.serializer,
        this.ignoreUndefinedProperties
      );
    }
  }
  function $N(t) {
    const e = t._freezeSettings(),
      n = qv(t._databaseId);
    return new cY(t._databaseId, !!e.ignoreUndefinedProperties, n);
  }
  function uY(t, e, n, r, a, o = {}) {
    const u = t.pu(o.merge || o.mergeFields ? 2 : 0, e, n, a);
    i_("Data must be an object, but it was:", u, r);
    const g = BN(r, u);
    let x, E;
    if (o.merge) (x = new $s(u.fieldMask)), (E = u.fieldTransforms);
    else if (o.mergeFields) {
      const L = [];
      for (const z of o.mergeFields) {
        const B = g0(e, z, n);
        if (!u.contains(B))
          throw new Yt(
            rt.INVALID_ARGUMENT,
            `Field '${B}' is specified in your field mask but missing from your input data.`
          );
        WN(L, B) || L.push(B);
      }
      (x = new $s(L)), (E = u.fieldTransforms.filter((z) => x.covers(z.field)));
    } else (x = null), (E = u.fieldTransforms);
    return new lY(new ks(g), x, E);
  }
  class ny extends ty {
    _toFieldTransform(e) {
      if (e.Iu !== 2)
        throw e.Iu === 1
          ? e.mu(
              `${this._methodName}() can only appear at the top level of your update data`
            )
          : e.mu(
              `${this._methodName}() cannot be used with set() unless you pass {merge:true}`
            );
      return e.fieldMask.push(e.path), null;
    }
    isEqual(e) {
      return e instanceof ny;
    }
  }
  class r_ extends ty {
    _toFieldTransform(e) {
      return new a6(e.path, new Af());
    }
    isEqual(e) {
      return e instanceof r_;
    }
  }
  function hY(t, e, n, r) {
    const a = t.pu(1, e, n);
    i_("Data must be an object, but it was:", a, r);
    const o = [],
      u = ks.empty();
    fu(r, (x, E) => {
      const L = s_(e, x, n);
      E = ci(E);
      const z = a.Ru(L);
      if (E instanceof ny) o.push(L);
      else {
        const B = ry(E, z);
        B != null && (o.push(L), u.set(L, B));
      }
    });
    const g = new $s(o);
    return new zN(u, g, a.fieldTransforms);
  }
  function dY(t, e, n, r, a, o) {
    const u = t.pu(1, e, n),
      g = [g0(e, r, n)],
      x = [a];
    if (o.length % 2 != 0)
      throw new Yt(
        rt.INVALID_ARGUMENT,
        `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`
      );
    for (let B = 0; B < o.length; B += 2) g.push(g0(e, o[B])), x.push(o[B + 1]);
    const E = [],
      L = ks.empty();
    for (let B = g.length - 1; B >= 0; --B)
      if (!WN(E, g[B])) {
        const ae = g[B];
        let se = x[B];
        se = ci(se);
        const le = u.Ru(ae);
        if (se instanceof ny) E.push(ae);
        else {
          const he = ry(se, le);
          he != null && (E.push(ae), L.set(ae, he));
        }
      }
    const z = new $s(E);
    return new zN(L, z, u.fieldTransforms);
  }
  function ry(t, e) {
    if (HN((t = ci(t)))) return i_("Unsupported field value:", e, t), BN(t, e);
    if (t instanceof ty)
      return (
        (function (r, a) {
          if (!VN(a.Iu))
            throw a.mu(
              `${r._methodName}() can only be used with update() and set()`
            );
          if (!a.path)
            throw a.mu(
              `${r._methodName}() is not currently supported inside arrays`
            );
          const o = r._toFieldTransform(a);
          o && a.fieldTransforms.push(o);
        })(t, e),
        null
      );
    if (t === void 0 && e.ignoreUndefinedProperties) return null;
    if ((e.path && e.fieldMask.push(e.path), t instanceof Array)) {
      if (e.settings.du && e.Iu !== 4)
        throw e.mu("Nested arrays are not supported");
      return (function (r, a) {
        const o = [];
        let u = 0;
        for (const g of r) {
          let x = ry(g, a.Vu(u));
          x == null && (x = { nullValue: "NULL_VALUE" }), o.push(x), u++;
        }
        return { arrayValue: { values: o } };
      })(t, e);
    }
    return (function (r, a) {
      if ((r = ci(r)) === null) return { nullValue: "NULL_VALUE" };
      if (typeof r == "number") return r6(a.serializer, r);
      if (typeof r == "boolean") return { booleanValue: r };
      if (typeof r == "string") return { stringValue: r };
      if (r instanceof Date) {
        const o = li.fromDate(r);
        return { timestampValue: Cm(a.serializer, o) };
      }
      if (r instanceof li) {
        const o = new li(r.seconds, 1e3 * Math.floor(r.nanoseconds / 1e3));
        return { timestampValue: Cm(a.serializer, o) };
      }
      if (r instanceof t_)
        return {
          geoPointValue: { latitude: r.latitude, longitude: r.longitude },
        };
      if (r instanceof Sh)
        return { bytesValue: hN(a.serializer, r._byteString) };
      if (r instanceof oa) {
        const o = a.databaseId,
          u = r.firestore._databaseId;
        if (!u.isEqual(o))
          throw a.mu(
            `Document reference is for database ${u.projectId}/${u.database} but should be for database ${o.projectId}/${o.database}`
          );
        return {
          referenceValue: H1(
            r.firestore._databaseId || a.databaseId,
            r._key.path
          ),
        };
      }
      throw a.mu(`Unsupported field value: ${e_(r)}`);
    })(t, e);
  }
  function BN(t, e) {
    const n = {};
    return (
      zO(t)
        ? e.path && e.path.length > 0 && e.fieldMask.push(e.path)
        : fu(t, (r, a) => {
            const o = ry(a, e.Eu(r));
            o != null && (n[r] = o);
          }),
      { mapValue: { fields: n } }
    );
  }
  function HN(t) {
    return !(
      typeof t != "object" ||
      t === null ||
      t instanceof Array ||
      t instanceof Date ||
      t instanceof li ||
      t instanceof t_ ||
      t instanceof Sh ||
      t instanceof oa ||
      t instanceof ty
    );
  }
  function i_(t, e, n) {
    if (
      !HN(n) ||
      !(function (a) {
        return (
          typeof a == "object" &&
          a !== null &&
          (Object.getPrototypeOf(a) === Object.prototype ||
            Object.getPrototypeOf(a) === null)
        );
      })(n)
    ) {
      const r = e_(n);
      throw r === "an object"
        ? e.mu(t + " a custom object")
        : e.mu(t + " " + r);
    }
  }
  function g0(t, e, n) {
    if ((e = ci(e)) instanceof ey) return e._internalPath;
    if (typeof e == "string") return s_(t, e);
    throw Im(
      "Field path arguments must be of type string or ",
      t,
      !1,
      void 0,
      n
    );
  }
  const fY = new RegExp("[~\\*/\\[\\]]");
  function s_(t, e, n) {
    if (e.search(fY) >= 0)
      throw Im(
        `Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`,
        t,
        !1,
        void 0,
        n
      );
    try {
      return new ey(...e.split("."))._internalPath;
    } catch {
      throw Im(
        `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,
        t,
        !1,
        void 0,
        n
      );
    }
  }
  function Im(t, e, n, r, a) {
    const o = r && !r.isEmpty(),
      u = a !== void 0;
    let g = `Function ${e}() called with invalid data`;
    n && (g += " (via `toFirestore()`)"), (g += ". ");
    let x = "";
    return (
      (o || u) &&
        ((x += " (found"),
        o && (x += ` in field ${r}`),
        u && (x += ` in document ${a}`),
        (x += ")")),
      new Yt(rt.INVALID_ARGUMENT, g + t + x)
    );
  }
  function WN(t, e) {
    return t.some((n) => n.isEqual(e));
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class UN {
    constructor(e, n, r, a, o) {
      (this._firestore = e),
        (this._userDataWriter = n),
        (this._key = r),
        (this._document = a),
        (this._converter = o);
    }
    get id() {
      return this._key.path.lastSegment();
    }
    get ref() {
      return new oa(this._firestore, this._converter, this._key);
    }
    exists() {
      return this._document !== null;
    }
    data() {
      if (this._document) {
        if (this._converter) {
          const e = new pY(
            this._firestore,
            this._userDataWriter,
            this._key,
            this._document,
            null
          );
          return this._converter.fromFirestore(e);
        }
        return this._userDataWriter.convertValue(this._document.data.value);
      }
    }
    get(e) {
      if (this._document) {
        const n = this._document.data.field(XN("DocumentSnapshot.get", e));
        if (n !== null) return this._userDataWriter.convertValue(n);
      }
    }
  }
  class pY extends UN {
    data() {
      return super.data();
    }
  }
  function XN(t, e) {
    return typeof e == "string"
      ? s_(t, e)
      : e instanceof ey
      ? e._internalPath
      : e._delegate._internalPath;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function gY(t) {
    if (t.limitType === "L" && t.explicitOrderBy.length === 0)
      throw new Yt(
        rt.UNIMPLEMENTED,
        "limitToLast() queries require specifying at least one orderBy() clause"
      );
  }
  class mY {
    convertValue(e, n = "none") {
      switch (Zc(e)) {
        case 0:
          return null;
        case 1:
          return e.booleanValue;
        case 2:
          return qr(e.integerValue || e.doubleValue);
        case 3:
          return this.convertTimestamp(e.timestampValue);
        case 4:
          return this.convertServerTimestamp(e, n);
        case 5:
          return e.stringValue;
        case 6:
          return this.convertBytes(Qc(e.bytesValue));
        case 7:
          return this.convertReference(e.referenceValue);
        case 8:
          return this.convertGeoPoint(e.geoPointValue);
        case 9:
          return this.convertArray(e.arrayValue, n);
        case 10:
          return this.convertObject(e.mapValue, n);
        default:
          throw on();
      }
    }
    convertObject(e, n) {
      return this.convertObjectMap(e.fields, n);
    }
    convertObjectMap(e, n = "none") {
      const r = {};
      return (
        fu(e, (a, o) => {
          r[a] = this.convertValue(o, n);
        }),
        r
      );
    }
    convertGeoPoint(e) {
      return new t_(qr(e.latitude), qr(e.longitude));
    }
    convertArray(e, n) {
      return (e.values || []).map((r) => this.convertValue(r, n));
    }
    convertServerTimestamp(e, n) {
      switch (n) {
        case "previous":
          const r = M1(e);
          return r == null ? null : this.convertValue(r, n);
        case "estimate":
          return this.convertTimestamp(Sf(e));
        default:
          return null;
      }
    }
    convertTimestamp(e) {
      const n = Kl(e);
      return new li(n.seconds, n.nanos);
    }
    convertDocumentKey(e, n) {
      const r = wr.fromString(e);
      ur(mN(r));
      const a = new Ef(r.get(1), r.get(3)),
        o = new Kt(r.popFirst(5));
      return (
        a.isEqual(n) ||
          Yo(
            `Document ${o} contains a document reference within a different database (${a.projectId}/${a.database}) which is not supported. It will be treated as a reference in the current database (${n.projectId}/${n.database}) instead.`
          ),
        o
      );
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function vY(t, e, n) {
    let r;
    return (
      (r = t
        ? n && (n.merge || n.mergeFields)
          ? t.toFirestore(e, n)
          : t.toFirestore(e)
        : e),
      r
    );
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class sg {
    constructor(e, n) {
      (this.hasPendingWrites = e), (this.fromCache = n);
    }
    isEqual(e) {
      return (
        this.hasPendingWrites === e.hasPendingWrites &&
        this.fromCache === e.fromCache
      );
    }
  }
  class yY extends UN {
    constructor(e, n, r, a, o, u) {
      super(e, n, r, a, u),
        (this._firestore = e),
        (this._firestoreImpl = e),
        (this.metadata = o);
    }
    exists() {
      return super.exists();
    }
    data(e = {}) {
      if (this._document) {
        if (this._converter) {
          const n = new Ig(
            this._firestore,
            this._userDataWriter,
            this._key,
            this._document,
            this.metadata,
            null
          );
          return this._converter.fromFirestore(n, e);
        }
        return this._userDataWriter.convertValue(
          this._document.data.value,
          e.serverTimestamps
        );
      }
    }
    get(e, n = {}) {
      if (this._document) {
        const r = this._document.data.field(XN("DocumentSnapshot.get", e));
        if (r !== null)
          return this._userDataWriter.convertValue(r, n.serverTimestamps);
      }
    }
  }
  class Ig extends yY {
    data(e = {}) {
      return super.data(e);
    }
  }
  class xY {
    constructor(e, n, r, a) {
      (this._firestore = e),
        (this._userDataWriter = n),
        (this._snapshot = a),
        (this.metadata = new sg(a.hasPendingWrites, a.fromCache)),
        (this.query = r);
    }
    get docs() {
      const e = [];
      return this.forEach((n) => e.push(n)), e;
    }
    get size() {
      return this._snapshot.docs.size;
    }
    get empty() {
      return this.size === 0;
    }
    forEach(e, n) {
      this._snapshot.docs.forEach((r) => {
        e.call(
          n,
          new Ig(
            this._firestore,
            this._userDataWriter,
            r.key,
            r,
            new sg(
              this._snapshot.mutatedKeys.has(r.key),
              this._snapshot.fromCache
            ),
            this.query.converter
          )
        );
      });
    }
    docChanges(e = {}) {
      const n = !!e.includeMetadataChanges;
      if (n && this._snapshot.excludesMetadataChanges)
        throw new Yt(
          rt.INVALID_ARGUMENT,
          "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot()."
        );
      return (
        (this._cachedChanges &&
          this._cachedChangesIncludeMetadataChanges === n) ||
          ((this._cachedChanges = (function (a, o) {
            if (a._snapshot.oldDocs.isEmpty()) {
              let u = 0;
              return a._snapshot.docChanges.map((g) => {
                const x = new Ig(
                  a._firestore,
                  a._userDataWriter,
                  g.doc.key,
                  g.doc,
                  new sg(
                    a._snapshot.mutatedKeys.has(g.doc.key),
                    a._snapshot.fromCache
                  ),
                  a.query.converter
                );
                return (
                  g.doc, { type: "added", doc: x, oldIndex: -1, newIndex: u++ }
                );
              });
            }
            {
              let u = a._snapshot.oldDocs;
              return a._snapshot.docChanges
                .filter((g) => o || g.type !== 3)
                .map((g) => {
                  const x = new Ig(
                    a._firestore,
                    a._userDataWriter,
                    g.doc.key,
                    g.doc,
                    new sg(
                      a._snapshot.mutatedKeys.has(g.doc.key),
                      a._snapshot.fromCache
                    ),
                    a.query.converter
                  );
                  let E = -1,
                    L = -1;
                  return (
                    g.type !== 0 &&
                      ((E = u.indexOf(g.doc.key)), (u = u.delete(g.doc.key))),
                    g.type !== 1 &&
                      ((u = u.add(g.doc)), (L = u.indexOf(g.doc.key))),
                    { type: bY(g.type), doc: x, oldIndex: E, newIndex: L }
                  );
                });
            }
          })(this, n)),
          (this._cachedChangesIncludeMetadataChanges = n)),
        this._cachedChanges
      );
    }
  }
  function bY(t) {
    switch (t) {
      case 0:
        return "added";
      case 2:
      case 3:
        return "modified";
      case 1:
        return "removed";
      default:
        return on();
    }
  }
  class wY extends mY {
    constructor(e) {
      super(), (this.firestore = e);
    }
    convertBytes(e) {
      return new Sh(e);
    }
    convertReference(e) {
      const n = this.convertDocumentKey(e, this.firestore._databaseId);
      return new oa(this.firestore, null, n);
    }
  }
  function If(t) {
    t = Jc(t, Jv);
    const e = Jc(t.firestore, ap),
      n = jN(e),
      r = new wY(e);
    return gY(t._query), rY(n, t._query).then((a) => new xY(e, r, t, a));
  }
  function iy(t, e, n, ...r) {
    t = Jc(t, oa);
    const a = Jc(t.firestore, ap),
      o = $N(a);
    let u;
    return (
      (u =
        typeof (e = ci(e)) == "string" || e instanceof ey
          ? dY(o, "updateDoc", t._key, e, n, r)
          : hY(o, "updateDoc", t._key, e)),
      l_(a, [u.toMutation(t._key, Ca.exists(!0))])
    );
  }
  function a_(t) {
    return l_(Jc(t.firestore, ap), [new V1(t._key, Ca.none())]);
  }
  function o_(t, e) {
    const n = Jc(t.firestore, ap),
      r = Zl(t),
      a = vY(t.converter, e);
    return l_(n, [
      uY(
        $N(t.firestore),
        "addDoc",
        r._key,
        a,
        t.converter !== null,
        {}
      ).toMutation(r._key, Ca.exists(!1)),
    ]).then(() => r);
  }
  function l_(t, e) {
    return (function (r, a) {
      const o = new $l();
      return (
        r.asyncQueue.enqueueAndForget(async () => $9(await tY(r), a, o)),
        o.promise
      );
    })(jN(t), e);
  }
  function c_() {
    return new r_("serverTimestamp");
  }
  (function (e, n = !0) {
    (function (a) {
      jh = a;
    })(hu),
      Gc(
        new Gl(
          "firestore",
          (r, { instanceIdentifier: a, options: o }) => {
            const u = r.getProvider("app").getImmediate(),
              g = new ap(
                new wX(r.getProvider("auth-internal")),
                new kX(r.getProvider("app-check-internal")),
                (function (E, L) {
                  if (
                    !Object.prototype.hasOwnProperty.apply(E.options, [
                      "projectId",
                    ])
                  )
                    throw new Yt(
                      rt.INVALID_ARGUMENT,
                      '"projectId" not provided in firebase.initializeApp.'
                    );
                  return new Ef(E.options.projectId, L);
                })(u, a),
                u
              );
            return (
              (o = Object.assign({ useFetchStreams: n }, o)),
              g._setSettings(o),
              g
            );
          },
          "PUBLIC"
        ).setMultipleInstances(!0)
      ),
      so(Nk, "4.4.0", e),
      so(Nk, "4.4.0", "esm2017");
  })();
  var _Y = function (t) {
      return { display: t ? "flex" : "none" };
    },
    dA = "#4fa94d",
    SY = { "aria-busy": !0, role: "status" };
  function EY(t) {
    function e(Re, $e, Fe, ct, de) {
      for (
        var yt = 0,
          Ze = 0,
          Zt = 0,
          Wt = 0,
          $t,
          Rt,
          sn = 0,
          dt = 0,
          gt,
          mn = (gt = $t = 0),
          Jt = 0,
          Rn = 0,
          jr = 0,
          vn = 0,
          zn = Fe.length,
          Te = zn - 1,
          st,
          Ge = "",
          qe = "",
          Dt = "",
          nn = "",
          fn;
        Jt < zn;

      ) {
        if (
          ((Rt = Fe.charCodeAt(Jt)),
          Jt === Te &&
            Ze + Wt + Zt + yt !== 0 &&
            (Ze !== 0 && (Rt = Ze === 47 ? 10 : 47),
            (Wt = Zt = yt = 0),
            zn++,
            Te++),
          Ze + Wt + Zt + yt === 0)
        ) {
          if (
            Jt === Te &&
            (0 < Rn && (Ge = Ge.replace(B, "")), 0 < Ge.trim().length)
          ) {
            switch (Rt) {
              case 32:
              case 9:
              case 59:
              case 13:
              case 10:
                break;
              default:
                Ge += Fe.charAt(Jt);
            }
            Rt = 59;
          }
          switch (Rt) {
            case 123:
              for (
                Ge = Ge.trim(), $t = Ge.charCodeAt(0), gt = 1, vn = ++Jt;
                Jt < zn;

              ) {
                switch ((Rt = Fe.charCodeAt(Jt))) {
                  case 123:
                    gt++;
                    break;
                  case 125:
                    gt--;
                    break;
                  case 47:
                    switch ((Rt = Fe.charCodeAt(Jt + 1))) {
                      case 42:
                      case 47:
                        e: {
                          for (mn = Jt + 1; mn < Te; ++mn)
                            switch (Fe.charCodeAt(mn)) {
                              case 47:
                                if (
                                  Rt === 42 &&
                                  Fe.charCodeAt(mn - 1) === 42 &&
                                  Jt + 2 !== mn
                                ) {
                                  Jt = mn + 1;
                                  break e;
                                }
                                break;
                              case 10:
                                if (Rt === 47) {
                                  Jt = mn + 1;
                                  break e;
                                }
                            }
                          Jt = mn;
                        }
                    }
                    break;
                  case 91:
                    Rt++;
                  case 40:
                    Rt++;
                  case 34:
                  case 39:
                    for (; Jt++ < Te && Fe.charCodeAt(Jt) !== Rt; );
                }
                if (gt === 0) break;
                Jt++;
              }
              switch (
                ((gt = Fe.substring(vn, Jt)),
                $t === 0 &&
                  ($t = (Ge = Ge.replace(z, "").trim()).charCodeAt(0)),
                $t)
              ) {
                case 64:
                  switch (
                    (0 < Rn && (Ge = Ge.replace(B, "")),
                    (Rt = Ge.charCodeAt(1)),
                    Rt)
                  ) {
                    case 100:
                    case 109:
                    case 115:
                    case 45:
                      Rn = $e;
                      break;
                    default:
                      Rn = Ie;
                  }
                  if (
                    ((gt = e($e, Rn, gt, Rt, de + 1)),
                    (vn = gt.length),
                    0 < we &&
                      ((Rn = n(Ie, Ge, jr)),
                      (fn = g(3, gt, Rn, $e, Vt, Mt, vn, Rt, de, ct)),
                      (Ge = Rn.join("")),
                      fn !== void 0 &&
                        (vn = (gt = fn.trim()).length) === 0 &&
                        ((Rt = 0), (gt = ""))),
                    0 < vn)
                  )
                    switch (Rt) {
                      case 115:
                        Ge = Ge.replace(ke, u);
                      case 100:
                      case 109:
                      case 45:
                        gt = Ge + "{" + gt + "}";
                        break;
                      case 107:
                        (Ge = Ge.replace(F, "$1 $2")),
                          (gt = Ge + "{" + gt + "}"),
                          (gt =
                            ht === 1 || (ht === 2 && o("@" + gt, 3))
                              ? "@-webkit-" + gt + "@" + gt
                              : "@" + gt);
                        break;
                      default:
                        (gt = Ge + gt), ct === 112 && (gt = ((qe += gt), ""));
                    }
                  else gt = "";
                  break;
                default:
                  gt = e($e, n($e, Ge, jr), gt, ct, de + 1);
              }
              (Dt += gt),
                (gt = jr = Rn = mn = $t = 0),
                (Ge = ""),
                (Rt = Fe.charCodeAt(++Jt));
              break;
            case 125:
            case 59:
              if (
                ((Ge = (0 < Rn ? Ge.replace(B, "") : Ge).trim()),
                1 < (vn = Ge.length))
              )
                switch (
                  (mn === 0 &&
                    (($t = Ge.charCodeAt(0)),
                    $t === 45 || (96 < $t && 123 > $t)) &&
                    (vn = (Ge = Ge.replace(" ", ":")).length),
                  0 < we &&
                    (fn = g(1, Ge, $e, Re, Vt, Mt, qe.length, ct, de, ct)) !==
                      void 0 &&
                    (vn = (Ge = fn.trim()).length) === 0 &&
                    (Ge = "\0\0"),
                  ($t = Ge.charCodeAt(0)),
                  (Rt = Ge.charCodeAt(1)),
                  $t)
                ) {
                  case 0:
                    break;
                  case 64:
                    if (Rt === 105 || Rt === 99) {
                      nn += Ge + Fe.charAt(Jt);
                      break;
                    }
                  default:
                    Ge.charCodeAt(vn - 1) !== 58 &&
                      (qe += a(Ge, $t, Rt, Ge.charCodeAt(2)));
                }
              (jr = Rn = mn = $t = 0), (Ge = ""), (Rt = Fe.charCodeAt(++Jt));
          }
        }
        switch (Rt) {
          case 13:
          case 10:
            Ze === 47
              ? (Ze = 0)
              : 1 + $t === 0 &&
                ct !== 107 &&
                0 < Ge.length &&
                ((Rn = 1), (Ge += "\0")),
              0 < we * Oe && g(0, Ge, $e, Re, Vt, Mt, qe.length, ct, de, ct),
              (Mt = 1),
              Vt++;
            break;
          case 59:
          case 125:
            if (Ze + Wt + Zt + yt === 0) {
              Mt++;
              break;
            }
          default:
            switch ((Mt++, (st = Fe.charAt(Jt)), Rt)) {
              case 9:
              case 32:
                if (Wt + yt + Ze === 0)
                  switch (sn) {
                    case 44:
                    case 58:
                    case 9:
                    case 32:
                      st = "";
                      break;
                    default:
                      Rt !== 32 && (st = " ");
                  }
                break;
              case 0:
                st = "\\0";
                break;
              case 12:
                st = "\\f";
                break;
              case 11:
                st = "\\v";
                break;
              case 38:
                Wt + Ze + yt === 0 && ((Rn = jr = 1), (st = "\f" + st));
                break;
              case 108:
                if (Wt + Ze + yt + It === 0 && 0 < mn)
                  switch (Jt - mn) {
                    case 2:
                      sn === 112 && Fe.charCodeAt(Jt - 3) === 58 && (It = sn);
                    case 8:
                      dt === 111 && (It = dt);
                  }
                break;
              case 58:
                Wt + Ze + yt === 0 && (mn = Jt);
                break;
              case 44:
                Ze + Zt + Wt + yt === 0 && ((Rn = 1), (st += "\r"));
                break;
              case 34:
              case 39:
                Ze === 0 && (Wt = Wt === Rt ? 0 : Wt === 0 ? Rt : Wt);
                break;
              case 91:
                Wt + Ze + Zt === 0 && yt++;
                break;
              case 93:
                Wt + Ze + Zt === 0 && yt--;
                break;
              case 41:
                Wt + Ze + yt === 0 && Zt--;
                break;
              case 40:
                if (Wt + Ze + yt === 0) {
                  if ($t === 0)
                    switch (2 * sn + 3 * dt) {
                      case 533:
                        break;
                      default:
                        $t = 1;
                    }
                  Zt++;
                }
                break;
              case 64:
                Ze + Zt + Wt + yt + mn + gt === 0 && (gt = 1);
                break;
              case 42:
              case 47:
                if (!(0 < Wt + yt + Zt))
                  switch (Ze) {
                    case 0:
                      switch (2 * Rt + 3 * Fe.charCodeAt(Jt + 1)) {
                        case 235:
                          Ze = 47;
                          break;
                        case 220:
                          (vn = Jt), (Ze = 42);
                      }
                      break;
                    case 42:
                      Rt === 47 &&
                        sn === 42 &&
                        vn + 2 !== Jt &&
                        (Fe.charCodeAt(vn + 2) === 33 &&
                          (qe += Fe.substring(vn, Jt + 1)),
                        (st = ""),
                        (Ze = 0));
                  }
            }
            Ze === 0 && (Ge += st);
        }
        (dt = sn), (sn = Rt), Jt++;
      }
      if (((vn = qe.length), 0 < vn)) {
        if (
          ((Rn = $e),
          0 < we &&
            ((fn = g(2, qe, Rn, Re, Vt, Mt, vn, ct, de, ct)),
            fn !== void 0 && (qe = fn).length === 0))
        )
          return nn + qe + Dt;
        if (((qe = Rn.join(",") + "{" + qe + "}"), ht * It !== 0)) {
          switch ((ht !== 2 || o(qe, 2) || (It = 0), It)) {
            case 111:
              qe = qe.replace(ye, ":-moz-$1") + qe;
              break;
            case 112:
              qe =
                qe.replace(ce, "::-webkit-input-$1") +
                qe.replace(ce, "::-moz-$1") +
                qe.replace(ce, ":-ms-input-$1") +
                qe;
          }
          It = 0;
        }
      }
      return nn + qe + Dt;
    }
    function n(Re, $e, Fe) {
      var ct = $e.trim().split(he);
      $e = ct;
      var de = ct.length,
        yt = Re.length;
      switch (yt) {
        case 0:
        case 1:
          var Ze = 0;
          for (Re = yt === 0 ? "" : Re[0] + " "; Ze < de; ++Ze)
            $e[Ze] = r(Re, $e[Ze], Fe).trim();
          break;
        default:
          var Zt = (Ze = 0);
          for ($e = []; Ze < de; ++Ze)
            for (var Wt = 0; Wt < yt; ++Wt)
              $e[Zt++] = r(Re[Wt] + " ", ct[Ze], Fe).trim();
      }
      return $e;
    }
    function r(Re, $e, Fe) {
      var ct = $e.charCodeAt(0);
      switch ((33 > ct && (ct = ($e = $e.trim()).charCodeAt(0)), ct)) {
        case 38:
          return $e.replace(oe, "$1" + Re.trim());
        case 58:
          return Re.trim() + $e.replace(oe, "$1" + Re.trim());
        default:
          if (0 < 1 * Fe && 0 < $e.indexOf("\f"))
            return $e.replace(
              oe,
              (Re.charCodeAt(0) === 58 ? "" : "$1") + Re.trim()
            );
      }
      return Re + $e;
    }
    function a(Re, $e, Fe, ct) {
      var de = Re + ";",
        yt = 2 * $e + 3 * Fe + 4 * ct;
      if (yt === 944) {
        Re = de.indexOf(":", 9) + 1;
        var Ze = de.substring(Re, de.length - 1).trim();
        return (
          (Ze = de.substring(0, Re).trim() + Ze + ";"),
          ht === 1 || (ht === 2 && o(Ze, 1)) ? "-webkit-" + Ze + Ze : Ze
        );
      }
      if (ht === 0 || (ht === 2 && !o(de, 1))) return de;
      switch (yt) {
        case 1015:
          return de.charCodeAt(10) === 97 ? "-webkit-" + de + de : de;
        case 951:
          return de.charCodeAt(3) === 116 ? "-webkit-" + de + de : de;
        case 963:
          return de.charCodeAt(5) === 110 ? "-webkit-" + de + de : de;
        case 1009:
          if (de.charCodeAt(4) !== 100) break;
        case 969:
        case 942:
          return "-webkit-" + de + de;
        case 978:
          return "-webkit-" + de + "-moz-" + de + de;
        case 1019:
        case 983:
          return "-webkit-" + de + "-moz-" + de + "-ms-" + de + de;
        case 883:
          if (de.charCodeAt(8) === 45) return "-webkit-" + de + de;
          if (0 < de.indexOf("image-set(", 11))
            return de.replace(pt, "$1-webkit-$2") + de;
          break;
        case 932:
          if (de.charCodeAt(4) === 45)
            switch (de.charCodeAt(5)) {
              case 103:
                return (
                  "-webkit-box-" +
                  de.replace("-grow", "") +
                  "-webkit-" +
                  de +
                  "-ms-" +
                  de.replace("grow", "positive") +
                  de
                );
              case 115:
                return (
                  "-webkit-" +
                  de +
                  "-ms-" +
                  de.replace("shrink", "negative") +
                  de
                );
              case 98:
                return (
                  "-webkit-" +
                  de +
                  "-ms-" +
                  de.replace("basis", "preferred-size") +
                  de
                );
            }
          return "-webkit-" + de + "-ms-" + de + de;
        case 964:
          return "-webkit-" + de + "-ms-flex-" + de + de;
        case 1023:
          if (de.charCodeAt(8) !== 99) break;
          return (
            (Ze = de
              .substring(de.indexOf(":", 15))
              .replace("flex-", "")
              .replace("space-between", "justify")),
            "-webkit-box-pack" +
              Ze +
              "-webkit-" +
              de +
              "-ms-flex-pack" +
              Ze +
              de
          );
        case 1005:
          return se.test(de)
            ? de.replace(ae, ":-webkit-") + de.replace(ae, ":-moz-") + de
            : de;
        case 1e3:
          switch (
            ((Ze = de.substring(13).trim()),
            ($e = Ze.indexOf("-") + 1),
            Ze.charCodeAt(0) + Ze.charCodeAt($e))
          ) {
            case 226:
              Ze = de.replace(C, "tb");
              break;
            case 232:
              Ze = de.replace(C, "tb-rl");
              break;
            case 220:
              Ze = de.replace(C, "lr");
              break;
            default:
              return de;
          }
          return "-webkit-" + de + "-ms-" + Ze + de;
        case 1017:
          if (de.indexOf("sticky", 9) === -1) break;
        case 975:
          switch (
            (($e = (de = Re).length - 10),
            (Ze = (de.charCodeAt($e) === 33 ? de.substring(0, $e) : de)
              .substring(Re.indexOf(":", 7) + 1)
              .trim()),
            (yt = Ze.charCodeAt(0) + (Ze.charCodeAt(7) | 0)))
          ) {
            case 203:
              if (111 > Ze.charCodeAt(8)) break;
            case 115:
              de = de.replace(Ze, "-webkit-" + Ze) + ";" + de;
              break;
            case 207:
            case 102:
              de =
                de.replace(
                  Ze,
                  "-webkit-" + (102 < yt ? "inline-" : "") + "box"
                ) +
                ";" +
                de.replace(Ze, "-webkit-" + Ze) +
                ";" +
                de.replace(Ze, "-ms-" + Ze + "box") +
                ";" +
                de;
          }
          return de + ";";
        case 938:
          if (de.charCodeAt(5) === 45)
            switch (de.charCodeAt(6)) {
              case 105:
                return (
                  (Ze = de.replace("-items", "")),
                  "-webkit-" + de + "-webkit-box-" + Ze + "-ms-flex-" + Ze + de
                );
              case 115:
                return (
                  "-webkit-" + de + "-ms-flex-item-" + de.replace(tt, "") + de
                );
              default:
                return (
                  "-webkit-" +
                  de +
                  "-ms-flex-line-pack" +
                  de.replace("align-content", "").replace(tt, "") +
                  de
                );
            }
          break;
        case 973:
        case 989:
          if (de.charCodeAt(3) !== 45 || de.charCodeAt(4) === 122) break;
        case 931:
        case 953:
          if (xt.test(Re) === !0)
            return (Ze = Re.substring(Re.indexOf(":") + 1)).charCodeAt(0) ===
              115
              ? a(Re.replace("stretch", "fill-available"), $e, Fe, ct).replace(
                  ":fill-available",
                  ":stretch"
                )
              : de.replace(Ze, "-webkit-" + Ze) +
                  de.replace(Ze, "-moz-" + Ze.replace("fill-", "")) +
                  de;
          break;
        case 962:
          if (
            ((de =
              "-webkit-" +
              de +
              (de.charCodeAt(5) === 102 ? "-ms-" + de : "") +
              de),
            Fe + ct === 211 &&
              de.charCodeAt(13) === 105 &&
              0 < de.indexOf("transform", 10))
          )
            return (
              de
                .substring(0, de.indexOf(";", 27) + 1)
                .replace(le, "$1-webkit-$2") + de
            );
      }
      return de;
    }
    function o(Re, $e) {
      var Fe = Re.indexOf($e === 1 ? ":" : "{"),
        ct = Re.substring(0, $e !== 3 ? Fe : 10);
      return (
        (Fe = Re.substring(Fe + 1, Re.length - 1)),
        Xe($e !== 2 ? ct : ct.replace(Ct, "$1"), Fe, $e)
      );
    }
    function u(Re, $e) {
      var Fe = a($e, $e.charCodeAt(0), $e.charCodeAt(1), $e.charCodeAt(2));
      return Fe !== $e + ";"
        ? Fe.replace(je, " or ($1)").substring(4)
        : "(" + $e + ")";
    }
    function g(Re, $e, Fe, ct, de, yt, Ze, Zt, Wt, $t) {
      for (var Rt = 0, sn = $e, dt; Rt < we; ++Rt)
        switch ((dt = Lt[Rt].call(L, Re, sn, Fe, ct, de, yt, Ze, Zt, Wt, $t))) {
          case void 0:
          case !1:
          case !0:
          case null:
            break;
          default:
            sn = dt;
        }
      if (sn !== $e) return sn;
    }
    function x(Re) {
      switch (Re) {
        case void 0:
        case null:
          we = Lt.length = 0;
          break;
        default:
          if (typeof Re == "function") Lt[we++] = Re;
          else if (typeof Re == "object")
            for (var $e = 0, Fe = Re.length; $e < Fe; ++$e) x(Re[$e]);
          else Oe = !!Re | 0;
      }
      return x;
    }
    function E(Re) {
      return (
        (Re = Re.prefix),
        Re !== void 0 &&
          ((Xe = null),
          Re
            ? typeof Re != "function"
              ? (ht = 1)
              : ((ht = 2), (Xe = Re))
            : (ht = 0)),
        E
      );
    }
    function L(Re, $e) {
      var Fe = Re;
      if (
        (33 > Fe.charCodeAt(0) && (Fe = Fe.trim()),
        (Ye = Fe),
        (Fe = [Ye]),
        0 < we)
      ) {
        var ct = g(-1, $e, Fe, Fe, Vt, Mt, 0, 0, 0, 0);
        ct !== void 0 && typeof ct == "string" && ($e = ct);
      }
      var de = e(Ie, Fe, $e, 0, 0);
      return (
        0 < we &&
          ((ct = g(-2, de, Fe, Fe, Vt, Mt, de.length, 0, 0, 0)),
          ct !== void 0 && (de = ct)),
        (Ye = ""),
        (It = 0),
        (Mt = Vt = 1),
        de
      );
    }
    var z = /^\0+/g,
      B = /[\0\r\f]/g,
      ae = /: */g,
      se = /zoo|gra/,
      le = /([,: ])(transform)/g,
      he = /,\r+?/g,
      oe = /([\t\r\n ])*\f?&/g,
      F = /@(k\w+)\s*(\S*)\s*/,
      ce = /::(place)/g,
      ye = /:(read-only)/g,
      C = /[svh]\w+-[tblr]{2}/,
      ke = /\(\s*(.*)\s*\)/g,
      je = /([\s\S]*?);/g,
      tt = /-self|flex-/g,
      Ct = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
      xt = /stretch|:\s*\w+\-(?:conte|avail)/,
      pt = /([^-])(image-set\()/,
      Mt = 1,
      Vt = 1,
      It = 0,
      ht = 1,
      Ie = [],
      Lt = [],
      we = 0,
      Xe = null,
      Oe = 0,
      Ye = "";
    return (L.use = x), (L.set = E), t !== void 0 && E(t), L;
  }
  var kY = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  };
  function AY(t) {
    var e = Object.create(null);
    return function (n) {
      return e[n] === void 0 && (e[n] = t(n)), e[n];
    };
  }
  var CY =
      /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
    fA = AY(function (t) {
      return (
        CY.test(t) ||
        (t.charCodeAt(0) === 111 &&
          t.charCodeAt(1) === 110 &&
          t.charCodeAt(2) < 91)
      );
    }),
    ta = {};
  function Lo() {
    return (Lo =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }).apply(this, arguments);
  }
  var pA = function (t, e) {
      for (var n = [t[0]], r = 0, a = e.length; r < a; r += 1)
        n.push(e[r], t[r + 1]);
      return n;
    },
    m0 = function (t) {
      return (
        t !== null &&
        typeof t == "object" &&
        (t.toString ? t.toString() : Object.prototype.toString.call(t)) ===
          "[object Object]" &&
        !jw.typeOf(t)
      );
    },
    Pm = Object.freeze([]),
    Wl = Object.freeze({});
  function Pf(t) {
    return typeof t == "function";
  }
  function gA(t) {
    return t.displayName || t.name || "Component";
  }
  function u_(t) {
    return t && typeof t.styledComponentId == "string";
  }
  var Eh =
      (typeof process < "u" &&
        ta !== void 0 &&
        (ta.REACT_APP_SC_ATTR || ta.SC_ATTR)) ||
      "data-styled",
    h_ = typeof window < "u" && "HTMLElement" in window,
    TY = !!(typeof SC_DISABLE_SPEEDY == "boolean"
      ? SC_DISABLE_SPEEDY
      : typeof process < "u" &&
        ta !== void 0 &&
        (ta.REACT_APP_SC_DISABLE_SPEEDY !== void 0 &&
        ta.REACT_APP_SC_DISABLE_SPEEDY !== ""
          ? ta.REACT_APP_SC_DISABLE_SPEEDY !== "false" &&
            ta.REACT_APP_SC_DISABLE_SPEEDY
          : ta.SC_DISABLE_SPEEDY !== void 0 &&
            ta.SC_DISABLE_SPEEDY !== "" &&
            ta.SC_DISABLE_SPEEDY !== "false" &&
            ta.SC_DISABLE_SPEEDY));
  function op(t) {
    for (
      var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
      r < e;
      r++
    )
      n[r - 1] = arguments[r];
    throw new Error(
      "An error occurred. See https://git.io/JUIaE#" +
        t +
        " for more information." +
        (n.length > 0 ? " Args: " + n.join(", ") : "")
    );
  }
  var IY = (function () {
      function t(n) {
        (this.groupSizes = new Uint32Array(512)),
          (this.length = 512),
          (this.tag = n);
      }
      var e = t.prototype;
      return (
        (e.indexOfGroup = function (n) {
          for (var r = 0, a = 0; a < n; a++) r += this.groupSizes[a];
          return r;
        }),
        (e.insertRules = function (n, r) {
          if (n >= this.groupSizes.length) {
            for (var a = this.groupSizes, o = a.length, u = o; n >= u; )
              (u <<= 1) < 0 && op(16, "" + n);
            (this.groupSizes = new Uint32Array(u)),
              this.groupSizes.set(a),
              (this.length = u);
            for (var g = o; g < u; g++) this.groupSizes[g] = 0;
          }
          for (
            var x = this.indexOfGroup(n + 1), E = 0, L = r.length;
            E < L;
            E++
          )
            this.tag.insertRule(x, r[E]) && (this.groupSizes[n]++, x++);
        }),
        (e.clearGroup = function (n) {
          if (n < this.length) {
            var r = this.groupSizes[n],
              a = this.indexOfGroup(n),
              o = a + r;
            this.groupSizes[n] = 0;
            for (var u = a; u < o; u++) this.tag.deleteRule(a);
          }
        }),
        (e.getGroup = function (n) {
          var r = "";
          if (n >= this.length || this.groupSizes[n] === 0) return r;
          for (
            var a = this.groupSizes[n],
              o = this.indexOfGroup(n),
              u = o + a,
              g = o;
            g < u;
            g++
          )
            r +=
              this.tag.getRule(g) +
              `/*!sc*/
`;
          return r;
        }),
        t
      );
    })(),
    Pg = new Map(),
    Rm = new Map(),
    Bd = 1,
    ag = function (t) {
      if (Pg.has(t)) return Pg.get(t);
      for (; Rm.has(Bd); ) Bd++;
      var e = Bd++;
      return Pg.set(t, e), Rm.set(e, t), e;
    },
    PY = function (t) {
      return Rm.get(t);
    },
    RY = function (t, e) {
      e >= Bd && (Bd = e + 1), Pg.set(t, e), Rm.set(e, t);
    },
    OY = "style[" + Eh + '][data-styled-version="5.3.11"]',
    NY = new RegExp("^" + Eh + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
    LY = function (t, e, n) {
      for (var r, a = n.split(","), o = 0, u = a.length; o < u; o++)
        (r = a[o]) && t.registerName(e, r);
    },
    DY = function (t, e) {
      for (
        var n = (e.textContent || "").split(`/*!sc*/
`),
          r = [],
          a = 0,
          o = n.length;
        a < o;
        a++
      ) {
        var u = n[a].trim();
        if (u) {
          var g = u.match(NY);
          if (g) {
            var x = 0 | parseInt(g[1], 10),
              E = g[2];
            x !== 0 && (RY(E, x), LY(t, E, g[3]), t.getTag().insertRules(x, r)),
              (r.length = 0);
          } else r.push(u);
        }
      }
    },
    MY = function () {
      return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
    },
    YN = function (t) {
      var e = document.head,
        n = t || e,
        r = document.createElement("style"),
        a = (function (g) {
          for (var x = g.childNodes, E = x.length; E >= 0; E--) {
            var L = x[E];
            if (L && L.nodeType === 1 && L.hasAttribute(Eh)) return L;
          }
        })(n),
        o = a !== void 0 ? a.nextSibling : null;
      r.setAttribute(Eh, "active"),
        r.setAttribute("data-styled-version", "5.3.11");
      var u = MY();
      return u && r.setAttribute("nonce", u), n.insertBefore(r, o), r;
    },
    jY = (function () {
      function t(n) {
        var r = (this.element = YN(n));
        r.appendChild(document.createTextNode("")),
          (this.sheet = (function (a) {
            if (a.sheet) return a.sheet;
            for (
              var o = document.styleSheets, u = 0, g = o.length;
              u < g;
              u++
            ) {
              var x = o[u];
              if (x.ownerNode === a) return x;
            }
            op(17);
          })(r)),
          (this.length = 0);
      }
      var e = t.prototype;
      return (
        (e.insertRule = function (n, r) {
          try {
            return this.sheet.insertRule(r, n), this.length++, !0;
          } catch {
            return !1;
          }
        }),
        (e.deleteRule = function (n) {
          this.sheet.deleteRule(n), this.length--;
        }),
        (e.getRule = function (n) {
          var r = this.sheet.cssRules[n];
          return r !== void 0 && typeof r.cssText == "string" ? r.cssText : "";
        }),
        t
      );
    })(),
    FY = (function () {
      function t(n) {
        var r = (this.element = YN(n));
        (this.nodes = r.childNodes), (this.length = 0);
      }
      var e = t.prototype;
      return (
        (e.insertRule = function (n, r) {
          if (n <= this.length && n >= 0) {
            var a = document.createTextNode(r),
              o = this.nodes[n];
            return this.element.insertBefore(a, o || null), this.length++, !0;
          }
          return !1;
        }),
        (e.deleteRule = function (n) {
          this.element.removeChild(this.nodes[n]), this.length--;
        }),
        (e.getRule = function (n) {
          return n < this.length ? this.nodes[n].textContent : "";
        }),
        t
      );
    })(),
    zY = (function () {
      function t(n) {
        (this.rules = []), (this.length = 0);
      }
      var e = t.prototype;
      return (
        (e.insertRule = function (n, r) {
          return (
            n <= this.length && (this.rules.splice(n, 0, r), this.length++, !0)
          );
        }),
        (e.deleteRule = function (n) {
          this.rules.splice(n, 1), this.length--;
        }),
        (e.getRule = function (n) {
          return n < this.length ? this.rules[n] : "";
        }),
        t
      );
    })(),
    mA = h_,
    VY = { isServer: !h_, useCSSOMInjection: !TY },
    GN = (function () {
      function t(n, r, a) {
        n === void 0 && (n = Wl),
          r === void 0 && (r = {}),
          (this.options = Lo({}, VY, {}, n)),
          (this.gs = r),
          (this.names = new Map(a)),
          (this.server = !!n.isServer),
          !this.server &&
            h_ &&
            mA &&
            ((mA = !1),
            (function (o) {
              for (
                var u = document.querySelectorAll(OY), g = 0, x = u.length;
                g < x;
                g++
              ) {
                var E = u[g];
                E &&
                  E.getAttribute(Eh) !== "active" &&
                  (DY(o, E), E.parentNode && E.parentNode.removeChild(E));
              }
            })(this));
      }
      t.registerId = function (n) {
        return ag(n);
      };
      var e = t.prototype;
      return (
        (e.reconstructWithOptions = function (n, r) {
          return (
            r === void 0 && (r = !0),
            new t(
              Lo({}, this.options, {}, n),
              this.gs,
              (r && this.names) || void 0
            )
          );
        }),
        (e.allocateGSInstance = function (n) {
          return (this.gs[n] = (this.gs[n] || 0) + 1);
        }),
        (e.getTag = function () {
          return (
            this.tag ||
            (this.tag =
              ((a = (r = this.options).isServer),
              (o = r.useCSSOMInjection),
              (u = r.target),
              (n = a ? new zY(u) : o ? new jY(u) : new FY(u)),
              new IY(n)))
          );
          var n, r, a, o, u;
        }),
        (e.hasNameForId = function (n, r) {
          return this.names.has(n) && this.names.get(n).has(r);
        }),
        (e.registerName = function (n, r) {
          if ((ag(n), this.names.has(n))) this.names.get(n).add(r);
          else {
            var a = new Set();
            a.add(r), this.names.set(n, a);
          }
        }),
        (e.insertRules = function (n, r, a) {
          this.registerName(n, r), this.getTag().insertRules(ag(n), a);
        }),
        (e.clearNames = function (n) {
          this.names.has(n) && this.names.get(n).clear();
        }),
        (e.clearRules = function (n) {
          this.getTag().clearGroup(ag(n)), this.clearNames(n);
        }),
        (e.clearTag = function () {
          this.tag = void 0;
        }),
        (e.toString = function () {
          return (function (n) {
            for (var r = n.getTag(), a = r.length, o = "", u = 0; u < a; u++) {
              var g = PY(u);
              if (g !== void 0) {
                var x = n.names.get(g),
                  E = r.getGroup(u);
                if (x && E && x.size) {
                  var L = Eh + ".g" + u + '[id="' + g + '"]',
                    z = "";
                  x !== void 0 &&
                    x.forEach(function (B) {
                      B.length > 0 && (z += B + ",");
                    }),
                    (o +=
                      "" +
                      E +
                      L +
                      '{content:"' +
                      z +
                      `"}/*!sc*/
`);
                }
              }
            }
            return o;
          })(this);
        }),
        t
      );
    })(),
    $Y = /(a)(d)/gi,
    vA = function (t) {
      return String.fromCharCode(t + (t > 25 ? 39 : 97));
    };
  function v0(t) {
    var e,
      n = "";
    for (e = Math.abs(t); e > 52; e = (e / 52) | 0) n = vA(e % 52) + n;
    return (vA(e % 52) + n).replace($Y, "$1-$2");
  }
  var qu = function (t, e) {
      for (var n = e.length; n; ) t = (33 * t) ^ e.charCodeAt(--n);
      return t;
    },
    qN = function (t) {
      return qu(5381, t);
    };
  function BY(t) {
    for (var e = 0; e < t.length; e += 1) {
      var n = t[e];
      if (Pf(n) && !u_(n)) return !1;
    }
    return !0;
  }
  var HY = qN("5.3.11"),
    WY = (function () {
      function t(e, n, r) {
        (this.rules = e),
          (this.staticRulesId = ""),
          (this.isStatic = (r === void 0 || r.isStatic) && BY(e)),
          (this.componentId = n),
          (this.baseHash = qu(HY, n)),
          (this.baseStyle = r),
          GN.registerId(n);
      }
      return (
        (t.prototype.generateAndInjectStyles = function (e, n, r) {
          var a = this.componentId,
            o = [];
          if (
            (this.baseStyle &&
              o.push(this.baseStyle.generateAndInjectStyles(e, n, r)),
            this.isStatic && !r.hash)
          )
            if (this.staticRulesId && n.hasNameForId(a, this.staticRulesId))
              o.push(this.staticRulesId);
            else {
              var u = kh(this.rules, e, n, r).join(""),
                g = v0(qu(this.baseHash, u) >>> 0);
              if (!n.hasNameForId(a, g)) {
                var x = r(u, "." + g, void 0, a);
                n.insertRules(a, g, x);
              }
              o.push(g), (this.staticRulesId = g);
            }
          else {
            for (
              var E = this.rules.length,
                L = qu(this.baseHash, r.hash),
                z = "",
                B = 0;
              B < E;
              B++
            ) {
              var ae = this.rules[B];
              if (typeof ae == "string") z += ae;
              else if (ae) {
                var se = kh(ae, e, n, r),
                  le = Array.isArray(se) ? se.join("") : se;
                (L = qu(L, le + B)), (z += le);
              }
            }
            if (z) {
              var he = v0(L >>> 0);
              if (!n.hasNameForId(a, he)) {
                var oe = r(z, "." + he, void 0, a);
                n.insertRules(a, he, oe);
              }
              o.push(he);
            }
          }
          return o.join(" ");
        }),
        t
      );
    })(),
    UY = /^\s*\/\/.*$/gm,
    XY = [":", "[", ".", "#"];
  function YY(t) {
    var e,
      n,
      r,
      a,
      o = t === void 0 ? Wl : t,
      u = o.options,
      g = u === void 0 ? Wl : u,
      x = o.plugins,
      E = x === void 0 ? Pm : x,
      L = new EY(g),
      z = [],
      B = (function (le) {
        function he(oe) {
          if (oe)
            try {
              le(oe + "}");
            } catch {}
        }
        return function (oe, F, ce, ye, C, ke, je, tt, Ct, xt) {
          switch (oe) {
            case 1:
              if (Ct === 0 && F.charCodeAt(0) === 64) return le(F + ";"), "";
              break;
            case 2:
              if (tt === 0) return F + "/*|*/";
              break;
            case 3:
              switch (tt) {
                case 102:
                case 112:
                  return le(ce[0] + F), "";
                default:
                  return F + (xt === 0 ? "/*|*/" : "");
              }
            case -2:
              F.split("/*|*/}").forEach(he);
          }
        };
      })(function (le) {
        z.push(le);
      }),
      ae = function (le, he, oe) {
        return (he === 0 && XY.indexOf(oe[n.length]) !== -1) || oe.match(a)
          ? le
          : "." + e;
      };
    function se(le, he, oe, F) {
      F === void 0 && (F = "&");
      var ce = le.replace(UY, ""),
        ye = he && oe ? oe + " " + he + " { " + ce + " }" : ce;
      return (
        (e = F),
        (n = he),
        (r = new RegExp("\\" + n + "\\b", "g")),
        (a = new RegExp("(\\" + n + "\\b){2,}")),
        L(oe || !he ? "" : he, ye)
      );
    }
    return (
      L.use(
        [].concat(E, [
          function (le, he, oe) {
            le === 2 &&
              oe.length &&
              oe[0].lastIndexOf(n) > 0 &&
              (oe[0] = oe[0].replace(r, ae));
          },
          B,
          function (le) {
            if (le === -2) {
              var he = z;
              return (z = []), he;
            }
          },
        ])
      ),
      (se.hash = E.length
        ? E.reduce(function (le, he) {
            return he.name || op(15), qu(le, he.name);
          }, 5381).toString()
        : ""),
      se
    );
  }
  var KN = nr.createContext();
  KN.Consumer;
  var QN = nr.createContext(),
    GY = (QN.Consumer, new GN()),
    y0 = YY();
  function qY() {
    return ue.useContext(KN) || GY;
  }
  function KY() {
    return ue.useContext(QN) || y0;
  }
  var ZN = (function () {
      function t(e, n) {
        var r = this;
        (this.inject = function (a, o) {
          o === void 0 && (o = y0);
          var u = r.name + o.hash;
          a.hasNameForId(r.id, u) ||
            a.insertRules(r.id, u, o(r.rules, u, "@keyframes"));
        }),
          (this.toString = function () {
            return op(12, String(r.name));
          }),
          (this.name = e),
          (this.id = "sc-keyframes-" + e),
          (this.rules = n);
      }
      return (
        (t.prototype.getName = function (e) {
          return e === void 0 && (e = y0), this.name + e.hash;
        }),
        t
      );
    })(),
    QY = /([A-Z])/,
    ZY = /([A-Z])/g,
    JY = /^ms-/,
    eG = function (t) {
      return "-" + t.toLowerCase();
    };
  function yA(t) {
    return QY.test(t) ? t.replace(ZY, eG).replace(JY, "-ms-") : t;
  }
  var xA = function (t) {
    return t == null || t === !1 || t === "";
  };
  function kh(t, e, n, r) {
    if (Array.isArray(t)) {
      for (var a, o = [], u = 0, g = t.length; u < g; u += 1)
        (a = kh(t[u], e, n, r)) !== "" &&
          (Array.isArray(a) ? o.push.apply(o, a) : o.push(a));
      return o;
    }
    if (xA(t)) return "";
    if (u_(t)) return "." + t.styledComponentId;
    if (Pf(t)) {
      if (
        typeof (E = t) != "function" ||
        (E.prototype && E.prototype.isReactComponent) ||
        !e
      )
        return t;
      var x = t(e);
      return kh(x, e, n, r);
    }
    var E;
    return t instanceof ZN
      ? n
        ? (t.inject(n, r), t.getName(r))
        : t
      : m0(t)
      ? (function L(z, B) {
          var ae,
            se,
            le = [];
          for (var he in z)
            z.hasOwnProperty(he) &&
              !xA(z[he]) &&
              ((Array.isArray(z[he]) && z[he].isCss) || Pf(z[he])
                ? le.push(yA(he) + ":", z[he], ";")
                : m0(z[he])
                ? le.push.apply(le, L(z[he], he))
                : le.push(
                    yA(he) +
                      ": " +
                      ((ae = he),
                      (se = z[he]) == null ||
                      typeof se == "boolean" ||
                      se === ""
                        ? ""
                        : typeof se != "number" ||
                          se === 0 ||
                          ae in kY ||
                          ae.startsWith("--")
                        ? String(se).trim()
                        : se + "px") +
                      ";"
                  ));
          return B ? [B + " {"].concat(le, ["}"]) : le;
        })(t)
      : t.toString();
  }
  var bA = function (t) {
    return Array.isArray(t) && (t.isCss = !0), t;
  };
  function JN(t) {
    for (
      var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
      r < e;
      r++
    )
      n[r - 1] = arguments[r];
    return Pf(t) || m0(t)
      ? bA(kh(pA(Pm, [t].concat(n))))
      : n.length === 0 && t.length === 1 && typeof t[0] == "string"
      ? t
      : bA(kh(pA(t, n)));
  }
  var tG = function (t, e, n) {
      return (
        n === void 0 && (n = Wl),
        (t.theme !== n.theme && t.theme) || e || n.theme
      );
    },
    nG = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
    rG = /(^-|-$)/g;
  function Ex(t) {
    return t.replace(nG, "-").replace(rG, "");
  }
  var eL = function (t) {
    return v0(qN(t) >>> 0);
  };
  function og(t) {
    return typeof t == "string" && !0;
  }
  var x0 = function (t) {
      return (
        typeof t == "function" ||
        (typeof t == "object" && t !== null && !Array.isArray(t))
      );
    },
    iG = function (t) {
      return t !== "__proto__" && t !== "constructor" && t !== "prototype";
    };
  function sG(t, e, n) {
    var r = t[n];
    x0(e) && x0(r) ? tL(r, e) : (t[n] = e);
  }
  function tL(t) {
    for (
      var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
      r < e;
      r++
    )
      n[r - 1] = arguments[r];
    for (var a = 0, o = n; a < o.length; a++) {
      var u = o[a];
      if (x0(u)) for (var g in u) iG(g) && sG(t, u[g], g);
    }
    return t;
  }
  var nL = nr.createContext();
  nL.Consumer;
  var kx = {};
  function rL(t, e, n) {
    var r = u_(t),
      a = !og(t),
      o = e.attrs,
      u = o === void 0 ? Pm : o,
      g = e.componentId,
      x =
        g === void 0
          ? (function (F, ce) {
              var ye = typeof F != "string" ? "sc" : Ex(F);
              kx[ye] = (kx[ye] || 0) + 1;
              var C = ye + "-" + eL("5.3.11" + ye + kx[ye]);
              return ce ? ce + "-" + C : C;
            })(e.displayName, e.parentComponentId)
          : g,
      E = e.displayName,
      L =
        E === void 0
          ? (function (F) {
              return og(F) ? "styled." + F : "Styled(" + gA(F) + ")";
            })(t)
          : E,
      z =
        e.displayName && e.componentId
          ? Ex(e.displayName) + "-" + e.componentId
          : e.componentId || x,
      B = r && t.attrs ? Array.prototype.concat(t.attrs, u).filter(Boolean) : u,
      ae = e.shouldForwardProp;
    r &&
      t.shouldForwardProp &&
      (ae = e.shouldForwardProp
        ? function (F, ce, ye) {
            return (
              t.shouldForwardProp(F, ce, ye) && e.shouldForwardProp(F, ce, ye)
            );
          }
        : t.shouldForwardProp);
    var se,
      le = new WY(n, z, r ? t.componentStyle : void 0),
      he = le.isStatic && u.length === 0,
      oe = function (F, ce) {
        return (function (ye, C, ke, je) {
          var tt = ye.attrs,
            Ct = ye.componentStyle,
            xt = ye.defaultProps,
            pt = ye.foldedComponentIds,
            Mt = ye.shouldForwardProp,
            Vt = ye.styledComponentId,
            It = ye.target,
            ht = (function (ct, de, yt) {
              ct === void 0 && (ct = Wl);
              var Ze = Lo({}, de, { theme: ct }),
                Zt = {};
              return (
                yt.forEach(function (Wt) {
                  var $t,
                    Rt,
                    sn,
                    dt = Wt;
                  for ($t in (Pf(dt) && (dt = dt(Ze)), dt))
                    Ze[$t] = Zt[$t] =
                      $t === "className"
                        ? ((Rt = Zt[$t]),
                          (sn = dt[$t]),
                          Rt && sn ? Rt + " " + sn : Rt || sn)
                        : dt[$t];
                }),
                [Ze, Zt]
              );
            })(tG(C, ue.useContext(nL), xt) || Wl, C, tt),
            Ie = ht[0],
            Lt = ht[1],
            we = (function (ct, de, yt, Ze) {
              var Zt = qY(),
                Wt = KY(),
                $t = de
                  ? ct.generateAndInjectStyles(Wl, Zt, Wt)
                  : ct.generateAndInjectStyles(yt, Zt, Wt);
              return $t;
            })(Ct, je, Ie),
            Xe = ke,
            Oe = Lt.$as || C.$as || Lt.as || C.as || It,
            Ye = og(Oe),
            Re = Lt !== C ? Lo({}, C, {}, Lt) : C,
            $e = {};
          for (var Fe in Re)
            Fe[0] !== "$" &&
              Fe !== "as" &&
              (Fe === "forwardedAs"
                ? ($e.as = Re[Fe])
                : (Mt ? Mt(Fe, fA, Oe) : !Ye || fA(Fe)) && ($e[Fe] = Re[Fe]));
          return (
            C.style &&
              Lt.style !== C.style &&
              ($e.style = Lo({}, C.style, {}, Lt.style)),
            ($e.className = Array.prototype
              .concat(pt, Vt, we !== Vt ? we : null, C.className, Lt.className)
              .filter(Boolean)
              .join(" ")),
            ($e.ref = Xe),
            ue.createElement(Oe, $e)
          );
        })(se, F, ce, he);
      };
    return (
      (oe.displayName = L),
      ((se = nr.forwardRef(oe)).attrs = B),
      (se.componentStyle = le),
      (se.displayName = L),
      (se.shouldForwardProp = ae),
      (se.foldedComponentIds = r
        ? Array.prototype.concat(t.foldedComponentIds, t.styledComponentId)
        : Pm),
      (se.styledComponentId = z),
      (se.target = r ? t.target : t),
      (se.withComponent = function (F) {
        var ce = e.componentId,
          ye = (function (ke, je) {
            if (ke == null) return {};
            var tt,
              Ct,
              xt = {},
              pt = Object.keys(ke);
            for (Ct = 0; Ct < pt.length; Ct++)
              (tt = pt[Ct]), je.indexOf(tt) >= 0 || (xt[tt] = ke[tt]);
            return xt;
          })(e, ["componentId"]),
          C = ce && ce + "-" + (og(F) ? F : Ex(gA(F)));
        return rL(F, Lo({}, ye, { attrs: B, componentId: C }), n);
      }),
      Object.defineProperty(se, "defaultProps", {
        get: function () {
          return this._foldedDefaultProps;
        },
        set: function (F) {
          this._foldedDefaultProps = r ? tL({}, t.defaultProps, F) : F;
        },
      }),
      Object.defineProperty(se, "toString", {
        value: function () {
          return "." + se.styledComponentId;
        },
      }),
      a &&
        Vw(se, t, {
          attrs: !0,
          componentStyle: !0,
          displayName: !0,
          foldedComponentIds: !0,
          shouldForwardProp: !0,
          styledComponentId: !0,
          target: !0,
          withComponent: !0,
        }),
      se
    );
  }
  var b0 = function (t) {
    return (function e(n, r, a) {
      if ((a === void 0 && (a = Wl), !jw.isValidElementType(r)))
        return op(1, String(r));
      var o = function () {
        return n(r, a, JN.apply(void 0, arguments));
      };
      return (
        (o.withConfig = function (u) {
          return e(n, r, Lo({}, a, {}, u));
        }),
        (o.attrs = function (u) {
          return e(
            n,
            r,
            Lo({}, a, {
              attrs: Array.prototype.concat(a.attrs, u).filter(Boolean),
            })
          );
        }),
        o
      );
    })(rL, t);
  };
  [
    "a",
    "abbr",
    "address",
    "area",
    "article",
    "aside",
    "audio",
    "b",
    "base",
    "bdi",
    "bdo",
    "big",
    "blockquote",
    "body",
    "br",
    "button",
    "canvas",
    "caption",
    "cite",
    "code",
    "col",
    "colgroup",
    "data",
    "datalist",
    "dd",
    "del",
    "details",
    "dfn",
    "dialog",
    "div",
    "dl",
    "dt",
    "em",
    "embed",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "head",
    "header",
    "hgroup",
    "hr",
    "html",
    "i",
    "iframe",
    "img",
    "input",
    "ins",
    "kbd",
    "keygen",
    "label",
    "legend",
    "li",
    "link",
    "main",
    "map",
    "mark",
    "marquee",
    "menu",
    "menuitem",
    "meta",
    "meter",
    "nav",
    "noscript",
    "object",
    "ol",
    "optgroup",
    "option",
    "output",
    "p",
    "param",
    "picture",
    "pre",
    "progress",
    "q",
    "rp",
    "rt",
    "ruby",
    "s",
    "samp",
    "script",
    "section",
    "select",
    "small",
    "source",
    "span",
    "strong",
    "style",
    "sub",
    "summary",
    "sup",
    "table",
    "tbody",
    "td",
    "textarea",
    "tfoot",
    "th",
    "thead",
    "time",
    "title",
    "tr",
    "track",
    "u",
    "ul",
    "var",
    "video",
    "wbr",
    "circle",
    "clipPath",
    "defs",
    "ellipse",
    "foreignObject",
    "g",
    "image",
    "line",
    "linearGradient",
    "marker",
    "mask",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "radialGradient",
    "rect",
    "stop",
    "svg",
    "text",
    "textPath",
    "tspan",
  ].forEach(function (t) {
    b0[t] = b0(t);
  });
  function d_(t) {
    for (
      var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
      r < e;
      r++
    )
      n[r - 1] = arguments[r];
    var a = JN.apply(void 0, [t].concat(n)).join(""),
      o = eL(a);
    return new ZN(o, a);
  }
  const lp = b0;
  var iL = function (t, e) {
      return (
        Object.defineProperty
          ? Object.defineProperty(t, "raw", { value: e })
          : (t.raw = e),
        t
      );
    },
    ba = 242.776657104492,
    aG = 1.6,
    oG = d_(
      wA ||
        (wA = iL(
          [
            `
  12.5% {
    stroke-dasharray: `,
            "px, ",
            `px;
    stroke-dashoffset: -`,
            `px;
  }
  43.75% {
    stroke-dasharray: `,
            "px, ",
            `px;
    stroke-dashoffset: -`,
            `px;
  }
  100% {
    stroke-dasharray: `,
            "px, ",
            `px;
    stroke-dashoffset: -`,
            `px;
  }
`,
          ],
          [
            `
  12.5% {
    stroke-dasharray: `,
            "px, ",
            `px;
    stroke-dashoffset: -`,
            `px;
  }
  43.75% {
    stroke-dasharray: `,
            "px, ",
            `px;
    stroke-dashoffset: -`,
            `px;
  }
  100% {
    stroke-dasharray: `,
            "px, ",
            `px;
    stroke-dashoffset: -`,
            `px;
  }
`,
          ]
        )),
      ba * 0.14,
      ba,
      ba * 0.11,
      ba * 0.35,
      ba,
      ba * 0.35,
      ba * 0.01,
      ba,
      ba * 0.99
    );
  lp.path(
    _A ||
      (_A = iL(
        [
          `
  stroke-dasharray: `,
          "px, ",
          `;
  stroke-dashoffset: 0;
  animation: `,
          " ",
          `s linear infinite;
`,
        ],
        [
          `
  stroke-dasharray: `,
          "px, ",
          `;
  stroke-dashoffset: 0;
  animation: `,
          " ",
          `s linear infinite;
`,
        ]
      )),
    ba * 0.01,
    ba,
    oG,
    aG
  );
  var wA,
    _A,
    Hd = function () {
      return (
        (Hd =
          Object.assign ||
          function (t) {
            for (var e, n = 1, r = arguments.length; n < r; n++) {
              e = arguments[n];
              for (var a in e)
                Object.prototype.hasOwnProperty.call(e, a) && (t[a] = e[a]);
            }
            return t;
          }),
        Hd.apply(this, arguments)
      );
    },
    eu = function (t) {
      var e = t.height,
        n = e === void 0 ? 90 : e,
        r = t.width,
        a = r === void 0 ? 80 : r,
        o = t.radius,
        u = o === void 0 ? 12.5 : o,
        g = t.color,
        x = g === void 0 ? dA : g,
        E = t.secondaryColor,
        L = E === void 0 ? dA : E,
        z = t.ariaLabel,
        B = z === void 0 ? "mutating-dots-loading" : z,
        ae = t.wrapperStyle,
        se = t.wrapperClass,
        le = t.visible,
        he = le === void 0 ? !0 : le;
      return nr.createElement(
        "div",
        Hd(
          {
            style: Hd(Hd({}, _Y(he)), ae),
            className: se,
            "data-testid": "mutating-dots-loading",
            "aria-label": B,
          },
          SY
        ),
        nr.createElement(
          "svg",
          {
            id: "goo-loader",
            width: a,
            height: n,
            "data-testid": "mutating-dots-svg",
          },
          nr.createElement(
            "filter",
            { id: "fancy-goo" },
            nr.createElement("feGaussianBlur", {
              in: "SourceGraphic",
              stdDeviation: "6",
              result: "blur",
            }),
            nr.createElement("feColorMatrix", {
              in: "blur",
              mode: "matrix",
              values: "1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9",
              result: "goo",
            }),
            nr.createElement("feComposite", {
              in: "SourceGraphic",
              in2: "goo",
              operator: "atop",
            })
          ),
          nr.createElement(
            "g",
            { filter: "url(#fancy-goo)" },
            nr.createElement("animateTransform", {
              id: "mainAnim",
              attributeName: "transform",
              attributeType: "XML",
              type: "rotate",
              from: "0 50 50",
              to: "359 50 50",
              dur: "1.2s",
              repeatCount: "indefinite",
            }),
            nr.createElement(
              "circle",
              { cx: "50%", cy: "40", r: u, fill: x },
              nr.createElement("animate", {
                id: "cAnim1",
                attributeType: "XML",
                attributeName: "cy",
                dur: "0.6s",
                begin: "0;cAnim1.end+0.2s",
                calcMode: "spline",
                values: "40;20;40",
                keyTimes: "0;0.3;1",
                keySplines: "0.09, 0.45, 0.16, 1;0.09, 0.45, 0.16, 1",
              })
            ),
            nr.createElement(
              "circle",
              { cx: "50%", cy: "60", r: u, fill: L },
              nr.createElement("animate", {
                id: "cAnim2",
                attributeType: "XML",
                attributeName: "cy",
                dur: "0.6s",
                begin: "0.4s;cAnim2.end+0.2s",
                calcMode: "spline",
                values: "60;80;60",
                keyTimes: "0;0.3;1",
                keySplines: "0.09, 0.45, 0.16, 1;0.09, 0.45, 0.16, 1",
              })
            )
          )
        )
      );
    },
    lG = function (e, n) {
      return function () {
        var r =
          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        if (typeof r[e] < "u") return r[e];
        if (e && e.indexOf(".") > 0) {
          for (
            var a = e.split("."), o = a.length, u = r[a[0]], g = 1;
            u != null && g < o;

          )
            (u = u[a[g]]), (g += 1);
          if (typeof u < "u") return u;
        }
        return n;
      };
    },
    f_ = function (t, e) {
      return (
        Object.defineProperty
          ? Object.defineProperty(t, "raw", { value: e })
          : (t.raw = e),
        t
      );
    },
    cG = d_(
      SA ||
        (SA = f_(
          [
            `
 to {
    transform: rotate(360deg);
  }
`,
          ],
          [
            `
 to {
    transform: rotate(360deg);
  }
`,
          ]
        ))
    );
  lp.svg(
    EA ||
      (EA = f_(
        [
          `
  animation: `,
          ` 0.75s steps(12, end) infinite;
  animation-duration: `,
          `s;
`,
        ],
        [
          `
  animation: `,
          ` 0.75s steps(12, end) infinite;
  animation-duration: `,
          `s;
`,
        ]
      )),
    cG,
    lG("speed", "0.75")
  );
  lp.polyline(
    kA ||
      (kA = f_(
        [
          `
  stroke-width: `,
          `px;
  stroke-linecap: round;

  &:nth-child(12n + 0) {
    stroke-opacity: 0.08;
  }

  &:nth-child(12n + 1) {
    stroke-opacity: 0.17;
  }

  &:nth-child(12n + 2) {
    stroke-opacity: 0.25;
  }

  &:nth-child(12n + 3) {
    stroke-opacity: 0.33;
  }

  &:nth-child(12n + 4) {
    stroke-opacity: 0.42;
  }

  &:nth-child(12n + 5) {
    stroke-opacity: 0.5;
  }

  &:nth-child(12n + 6) {
    stroke-opacity: 0.58;
  }

  &:nth-child(12n + 7) {
    stroke-opacity: 0.66;
  }

  &:nth-child(12n + 8) {
    stroke-opacity: 0.75;
  }

  &:nth-child(12n + 9) {
    stroke-opacity: 0.83;
  }

  &:nth-child(12n + 11) {
    stroke-opacity: 0.92;
  }
`,
        ],
        [
          `
  stroke-width: `,
          `px;
  stroke-linecap: round;

  &:nth-child(12n + 0) {
    stroke-opacity: 0.08;
  }

  &:nth-child(12n + 1) {
    stroke-opacity: 0.17;
  }

  &:nth-child(12n + 2) {
    stroke-opacity: 0.25;
  }

  &:nth-child(12n + 3) {
    stroke-opacity: 0.33;
  }

  &:nth-child(12n + 4) {
    stroke-opacity: 0.42;
  }

  &:nth-child(12n + 5) {
    stroke-opacity: 0.5;
  }

  &:nth-child(12n + 6) {
    stroke-opacity: 0.58;
  }

  &:nth-child(12n + 7) {
    stroke-opacity: 0.66;
  }

  &:nth-child(12n + 8) {
    stroke-opacity: 0.75;
  }

  &:nth-child(12n + 9) {
    stroke-opacity: 0.83;
  }

  &:nth-child(12n + 11) {
    stroke-opacity: 0.92;
  }
`,
        ]
      )),
    function (t) {
      return t.width;
    }
  );
  var SA,
    EA,
    kA,
    p_ = function (t, e) {
      return (
        Object.defineProperty
          ? Object.defineProperty(t, "raw", { value: e })
          : (t.raw = e),
        t
      );
    },
    uG = d_(
      AA ||
        (AA = p_(
          [
            `
 to {
    stroke-dashoffset: 136;
  }
`,
          ],
          [
            `
 to {
    stroke-dashoffset: 136;
  }
`,
          ]
        ))
    );
  lp.polygon(
    CA ||
      (CA = p_(
        [
          `
  stroke-dasharray: 17;
  animation: `,
          ` 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;
`,
        ],
        [
          `
  stroke-dasharray: 17;
  animation: `,
          ` 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;
`,
        ]
      )),
    uG
  );
  lp.svg(
    TA ||
      (TA = p_(
        [
          `
  transform-origin: 50% 65%;
`,
        ],
        [
          `
  transform-origin: 50% 65%;
`,
        ]
      ))
  );
  var AA, CA, TA;
  function hG() {
    const t = rc(),
      e = {
        id: "",
        name: "",
        modelNo: "",
        category: "",
        price: "",
        color: "",
        offer: "",
        stock: "",
        images: [],
        status: "",
      },
      { Formik: n } = vv,
      r = Hf().shape({
        name: Fo().required("Name is required."),
        modelNo: Fo(),
        price: Eg().required("Price is required."),
        offer: Eg(),
        stock: Eg(),
        status: Fo().required("Status is required."),
      }),
      [a, o] = ue.useState([]),
      [u, g] = nr.useState(!1),
      [x, E] = ue.useState([]),
      [L, z] = ue.useState([]),
      [B, ae] = ue.useState(""),
      [se, le] = ue.useState([""]),
      [he, oe] = ue.useState(!1),
      [F, ce] = ue.useState(""),
      [ye, C] = ue.useState(null),
      ke = (Oe) => {
        ce(Oe), oe(!1);
      },
      je = (Oe) => {
        console.log("first", Oe), ce(Oe), oe(!0);
      },
      tt = () => {
        le([...se, ""]);
      },
      Ct = (Oe) => {
        const Ye = [...se];
        Ye.splice(Oe, 1), le(Ye);
      },
      xt = (Oe, Ye) => {
        const Re = [...se];
        (Re[Oe] = Ye.target.value), le(Re);
      },
      [pt, Mt] = ue.useState({
        name: "",
        modelNo: "",
        category: "",
        price: "",
        color: "",
        offer: "",
        stock: "",
        images: "",
        status: "",
      }),
      Vt = (Oe) => {
        if (!Oe) return;
        const Ye = a.findIndex((Re) => Re.id.toString() === Oe.toString());
        a[Ye].features && le(a[Ye].features),
          ae(a[Ye].categoryId),
          console.log(a[Ye]),
          Mt(a[Ye]),
          g(!0);
      },
      It = async () => {
        if (!F) return;
        const Oe = Ta(Hs);
        try {
          await a_(Zl(Oe, "products", F));
          const Ye = await Lt();
          o(Ye), ce(""), oe(!1);
        } catch (Ye) {
          console.log(Ye);
        }
      },
      ht = (Oe) => {
        ae(Oe.target.value);
      },
      Ie = (Oe) => {
        E(Oe.target.files);
        const Ye = Oe.target.files;
        if (Ye.length > 0) {
          const Re = [];
          for (let $e = 0; $e < Ye.length; $e++) {
            const Fe = Ye[$e],
              ct = new FileReader();
            (ct.onload = () => {
              Re.push(ct.result), Re.length === Ye.length && C(Re);
            }),
              ct.readAsDataURL(Fe);
          }
        } else C([]);
      },
      Lt = async () => {
        const Oe = Ta(Hs),
          Ye = await If(Hl(Oe, "products")),
          Re = await If(Hl(Oe, "categories")),
          $e = Ye.docs.map((de) => ({ id: de.id, ...de.data() })),
          Fe = Re.docs.map((de) => ({ id: de.id, ...de.data() }));
        z(Fe);
        let ct = [];
        for (const de of $e)
          if (de.categoryId) {
            const yt = de.categoryId,
              Ze = Fe.find((Zt) => Zt.id && Zt.id.toString() === yt.toString());
            Ze
              ? ct.push({ ...de, categoryName: Ze.name })
              : ct.push({ ...de, categoryName: "" });
          }
        return ct;
      };
    ue.useEffect(() => {
      const Oe = localStorage.getItem("isLoggedIn");
      if ((console.log({ isLoggedIn: Oe }), !Oe)) {
        console.log("user not loggedin"), t("/login");
        return;
      }
      Lt().then((Ye) => {
        o(Ye);
      });
    }, []);
    async function we(Oe) {
      if (
        (console.log({ data: Oe }, pt.images),
        x.length !== 4 && pt.images.length !== 4)
      ) {
        console.log("returning");
        return;
      }
      if ((console.log("first"), !B)) return;
      (Oe.features = se), (Oe.categoryId = B);
      const Ye = [];
      if (ye != null && ye.length) {
        for (let ct = 0; ct < x.length; ct++) {
          const de = x[ct],
            yt = c1(u1, `images/product-${de.name}`),
            Ze = o1(yt, de);
          Ye.push(Ze);
        }
        const $e = await Promise.all(Ye);
        let Fe = await Promise.all($e.map((ct) => l1(ct.ref)));
        for (console.log("All images are uploaded:", Fe); Fe.length < 4; )
          Fe = [...Fe, Fe[0]];
        Oe.images = Fe;
      } else Oe.images = pt.images;
      const Re = Ta(Hs);
      try {
        if (Oe.id) {
          const Fe = Zl(Re, "products", Oe.id);
          console.log({ productRef: Fe }), await iy(Fe, Oe);
        } else {
          delete Oe.id, (Oe.timestamp = c_()), console.log({ ...Oe });
          const Fe = await o_(Hl(Re, "products"), Oe);
          console.log({ docRef: Fe });
        }
        const $e = await Lt();
        o($e), g(!1), Mt(e);
      } catch ($e) {
        console.error("Error while uploading images", $e);
      }
    }
    const Xe = () => {
      Mt(e), ae(""), le([""]), C([]), g(!1);
    };
    return P.jsxs("div", {
      className: "widget-content searchable-container list products",
      children: [
        P.jsxs(Pn, {
          show: u,
          size: "md",
          "aria-labelledby": "contained-modal-title-vcenter",
          animation: !0,
          scrollable: !0,
          centered: !0,
          children: [
            P.jsx(Pn.Header, {
              closeButton: !0,
              onClick: () => Xe(),
              children: P.jsx(Pn.Title, {
                id: "contained-modal-title-vcenter",
                children: P.jsx("b", { children: "Add Product" }),
              }),
            }),
            P.jsx(n, {
              validationSchema: r,
              onSubmit: (Oe) => {
                console.log("entered submit"), we(Oe);
              },
              initialValues: pt
                ? {
                    id: pt.id || "",
                    name: pt.name || "",
                    modelNo: pt.modelNo || "",
                    category: pt.category || "",
                    price: pt.price || "",
                    color: pt.color || "",
                    offer: pt.offer || "",
                    stock: pt.stock || "",
                    images: pt.images || [],
                    status: pt.status || "",
                  }
                : {
                    id: pt.id || "",
                    name: "",
                    modelNo: "",
                    category: "",
                    price: "",
                    color: "",
                    offer: "",
                    stock: "",
                    images: [],
                    status: "",
                  },
              children: ({
                handleSubmit: Oe,
                handleChange: Ye,
                values: Re,
                touched: $e,
                errors: Fe,
              }) => {
                var ct;
                return P.jsxs(vt, {
                  noValidate: !0,
                  onSubmit: Oe,
                  children: [
                    P.jsx(Pn.Body, {
                      children: P.jsxs(Ev, {
                        className: "mb-3",
                        children: [
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "12",
                            controlId: "validationFormik01",
                            children: [
                              P.jsx("span", {
                                className: "importantStar",
                                children: "* ",
                              }),
                              P.jsx(vt.Label, { children: "Name" }),
                              P.jsx(vt.Control, {
                                type: "text",
                                name: "name",
                                value: Re.name,
                                onChange: Ye,
                                isValid: $e.name && !Fe.name,
                                isInvalid: $e.name && !!Fe.name,
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.name,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "6",
                            controlId: "validationFormik013",
                            className: "my-sm-2",
                            children: [
                              P.jsx(vt.Label, { children: " Model No." }),
                              P.jsx(vt.Control, {
                                type: "text",
                                name: "modelNo",
                                value: Re.modelNo,
                                onChange: Ye,
                                isValid: $e.modelNo && !Fe.modelNo,
                                isInvalid: $e.modelNo && !!Fe.modelNo,
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.modelNo,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "6",
                            controlId: "validationFormik02",
                            className: "my-sm-2",
                            children: [
                              P.jsx("span", {
                                className: "importantStar",
                                children: "* ",
                              }),
                              P.jsx(vt.Label, { children: "Category" }),
                              P.jsxs(vt.Select, {
                                name: "category",
                                value: B,
                                onChange: ht,
                                isValid: $e.category && !Fe.category,
                                isInvalid: $e.category && !B,
                                children: [
                                  P.jsx("option", {
                                    value: "",
                                    disabled: !0,
                                    children: "Select a category",
                                  }),
                                  L.map((de) =>
                                    P.jsx(
                                      "option",
                                      { value: de.id, children: de.name },
                                      `${de.id}`
                                    )
                                  ),
                                ],
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.category,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "6",
                            controlId: "validationFormik03",
                            className: "my-sm-2",
                            children: [
                              P.jsx("span", {
                                className: "importantStar",
                                children: "* ",
                              }),
                              P.jsx(vt.Label, { children: "Price   ( ₹ )" }),
                              P.jsx(vt.Control, {
                                type: "number",
                                name: "price",
                                value: Re.price,
                                onChange: Ye,
                                isValid: $e.price && !Fe.price,
                                isInvalid: $e.price && !!Fe.price,
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.price,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "6",
                            controlId: "validationFormik04",
                            className: "my-sm-2",
                            children: [
                              P.jsx(vt.Label, { children: "Offer   (%)" }),
                              P.jsx(vt.Control, {
                                type: "number",
                                name: "offer",
                                value: Re.offer,
                                onChange: Ye,
                                isValid: $e.offer && !Fe.offer,
                                isInvalid: $e.offer && !!Fe.offer,
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.offer,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "12",
                            controlId: "validationFormik01",
                            className: "my-sm-2",
                            children: [
                              P.jsx(vt.Label, { children: "Features" }),
                              se.map((de, yt) =>
                                P.jsxs(
                                  "div",
                                  {
                                    style: { display: "flex", margin: "5px" },
                                    children: [
                                      P.jsx(vt.Control, {
                                        type: "text",
                                        value: de,
                                        onChange: (Ze) => xt(yt, Ze),
                                      }),
                                      se.length > 1 &&
                                        P.jsx("button", {
                                          type: "button",
                                          className:
                                            "btn btn-red text-white delete ms-2",
                                          onClick: () => Ct(yt),
                                          children: P.jsx("i", {
                                            className: "ti ti-trash fs-5",
                                          }),
                                        }),
                                    ],
                                  },
                                  yt
                                )
                              ),
                              P.jsx("div", {
                                children: P.jsxs("button", {
                                  type: "button",
                                  className: "btn",
                                  style: {
                                    backgroundColor: "#e2e2e2",
                                    width: "80px",
                                    marginLeft: "5px",
                                  },
                                  onClick: tt,
                                  children: [
                                    P.jsxs("svg", {
                                      xmlns: "http://www.w3.org/2000/svg",
                                      className:
                                        "icon icon-tabler icon-tabler-plus",
                                      width: 20,
                                      height: 15,
                                      viewBox: "0 0 24 24",
                                      strokeWidth: 4,
                                      stroke: "currentColor",
                                      fill: "none",
                                      strokeLinecap: "round",
                                      strokeLinejoin: "round",
                                      children: [
                                        P.jsx("path", {
                                          stroke: "none",
                                          d: "M0 0h24v24H0z",
                                          fill: "none",
                                        }),
                                        P.jsx("path", { d: "M12 5l0 14" }),
                                        P.jsx("path", { d: "M5 12l14 0" }),
                                      ],
                                    }),
                                    "Add",
                                  ],
                                }),
                              }),
                              se.map((de, yt) =>
                                P.jsx(
                                  vt.Control.Feedback,
                                  {
                                    type: "invalid",
                                    children: Fe.additionalName,
                                  },
                                  `error-${yt}`
                                )
                              ),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.name,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "6",
                            controlId: "validationFormik05",
                            className: "my-sm-2",
                            children: [
                              P.jsx("span", {
                                className: "importantStar",
                                children: "* ",
                              }),
                              P.jsx(vt.Label, { children: "Stock" }),
                              P.jsx(vt.Control, {
                                type: "number",
                                name: "stock",
                                value: Re.stock,
                                onChange: Ye,
                                isValid: $e.stock && !Fe.stock,
                                isInvalid: $e.stock && !!Fe.stock,
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.stock,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "6",
                            controlId: "validationFormik018",
                            className: "my-sm-2",
                            children: [
                              P.jsx("span", {
                                className: "importantStar",
                                children: "* ",
                              }),
                              P.jsx(vt.Label, { children: " Status" }),
                              P.jsx(vt.Control, {
                                type: "text",
                                name: "status",
                                value: Re.status,
                                onChange: Ye,
                                isValid: $e.status && !Fe.status,
                                isInvalid: $e.status && !!Fe.status,
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: Fe.status,
                              }),
                            ],
                          }),
                          P.jsxs(vt.Group, {
                            as: Gr,
                            md: "12",
                            controlId: "validationFormikFile",
                            className: "my-sm-2",
                            children: [
                              P.jsx("span", {
                                className: "importantStar",
                                children: "* ",
                              }),
                              P.jsx(vt.Label, {
                                children: "Upload Images (4 no.s)",
                              }),
                              P.jsx(vt.Control, {
                                type: "file",
                                name: "images",
                                onChange: Ie,
                                isValid:
                                  $e.images &&
                                  (ye || pt.images.length) &&
                                  !Fe.images,
                                isInvalid:
                                  $e.images && !(ye || pt.images.length),
                                multiple: !0,
                                max: 4,
                                accept: ".png, .jpeg, .jpg",
                              }),
                              P.jsx(vt.Control.Feedback, {
                                type: "invalid",
                                children: "Please select 4 images.",
                              }),
                            ],
                          }),
                          (ye == null ? void 0 : ye.length) > 0
                            ? P.jsx("div", {
                                children: ye.map((de, yt) =>
                                  P.jsx(
                                    "img",
                                    {
                                      src: de,
                                      width: 100,
                                      height: 100,
                                      alt: `Image ${yt + 1}`,
                                    },
                                    yt
                                  )
                                ),
                              })
                            : ((ct = pt.images) == null ? void 0 : ct.length) >
                              0
                            ? P.jsx("div", {
                                children: pt.images.map((de, yt) =>
                                  P.jsx(
                                    "img",
                                    {
                                      src: de,
                                      width: 100,
                                      height: 100,
                                      alt: `Preview ${yt + 1}`,
                                    },
                                    yt
                                  )
                                ),
                              })
                            : P.jsx("div", {
                                children: "Please select images for preview.",
                              }),
                        ],
                      }),
                    }),
                    P.jsxs(Pn.Footer, {
                      children: [
                        P.jsx(Ts, {
                          className: "btn-success",
                          type: "submit",
                          children: "Create",
                        }),
                        P.jsx(Ts, {
                          className: "btn-danger",
                          onClick: () => Xe(),
                          children: "Close",
                        }),
                      ],
                    }),
                  ],
                });
              },
            }),
          ],
        }),
        P.jsx("div", {
          className:
            "card bg-info-subtle shadow-none position-relative overflow-hidden mb-4",
          children: P.jsx("div", {
            className: "card-body px-4 py-3",
            children: P.jsxs("div", {
              className: "row align-items-center",
              children: [
                P.jsxs("div", {
                  className: "col-9",
                  children: [
                    P.jsx("h4", {
                      className: "fw-semibold mb-8",
                      children: "Products",
                    }),
                    P.jsx("nav", {
                      "aria-label": "breadcrumb",
                      children: P.jsxs("ol", {
                        className: "breadcrumb",
                        children: [
                          P.jsx("li", {
                            className: "breadcrumb-item",
                            children: P.jsx("a", {
                              className: "text-muted text-decoration-none",
                              href: "https://bootstrapdemos.adminmart.com/modernize/dist/main/index.html",
                              children: "Home",
                            }),
                          }),
                          P.jsx("li", {
                            className: "breadcrumb-item",
                            "aria-current": "page",
                            children: "Products",
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                P.jsx("div", {
                  className: "col-3",
                  children: P.jsx("div", {
                    className: "text-center mb-n5",
                    children: P.jsx("img", {
                      src: "https://bootstrapdemos.adminmart.com/modernize/dist/assets/images/breadcrumb/ChatBc.png",
                      alt: "",
                      className: "img-fluid mb-n4",
                    }),
                  }),
                }),
              ],
            }),
          }),
        }),
        P.jsxs("div", {
          className: "card card-body",
          children: [
            P.jsxs("div", {
              className: "row mb-12",
              children: [
                P.jsx("div", {
                  className: "col-md-4 col-xl-3",
                  children: P.jsxs("form", {
                    className: "position-relative",
                    children: [
                      P.jsx("input", {
                        type: "text",
                        className: "form-control product-search ps-5",
                        id: "input-search",
                        placeholder: "Search Products...",
                      }),
                      P.jsx("i", {
                        className:
                          "ti ti-search position-absolute top-50 start-0 translate-middle-y fs-6 text-dark ms-3",
                      }),
                    ],
                  }),
                }),
                P.jsxs("div", {
                  className:
                    "col-md-8 col-xl-9 text-end d-flex justify-content-md-end justify-content-center mt-3 mt-md-0",
                  children: [
                    P.jsx("div", {
                      className: "action-btn show-btn",
                      style: { display: "none" },
                      children: P.jsxs("a", {
                        href: "",
                        className:
                          "delete-multiple bg-danger-subtle btn me-2 text-danger d-flex align-items-center font-medium",
                        children: [
                          P.jsx("i", {
                            className: "ti ti-trash text-danger me-1 fs-5",
                          }),
                          " Delete All",
                        ],
                      }),
                    }),
                    P.jsxs("button", {
                      id: "btn-add-contact",
                      className: "btn btn-info d-flex align-items-center",
                      onClick: () => g(!0),
                      children: [
                        P.jsx("i", {
                          className: "ti ti-shopping-cart text-white me-1 fs-5",
                        }),
                        " Add Product",
                      ],
                    }),
                  ],
                }),
              ],
            }),
            P.jsxs(Pn, {
              show: he,
              onHide: ke,
              children: [
                P.jsx(Pn.Header, {
                  closeButton: !0,
                  children: P.jsx(Pn.Title, {
                    children: P.jsx("b", { children: "Delete Product" }),
                  }),
                }),
                P.jsx(Pn.Body, {
                  children: "Are you sure you want to delete the product ? ",
                }),
                P.jsxs(Pn.Footer, {
                  children: [
                    P.jsx(Ts, {
                      variant: "primary",
                      onClick: ke,
                      children: "Close",
                    }),
                    P.jsx(Ts, {
                      variant: "danger",
                      onClick: () => It(),
                      children: "Delete",
                    }),
                  ],
                }),
              ],
            }),
            P.jsx("div", {
              className: "table-responsive",
              children: P.jsxs("table", {
                className: "table search-table align-middle text-nowrap",
                children: [
                  P.jsx("thead", {
                    className: "header-item",
                    children: P.jsxs("tr", {
                      children: [
                        P.jsx("th", {
                          style: { width: "20px" },
                          children: P.jsx("div", {
                            className: "n-chk align-self-center text-center",
                            children: P.jsxs("div", {
                              className: "form-check",
                              children: [
                                P.jsx("input", {
                                  type: "checkbox",
                                  className: "form-check-input primary",
                                  id: "contact-check-all",
                                }),
                                P.jsx("label", {
                                  className: "form-check-label",
                                  htmlFor: "contact-check-all",
                                }),
                                P.jsx("span", {
                                  className: "new-control-indicator",
                                }),
                              ],
                            }),
                          }),
                        }),
                        P.jsx("th", { children: "Name" }),
                        P.jsx("th", { children: "Category" }),
                        P.jsx("th", { children: "Price" }),
                        P.jsx("th", { children: "Offer (%) " }),
                        P.jsx("th", { children: "Stock" }),
                        P.jsx("th", { children: "Status" }),
                        P.jsx("th", { children: "Actions" }),
                      ],
                    }),
                  }),
                  a.length
                    ? P.jsx("tbody", {
                        children: a.map((Oe, Ye) =>
                          P.jsxs(
                            "tr",
                            {
                              className: "search-items",
                              children: [
                                P.jsx("td", {
                                  children: P.jsx("div", {
                                    className:
                                      "n-chk align-self-center text-center",
                                    children: P.jsxs("div", {
                                      className: "form-check",
                                      children: [
                                        P.jsx("input", {
                                          type: "checkbox",
                                          className:
                                            "form-check-input contact-chkbox primary",
                                          id: Oe.name,
                                        }),
                                        P.jsx("label", {
                                          className: "form-check-label",
                                          htmlFor: Oe.name,
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                                P.jsx("td", {
                                  children: P.jsxs("div", {
                                    className: "d-flex align-items-center",
                                    children: [
                                      P.jsx("img", {
                                        src: Oe.images[0],
                                        alt: "IMG",
                                        width: "35",
                                      }),
                                      P.jsx("div", {
                                        className: "ms-3",
                                        children: P.jsx("div", {
                                          className: "user-meta-info",
                                          children: P.jsx("h6", {
                                            className: "user-name mb-0",
                                            "data-name": Oe.name,
                                            children: Oe.name,
                                          }),
                                        }),
                                      }),
                                    ],
                                  }),
                                }),
                                P.jsx("td", {
                                  children: Oe.categoryName || "-",
                                }),
                                P.jsx("td", { children: Oe.price || "-" }),
                                P.jsx("td", {
                                  children: Oe.offer ? Oe.offer + " %" : "-",
                                }),
                                P.jsx("td", { children: Oe.stock }),
                                P.jsx("td", {
                                  className:
                                    "badge bg-primary-subtle rounded-3 py-8 text-primary fw-semibold fs-2",
                                  children: Oe.status,
                                }),
                                P.jsx("td", {
                                  children: P.jsxs("div", {
                                    className: "action-btn",
                                    style: { display: "flex" },
                                    children: [
                                      P.jsx("div", {
                                        className: "text-info edit",
                                        onClick: () => Vt(Oe.id),
                                        children: P.jsxs("svg", {
                                          xmlns: "http://www.w3.org/2000/svg",
                                          className:
                                            "icon icon-tabler icon-tabler-eye-edit",
                                          width: 24,
                                          height: 24,
                                          viewBox: "0 0 24 24",
                                          strokeWidth: 1,
                                          stroke: "#000000",
                                          fill: "none",
                                          strokeLinecap: "round",
                                          strokeLinejoin: "round",
                                          children: [
                                            P.jsx("path", {
                                              stroke: "none",
                                              d: "M0 0h24v24H0z",
                                              fill: "none",
                                            }),
                                            P.jsx("path", {
                                              d: "M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",
                                            }),
                                            P.jsx("path", {
                                              d: "M11.192 17.966c-3.242 -.28 -5.972 -2.269 -8.192 -5.966c2.4 -4 5.4 -6 9 -6c3.326 0 6.14 1.707 8.442 5.122",
                                            }),
                                            P.jsx("path", {
                                              d: "M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z",
                                            }),
                                          ],
                                        }),
                                      }),
                                      P.jsx("div", {
                                        style: { paddingTop: "2px" },
                                        className: "text-dark delete ms-2",
                                        onClick: () => je(Oe.id),
                                        children: P.jsx("i", {
                                          className: "ti ti-trash fs-5",
                                        }),
                                      }),
                                    ],
                                  }),
                                }),
                              ],
                            },
                            Ye
                          )
                        ),
                      })
                    : P.jsx("tbody", {
                        children: P.jsx("tr", {
                          children: P.jsx("td", {
                            colSpan: 12,
                            children: P.jsx(eu, {
                              height: "100",
                              width: "90",
                              radius: 9,
                              color: "#125c21",
                              ariaLabel: "three-dots-loading",
                              wrapperStyle: {},
                              wrapperClass: "additional-css-class",
                            }),
                          }),
                        }),
                      }),
                ],
              }),
            }),
          ],
        }),
      ],
    });
  }
  function dG() {
    const t = rc();
    let e = { id: "", name: "", description: "", image: "", status: "" };
    const { Formik: n } = vv,
      r = Hf().shape({
        name: Fo().required("Name is required."),
        description: Fo(),
      }),
      [a, o] = nr.useState(!1),
      [u, g] = ue.useState(!1),
      [x, E] = ue.useState([]),
      [L, z] = ue.useState([]),
      [B, ae] = ue.useState(""),
      [se, le] = ue.useState(e),
      [he, oe] = ue.useState(null),
      [F, ce] = ue.useState(!1),
      [ye, C] = ue.useState(""),
      ke = (ht) => {
        if ((console.log("category id", { categoryId: ht }), !ht)) return;
        const Ie = L.findIndex((Lt) => Lt.id.toString() === ht.toString());
        ae(L[Ie].status), console.log(L[Ie]), le(L[Ie]), o(!0);
      },
      je = (ht) => {
        ae(ht.target.value);
      },
      tt = async () => {
        const ht = Ta(Hs),
          Lt = (await If(Hl(ht, "categories"))).docs.map((we) => ({
            id: we.id,
            ...we.data(),
          }));
        return console.log({ categoryList: Lt }), Lt;
      };
    ue.useEffect(() => {
      if (!localStorage.getItem("isLoggedIn")) {
        console.log("loggedin exists"), t("/login");
        return;
      }
      tt().then((Ie) => {
        z(Ie), console.log({ data: Ie });
      });
    }, []);
    const Ct = (ht) => {
        E(ht.target.files);
        const Ie = ht.target.files;
        if (Ie.length > 0) {
          const Lt = [];
          for (let we = 0; we < Ie.length; we++) {
            const Xe = Ie[we],
              Oe = new FileReader();
            (Oe.onload = () => {
              Lt.push(Oe.result), Lt.length === Ie.length && oe(Lt);
            }),
              Oe.readAsDataURL(Xe);
          }
        } else oe([]);
      },
      xt = (ht) => {
        C(ht), ce(!1);
      },
      pt = (ht) => {
        C(ht), ce(!0);
      },
      Mt = async () => {
        if ((console.log({ deleteCategory: ye }), !ye)) return;
        const ht = Ta(Hs);
        try {
          await a_(Zl(ht, "categories", ye));
          const Ie = await tt();
          z(Ie), ce(!1);
        } catch (Ie) {
          console.log(Ie);
        }
      };
    async function Vt(ht) {
      if (!(x.length !== 1 && !se.image) && B) {
        if ((g(!0), (ht.status = B), he != null && he.length)) {
          const Ie = x[0],
            Lt = c1(u1, `categories/${Ie.name}`),
            Xe = await o1(Lt, Ie),
            Oe = await l1(Xe.ref);
          ht.image = Oe;
        } else ht.image = se.image;
        try {
          const Ie = Ta(Hs);
          if (!ht.id)
            delete ht.id,
              (ht.timestamp = c_()),
              await o_(Hl(Ie, "categories"), ht);
          else {
            const we = Zl(Ie, "categories", ht.id);
            console.log({ categoriesRef: we }), await iy(we, ht);
          }
          const Lt = await tt();
          z(Lt), o(!1), le(e), g(!1);
        } catch (Ie) {
          console.error("Error while uploading images", Ie);
        }
      }
    }
    const It = () => {
      le(e), oe([]), o(!1);
    };
    return P.jsxs("div", {
      className: "widget-content searchable-container list products",
      children: [
        P.jsxs(Pn, {
          show: a,
          size: "md",
          "aria-labelledby": "contained-modal-title-vcenter",
          animation: !0,
          scrollable: !0,
          centered: !0,
          children: [
            P.jsx(Pn.Header, {
              closeButton: !0,
              onClick: () => It(),
              children: P.jsx(Pn.Title, {
                id: "contained-modal-title-vcenter",
                children: P.jsx("b", {
                  children: se.id ? "Edit Category" : "Add Category",
                }),
              }),
            }),
            P.jsx(n, {
              validationSchema: r,
              onSubmit: (ht) => {
                console.log("entered submit"), Vt(ht);
              },
              initialValues: se
                ? {
                    id: se.id || "",
                    name: se.name || "",
                    description: se.description || "",
                    image: se.image || [],
                    status: se.status || "",
                  }
                : {
                    id: se.id || "",
                    name: "",
                    description: "",
                    image: [],
                    status: "",
                  },
              children: ({
                handleSubmit: ht,
                handleChange: Ie,
                values: Lt,
                touched: we,
                errors: Xe,
              }) =>
                P.jsxs(vt, {
                  noValidate: !0,
                  onSubmit: ht,
                  children: [
                    P.jsx(Pn.Body, {
                      children: u
                        ? P.jsx(eu, {
                            height: "200",
                            width: "80",
                            radius: 9,
                            color: "green",
                            ariaLabel: "three-dots-loading",
                            wrapperStyle: {},
                            wrapperClass: "additional-css-class",
                          })
                        : P.jsxs(Ev, {
                            className: "mb-3",
                            children: [
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "12",
                                controlId: "validationFormik01",
                                children: [
                                  P.jsx("span", {
                                    className: "importantStar",
                                    children: "* ",
                                  }),
                                  P.jsx(vt.Label, { children: "Name" }),
                                  P.jsx(vt.Control, {
                                    type: "text",
                                    name: "name",
                                    value: Lt.name,
                                    onChange: Ie,
                                    isValid: we.name && !Xe.name,
                                    isInvalid: we.name && !!Xe.name,
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: Xe.name,
                                  }),
                                ],
                              }),
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "12",
                                controlId: "validationFormik013",
                                className: "my-sm-2",
                                children: [
                                  P.jsx(vt.Label, { children: " Description" }),
                                  P.jsx(vt.Control, {
                                    as: "textarea",
                                    name: "description",
                                    value: Lt.description,
                                    onChange: Ie,
                                    isValid: we.description && !Xe.description,
                                    isInvalid:
                                      we.description && !!Xe.description,
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: Xe.description,
                                  }),
                                ],
                              }),
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "6",
                                controlId: "validationFormik02",
                                className: "my-sm-2",
                                children: [
                                  P.jsx("span", {
                                    className: "importantStar",
                                    children: "* ",
                                  }),
                                  P.jsx(vt.Label, { children: "Status" }),
                                  P.jsxs(vt.Select, {
                                    name: "status",
                                    value: B,
                                    onChange: je,
                                    isValid: we.status && !Xe.status,
                                    isInvalid: we.status && !B,
                                    children: [
                                      P.jsx("option", {
                                        value: "",
                                        disabled: !0,
                                        children: "Select",
                                      }),
                                      P.jsx(
                                        "option",
                                        { value: "active", children: "Active" },
                                        "active"
                                      ),
                                      P.jsx(
                                        "option",
                                        {
                                          value: "inactive",
                                          children: "Inactive",
                                        },
                                        "inactive"
                                      ),
                                    ],
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: Xe.status,
                                  }),
                                ],
                              }),
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "12",
                                controlId: "validationFormikFile",
                                className: "my-sm-2",
                                children: [
                                  P.jsx("span", {
                                    className: "importantStar",
                                    children: "* ",
                                  }),
                                  P.jsx(vt.Label, {
                                    children: "Upload a Image",
                                  }),
                                  P.jsx(vt.Control, {
                                    type: "file",
                                    name: "image",
                                    onChange: Ct,
                                    isValid:
                                      we.image &&
                                      (he || se.image.length) &&
                                      !Xe.image,
                                    isInvalid:
                                      we.image && !(he || se.image.length),
                                    accept: ".png, .jpeg, .jpg",
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: "Please select a image.",
                                  }),
                                ],
                              }),
                              (he == null ? void 0 : he.length) > 0
                                ? P.jsx("div", {
                                    children: he.map((Oe, Ye) =>
                                      P.jsx(
                                        "img",
                                        {
                                          src: Oe,
                                          width: 100,
                                          height: 100,
                                          alt: `Image ${Ye + 1}`,
                                        },
                                        Ye
                                      )
                                    ),
                                  })
                                : se.image
                                ? P.jsx("div", {
                                    children: P.jsx(
                                      "img",
                                      {
                                        src: se.image,
                                        width: 100,
                                        height: 100,
                                        alt: "Preview 1",
                                      },
                                      1
                                    ),
                                  })
                                : P.jsx("div", {
                                    children:
                                      "Please select a image for preview.",
                                  }),
                            ],
                          }),
                    }),
                    P.jsxs(Pn.Footer, {
                      children: [
                        P.jsx(Ts, {
                          className: "btn-success",
                          type: "submit",
                          children: se.id ? "Save" : "Create",
                        }),
                        P.jsx(Ts, {
                          className: "btn-danger",
                          onClick: () => It(),
                          children: "Close",
                        }),
                      ],
                    }),
                  ],
                }),
            }),
          ],
        }),
        P.jsx("div", {
          className:
            "card bg-info-subtle shadow-none position-relative overflow-hidden mb-4",
          children: P.jsx("div", {
            className: "card-body px-4 py-3",
            children: P.jsxs("div", {
              className: "row align-items-center",
              children: [
                P.jsxs("div", {
                  className: "col-9",
                  children: [
                    P.jsx("h4", {
                      className: "fw-semibold mb-8",
                      children: "Categories",
                    }),
                    P.jsx("nav", {
                      "aria-label": "breadcrumb",
                      children: P.jsxs("ol", {
                        className: "breadcrumb",
                        children: [
                          P.jsx("li", {
                            className: "breadcrumb-item",
                            children: P.jsx("a", {
                              className: "text-muted text-decoration-none",
                              href: "https://bootstrapdemos.adminmart.com/modernize/dist/main/index.html",
                              children: "Home",
                            }),
                          }),
                          P.jsx("li", {
                            className: "breadcrumb-item",
                            "aria-current": "page",
                            children: "categories",
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                P.jsx("div", {
                  className: "col-3",
                  children: P.jsx("div", {
                    className: "text-center mb-n5",
                    children: P.jsx("img", {
                      src: "https://bootstrapdemos.adminmart.com/modernize/dist/assets/images/breadcrumb/ChatBc.png",
                      alt: "",
                      className: "img-fluid mb-n4",
                    }),
                  }),
                }),
              ],
            }),
          }),
        }),
        P.jsxs("div", {
          className: "card card-body",
          children: [
            P.jsxs("div", {
              className: "row mb-12",
              children: [
                P.jsx("div", {
                  className: "col-md-4 col-xl-3",
                  children: P.jsxs("form", {
                    className: "position-relative",
                    children: [
                      P.jsx("input", {
                        type: "text",
                        className: "form-control product-search ps-5",
                        id: "input-search",
                        placeholder: "Search Categories...",
                      }),
                      P.jsx("i", {
                        className:
                          "ti ti-search position-absolute top-50 start-0 translate-middle-y fs-6 text-dark ms-3",
                      }),
                    ],
                  }),
                }),
                P.jsxs("div", {
                  className:
                    "col-md-8 col-xl-9 text-end d-flex justify-content-md-end justify-content-center mt-3 mt-md-0",
                  children: [
                    P.jsx("div", {
                      className: "action-btn show-btn",
                      style: { display: "none" },
                      children: P.jsxs("a", {
                        href: "",
                        className:
                          "delete-multiple bg-danger-subtle btn me-2 text-danger d-flex align-items-center font-medium",
                        children: [
                          P.jsx("i", {
                            className: "ti ti-trash text-danger me-1 fs-5",
                          }),
                          " Delete All",
                        ],
                      }),
                    }),
                    P.jsxs("button", {
                      id: "btn-add-contact",
                      className: "btn btn-info d-flex align-items-center",
                      onClick: () => o(!0),
                      children: [
                        P.jsx("i", {
                          className: "ti ti-shopping-cart text-white me-1 fs-5",
                        }),
                        " Add Category",
                      ],
                    }),
                  ],
                }),
              ],
            }),
            P.jsxs(Pn, {
              show: F,
              onHide: xt,
              children: [
                P.jsx(Pn.Header, {
                  closeButton: !0,
                  children: P.jsx(Pn.Title, {
                    children: P.jsx("b", { children: "Delete Category" }),
                  }),
                }),
                P.jsx(Pn.Body, {
                  children: "Are you sure you want to delete the Category ? ",
                }),
                P.jsxs(Pn.Footer, {
                  children: [
                    P.jsx(Ts, {
                      variant: "primary",
                      onClick: xt,
                      children: "Close",
                    }),
                    P.jsx(Ts, {
                      variant: "danger",
                      onClick: () => Mt(),
                      children: "Delete",
                    }),
                  ],
                }),
              ],
            }),
            P.jsx("div", {
              className: "table-responsive",
              children: P.jsxs("table", {
                className: "table search-table align-middle text-nowrap",
                children: [
                  P.jsx("thead", {
                    className: "header-item",
                    children: P.jsxs("tr", {
                      children: [
                        P.jsx("th", {
                          style: { width: "20px" },
                          children: P.jsx("div", {
                            className: "n-chk align-self-center text-center",
                            children: P.jsxs("div", {
                              className: "form-check",
                              children: [
                                P.jsx("input", {
                                  type: "checkbox",
                                  className: "form-check-input primary",
                                  id: "contact-check-all",
                                }),
                                P.jsx("label", {
                                  className: "form-check-label",
                                  htmlFor: "contact-check-all",
                                }),
                                P.jsx("span", {
                                  className: "new-control-indicator",
                                }),
                              ],
                            }),
                          }),
                        }),
                        P.jsx("th", { children: "Name" }),
                        P.jsx("th", { children: "Description" }),
                        P.jsx("th", { children: "Status" }),
                        P.jsx("th", { children: "Actions" }),
                      ],
                    }),
                  }),
                  L.length
                    ? P.jsx("tbody", {
                        children: L.map((ht, Ie) =>
                          P.jsxs(
                            "tr",
                            {
                              className: "search-items",
                              children: [
                                P.jsx("td", {
                                  children: P.jsx("div", {
                                    className:
                                      "n-chk align-self-center text-center",
                                    children: P.jsxs("div", {
                                      className: "form-check",
                                      children: [
                                        P.jsx("input", {
                                          type: "checkbox",
                                          className:
                                            "form-check-input contact-chkbox primary",
                                          id: ht.name,
                                        }),
                                        P.jsx("label", {
                                          className: "form-check-label",
                                          htmlFor: ht.name,
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                                P.jsx("td", {
                                  children: P.jsxs("div", {
                                    className: "d-flex align-items-center",
                                    children: [
                                      P.jsx("img", {
                                        src: ht.image,
                                        alt: "avatar",
                                        width: "35",
                                      }),
                                      P.jsx("div", {
                                        className: "ms-3",
                                        children: P.jsx("div", {
                                          className: "user-meta-info",
                                          children: P.jsx("h6", {
                                            className: "user-name mb-0",
                                            "data-name": ht.name,
                                            children: ht.name,
                                          }),
                                        }),
                                      }),
                                    ],
                                  }),
                                }),
                                P.jsx("td", { children: ht.description }),
                                P.jsx("td", {
                                  className:
                                    ht.status === "active"
                                      ? "badge bg-primary-subtle rounded-3 py-8 text-primary fw-semibold fs-2"
                                      : "badge bg-danger rounded-3 py-8 text-white fw-semibold fs-2",
                                  children: ht.status || "-",
                                }),
                                P.jsx("td", {
                                  children: P.jsxs("div", {
                                    className: "action-btn",
                                    style: { display: "flex" },
                                    children: [
                                      P.jsx("div", {
                                        className: "text-info edit",
                                        onClick: () => ke(ht.id),
                                        children: P.jsxs("svg", {
                                          xmlns: "http://www.w3.org/2000/svg",
                                          className:
                                            "icon icon-tabler icon-tabler-eye-edit",
                                          width: 24,
                                          height: 24,
                                          viewBox: "0 0 24 24",
                                          strokeWidth: 1,
                                          stroke: "#000000",
                                          fill: "none",
                                          strokeLinecap: "round",
                                          strokeLinejoin: "round",
                                          children: [
                                            P.jsx("path", {
                                              stroke: "none",
                                              d: "M0 0h24v24H0z",
                                              fill: "none",
                                            }),
                                            P.jsx("path", {
                                              d: "M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",
                                            }),
                                            P.jsx("path", {
                                              d: "M11.192 17.966c-3.242 -.28 -5.972 -2.269 -8.192 -5.966c2.4 -4 5.4 -6 9 -6c3.326 0 6.14 1.707 8.442 5.122",
                                            }),
                                            P.jsx("path", {
                                              d: "M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z",
                                            }),
                                          ],
                                        }),
                                      }),
                                      P.jsx("div", {
                                        style: { paddingTop: "2px" },
                                        className: "text-dark delete ms-2",
                                        onClick: () => pt(ht.id),
                                        children: P.jsx("i", {
                                          className: "ti ti-trash fs-5",
                                        }),
                                      }),
                                    ],
                                  }),
                                }),
                              ],
                            },
                            Ie
                          )
                        ),
                      })
                    : P.jsx("tbody", {
                        children: P.jsx("tr", {
                          children: P.jsx("td", {
                            colSpan: 12,
                            children: P.jsx(eu, {
                              height: "100",
                              width: "90",
                              radius: 9,
                              color: "#125c21",
                              ariaLabel: "three-dots-loading",
                              wrapperStyle: {},
                              wrapperClass: "additional-css-class",
                            }),
                          }),
                        }),
                      }),
                ],
              }),
            }),
          ],
        }),
      ],
    });
  }
  function fG() {
    const t = rc();
    let e = {
      id: "",
      name: "",
      description: "",
      image: "",
      status: "",
      type: "",
    };
    const { Formik: n } = vv,
      r = Hf().shape({
        name: Fo().required("Name is required."),
        description: Fo(),
      }),
      [a, o] = nr.useState(!1),
      [u, g] = ue.useState(!1),
      [x, E] = ue.useState([]),
      [L, z] = ue.useState([]),
      [B, ae] = ue.useState(""),
      [se, le] = ue.useState(""),
      [he, oe] = ue.useState(e),
      [F, ce] = ue.useState(null),
      [ye, C] = ue.useState(!1),
      [ke, je] = ue.useState(""),
      tt = (we) => {
        if ((console.log("banner id", { bannerId: we }), !we)) return;
        const Xe = L.findIndex((Oe) => Oe.id.toString() === we.toString());
        ae(L[Xe].status), le(L[Xe].type), oe(L[Xe]), o(!0);
      },
      Ct = (we) => {
        ae(we.target.value);
      },
      xt = (we) => {
        le(we.target.value);
      },
      pt = async () => {
        const we = Ta(Hs),
          Oe = (await If(Hl(we, "banners"))).docs.map((Ye) => ({
            id: Ye.id,
            ...Ye.data(),
          }));
        return console.log({ bannerList: Oe }), Oe;
      };
    ue.useEffect(() => {
      if (!localStorage.getItem("isLoggedIn")) {
        console.log("loggedin exists"), t("/login");
        return;
      }
      pt().then((Xe) => {
        z(Xe), console.log({ data: Xe });
      });
    }, []);
    const Mt = (we) => {
        E(we.target.files);
        const Xe = we.target.files;
        if (Xe.length > 0) {
          const Oe = [];
          for (let Ye = 0; Ye < Xe.length; Ye++) {
            const Re = Xe[Ye],
              $e = new FileReader();
            ($e.onload = () => {
              Oe.push($e.result), Oe.length === Xe.length && ce(Oe);
            }),
              $e.readAsDataURL(Re);
          }
        } else ce([]);
      },
      Vt = (we) => {
        je(we), C(!1);
      },
      It = (we) => {
        je(we), C(!0);
      },
      ht = async () => {
        if ((console.log({ deleteBanner: ke }), !ke)) return;
        const we = Ta(Hs);
        try {
          await a_(Zl(we, "banners", ke));
          const Xe = await pt();
          z(Xe), C(!1);
        } catch (Xe) {
          console.log(Xe);
        }
      };
    async function Ie(we) {
      if (!(x.length !== 1 && !he.image) && B) {
        if ((g(!0), (we.status = B), (we.type = se), F != null && F.length)) {
          const Xe = x[0],
            Oe = c1(u1, `banners/${Xe.name}`),
            Re = await o1(Oe, Xe),
            $e = await l1(Re.ref);
          we.image = $e;
        } else we.image = he.image;
        try {
          const Xe = Ta(Hs);
          if (!we.id)
            delete we.id,
              (we.timestamp = c_()),
              await o_(Hl(Xe, "banners"), we);
          else {
            const Ye = Zl(Xe, "banners", we.id);
            console.log({ bannersRef: Ye }), await iy(Ye, we);
          }
          const Oe = await pt();
          z(Oe), g(!1), o(!1), oe(e);
        } catch (Xe) {
          console.error("Error while uploading images", Xe);
        }
      }
    }
    const Lt = () => {
      oe(e), ce([]), o(!1);
    };
    return P.jsxs("div", {
      className: "widget-content searchable-container list products",
      children: [
        P.jsxs(Pn, {
          show: a,
          size: "md",
          "aria-labelledby": "contained-modal-title-vcenter",
          animation: !0,
          scrollable: !0,
          centered: !0,
          children: [
            P.jsx(Pn.Header, {
              closeButton: !0,
              onClick: () => Lt(),
              children: P.jsx(Pn.Title, {
                id: "contained-modal-title-vcenter",
                children: P.jsx("b", {
                  children: he.id ? "Edit Banner" : "Add Banner",
                }),
              }),
            }),
            P.jsx(n, {
              validationSchema: r,
              onSubmit: (we) => {
                console.log("entered submit"), Ie(we);
              },
              initialValues: he
                ? {
                    id: he.id || "",
                    name: he.name || "",
                    description: he.description || "",
                    image: he.image || [],
                    status: he.status || "",
                    type: he.type || "",
                  }
                : {
                    id: he.id || "",
                    name: "",
                    description: "",
                    image: [],
                    status: "",
                    type: "",
                  },
              children: ({
                handleSubmit: we,
                handleChange: Xe,
                values: Oe,
                touched: Ye,
                errors: Re,
              }) =>
                P.jsxs(vt, {
                  noValidate: !0,
                  onSubmit: we,
                  children: [
                    P.jsx(Pn.Body, {
                      children: u
                        ? P.jsx(eu, {
                            height: "200",
                            width: "80",
                            radius: 9,
                            color: "green",
                            ariaLabel: "three-dots-loading",
                            wrapperStyle: {},
                            wrapperClass: "additional-css-class",
                          })
                        : P.jsxs(Ev, {
                            className: "mb-3",
                            children: [
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "12",
                                controlId: "validationFormik01",
                                children: [
                                  P.jsx("span", {
                                    className: "importantStar",
                                    children: "* ",
                                  }),
                                  P.jsx(vt.Label, { children: "Name" }),
                                  P.jsx(vt.Control, {
                                    type: "text",
                                    name: "name",
                                    value: Oe.name,
                                    onChange: Xe,
                                    isValid: Ye.name && !Re.name,
                                    isInvalid: Ye.name && !!Re.name,
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: Re.name,
                                  }),
                                ],
                              }),
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "12",
                                controlId: "validationFormik013",
                                className: "my-sm-2",
                                children: [
                                  P.jsx(vt.Label, { children: " Description" }),
                                  P.jsx(vt.Control, {
                                    as: "textarea",
                                    name: "description",
                                    value: Oe.description,
                                    onChange: Xe,
                                    isValid: Ye.description && !Re.description,
                                    isInvalid:
                                      Ye.description && !!Re.description,
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: Re.description,
                                  }),
                                ],
                              }),
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "6",
                                controlId: "validationFormik02",
                                className: "my-sm-2",
                                children: [
                                  P.jsx("span", {
                                    className: "importantStar",
                                    children: "* ",
                                  }),
                                  P.jsx(vt.Label, { children: "Status" }),
                                  P.jsxs(vt.Select, {
                                    name: "status",
                                    value: B,
                                    onChange: Ct,
                                    isValid: Ye.status && !Re.status,
                                    isInvalid: Ye.status && !B,
                                    children: [
                                      P.jsx("option", {
                                        value: "",
                                        disabled: !0,
                                        children: "Select",
                                      }),
                                      P.jsx(
                                        "option",
                                        { value: "active", children: "Active" },
                                        "active"
                                      ),
                                      P.jsx(
                                        "option",
                                        {
                                          value: "inactive",
                                          children: "Inactive",
                                        },
                                        "inactive"
                                      ),
                                    ],
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: Re.status,
                                  }),
                                ],
                              }),
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "6",
                                controlId: "validationFormik09",
                                className: "my-sm-2",
                                children: [
                                  P.jsx("span", {
                                    className: "importantStar",
                                    children: "* ",
                                  }),
                                  P.jsx(vt.Label, { children: "Type" }),
                                  P.jsxs(vt.Select, {
                                    name: "status",
                                    value: se,
                                    onChange: xt,
                                    isValid: Ye.type && !Re.type,
                                    isInvalid: Ye.type && !se,
                                    children: [
                                      P.jsx("option", {
                                        value: "",
                                        disabled: !0,
                                        children: "Select",
                                      }),
                                      P.jsx(
                                        "option",
                                        { value: "main", children: "Main" },
                                        "active"
                                      ),
                                      P.jsx(
                                        "option",
                                        { value: "sub", children: "Sub" },
                                        "inactive"
                                      ),
                                    ],
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: Re.type,
                                  }),
                                ],
                              }),
                              P.jsxs(vt.Group, {
                                as: Gr,
                                md: "12",
                                controlId: "validationFormikFile",
                                className: "my-sm-2",
                                children: [
                                  P.jsx("span", {
                                    className: "importantStar",
                                    children: "* ",
                                  }),
                                  P.jsx(vt.Label, {
                                    children: "Upload a Image",
                                  }),
                                  P.jsx(vt.Control, {
                                    type: "file",
                                    name: "image",
                                    onChange: Mt,
                                    isValid:
                                      Ye.image &&
                                      (F || he.image.length) &&
                                      !Re.image,
                                    isInvalid:
                                      Ye.image && !(F || he.image.length),
                                    accept: ".png, .jpeg, .jpg",
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: "Please select a image.",
                                  }),
                                ],
                              }),
                              (F == null ? void 0 : F.length) > 0
                                ? P.jsx("div", {
                                    children: F.map(($e, Fe) =>
                                      P.jsx(
                                        "img",
                                        {
                                          src: $e,
                                          width: 100,
                                          height: 100,
                                          alt: `Image ${Fe + 1}`,
                                        },
                                        Fe
                                      )
                                    ),
                                  })
                                : he.image
                                ? P.jsx("div", {
                                    children: P.jsx(
                                      "img",
                                      {
                                        src: he.image,
                                        width: 100,
                                        height: 100,
                                        alt: "Preview 1",
                                      },
                                      1
                                    ),
                                  })
                                : P.jsx("div", {
                                    children:
                                      "Please select a image for preview.",
                                  }),
                            ],
                          }),
                    }),
                    P.jsxs(Pn.Footer, {
                      children: [
                        P.jsx(Ts, {
                          className: "btn-success",
                          type: "submit",
                          children: he.id ? "Save" : "Create",
                        }),
                        P.jsx(Ts, {
                          className: "btn-danger",
                          onClick: () => Lt(),
                          children: "Close",
                        }),
                      ],
                    }),
                  ],
                }),
            }),
          ],
        }),
        P.jsx("div", {
          className:
            "card bg-info-subtle shadow-none position-relative overflow-hidden mb-4",
          children: P.jsx("div", {
            className: "card-body px-4 py-3",
            children: P.jsxs("div", {
              className: "row align-items-center",
              children: [
                P.jsxs("div", {
                  className: "col-9",
                  children: [
                    P.jsx("h4", {
                      className: "fw-semibold mb-8",
                      children: "Banners",
                    }),
                    P.jsx("nav", {
                      "aria-label": "breadcrumb",
                      children: P.jsxs("ol", {
                        className: "breadcrumb",
                        children: [
                          P.jsx("li", {
                            className: "breadcrumb-item",
                            children: P.jsx("a", {
                              className: "text-muted text-decoration-none",
                              href: "https://bootstrapdemos.adminmart.com/modernize/dist/main/index.html",
                              children: "Home",
                            }),
                          }),
                          P.jsx("li", {
                            className: "breadcrumb-item",
                            "aria-current": "page",
                            children: "Banners",
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                P.jsx("div", {
                  className: "col-3",
                  children: P.jsx("div", {
                    className: "text-center mb-n5",
                    children: P.jsx("img", {
                      src: "https://bootstrapdemos.adminmart.com/modernize/dist/assets/images/breadcrumb/ChatBc.png",
                      alt: "",
                      className: "img-fluid mb-n4",
                    }),
                  }),
                }),
              ],
            }),
          }),
        }),
        P.jsxs("div", {
          className: "card card-body",
          children: [
            P.jsxs("div", {
              className: "row mb-12",
              children: [
                P.jsx("div", {
                  className: "col-md-4 col-xl-3",
                  children: P.jsxs("form", {
                    className: "position-relative",
                    children: [
                      P.jsx("input", {
                        type: "text",
                        className: "form-control product-search ps-5",
                        id: "input-search",
                        placeholder: "Search Banners...",
                      }),
                      P.jsx("i", {
                        className:
                          "ti ti-search position-absolute top-50 start-0 translate-middle-y fs-6 text-dark ms-3",
                      }),
                    ],
                  }),
                }),
                P.jsxs("div", {
                  className:
                    "col-md-8 col-xl-9 text-end d-flex justify-content-md-end justify-content-center mt-3 mt-md-0",
                  children: [
                    P.jsx("div", {
                      className: "action-btn show-btn",
                      style: { display: "none" },
                      children: P.jsxs("a", {
                        href: "",
                        className:
                          "delete-multiple bg-danger-subtle btn me-2 text-danger d-flex align-items-center font-medium",
                        children: [
                          P.jsx("i", {
                            className: "ti ti-trash text-danger me-1 fs-5",
                          }),
                          " Delete All",
                        ],
                      }),
                    }),
                    P.jsxs("button", {
                      id: "btn-add-contact",
                      className: "btn btn-info d-flex align-items-center",
                      onClick: () => o(!0),
                      children: [
                        P.jsx("i", {
                          className: "ti ti-shopping-cart text-white me-1 fs-5",
                        }),
                        " Add Banner",
                      ],
                    }),
                  ],
                }),
              ],
            }),
            P.jsxs(Pn, {
              show: ye,
              onHide: Vt,
              children: [
                P.jsx(Pn.Header, {
                  closeButton: !0,
                  children: P.jsx(Pn.Title, {
                    children: P.jsx("b", { children: "Delete Banner" }),
                  }),
                }),
                P.jsx(Pn.Body, {
                  children: "Are you sure you want to delete the Banner ? ",
                }),
                P.jsxs(Pn.Footer, {
                  children: [
                    P.jsx(Ts, {
                      variant: "primary",
                      onClick: Vt,
                      children: "Close",
                    }),
                    P.jsx(Ts, {
                      variant: "danger",
                      onClick: () => ht(),
                      children: "Delete",
                    }),
                  ],
                }),
              ],
            }),
            P.jsx("div", {
              className: "table-responsive",
              children: P.jsxs("table", {
                className: "table search-table align-middle text-nowrap",
                children: [
                  P.jsx("thead", {
                    className: "header-item",
                    children: P.jsxs("tr", {
                      children: [
                        P.jsx("th", {
                          style: { width: "20px" },
                          children: P.jsx("div", {
                            className: "n-chk align-self-center text-center",
                            children: P.jsxs("div", {
                              className: "form-check",
                              children: [
                                P.jsx("input", {
                                  type: "checkbox",
                                  className: "form-check-input primary",
                                  id: "contact-check-all",
                                }),
                                P.jsx("label", {
                                  className: "form-check-label",
                                  htmlFor: "contact-check-all",
                                }),
                                P.jsx("span", {
                                  className: "new-control-indicator",
                                }),
                              ],
                            }),
                          }),
                        }),
                        P.jsx("th", { children: "Name" }),
                        P.jsx("th", { children: "Description" }),
                        P.jsx("th", { children: "Status" }),
                        P.jsx("th", { children: "Type" }),
                        P.jsx("th", { children: "Actions" }),
                      ],
                    }),
                  }),
                  L.length
                    ? P.jsx("tbody", {
                        children: L.map((we, Xe) =>
                          P.jsxs(
                            "tr",
                            {
                              className: "search-items",
                              children: [
                                P.jsx("td", {
                                  children: P.jsx("div", {
                                    className:
                                      "n-chk align-self-center text-center",
                                    children: P.jsxs("div", {
                                      className: "form-check",
                                      children: [
                                        P.jsx("input", {
                                          type: "checkbox",
                                          className:
                                            "form-check-input contact-chkbox primary",
                                          id: we.name,
                                        }),
                                        P.jsx("label", {
                                          className: "form-check-label",
                                          htmlFor: we.name,
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                                P.jsx("td", {
                                  children: P.jsxs("div", {
                                    className: "d-flex align-items-center",
                                    children: [
                                      P.jsx("img", {
                                        src: we.image,
                                        alt: "avatar",
                                        width: "35",
                                      }),
                                      P.jsx("div", {
                                        className: "ms-3",
                                        children: P.jsx("div", {
                                          className: "user-meta-info",
                                          children: P.jsx("h6", {
                                            className:
                                              "user-name mb-0 capitalize",
                                            "data-name": we.name,
                                            children: we.name,
                                          }),
                                        }),
                                      }),
                                    ],
                                  }),
                                }),
                                P.jsx("td", {
                                  className: "ellipse",
                                  children: we.description,
                                }),
                                P.jsx("td", {
                                  style: {
                                    paddingTop: "8px",
                                    paddingBottom: "8px",
                                  },
                                  className:
                                    we.status === "active"
                                      ? "badge bg-primary-subtle rounded-3 text-primary fw-semibold fs-2"
                                      : "badge bg-danger rounded-3 text-white fw-semibold fs-2",
                                  children: we.status || "-",
                                }),
                                P.jsx("td", {
                                  className: "capitalize",
                                  children: we.type || "-",
                                }),
                                P.jsx("td", {
                                  children: P.jsxs("div", {
                                    className: "action-btn",
                                    style: { display: "flex" },
                                    children: [
                                      P.jsx("div", {
                                        className: "text-info edit",
                                        onClick: () => tt(we.id),
                                        children: P.jsxs("svg", {
                                          xmlns: "http://www.w3.org/2000/svg",
                                          className:
                                            "icon icon-tabler icon-tabler-eye-edit",
                                          width: 24,
                                          height: 24,
                                          viewBox: "0 0 24 24",
                                          strokeWidth: 1,
                                          stroke: "#000000",
                                          fill: "none",
                                          strokeLinecap: "round",
                                          strokeLinejoin: "round",
                                          children: [
                                            P.jsx("path", {
                                              stroke: "none",
                                              d: "M0 0h24v24H0z",
                                              fill: "none",
                                            }),
                                            P.jsx("path", {
                                              d: "M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",
                                            }),
                                            P.jsx("path", {
                                              d: "M11.192 17.966c-3.242 -.28 -5.972 -2.269 -8.192 -5.966c2.4 -4 5.4 -6 9 -6c3.326 0 6.14 1.707 8.442 5.122",
                                            }),
                                            P.jsx("path", {
                                              d: "M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z",
                                            }),
                                          ],
                                        }),
                                      }),
                                      P.jsx("div", {
                                        style: { paddingTop: "2px" },
                                        className: "text-dark delete ms-2",
                                        onClick: () => It(we.id),
                                        children: P.jsx("i", {
                                          className: "ti ti-trash fs-5",
                                        }),
                                      }),
                                    ],
                                  }),
                                }),
                              ],
                            },
                            Xe
                          )
                        ),
                      })
                    : P.jsx("tbody", {
                        children: P.jsx("tr", {
                          children: P.jsx("td", {
                            colSpan: 12,
                            children: P.jsx(eu, {
                              height: "100",
                              width: "90",
                              radius: 9,
                              color: "#125c21",
                              ariaLabel: "three-dots-loading",
                              wrapperStyle: {},
                              wrapperClass: "additional-css-class",
                            }),
                          }),
                        }),
                      }),
                ],
              }),
            }),
          ],
        }),
      ],
    });
  }
  var sL = {},
    w0 = { exports: {} };
  /*!
   * ApexCharts v3.44.2
   * (c) 2018-2023 ApexCharts
   * Released under the MIT License.
   */ (function (t, e) {
    function n(U, i) {
      var s = Object.keys(U);
      if (Object.getOwnPropertySymbols) {
        var l = Object.getOwnPropertySymbols(U);
        i &&
          (l = l.filter(function (c) {
            return Object.getOwnPropertyDescriptor(U, c).enumerable;
          })),
          s.push.apply(s, l);
      }
      return s;
    }
    function r(U) {
      for (var i = 1; i < arguments.length; i++) {
        var s = arguments[i] != null ? arguments[i] : {};
        i % 2
          ? n(Object(s), !0).forEach(function (l) {
              x(U, l, s[l]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(U, Object.getOwnPropertyDescriptors(s))
          : n(Object(s)).forEach(function (l) {
              Object.defineProperty(
                U,
                l,
                Object.getOwnPropertyDescriptor(s, l)
              );
            });
      }
      return U;
    }
    function a(U) {
      return (
        (a =
          typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
            ? function (i) {
                return typeof i;
              }
            : function (i) {
                return i &&
                  typeof Symbol == "function" &&
                  i.constructor === Symbol &&
                  i !== Symbol.prototype
                  ? "symbol"
                  : typeof i;
              }),
        a(U)
      );
    }
    function o(U, i) {
      if (!(U instanceof i))
        throw new TypeError("Cannot call a class as a function");
    }
    function u(U, i) {
      for (var s = 0; s < i.length; s++) {
        var l = i[s];
        (l.enumerable = l.enumerable || !1),
          (l.configurable = !0),
          "value" in l && (l.writable = !0),
          Object.defineProperty(U, l.key, l);
      }
    }
    function g(U, i, s) {
      return i && u(U.prototype, i), s && u(U, s), U;
    }
    function x(U, i, s) {
      return (
        i in U
          ? Object.defineProperty(U, i, {
              value: s,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (U[i] = s),
        U
      );
    }
    function E(U, i) {
      if (typeof i != "function" && i !== null)
        throw new TypeError(
          "Super expression must either be null or a function"
        );
      (U.prototype = Object.create(i && i.prototype, {
        constructor: { value: U, writable: !0, configurable: !0 },
      })),
        i && z(U, i);
    }
    function L(U) {
      return (
        (L = Object.setPrototypeOf
          ? Object.getPrototypeOf
          : function (i) {
              return i.__proto__ || Object.getPrototypeOf(i);
            }),
        L(U)
      );
    }
    function z(U, i) {
      return (
        (z =
          Object.setPrototypeOf ||
          function (s, l) {
            return (s.__proto__ = l), s;
          }),
        z(U, i)
      );
    }
    function B(U) {
      if (U === void 0)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called"
        );
      return U;
    }
    function ae(U) {
      var i = (function () {
        if (
          typeof Reflect > "u" ||
          !Reflect.construct ||
          Reflect.construct.sham
        )
          return !1;
        if (typeof Proxy == "function") return !0;
        try {
          return (
            Boolean.prototype.valueOf.call(
              Reflect.construct(Boolean, [], function () {})
            ),
            !0
          );
        } catch {
          return !1;
        }
      })();
      return function () {
        var s,
          l = L(U);
        if (i) {
          var c = L(this).constructor;
          s = Reflect.construct(l, arguments, c);
        } else s = l.apply(this, arguments);
        return (function (h, d) {
          if (d && (typeof d == "object" || typeof d == "function")) return d;
          if (d !== void 0)
            throw new TypeError(
              "Derived constructors may only return object or undefined"
            );
          return B(h);
        })(this, s);
      };
    }
    function se(U, i) {
      return (
        (function (s) {
          if (Array.isArray(s)) return s;
        })(U) ||
        (function (s, l) {
          var c =
            s == null
              ? null
              : (typeof Symbol < "u" && s[Symbol.iterator]) || s["@@iterator"];
          if (c != null) {
            var h,
              d,
              f = [],
              p = !0,
              v = !1;
            try {
              for (
                c = c.call(s);
                !(p = (h = c.next()).done) &&
                (f.push(h.value), !l || f.length !== l);
                p = !0
              );
            } catch (b) {
              (v = !0), (d = b);
            } finally {
              try {
                p || c.return == null || c.return();
              } finally {
                if (v) throw d;
              }
            }
            return f;
          }
        })(U, i) ||
        he(U, i) ||
        (function () {
          throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        })()
      );
    }
    function le(U) {
      return (
        (function (i) {
          if (Array.isArray(i)) return oe(i);
        })(U) ||
        (function (i) {
          if (
            (typeof Symbol < "u" && i[Symbol.iterator] != null) ||
            i["@@iterator"] != null
          )
            return Array.from(i);
        })(U) ||
        he(U) ||
        (function () {
          throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        })()
      );
    }
    function he(U, i) {
      if (U) {
        if (typeof U == "string") return oe(U, i);
        var s = Object.prototype.toString.call(U).slice(8, -1);
        return (
          s === "Object" && U.constructor && (s = U.constructor.name),
          s === "Map" || s === "Set"
            ? Array.from(U)
            : s === "Arguments" ||
              /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)
            ? oe(U, i)
            : void 0
        );
      }
    }
    function oe(U, i) {
      (i == null || i > U.length) && (i = U.length);
      for (var s = 0, l = new Array(i); s < i; s++) l[s] = U[s];
      return l;
    }
    var F = (function () {
        function U() {
          o(this, U);
        }
        return (
          g(
            U,
            [
              {
                key: "shadeRGBColor",
                value: function (i, s) {
                  var l = s.split(","),
                    c = i < 0 ? 0 : 255,
                    h = i < 0 ? -1 * i : i,
                    d = parseInt(l[0].slice(4), 10),
                    f = parseInt(l[1], 10),
                    p = parseInt(l[2], 10);
                  return (
                    "rgb(" +
                    (Math.round((c - d) * h) + d) +
                    "," +
                    (Math.round((c - f) * h) + f) +
                    "," +
                    (Math.round((c - p) * h) + p) +
                    ")"
                  );
                },
              },
              {
                key: "shadeHexColor",
                value: function (i, s) {
                  var l = parseInt(s.slice(1), 16),
                    c = i < 0 ? 0 : 255,
                    h = i < 0 ? -1 * i : i,
                    d = l >> 16,
                    f = (l >> 8) & 255,
                    p = 255 & l;
                  return (
                    "#" +
                    (
                      16777216 +
                      65536 * (Math.round((c - d) * h) + d) +
                      256 * (Math.round((c - f) * h) + f) +
                      (Math.round((c - p) * h) + p)
                    )
                      .toString(16)
                      .slice(1)
                  );
                },
              },
              {
                key: "shadeColor",
                value: function (i, s) {
                  return U.isColorHex(s)
                    ? this.shadeHexColor(i, s)
                    : this.shadeRGBColor(i, s);
                },
              },
            ],
            [
              {
                key: "bind",
                value: function (i, s) {
                  return function () {
                    return i.apply(s, arguments);
                  };
                },
              },
              {
                key: "isObject",
                value: function (i) {
                  return (
                    i && a(i) === "object" && !Array.isArray(i) && i != null
                  );
                },
              },
              {
                key: "is",
                value: function (i, s) {
                  return (
                    Object.prototype.toString.call(s) === "[object " + i + "]"
                  );
                },
              },
              {
                key: "listToArray",
                value: function (i) {
                  var s,
                    l = [];
                  for (s = 0; s < i.length; s++) l[s] = i[s];
                  return l;
                },
              },
              {
                key: "extend",
                value: function (i, s) {
                  var l = this;
                  typeof Object.assign != "function" &&
                    (Object.assign = function (h) {
                      if (h == null)
                        throw new TypeError(
                          "Cannot convert undefined or null to object"
                        );
                      for (
                        var d = Object(h), f = 1;
                        f < arguments.length;
                        f++
                      ) {
                        var p = arguments[f];
                        if (p != null)
                          for (var v in p) p.hasOwnProperty(v) && (d[v] = p[v]);
                      }
                      return d;
                    });
                  var c = Object.assign({}, i);
                  return (
                    this.isObject(i) &&
                      this.isObject(s) &&
                      Object.keys(s).forEach(function (h) {
                        l.isObject(s[h]) && h in i
                          ? (c[h] = l.extend(i[h], s[h]))
                          : Object.assign(c, x({}, h, s[h]));
                      }),
                    c
                  );
                },
              },
              {
                key: "extendArray",
                value: function (i, s) {
                  var l = [];
                  return (
                    i.map(function (c) {
                      l.push(U.extend(s, c));
                    }),
                    (i = l)
                  );
                },
              },
              {
                key: "monthMod",
                value: function (i) {
                  return i % 12;
                },
              },
              {
                key: "clone",
                value: function (i) {
                  if (U.is("Array", i)) {
                    for (var s = [], l = 0; l < i.length; l++)
                      s[l] = this.clone(i[l]);
                    return s;
                  }
                  if (U.is("Null", i)) return null;
                  if (U.is("Date", i)) return i;
                  if (a(i) === "object") {
                    var c = {};
                    for (var h in i)
                      i.hasOwnProperty(h) && (c[h] = this.clone(i[h]));
                    return c;
                  }
                  return i;
                },
              },
              {
                key: "log10",
                value: function (i) {
                  return Math.log(i) / Math.LN10;
                },
              },
              {
                key: "roundToBase10",
                value: function (i) {
                  return Math.pow(10, Math.floor(Math.log10(i)));
                },
              },
              {
                key: "roundToBase",
                value: function (i, s) {
                  return Math.pow(s, Math.floor(Math.log(i) / Math.log(s)));
                },
              },
              {
                key: "parseNumber",
                value: function (i) {
                  return i === null ? i : parseFloat(i);
                },
              },
              {
                key: "stripNumber",
                value: function (i) {
                  var s =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 2;
                  return Number.isInteger(i) ? i : parseFloat(i.toPrecision(s));
                },
              },
              {
                key: "randomId",
                value: function () {
                  return (Math.random() + 1).toString(36).substring(4);
                },
              },
              {
                key: "noExponents",
                value: function (i) {
                  var s = String(i).split(/[eE]/);
                  if (s.length === 1) return s[0];
                  var l = "",
                    c = i < 0 ? "-" : "",
                    h = s[0].replace(".", ""),
                    d = Number(s[1]) + 1;
                  if (d < 0) {
                    for (l = c + "0."; d++; ) l += "0";
                    return l + h.replace(/^-/, "");
                  }
                  for (d -= h.length; d--; ) l += "0";
                  return h + l;
                },
              },
              {
                key: "getDimensions",
                value: function (i) {
                  var s = getComputedStyle(i, null),
                    l = i.clientHeight,
                    c = i.clientWidth;
                  return (
                    (l -=
                      parseFloat(s.paddingTop) + parseFloat(s.paddingBottom)),
                    [
                      (c -=
                        parseFloat(s.paddingLeft) + parseFloat(s.paddingRight)),
                      l,
                    ]
                  );
                },
              },
              {
                key: "getBoundingClientRect",
                value: function (i) {
                  var s = i.getBoundingClientRect();
                  return {
                    top: s.top,
                    right: s.right,
                    bottom: s.bottom,
                    left: s.left,
                    width: i.clientWidth,
                    height: i.clientHeight,
                    x: s.left,
                    y: s.top,
                  };
                },
              },
              {
                key: "getLargestStringFromArr",
                value: function (i) {
                  return i.reduce(function (s, l) {
                    return (
                      Array.isArray(l) &&
                        (l = l.reduce(function (c, h) {
                          return c.length > h.length ? c : h;
                        })),
                      s.length > l.length ? s : l
                    );
                  }, 0);
                },
              },
              {
                key: "hexToRgba",
                value: function () {
                  var i =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : "#999999",
                    s =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : 0.6;
                  i.substring(0, 1) !== "#" && (i = "#999999");
                  var l = i.replace("#", "");
                  l = l.match(new RegExp("(.{" + l.length / 3 + "})", "g"));
                  for (var c = 0; c < l.length; c++)
                    l[c] = parseInt(l[c].length === 1 ? l[c] + l[c] : l[c], 16);
                  return s !== void 0 && l.push(s), "rgba(" + l.join(",") + ")";
                },
              },
              {
                key: "getOpacityFromRGBA",
                value: function (i) {
                  return parseFloat(i.replace(/^.*,(.+)\)/, "$1"));
                },
              },
              {
                key: "rgb2hex",
                value: function (i) {
                  return (i = i.match(
                    /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i
                  )) && i.length === 4
                    ? "#" +
                        ("0" + parseInt(i[1], 10).toString(16)).slice(-2) +
                        ("0" + parseInt(i[2], 10).toString(16)).slice(-2) +
                        ("0" + parseInt(i[3], 10).toString(16)).slice(-2)
                    : "";
                },
              },
              {
                key: "isColorHex",
                value: function (i) {
                  return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                    i
                  );
                },
              },
              {
                key: "getPolygonPos",
                value: function (i, s) {
                  for (var l = [], c = (2 * Math.PI) / s, h = 0; h < s; h++) {
                    var d = {};
                    (d.x = i * Math.sin(h * c)),
                      (d.y = -i * Math.cos(h * c)),
                      l.push(d);
                  }
                  return l;
                },
              },
              {
                key: "polarToCartesian",
                value: function (i, s, l, c) {
                  var h = ((c - 90) * Math.PI) / 180;
                  return { x: i + l * Math.cos(h), y: s + l * Math.sin(h) };
                },
              },
              {
                key: "escapeString",
                value: function (i) {
                  var s =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : "x",
                    l = i.toString().slice();
                  return (l = l.replace(
                    /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                    s
                  ));
                },
              },
              {
                key: "negToZero",
                value: function (i) {
                  return i < 0 ? 0 : i;
                },
              },
              {
                key: "moveIndexInArray",
                value: function (i, s, l) {
                  if (l >= i.length)
                    for (var c = l - i.length + 1; c--; ) i.push(void 0);
                  return i.splice(l, 0, i.splice(s, 1)[0]), i;
                },
              },
              {
                key: "extractNumber",
                value: function (i) {
                  return parseFloat(i.replace(/[^\d.]*/g, ""));
                },
              },
              {
                key: "findAncestor",
                value: function (i, s) {
                  for (; (i = i.parentElement) && !i.classList.contains(s); );
                  return i;
                },
              },
              {
                key: "setELstyles",
                value: function (i, s) {
                  for (var l in s) s.hasOwnProperty(l) && (i.style.key = s[l]);
                },
              },
              {
                key: "isNumber",
                value: function (i) {
                  return (
                    !isNaN(i) &&
                    parseFloat(Number(i)) === i &&
                    !isNaN(parseInt(i, 10))
                  );
                },
              },
              {
                key: "isFloat",
                value: function (i) {
                  return Number(i) === i && i % 1 != 0;
                },
              },
              {
                key: "isSafari",
                value: function () {
                  return /^((?!chrome|android).)*safari/i.test(
                    navigator.userAgent
                  );
                },
              },
              {
                key: "isFirefox",
                value: function () {
                  return (
                    navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                  );
                },
              },
              {
                key: "isIE11",
                value: function () {
                  if (
                    window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                    window.navigator.appVersion.indexOf("Trident/") > -1
                  )
                    return !0;
                },
              },
              {
                key: "isIE",
                value: function () {
                  var i = window.navigator.userAgent,
                    s = i.indexOf("MSIE ");
                  if (s > 0)
                    return parseInt(i.substring(s + 5, i.indexOf(".", s)), 10);
                  if (i.indexOf("Trident/") > 0) {
                    var l = i.indexOf("rv:");
                    return parseInt(i.substring(l + 3, i.indexOf(".", l)), 10);
                  }
                  var c = i.indexOf("Edge/");
                  return (
                    c > 0 && parseInt(i.substring(c + 5, i.indexOf(".", c)), 10)
                  );
                },
              },
            ]
          ),
          U
        );
      })(),
      ce = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w), this.setEasingFunctions();
        }
        return (
          g(U, [
            {
              key: "setEasingFunctions",
              value: function () {
                var i;
                if (!this.w.globals.easing) {
                  switch (this.w.config.chart.animations.easing) {
                    case "linear":
                      i = "-";
                      break;
                    case "easein":
                      i = "<";
                      break;
                    case "easeout":
                      i = ">";
                      break;
                    case "easeinout":
                    default:
                      i = "<>";
                      break;
                    case "swing":
                      i = function (s) {
                        var l = 1.70158;
                        return (s -= 1) * s * ((l + 1) * s + l) + 1;
                      };
                      break;
                    case "bounce":
                      i = function (s) {
                        return s < 1 / 2.75
                          ? 7.5625 * s * s
                          : s < 2 / 2.75
                          ? 7.5625 * (s -= 1.5 / 2.75) * s + 0.75
                          : s < 2.5 / 2.75
                          ? 7.5625 * (s -= 2.25 / 2.75) * s + 0.9375
                          : 7.5625 * (s -= 2.625 / 2.75) * s + 0.984375;
                      };
                      break;
                    case "elastic":
                      i = function (s) {
                        return s === !!s
                          ? s
                          : Math.pow(2, -10 * s) *
                              Math.sin(((s - 0.075) * (2 * Math.PI)) / 0.3) +
                              1;
                      };
                  }
                  this.w.globals.easing = i;
                }
              },
            },
            {
              key: "animateLine",
              value: function (i, s, l, c) {
                i.attr(s).animate(c).attr(l);
              },
            },
            {
              key: "animateMarker",
              value: function (i, s, l, c, h, d) {
                s || (s = 0),
                  i
                    .attr({ r: s, width: s, height: s })
                    .animate(c, h)
                    .attr({ r: l, width: l.width, height: l.height })
                    .afterAll(function () {
                      d();
                    });
              },
            },
            {
              key: "animateCircle",
              value: function (i, s, l, c, h) {
                i.attr({ r: s.r, cx: s.cx, cy: s.cy })
                  .animate(c, h)
                  .attr({ r: l.r, cx: l.cx, cy: l.cy });
              },
            },
            {
              key: "animateRect",
              value: function (i, s, l, c, h) {
                i.attr(s)
                  .animate(c)
                  .attr(l)
                  .afterAll(function () {
                    return h();
                  });
              },
            },
            {
              key: "animatePathsGradually",
              value: function (i) {
                var s = i.el,
                  l = i.realIndex,
                  c = i.j,
                  h = i.fill,
                  d = i.pathFrom,
                  f = i.pathTo,
                  p = i.speed,
                  v = i.delay,
                  b = this.w,
                  _ = 0;
                b.config.chart.animations.animateGradually.enabled &&
                  (_ = b.config.chart.animations.animateGradually.delay),
                  b.config.chart.animations.dynamicAnimation.enabled &&
                    b.globals.dataChanged &&
                    b.config.chart.type !== "bar" &&
                    (_ = 0),
                  this.morphSVG(
                    s,
                    l,
                    c,
                    b.config.chart.type !== "line" || b.globals.comboCharts
                      ? h
                      : "stroke",
                    d,
                    f,
                    p,
                    v * _
                  );
              },
            },
            {
              key: "showDelayedElements",
              value: function () {
                this.w.globals.delayedElements.forEach(function (i) {
                  var s = i.el;
                  s.classList.remove("apexcharts-element-hidden"),
                    s.classList.add("apexcharts-hidden-element-shown");
                });
              },
            },
            {
              key: "animationCompleted",
              value: function (i) {
                var s = this.w;
                s.globals.animationEnded ||
                  ((s.globals.animationEnded = !0),
                  this.showDelayedElements(),
                  typeof s.config.chart.events.animationEnd == "function" &&
                    s.config.chart.events.animationEnd(this.ctx, {
                      el: i,
                      w: s,
                    }));
              },
            },
            {
              key: "morphSVG",
              value: function (i, s, l, c, h, d, f, p) {
                var v = this,
                  b = this.w;
                h || (h = i.attr("pathFrom")), d || (d = i.attr("pathTo"));
                var _ = function (S) {
                  return (
                    b.config.chart.type === "radar" && (f = 1),
                    "M 0 ".concat(b.globals.gridHeight)
                  );
                };
                (!h || h.indexOf("undefined") > -1 || h.indexOf("NaN") > -1) &&
                  (h = _()),
                  (!d ||
                    d.indexOf("undefined") > -1 ||
                    d.indexOf("NaN") > -1) &&
                    (d = _()),
                  b.globals.shouldAnimate || (f = 1),
                  i
                    .plot(h)
                    .animate(1, b.globals.easing, p)
                    .plot(h)
                    .animate(f, b.globals.easing, p)
                    .plot(d)
                    .afterAll(function () {
                      F.isNumber(l)
                        ? l ===
                            b.globals.series[b.globals.maxValsInArrayIndex]
                              .length -
                              2 &&
                          b.globals.shouldAnimate &&
                          v.animationCompleted(i)
                        : c !== "none" &&
                          b.globals.shouldAnimate &&
                          ((!b.globals.comboCharts &&
                            s === b.globals.series.length - 1) ||
                            b.globals.comboCharts) &&
                          v.animationCompleted(i),
                        v.showDelayedElements();
                    });
              },
            },
          ]),
          U
        );
      })(),
      ye = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "getDefaultFilter",
              value: function (i, s) {
                var l = this.w;
                i.unfilter(!0),
                  new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"),
                  l.config.states.normal.filter !== "none"
                    ? this.applyFilter(
                        i,
                        s,
                        l.config.states.normal.filter.type,
                        l.config.states.normal.filter.value
                      )
                    : l.config.chart.dropShadow.enabled &&
                      this.dropShadow(i, l.config.chart.dropShadow, s);
              },
            },
            {
              key: "addNormalFilter",
              value: function (i, s) {
                var l = this.w;
                l.config.chart.dropShadow.enabled &&
                  !i.node.classList.contains("apexcharts-marker") &&
                  this.dropShadow(i, l.config.chart.dropShadow, s);
              },
            },
            {
              key: "addLightenFilter",
              value: function (i, s, l) {
                var c = this,
                  h = this.w,
                  d = l.intensity;
                i.unfilter(!0),
                  new window.SVG.Filter(),
                  i.filter(function (f) {
                    var p = h.config.chart.dropShadow;
                    (p.enabled ? c.addShadow(f, s, p) : f).componentTransfer({
                      rgb: { type: "linear", slope: 1.5, intercept: d },
                    });
                  }),
                  i.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                  this._scaleFilterSize(i.filterer.node);
              },
            },
            {
              key: "addDarkenFilter",
              value: function (i, s, l) {
                var c = this,
                  h = this.w,
                  d = l.intensity;
                i.unfilter(!0),
                  new window.SVG.Filter(),
                  i.filter(function (f) {
                    var p = h.config.chart.dropShadow;
                    (p.enabled ? c.addShadow(f, s, p) : f).componentTransfer({
                      rgb: { type: "linear", slope: d },
                    });
                  }),
                  i.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                  this._scaleFilterSize(i.filterer.node);
              },
            },
            {
              key: "applyFilter",
              value: function (i, s, l) {
                var c =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : 0.5;
                switch (l) {
                  case "none":
                    this.addNormalFilter(i, s);
                    break;
                  case "lighten":
                    this.addLightenFilter(i, s, { intensity: c });
                    break;
                  case "darken":
                    this.addDarkenFilter(i, s, { intensity: c });
                }
              },
            },
            {
              key: "addShadow",
              value: function (i, s, l) {
                var c = l.blur,
                  h = l.top,
                  d = l.left,
                  f = l.color,
                  p = l.opacity,
                  v = i
                    .flood(Array.isArray(f) ? f[s] : f, p)
                    .composite(i.sourceAlpha, "in")
                    .offset(d, h)
                    .gaussianBlur(c)
                    .merge(i.source);
                return i.blend(i.source, v);
              },
            },
            {
              key: "dropShadow",
              value: function (i, s) {
                var l =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  c = s.top,
                  h = s.left,
                  d = s.blur,
                  f = s.color,
                  p = s.opacity,
                  v = s.noUserSpaceOnUse,
                  b = this.w;
                return (
                  i.unfilter(!0),
                  (F.isIE() && b.config.chart.type === "radialBar") ||
                    ((f = Array.isArray(f) ? f[l] : f),
                    i.filter(function (_) {
                      var S = null;
                      (S =
                        F.isSafari() || F.isFirefox() || F.isIE()
                          ? _.flood(f, p)
                              .composite(_.sourceAlpha, "in")
                              .offset(h, c)
                              .gaussianBlur(d)
                          : _.flood(f, p)
                              .composite(_.sourceAlpha, "in")
                              .offset(h, c)
                              .gaussianBlur(d)
                              .merge(_.source)),
                        _.blend(_.source, S);
                    }),
                    v ||
                      i.filterer.node.setAttribute(
                        "filterUnits",
                        "userSpaceOnUse"
                      ),
                    this._scaleFilterSize(i.filterer.node)),
                  i
                );
              },
            },
            {
              key: "setSelectionFilter",
              value: function (i, s, l) {
                var c = this.w;
                if (
                  c.globals.selectedDataPoints[s] !== void 0 &&
                  c.globals.selectedDataPoints[s].indexOf(l) > -1
                ) {
                  i.node.setAttribute("selected", !0);
                  var h = c.config.states.active.filter;
                  h !== "none" && this.applyFilter(i, s, h.type, h.value);
                }
              },
            },
            {
              key: "_scaleFilterSize",
              value: function (i) {
                (function (s) {
                  for (var l in s)
                    s.hasOwnProperty(l) && i.setAttribute(l, s[l]);
                })({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
              },
            },
          ]),
          U
        );
      })(),
      C = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(
            U,
            [
              {
                key: "roundPathCorners",
                value: function (i, s) {
                  function l(ee, fe, ge) {
                    var Pe = fe.x - ee.x,
                      We = fe.y - ee.y,
                      ze = Math.sqrt(Pe * Pe + We * We);
                    return c(ee, fe, Math.min(1, ge / ze));
                  }
                  function c(ee, fe, ge) {
                    return {
                      x: ee.x + (fe.x - ee.x) * ge,
                      y: ee.y + (fe.y - ee.y) * ge,
                    };
                  }
                  function h(ee, fe) {
                    ee.length > 2 &&
                      ((ee[ee.length - 2] = fe.x), (ee[ee.length - 1] = fe.y));
                  }
                  function d(ee) {
                    return {
                      x: parseFloat(ee[ee.length - 2]),
                      y: parseFloat(ee[ee.length - 1]),
                    };
                  }
                  i.indexOf("NaN") > -1 && (i = "");
                  var f = i
                      .split(/[,\s]/)
                      .reduce(function (ee, fe) {
                        var ge = fe.match("([a-zA-Z])(.+)");
                        return (
                          ge ? (ee.push(ge[1]), ee.push(ge[2])) : ee.push(fe),
                          ee
                        );
                      }, [])
                      .reduce(function (ee, fe) {
                        return (
                          parseFloat(fe) == fe && ee.length
                            ? ee[ee.length - 1].push(fe)
                            : ee.push([fe]),
                          ee
                        );
                      }, []),
                    p = [];
                  if (f.length > 1) {
                    var v = d(f[0]),
                      b = null;
                    f[f.length - 1][0] == "Z" &&
                      f[0].length > 2 &&
                      ((b = ["L", v.x, v.y]), (f[f.length - 1] = b)),
                      p.push(f[0]);
                    for (var _ = 1; _ < f.length; _++) {
                      var S = p[p.length - 1],
                        T = f[_],
                        O = T == b ? f[1] : f[_ + 1];
                      if (
                        O &&
                        S &&
                        S.length > 2 &&
                        T[0] == "L" &&
                        O.length > 2 &&
                        O[0] == "L"
                      ) {
                        var D,
                          V,
                          G = d(S),
                          Q = d(T),
                          m = d(O);
                        (D = l(Q, G, s)),
                          (V = l(Q, m, s)),
                          h(T, D),
                          (T.origPoint = Q),
                          p.push(T);
                        var k = c(D, Q, 0.5),
                          N = c(Q, V, 0.5),
                          X = ["C", k.x, k.y, N.x, N.y, V.x, V.y];
                        (X.origPoint = Q), p.push(X);
                      } else p.push(T);
                    }
                    if (b) {
                      var K = d(p[p.length - 1]);
                      p.push(["Z"]), h(p[0], K);
                    }
                  } else p = f;
                  return p.reduce(function (ee, fe) {
                    return ee + fe.join(" ") + " ";
                  }, "");
                },
              },
              {
                key: "drawLine",
                value: function (i, s, l, c) {
                  var h =
                      arguments.length > 4 && arguments[4] !== void 0
                        ? arguments[4]
                        : "#a8a8a8",
                    d =
                      arguments.length > 5 && arguments[5] !== void 0
                        ? arguments[5]
                        : 0,
                    f =
                      arguments.length > 6 && arguments[6] !== void 0
                        ? arguments[6]
                        : null,
                    p =
                      arguments.length > 7 && arguments[7] !== void 0
                        ? arguments[7]
                        : "butt";
                  return this.w.globals.dom.Paper.line().attr({
                    x1: i,
                    y1: s,
                    x2: l,
                    y2: c,
                    stroke: h,
                    "stroke-dasharray": d,
                    "stroke-width": f,
                    "stroke-linecap": p,
                  });
                },
              },
              {
                key: "drawRect",
                value: function () {
                  var i =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : 0,
                    s =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : 0,
                    l =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : 0,
                    c =
                      arguments.length > 3 && arguments[3] !== void 0
                        ? arguments[3]
                        : 0,
                    h =
                      arguments.length > 4 && arguments[4] !== void 0
                        ? arguments[4]
                        : 0,
                    d =
                      arguments.length > 5 && arguments[5] !== void 0
                        ? arguments[5]
                        : "#fefefe",
                    f =
                      arguments.length > 6 && arguments[6] !== void 0
                        ? arguments[6]
                        : 1,
                    p =
                      arguments.length > 7 && arguments[7] !== void 0
                        ? arguments[7]
                        : null,
                    v =
                      arguments.length > 8 && arguments[8] !== void 0
                        ? arguments[8]
                        : null,
                    b =
                      arguments.length > 9 && arguments[9] !== void 0
                        ? arguments[9]
                        : 0,
                    _ = this.w.globals.dom.Paper.rect();
                  return (
                    _.attr({
                      x: i,
                      y: s,
                      width: l > 0 ? l : 0,
                      height: c > 0 ? c : 0,
                      rx: h,
                      ry: h,
                      opacity: f,
                      "stroke-width": p !== null ? p : 0,
                      stroke: v !== null ? v : "none",
                      "stroke-dasharray": b,
                    }),
                    _.node.setAttribute("fill", d),
                    _
                  );
                },
              },
              {
                key: "drawPolygon",
                value: function (i) {
                  var s =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : "#e1e1e1",
                    l =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : 1,
                    c =
                      arguments.length > 3 && arguments[3] !== void 0
                        ? arguments[3]
                        : "none";
                  return this.w.globals.dom.Paper.polygon(i).attr({
                    fill: c,
                    stroke: s,
                    "stroke-width": l,
                  });
                },
              },
              {
                key: "drawCircle",
                value: function (i) {
                  var s =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : null;
                  i < 0 && (i = 0);
                  var l = this.w.globals.dom.Paper.circle(2 * i);
                  return s !== null && l.attr(s), l;
                },
              },
              {
                key: "drawPath",
                value: function (i) {
                  var s = i.d,
                    l = s === void 0 ? "" : s,
                    c = i.stroke,
                    h = c === void 0 ? "#a8a8a8" : c,
                    d = i.strokeWidth,
                    f = d === void 0 ? 1 : d,
                    p = i.fill,
                    v = i.fillOpacity,
                    b = v === void 0 ? 1 : v,
                    _ = i.strokeOpacity,
                    S = _ === void 0 ? 1 : _,
                    T = i.classes,
                    O = i.strokeLinecap,
                    D = O === void 0 ? null : O,
                    V = i.strokeDashArray,
                    G = V === void 0 ? 0 : V,
                    Q = this.w;
                  return (
                    D === null && (D = Q.config.stroke.lineCap),
                    (l.indexOf("undefined") > -1 || l.indexOf("NaN") > -1) &&
                      (l = "M 0 ".concat(Q.globals.gridHeight)),
                    Q.globals.dom.Paper.path(l).attr({
                      fill: p,
                      "fill-opacity": b,
                      stroke: h,
                      "stroke-opacity": S,
                      "stroke-linecap": D,
                      "stroke-width": f,
                      "stroke-dasharray": G,
                      class: T,
                    })
                  );
                },
              },
              {
                key: "group",
                value: function () {
                  var i =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : null,
                    s = this.w.globals.dom.Paper.group();
                  return i !== null && s.attr(i), s;
                },
              },
              {
                key: "move",
                value: function (i, s) {
                  var l = ["M", i, s].join(" ");
                  return l;
                },
              },
              {
                key: "line",
                value: function (i, s) {
                  var l =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : null,
                    c = null;
                  return (
                    l === null
                      ? (c = [" L", i, s].join(" "))
                      : l === "H"
                      ? (c = [" H", i].join(" "))
                      : l === "V" && (c = [" V", s].join(" ")),
                    c
                  );
                },
              },
              {
                key: "curve",
                value: function (i, s, l, c, h, d) {
                  var f = ["C", i, s, l, c, h, d].join(" ");
                  return f;
                },
              },
              {
                key: "quadraticCurve",
                value: function (i, s, l, c) {
                  return ["Q", i, s, l, c].join(" ");
                },
              },
              {
                key: "arc",
                value: function (i, s, l, c, h, d, f) {
                  var p = "A";
                  arguments.length > 7 &&
                    arguments[7] !== void 0 &&
                    arguments[7] &&
                    (p = "a");
                  var v = [p, i, s, l, c, h, d, f].join(" ");
                  return v;
                },
              },
              {
                key: "renderPaths",
                value: function (i) {
                  var s,
                    l = i.j,
                    c = i.realIndex,
                    h = i.pathFrom,
                    d = i.pathTo,
                    f = i.stroke,
                    p = i.strokeWidth,
                    v = i.strokeLinecap,
                    b = i.fill,
                    _ = i.animationDelay,
                    S = i.initialSpeed,
                    T = i.dataChangeSpeed,
                    O = i.className,
                    D = i.shouldClipToGrid,
                    V = D === void 0 || D,
                    G = i.bindEventsOnPaths,
                    Q = G === void 0 || G,
                    m = i.drawShadow,
                    k = m === void 0 || m,
                    N = this.w,
                    X = new ye(this.ctx),
                    K = new ce(this.ctx),
                    ee = this.w.config.chart.animations.enabled,
                    fe =
                      ee &&
                      this.w.config.chart.animations.dynamicAnimation.enabled,
                    ge = !!(
                      (ee && !N.globals.resized) ||
                      (fe && N.globals.dataChanged && N.globals.shouldAnimate)
                    );
                  ge ? (s = h) : ((s = d), (N.globals.animationEnded = !0));
                  var Pe = N.config.stroke.dashArray,
                    We = 0;
                  We = Array.isArray(Pe) ? Pe[c] : N.config.stroke.dashArray;
                  var ze = this.drawPath({
                    d: s,
                    stroke: f,
                    strokeWidth: p,
                    fill: b,
                    fillOpacity: 1,
                    classes: O,
                    strokeLinecap: v,
                    strokeDashArray: We,
                  });
                  if (
                    (ze.attr("index", c),
                    V &&
                      ze.attr({
                        "clip-path": "url(#gridRectMask".concat(
                          N.globals.cuid,
                          ")"
                        ),
                      }),
                    N.config.states.normal.filter.type !== "none")
                  )
                    X.getDefaultFilter(ze, c);
                  else if (
                    N.config.chart.dropShadow.enabled &&
                    k &&
                    (!N.config.chart.dropShadow.enabledOnSeries ||
                      (N.config.chart.dropShadow.enabledOnSeries &&
                        N.config.chart.dropShadow.enabledOnSeries.indexOf(c) !==
                          -1))
                  ) {
                    var ut = N.config.chart.dropShadow;
                    X.dropShadow(ze, ut, c);
                  }
                  Q &&
                    (ze.node.addEventListener(
                      "mouseenter",
                      this.pathMouseEnter.bind(this, ze)
                    ),
                    ze.node.addEventListener(
                      "mouseleave",
                      this.pathMouseLeave.bind(this, ze)
                    ),
                    ze.node.addEventListener(
                      "mousedown",
                      this.pathMouseDown.bind(this, ze)
                    )),
                    ze.attr({ pathTo: d, pathFrom: h });
                  var St = {
                    el: ze,
                    j: l,
                    realIndex: c,
                    pathFrom: h,
                    pathTo: d,
                    fill: b,
                    strokeWidth: p,
                    delay: _,
                  };
                  return (
                    !ee || N.globals.resized || N.globals.dataChanged
                      ? (!N.globals.resized && N.globals.dataChanged) ||
                        K.showDelayedElements()
                      : K.animatePathsGradually(r(r({}, St), {}, { speed: S })),
                    N.globals.dataChanged &&
                      fe &&
                      ge &&
                      K.animatePathsGradually(r(r({}, St), {}, { speed: T })),
                    ze
                  );
                },
              },
              {
                key: "drawPattern",
                value: function (i, s, l) {
                  var c =
                      arguments.length > 3 && arguments[3] !== void 0
                        ? arguments[3]
                        : "#a8a8a8",
                    h =
                      arguments.length > 4 && arguments[4] !== void 0
                        ? arguments[4]
                        : 0;
                  return this.w.globals.dom.Paper.pattern(s, l, function (d) {
                    i === "horizontalLines"
                      ? d.line(0, 0, l, 0).stroke({ color: c, width: h + 1 })
                      : i === "verticalLines"
                      ? d.line(0, 0, 0, s).stroke({ color: c, width: h + 1 })
                      : i === "slantedLines"
                      ? d.line(0, 0, s, l).stroke({ color: c, width: h })
                      : i === "squares"
                      ? d.rect(s, l).fill("none").stroke({ color: c, width: h })
                      : i === "circles" &&
                        d.circle(s).fill("none").stroke({ color: c, width: h });
                  });
                },
              },
              {
                key: "drawGradient",
                value: function (i, s, l, c, h) {
                  var d,
                    f =
                      arguments.length > 5 && arguments[5] !== void 0
                        ? arguments[5]
                        : null,
                    p =
                      arguments.length > 6 && arguments[6] !== void 0
                        ? arguments[6]
                        : null,
                    v =
                      arguments.length > 7 && arguments[7] !== void 0
                        ? arguments[7]
                        : null,
                    b =
                      arguments.length > 8 && arguments[8] !== void 0
                        ? arguments[8]
                        : 0,
                    _ = this.w;
                  s.length < 9 &&
                    s.indexOf("#") === 0 &&
                    (s = F.hexToRgba(s, c)),
                    l.length < 9 &&
                      l.indexOf("#") === 0 &&
                      (l = F.hexToRgba(l, h));
                  var S = 0,
                    T = 1,
                    O = 1,
                    D = null;
                  p !== null &&
                    ((S = p[0] !== void 0 ? p[0] / 100 : 0),
                    (T = p[1] !== void 0 ? p[1] / 100 : 1),
                    (O = p[2] !== void 0 ? p[2] / 100 : 1),
                    (D = p[3] !== void 0 ? p[3] / 100 : null));
                  var V = !(
                    _.config.chart.type !== "donut" &&
                    _.config.chart.type !== "pie" &&
                    _.config.chart.type !== "polarArea" &&
                    _.config.chart.type !== "bubble"
                  );
                  if (
                    ((d =
                      v === null || v.length === 0
                        ? _.globals.dom.Paper.gradient(
                            V ? "radial" : "linear",
                            function (m) {
                              m.at(S, s, c),
                                m.at(T, l, h),
                                m.at(O, l, h),
                                D !== null && m.at(D, s, c);
                            }
                          )
                        : _.globals.dom.Paper.gradient(
                            V ? "radial" : "linear",
                            function (m) {
                              (Array.isArray(v[b]) ? v[b] : v).forEach(
                                function (k) {
                                  m.at(k.offset / 100, k.color, k.opacity);
                                }
                              );
                            }
                          )),
                    V)
                  ) {
                    var G = _.globals.gridWidth / 2,
                      Q = _.globals.gridHeight / 2;
                    _.config.chart.type !== "bubble"
                      ? d.attr({
                          gradientUnits: "userSpaceOnUse",
                          cx: G,
                          cy: Q,
                          r: f,
                        })
                      : d.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
                  } else
                    i === "vertical"
                      ? d.from(0, 0).to(0, 1)
                      : i === "diagonal"
                      ? d.from(0, 0).to(1, 1)
                      : i === "horizontal"
                      ? d.from(0, 1).to(1, 1)
                      : i === "diagonal2" && d.from(1, 0).to(0, 1);
                  return d;
                },
              },
              {
                key: "getTextBasedOnMaxWidth",
                value: function (i) {
                  var s = i.text,
                    l = i.maxWidth,
                    c = i.fontSize,
                    h = i.fontFamily,
                    d = this.getTextRects(s, c, h),
                    f = d.width / s.length,
                    p = Math.floor(l / f);
                  return l < d.width ? s.slice(0, p - 3) + "..." : s;
                },
              },
              {
                key: "drawText",
                value: function (i) {
                  var s = this,
                    l = i.x,
                    c = i.y,
                    h = i.text,
                    d = i.textAnchor,
                    f = i.fontSize,
                    p = i.fontFamily,
                    v = i.fontWeight,
                    b = i.foreColor,
                    _ = i.opacity,
                    S = i.maxWidth,
                    T = i.cssClass,
                    O = T === void 0 ? "" : T,
                    D = i.isPlainText,
                    V = D === void 0 || D,
                    G = i.dominantBaseline,
                    Q = G === void 0 ? "auto" : G,
                    m = this.w;
                  h === void 0 && (h = "");
                  var k = h;
                  d || (d = "start"),
                    (b && b.length) || (b = m.config.chart.foreColor),
                    (p = p || m.config.chart.fontFamily),
                    (v = v || "regular");
                  var N,
                    X = {
                      maxWidth: S,
                      fontSize: (f = f || "11px"),
                      fontFamily: p,
                    };
                  return (
                    Array.isArray(h)
                      ? (N = m.globals.dom.Paper.text(function (K) {
                          for (var ee = 0; ee < h.length; ee++)
                            (k = h[ee]),
                              S &&
                                (k = s.getTextBasedOnMaxWidth(
                                  r({ text: h[ee] }, X)
                                )),
                              ee === 0 ? K.tspan(k) : K.tspan(k).newLine();
                        }))
                      : (S &&
                          (k = this.getTextBasedOnMaxWidth(r({ text: h }, X))),
                        (N = V
                          ? m.globals.dom.Paper.plain(h)
                          : m.globals.dom.Paper.text(function (K) {
                              return K.tspan(k);
                            }))),
                    N.attr({
                      x: l,
                      y: c,
                      "text-anchor": d,
                      "dominant-baseline": Q,
                      "font-size": f,
                      "font-family": p,
                      "font-weight": v,
                      fill: b,
                      class: "apexcharts-text " + O,
                    }),
                    (N.node.style.fontFamily = p),
                    (N.node.style.opacity = _),
                    N
                  );
                },
              },
              {
                key: "drawMarker",
                value: function (i, s, l) {
                  i = i || 0;
                  var c = l.pSize || 0,
                    h = null;
                  if (l.shape === "square" || l.shape === "rect") {
                    var d = l.pRadius === void 0 ? c / 2 : l.pRadius;
                    (s !== null && c) || ((c = 0), (d = 0));
                    var f = 1.2 * c + d,
                      p = this.drawRect(f, f, f, f, d);
                    p.attr({
                      x: i - f / 2,
                      y: s - f / 2,
                      cx: i,
                      cy: s,
                      class: l.class ? l.class : "",
                      fill: l.pointFillColor,
                      "fill-opacity": l.pointFillOpacity
                        ? l.pointFillOpacity
                        : 1,
                      stroke: l.pointStrokeColor,
                      "stroke-width": l.pointStrokeWidth
                        ? l.pointStrokeWidth
                        : 0,
                      "stroke-opacity": l.pointStrokeOpacity
                        ? l.pointStrokeOpacity
                        : 1,
                    }),
                      (h = p);
                  } else
                    (l.shape !== "circle" && l.shape) ||
                      (F.isNumber(s) || ((c = 0), (s = 0)),
                      (h = this.drawCircle(c, {
                        cx: i,
                        cy: s,
                        class: l.class ? l.class : "",
                        stroke: l.pointStrokeColor,
                        fill: l.pointFillColor,
                        "fill-opacity": l.pointFillOpacity
                          ? l.pointFillOpacity
                          : 1,
                        "stroke-width": l.pointStrokeWidth
                          ? l.pointStrokeWidth
                          : 0,
                        "stroke-opacity": l.pointStrokeOpacity
                          ? l.pointStrokeOpacity
                          : 1,
                      })));
                  return h;
                },
              },
              {
                key: "pathMouseEnter",
                value: function (i, s) {
                  var l = this.w,
                    c = new ye(this.ctx),
                    h = parseInt(i.node.getAttribute("index"), 10),
                    d = parseInt(i.node.getAttribute("j"), 10);
                  if (
                    (typeof l.config.chart.events.dataPointMouseEnter ==
                      "function" &&
                      l.config.chart.events.dataPointMouseEnter(s, this.ctx, {
                        seriesIndex: h,
                        dataPointIndex: d,
                        w: l,
                      }),
                    this.ctx.events.fireEvent("dataPointMouseEnter", [
                      s,
                      this.ctx,
                      { seriesIndex: h, dataPointIndex: d, w: l },
                    ]),
                    (l.config.states.active.filter.type === "none" ||
                      i.node.getAttribute("selected") !== "true") &&
                      l.config.states.hover.filter.type !== "none" &&
                      !l.globals.isTouchDevice)
                  ) {
                    var f = l.config.states.hover.filter;
                    c.applyFilter(i, h, f.type, f.value);
                  }
                },
              },
              {
                key: "pathMouseLeave",
                value: function (i, s) {
                  var l = this.w,
                    c = new ye(this.ctx),
                    h = parseInt(i.node.getAttribute("index"), 10),
                    d = parseInt(i.node.getAttribute("j"), 10);
                  typeof l.config.chart.events.dataPointMouseLeave ==
                    "function" &&
                    l.config.chart.events.dataPointMouseLeave(s, this.ctx, {
                      seriesIndex: h,
                      dataPointIndex: d,
                      w: l,
                    }),
                    this.ctx.events.fireEvent("dataPointMouseLeave", [
                      s,
                      this.ctx,
                      { seriesIndex: h, dataPointIndex: d, w: l },
                    ]),
                    (l.config.states.active.filter.type !== "none" &&
                      i.node.getAttribute("selected") === "true") ||
                      (l.config.states.hover.filter.type !== "none" &&
                        c.getDefaultFilter(i, h));
                },
              },
              {
                key: "pathMouseDown",
                value: function (i, s) {
                  var l = this.w,
                    c = new ye(this.ctx),
                    h = parseInt(i.node.getAttribute("index"), 10),
                    d = parseInt(i.node.getAttribute("j"), 10),
                    f = "false";
                  if (i.node.getAttribute("selected") === "true") {
                    if (
                      (i.node.setAttribute("selected", "false"),
                      l.globals.selectedDataPoints[h].indexOf(d) > -1)
                    ) {
                      var p = l.globals.selectedDataPoints[h].indexOf(d);
                      l.globals.selectedDataPoints[h].splice(p, 1);
                    }
                  } else {
                    if (
                      !l.config.states.active
                        .allowMultipleDataPointsSelection &&
                      l.globals.selectedDataPoints.length > 0
                    ) {
                      l.globals.selectedDataPoints = [];
                      var v = l.globals.dom.Paper.select(
                          ".apexcharts-series path"
                        ).members,
                        b = l.globals.dom.Paper.select(
                          ".apexcharts-series circle, .apexcharts-series rect"
                        ).members,
                        _ = function (O) {
                          Array.prototype.forEach.call(O, function (D) {
                            D.node.setAttribute("selected", "false"),
                              c.getDefaultFilter(D, h);
                          });
                        };
                      _(v), _(b);
                    }
                    i.node.setAttribute("selected", "true"),
                      (f = "true"),
                      l.globals.selectedDataPoints[h] === void 0 &&
                        (l.globals.selectedDataPoints[h] = []),
                      l.globals.selectedDataPoints[h].push(d);
                  }
                  if (f === "true") {
                    var S = l.config.states.active.filter;
                    if (S !== "none") c.applyFilter(i, h, S.type, S.value);
                    else if (
                      l.config.states.hover.filter !== "none" &&
                      !l.globals.isTouchDevice
                    ) {
                      var T = l.config.states.hover.filter;
                      c.applyFilter(i, h, T.type, T.value);
                    }
                  } else
                    l.config.states.active.filter.type !== "none" &&
                      (l.config.states.hover.filter.type === "none" ||
                      l.globals.isTouchDevice
                        ? c.getDefaultFilter(i, h)
                        : ((T = l.config.states.hover.filter),
                          c.applyFilter(i, h, T.type, T.value)));
                  typeof l.config.chart.events.dataPointSelection ==
                    "function" &&
                    l.config.chart.events.dataPointSelection(s, this.ctx, {
                      selectedDataPoints: l.globals.selectedDataPoints,
                      seriesIndex: h,
                      dataPointIndex: d,
                      w: l,
                    }),
                    s &&
                      this.ctx.events.fireEvent("dataPointSelection", [
                        s,
                        this.ctx,
                        {
                          selectedDataPoints: l.globals.selectedDataPoints,
                          seriesIndex: h,
                          dataPointIndex: d,
                          w: l,
                        },
                      ]);
                },
              },
              {
                key: "rotateAroundCenter",
                value: function (i) {
                  var s = {};
                  return (
                    i && typeof i.getBBox == "function" && (s = i.getBBox()),
                    { x: s.x + s.width / 2, y: s.y + s.height / 2 }
                  );
                },
              },
              {
                key: "getTextRects",
                value: function (i, s, l, c) {
                  var h =
                      !(arguments.length > 4 && arguments[4] !== void 0) ||
                      arguments[4],
                    d = this.w,
                    f = this.drawText({
                      x: -200,
                      y: -200,
                      text: i,
                      textAnchor: "start",
                      fontSize: s,
                      fontFamily: l,
                      foreColor: "#fff",
                      opacity: 0,
                    });
                  c && f.attr("transform", c), d.globals.dom.Paper.add(f);
                  var p = f.bbox();
                  return (
                    h || (p = f.node.getBoundingClientRect()),
                    f.remove(),
                    { width: p.width, height: p.height }
                  );
                },
              },
              {
                key: "placeTextWithEllipsis",
                value: function (i, s, l) {
                  if (
                    typeof i.getComputedTextLength == "function" &&
                    ((i.textContent = s),
                    s.length > 0 && i.getComputedTextLength() >= l / 1.1)
                  ) {
                    for (var c = s.length - 3; c > 0; c -= 3)
                      if (i.getSubStringLength(0, c) <= l / 1.1)
                        return void (i.textContent = s.substring(0, c) + "...");
                    i.textContent = ".";
                  }
                },
              },
            ],
            [
              {
                key: "setAttrs",
                value: function (i, s) {
                  for (var l in s)
                    s.hasOwnProperty(l) && i.setAttribute(l, s[l]);
                },
              },
            ]
          ),
          U
        );
      })(),
      ke = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(
            U,
            [
              {
                key: "getStackedSeriesTotals",
                value: function () {
                  var i =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : [],
                    s = this.w,
                    l = [];
                  if (s.globals.series.length === 0) return l;
                  for (
                    var c = 0;
                    c < s.globals.series[s.globals.maxValsInArrayIndex].length;
                    c++
                  ) {
                    for (var h = 0, d = 0; d < s.globals.series.length; d++)
                      s.globals.series[d][c] !== void 0 &&
                        i.indexOf(d) === -1 &&
                        (h += s.globals.series[d][c]);
                    l.push(h);
                  }
                  return l;
                },
              },
              {
                key: "getSeriesTotalByIndex",
                value: function () {
                  var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null;
                  return i === null
                    ? this.w.config.series.reduce(function (s, l) {
                        return s + l;
                      }, 0)
                    : this.w.globals.series[i].reduce(function (s, l) {
                        return s + l;
                      }, 0);
                },
              },
              {
                key: "getStackedSeriesTotalsByGroups",
                value: function () {
                  var i = this,
                    s = this.w,
                    l = [];
                  return (
                    s.globals.seriesGroups.forEach(function (c) {
                      var h = [];
                      s.config.series.forEach(function (f, p) {
                        c.indexOf(f.name) > -1 && h.push(p);
                      });
                      var d = s.globals.series
                        .map(function (f, p) {
                          return h.indexOf(p) === -1 ? p : -1;
                        })
                        .filter(function (f) {
                          return f !== -1;
                        });
                      l.push(i.getStackedSeriesTotals(d));
                    }),
                    l
                  );
                },
              },
              {
                key: "isSeriesNull",
                value: function () {
                  var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null;
                  return (
                    (i === null
                      ? this.w.config.series.filter(function (s) {
                          return s !== null;
                        })
                      : this.w.config.series[i].data.filter(function (s) {
                          return s !== null;
                        })
                    ).length === 0
                  );
                },
              },
              {
                key: "seriesHaveSameValues",
                value: function (i) {
                  return this.w.globals.series[i].every(function (s, l, c) {
                    return s === c[0];
                  });
                },
              },
              {
                key: "getCategoryLabels",
                value: function (i) {
                  var s = this.w,
                    l = i.slice();
                  return (
                    s.config.xaxis.convertedCatToNumeric &&
                      (l = i.map(function (c, h) {
                        return s.config.xaxis.labels.formatter(
                          c - s.globals.minX + 1
                        );
                      })),
                    l
                  );
                },
              },
              {
                key: "getLargestSeries",
                value: function () {
                  var i = this.w;
                  i.globals.maxValsInArrayIndex = i.globals.series
                    .map(function (s) {
                      return s.length;
                    })
                    .indexOf(
                      Math.max.apply(
                        Math,
                        i.globals.series.map(function (s) {
                          return s.length;
                        })
                      )
                    );
                },
              },
              {
                key: "getLargestMarkerSize",
                value: function () {
                  var i = this.w,
                    s = 0;
                  return (
                    i.globals.markers.size.forEach(function (l) {
                      s = Math.max(s, l);
                    }),
                    i.config.markers.discrete &&
                      i.config.markers.discrete.length &&
                      i.config.markers.discrete.forEach(function (l) {
                        s = Math.max(s, l.size);
                      }),
                    s > 0 && (s += i.config.markers.hover.sizeOffset + 1),
                    (i.globals.markers.largestSize = s),
                    s
                  );
                },
              },
              {
                key: "getSeriesTotals",
                value: function () {
                  var i = this.w;
                  i.globals.seriesTotals = i.globals.series.map(function (
                    s,
                    l
                  ) {
                    var c = 0;
                    if (Array.isArray(s))
                      for (var h = 0; h < s.length; h++) c += s[h];
                    else c += s;
                    return c;
                  });
                },
              },
              {
                key: "getSeriesTotalsXRange",
                value: function (i, s) {
                  var l = this.w;
                  return l.globals.series.map(function (c, h) {
                    for (var d = 0, f = 0; f < c.length; f++)
                      l.globals.seriesX[h][f] > i &&
                        l.globals.seriesX[h][f] < s &&
                        (d += c[f]);
                    return d;
                  });
                },
              },
              {
                key: "getPercentSeries",
                value: function () {
                  var i = this.w;
                  i.globals.seriesPercent = i.globals.series.map(function (
                    s,
                    l
                  ) {
                    var c = [];
                    if (Array.isArray(s))
                      for (var h = 0; h < s.length; h++) {
                        var d = i.globals.stackedSeriesTotals[h],
                          f = 0;
                        d && (f = (100 * s[h]) / d), c.push(f);
                      }
                    else {
                      var p =
                        (100 * s) /
                        i.globals.seriesTotals.reduce(function (v, b) {
                          return v + b;
                        }, 0);
                      c.push(p);
                    }
                    return c;
                  });
                },
              },
              {
                key: "getCalculatedRatios",
                value: function () {
                  var i,
                    s,
                    l,
                    c,
                    h = this.w.globals,
                    d = [],
                    f = 0,
                    p = [],
                    v = 0.1,
                    b = 0;
                  if (((h.yRange = []), h.isMultipleYAxis))
                    for (var _ = 0; _ < h.minYArr.length; _++)
                      h.yRange.push(Math.abs(h.minYArr[_] - h.maxYArr[_])),
                        p.push(0);
                  else h.yRange.push(Math.abs(h.minY - h.maxY));
                  (h.xRange = Math.abs(h.maxX - h.minX)),
                    (h.zRange = Math.abs(h.maxZ - h.minZ));
                  for (var S = 0; S < h.yRange.length; S++)
                    d.push(h.yRange[S] / h.gridHeight);
                  if (
                    ((s = h.xRange / h.gridWidth),
                    (l = Math.abs(h.initialMaxX - h.initialMinX) / h.gridWidth),
                    (i = h.yRange / h.gridWidth),
                    (c = h.xRange / h.gridHeight),
                    (f = (h.zRange / h.gridHeight) * 16) || (f = 1),
                    h.minY !== Number.MIN_VALUE &&
                      Math.abs(h.minY) !== 0 &&
                      (h.hasNegs = !0),
                    h.isMultipleYAxis)
                  ) {
                    p = [];
                    for (var T = 0; T < d.length; T++)
                      p.push(-h.minYArr[T] / d[T]);
                  } else
                    p.push(-h.minY / d[0]),
                      h.minY !== Number.MIN_VALUE &&
                        Math.abs(h.minY) !== 0 &&
                        ((v = -h.minY / i), (b = h.minX / s));
                  return {
                    yRatio: d,
                    invertedYRatio: i,
                    zRatio: f,
                    xRatio: s,
                    initialXRatio: l,
                    invertedXRatio: c,
                    baseLineInvertedY: v,
                    baseLineY: p,
                    baseLineX: b,
                  };
                },
              },
              {
                key: "getLogSeries",
                value: function (i) {
                  var s = this,
                    l = this.w;
                  return (
                    (l.globals.seriesLog = i.map(function (c, h) {
                      return l.config.yaxis[h] && l.config.yaxis[h].logarithmic
                        ? c.map(function (d) {
                            return d === null
                              ? null
                              : s.getLogVal(l.config.yaxis[h].logBase, d, h);
                          })
                        : c;
                    })),
                    l.globals.invalidLogScale ? i : l.globals.seriesLog
                  );
                },
              },
              {
                key: "getBaseLog",
                value: function (i, s) {
                  return Math.log(s) / Math.log(i);
                },
              },
              {
                key: "getLogVal",
                value: function (i, s, l) {
                  if (s === 0) return 0;
                  var c = this.w,
                    h =
                      c.globals.minYArr[l] === 0
                        ? -1
                        : this.getBaseLog(i, c.globals.minYArr[l]),
                    d =
                      (c.globals.maxYArr[l] === 0
                        ? 0
                        : this.getBaseLog(i, c.globals.maxYArr[l])) - h;
                  return s < 1 ? s / d : (this.getBaseLog(i, s) - h) / d;
                },
              },
              {
                key: "getLogYRatios",
                value: function (i) {
                  var s = this,
                    l = this.w,
                    c = this.w.globals;
                  return (
                    (c.yLogRatio = i.slice()),
                    (c.logYRange = c.yRange.map(function (h, d) {
                      if (
                        l.config.yaxis[d] &&
                        s.w.config.yaxis[d].logarithmic
                      ) {
                        var f,
                          p = -Number.MAX_VALUE,
                          v = Number.MIN_VALUE;
                        return (
                          c.seriesLog.forEach(function (b, _) {
                            b.forEach(function (S) {
                              l.config.yaxis[_] &&
                                l.config.yaxis[_].logarithmic &&
                                ((p = Math.max(S, p)), (v = Math.min(S, v)));
                            });
                          }),
                          (f = Math.pow(
                            c.yRange[d],
                            Math.abs(v - p) / c.yRange[d]
                          )),
                          (c.yLogRatio[d] = f / c.gridHeight),
                          f
                        );
                      }
                    })),
                    c.invalidLogScale ? i.slice() : c.yLogRatio
                  );
                },
              },
            ],
            [
              {
                key: "checkComboSeries",
                value: function (i) {
                  var s = !1,
                    l = 0,
                    c = 0;
                  return (
                    i.length &&
                      i[0].type !== void 0 &&
                      i.forEach(function (h) {
                        (h.type !== "bar" &&
                          h.type !== "column" &&
                          h.type !== "candlestick" &&
                          h.type !== "boxPlot") ||
                          l++,
                          h.type !== void 0 && c++;
                      }),
                    c > 0 && (s = !0),
                    { comboBarCount: l, comboCharts: s }
                  );
                },
              },
              {
                key: "extendArrayProps",
                value: function (i, s, l) {
                  return (
                    s.yaxis && (s = i.extendYAxis(s, l)),
                    s.annotations &&
                      (s.annotations.yaxis && (s = i.extendYAxisAnnotations(s)),
                      s.annotations.xaxis && (s = i.extendXAxisAnnotations(s)),
                      s.annotations.points &&
                        (s = i.extendPointAnnotations(s))),
                    s
                  );
                },
              },
            ]
          ),
          U
        );
      })(),
      je = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.annoCtx = i);
        }
        return (
          g(U, [
            {
              key: "setOrientations",
              value: function (i) {
                var s =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : null,
                  l = this.w;
                if (i.label.orientation === "vertical") {
                  var c = s !== null ? s : 0,
                    h = l.globals.dom.baseEl.querySelector(
                      ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                        c,
                        "']"
                      )
                    );
                  if (h !== null) {
                    var d = h.getBoundingClientRect();
                    h.setAttribute(
                      "x",
                      parseFloat(h.getAttribute("x")) - d.height + 4
                    ),
                      i.label.position === "top"
                        ? h.setAttribute(
                            "y",
                            parseFloat(h.getAttribute("y")) + d.width
                          )
                        : h.setAttribute(
                            "y",
                            parseFloat(h.getAttribute("y")) - d.width
                          );
                    var f = this.annoCtx.graphics.rotateAroundCenter(h),
                      p = f.x,
                      v = f.y;
                    h.setAttribute(
                      "transform",
                      "rotate(-90 ".concat(p, " ").concat(v, ")")
                    );
                  }
                }
              },
            },
            {
              key: "addBackgroundToAnno",
              value: function (i, s) {
                var l = this.w;
                if (
                  !i ||
                  s.label.text === void 0 ||
                  (s.label.text !== void 0 && !String(s.label.text).trim())
                )
                  return null;
                var c = l.globals.dom.baseEl
                    .querySelector(".apexcharts-grid")
                    .getBoundingClientRect(),
                  h = i.getBoundingClientRect(),
                  d = s.label.style.padding.left,
                  f = s.label.style.padding.right,
                  p = s.label.style.padding.top,
                  v = s.label.style.padding.bottom;
                s.label.orientation === "vertical" &&
                  ((p = s.label.style.padding.left),
                  (v = s.label.style.padding.right),
                  (d = s.label.style.padding.top),
                  (f = s.label.style.padding.bottom));
                var b = h.left - c.left - d,
                  _ = h.top - c.top - p,
                  S = this.annoCtx.graphics.drawRect(
                    b - l.globals.barPadForNumericAxis,
                    _,
                    h.width + d + f,
                    h.height + p + v,
                    s.label.borderRadius,
                    s.label.style.background,
                    1,
                    s.label.borderWidth,
                    s.label.borderColor,
                    0
                  );
                return s.id && S.node.classList.add(s.id), S;
              },
            },
            {
              key: "annotationsBackground",
              value: function () {
                var i = this,
                  s = this.w,
                  l = function (c, h, d) {
                    var f = s.globals.dom.baseEl.querySelector(
                      ".apexcharts-"
                        .concat(d, "-annotations .apexcharts-")
                        .concat(d, "-annotation-label[rel='")
                        .concat(h, "']")
                    );
                    if (f) {
                      var p = f.parentNode,
                        v = i.addBackgroundToAnno(f, c);
                      v &&
                        (p.insertBefore(v.node, f),
                        c.label.mouseEnter &&
                          v.node.addEventListener(
                            "mouseenter",
                            c.label.mouseEnter.bind(i, c)
                          ),
                        c.label.mouseLeave &&
                          v.node.addEventListener(
                            "mouseleave",
                            c.label.mouseLeave.bind(i, c)
                          ),
                        c.label.click &&
                          v.node.addEventListener(
                            "click",
                            c.label.click.bind(i, c)
                          ));
                    }
                  };
                s.config.annotations.xaxis.map(function (c, h) {
                  l(c, h, "xaxis");
                }),
                  s.config.annotations.yaxis.map(function (c, h) {
                    l(c, h, "yaxis");
                  }),
                  s.config.annotations.points.map(function (c, h) {
                    l(c, h, "point");
                  });
              },
            },
            {
              key: "getY1Y2",
              value: function (i, s) {
                var l,
                  c = i === "y1" ? s.y : s.y2,
                  h = this.w;
                if (this.annoCtx.invertAxis) {
                  var d = h.globals.labels.indexOf(c);
                  h.config.xaxis.convertedCatToNumeric &&
                    (d = h.globals.categoryLabels.indexOf(c));
                  var f = h.globals.dom.baseEl.querySelector(
                    ".apexcharts-yaxis-texts-g text:nth-child(" + (d + 1) + ")"
                  );
                  f && (l = parseFloat(f.getAttribute("y")));
                } else {
                  var p;
                  h.config.yaxis[s.yAxisIndex].logarithmic
                    ? (p =
                        (c = new ke(this.annoCtx.ctx).getLogVal(
                          c,
                          s.yAxisIndex
                        )) / h.globals.yLogRatio[s.yAxisIndex])
                    : (p =
                        (c - h.globals.minYArr[s.yAxisIndex]) /
                        (h.globals.yRange[s.yAxisIndex] /
                          h.globals.gridHeight)),
                    (l = h.globals.gridHeight - p),
                    !s.marker || (s.y !== void 0 && s.y !== null) || (l = 0),
                    h.config.yaxis[s.yAxisIndex] &&
                      h.config.yaxis[s.yAxisIndex].reversed &&
                      (l = p);
                }
                return (
                  typeof c == "string" &&
                    c.indexOf("px") > -1 &&
                    (l = parseFloat(c)),
                  l
                );
              },
            },
            {
              key: "getX1X2",
              value: function (i, s) {
                var l = this.w,
                  c = this.annoCtx.invertAxis ? l.globals.minY : l.globals.minX,
                  h = this.annoCtx.invertAxis ? l.globals.maxY : l.globals.maxX,
                  d = this.annoCtx.invertAxis
                    ? l.globals.yRange[0]
                    : l.globals.xRange,
                  f = (s.x - c) / (d / l.globals.gridWidth);
                this.annoCtx.inversedReversedAxis &&
                  (f = (h - s.x) / (d / l.globals.gridWidth)),
                  (l.config.xaxis.type !== "category" &&
                    !l.config.xaxis.convertedCatToNumeric) ||
                    this.annoCtx.invertAxis ||
                    l.globals.dataFormatXNumeric ||
                    (f = this.getStringX(s.x));
                var p = (s.x2 - c) / (d / l.globals.gridWidth);
                return (
                  this.annoCtx.inversedReversedAxis &&
                    (p = (h - s.x2) / (d / l.globals.gridWidth)),
                  (l.config.xaxis.type !== "category" &&
                    !l.config.xaxis.convertedCatToNumeric) ||
                    this.annoCtx.invertAxis ||
                    l.globals.dataFormatXNumeric ||
                    (p = this.getStringX(s.x2)),
                  (s.x !== void 0 && s.x !== null) ||
                    !s.marker ||
                    (f = l.globals.gridWidth),
                  i === "x1" &&
                    typeof s.x == "string" &&
                    s.x.indexOf("px") > -1 &&
                    (f = parseFloat(s.x)),
                  i === "x2" &&
                    typeof s.x2 == "string" &&
                    s.x2.indexOf("px") > -1 &&
                    (p = parseFloat(s.x2)),
                  i === "x1" ? f : p
                );
              },
            },
            {
              key: "getStringX",
              value: function (i) {
                var s = this.w,
                  l = i;
                s.config.xaxis.convertedCatToNumeric &&
                  s.globals.categoryLabels.length &&
                  (i = s.globals.categoryLabels.indexOf(i) + 1);
                var c = s.globals.labels.indexOf(i),
                  h = s.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxis-texts-g text:nth-child(" + (c + 1) + ")"
                  );
                return h && (l = parseFloat(h.getAttribute("x"))), l;
              },
            },
          ]),
          U
        );
      })(),
      tt = (function () {
        function U(i) {
          o(this, U),
            (this.w = i.w),
            (this.annoCtx = i),
            (this.invertAxis = this.annoCtx.invertAxis),
            (this.helpers = new je(this.annoCtx));
        }
        return (
          g(U, [
            {
              key: "addXaxisAnnotation",
              value: function (i, s, l) {
                var c,
                  h = this.w,
                  d = this.helpers.getX1X2("x1", i),
                  f = i.label.text,
                  p = i.strokeDashArray;
                if (F.isNumber(d)) {
                  if (i.x2 === null || i.x2 === void 0) {
                    var v = this.annoCtx.graphics.drawLine(
                      d + i.offsetX,
                      0 + i.offsetY,
                      d + i.offsetX,
                      h.globals.gridHeight + i.offsetY,
                      i.borderColor,
                      p,
                      i.borderWidth
                    );
                    s.appendChild(v.node), i.id && v.node.classList.add(i.id);
                  } else {
                    if ((c = this.helpers.getX1X2("x2", i)) < d) {
                      var b = d;
                      (d = c), (c = b);
                    }
                    var _ = this.annoCtx.graphics.drawRect(
                      d + i.offsetX,
                      0 + i.offsetY,
                      c - d,
                      h.globals.gridHeight + i.offsetY,
                      0,
                      i.fillColor,
                      i.opacity,
                      1,
                      i.borderColor,
                      p
                    );
                    _.node.classList.add("apexcharts-annotation-rect"),
                      _.attr(
                        "clip-path",
                        "url(#gridRectMask".concat(h.globals.cuid, ")")
                      ),
                      s.appendChild(_.node),
                      i.id && _.node.classList.add(i.id);
                  }
                  var S = this.annoCtx.graphics.getTextRects(
                      f,
                      parseFloat(i.label.style.fontSize)
                    ),
                    T =
                      i.label.position === "top"
                        ? 4
                        : i.label.position === "center"
                        ? h.globals.gridHeight / 2 +
                          (i.label.orientation === "vertical" ? S.width / 2 : 0)
                        : h.globals.gridHeight,
                    O = this.annoCtx.graphics.drawText({
                      x: d + i.label.offsetX,
                      y:
                        T +
                        i.label.offsetY -
                        (i.label.orientation === "vertical"
                          ? i.label.position === "top"
                            ? S.width / 2 - 12
                            : -S.width / 2
                          : 0),
                      text: f,
                      textAnchor: i.label.textAnchor,
                      fontSize: i.label.style.fontSize,
                      fontFamily: i.label.style.fontFamily,
                      fontWeight: i.label.style.fontWeight,
                      foreColor: i.label.style.color,
                      cssClass: "apexcharts-xaxis-annotation-label "
                        .concat(i.label.style.cssClass, " ")
                        .concat(i.id ? i.id : ""),
                    });
                  O.attr({ rel: l }),
                    s.appendChild(O.node),
                    this.annoCtx.helpers.setOrientations(i, l);
                }
              },
            },
            {
              key: "drawXAxisAnnotations",
              value: function () {
                var i = this,
                  s = this.w,
                  l = this.annoCtx.graphics.group({
                    class: "apexcharts-xaxis-annotations",
                  });
                return (
                  s.config.annotations.xaxis.map(function (c, h) {
                    i.addXaxisAnnotation(c, l.node, h);
                  }),
                  l
                );
              },
            },
          ]),
          U
        );
      })(),
      Ct = (function () {
        function U(i) {
          o(this, U),
            (this.w = i.w),
            (this.annoCtx = i),
            (this.helpers = new je(this.annoCtx));
        }
        return (
          g(U, [
            {
              key: "addYaxisAnnotation",
              value: function (i, s, l) {
                var c,
                  h = this.w,
                  d = i.strokeDashArray,
                  f = this.helpers.getY1Y2("y1", i),
                  p = i.label.text;
                if (i.y2 === null || i.y2 === void 0) {
                  var v = this.annoCtx.graphics.drawLine(
                    0 + i.offsetX,
                    f + i.offsetY,
                    this._getYAxisAnnotationWidth(i),
                    f + i.offsetY,
                    i.borderColor,
                    d,
                    i.borderWidth
                  );
                  s.appendChild(v.node), i.id && v.node.classList.add(i.id);
                } else {
                  if ((c = this.helpers.getY1Y2("y2", i)) > f) {
                    var b = f;
                    (f = c), (c = b);
                  }
                  var _ = this.annoCtx.graphics.drawRect(
                    0 + i.offsetX,
                    c + i.offsetY,
                    this._getYAxisAnnotationWidth(i),
                    f - c,
                    0,
                    i.fillColor,
                    i.opacity,
                    1,
                    i.borderColor,
                    d
                  );
                  _.node.classList.add("apexcharts-annotation-rect"),
                    _.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(h.globals.cuid, ")")
                    ),
                    s.appendChild(_.node),
                    i.id && _.node.classList.add(i.id);
                }
                var S =
                    i.label.position === "right"
                      ? h.globals.gridWidth
                      : i.label.position === "center"
                      ? h.globals.gridWidth / 2
                      : 0,
                  T = this.annoCtx.graphics.drawText({
                    x: S + i.label.offsetX,
                    y: (c ?? f) + i.label.offsetY - 3,
                    text: p,
                    textAnchor: i.label.textAnchor,
                    fontSize: i.label.style.fontSize,
                    fontFamily: i.label.style.fontFamily,
                    fontWeight: i.label.style.fontWeight,
                    foreColor: i.label.style.color,
                    cssClass: "apexcharts-yaxis-annotation-label "
                      .concat(i.label.style.cssClass, " ")
                      .concat(i.id ? i.id : ""),
                  });
                T.attr({ rel: l }), s.appendChild(T.node);
              },
            },
            {
              key: "_getYAxisAnnotationWidth",
              value: function (i) {
                var s = this.w;
                return (
                  s.globals.gridWidth,
                  (i.width.indexOf("%") > -1
                    ? (s.globals.gridWidth * parseInt(i.width, 10)) / 100
                    : parseInt(i.width, 10)) + i.offsetX
                );
              },
            },
            {
              key: "drawYAxisAnnotations",
              value: function () {
                var i = this,
                  s = this.w,
                  l = this.annoCtx.graphics.group({
                    class: "apexcharts-yaxis-annotations",
                  });
                return (
                  s.config.annotations.yaxis.map(function (c, h) {
                    i.addYaxisAnnotation(c, l.node, h);
                  }),
                  l
                );
              },
            },
          ]),
          U
        );
      })(),
      xt = (function () {
        function U(i) {
          o(this, U),
            (this.w = i.w),
            (this.annoCtx = i),
            (this.helpers = new je(this.annoCtx));
        }
        return (
          g(U, [
            {
              key: "addPointAnnotation",
              value: function (i, s, l) {
                this.w;
                var c = this.helpers.getX1X2("x1", i),
                  h = this.helpers.getY1Y2("y1", i);
                if (F.isNumber(c)) {
                  var d = {
                      pSize: i.marker.size,
                      pointStrokeWidth: i.marker.strokeWidth,
                      pointFillColor: i.marker.fillColor,
                      pointStrokeColor: i.marker.strokeColor,
                      shape: i.marker.shape,
                      pRadius: i.marker.radius,
                      class: "apexcharts-point-annotation-marker "
                        .concat(i.marker.cssClass, " ")
                        .concat(i.id ? i.id : ""),
                    },
                    f = this.annoCtx.graphics.drawMarker(
                      c + i.marker.offsetX,
                      h + i.marker.offsetY,
                      d
                    );
                  s.appendChild(f.node);
                  var p = i.label.text ? i.label.text : "",
                    v = this.annoCtx.graphics.drawText({
                      x: c + i.label.offsetX,
                      y:
                        h +
                        i.label.offsetY -
                        i.marker.size -
                        parseFloat(i.label.style.fontSize) / 1.6,
                      text: p,
                      textAnchor: i.label.textAnchor,
                      fontSize: i.label.style.fontSize,
                      fontFamily: i.label.style.fontFamily,
                      fontWeight: i.label.style.fontWeight,
                      foreColor: i.label.style.color,
                      cssClass: "apexcharts-point-annotation-label "
                        .concat(i.label.style.cssClass, " ")
                        .concat(i.id ? i.id : ""),
                    });
                  if (
                    (v.attr({ rel: l }), s.appendChild(v.node), i.customSVG.SVG)
                  ) {
                    var b = this.annoCtx.graphics.group({
                      class:
                        "apexcharts-point-annotations-custom-svg " +
                        i.customSVG.cssClass,
                    });
                    b.attr({
                      transform: "translate("
                        .concat(c + i.customSVG.offsetX, ", ")
                        .concat(h + i.customSVG.offsetY, ")"),
                    }),
                      (b.node.innerHTML = i.customSVG.SVG),
                      s.appendChild(b.node);
                  }
                  if (i.image.path) {
                    var _ = i.image.width ? i.image.width : 20,
                      S = i.image.height ? i.image.height : 20;
                    f = this.annoCtx.addImage({
                      x: c + i.image.offsetX - _ / 2,
                      y: h + i.image.offsetY - S / 2,
                      width: _,
                      height: S,
                      path: i.image.path,
                      appendTo: ".apexcharts-point-annotations",
                    });
                  }
                  i.mouseEnter &&
                    f.node.addEventListener(
                      "mouseenter",
                      i.mouseEnter.bind(this, i)
                    ),
                    i.mouseLeave &&
                      f.node.addEventListener(
                        "mouseleave",
                        i.mouseLeave.bind(this, i)
                      ),
                    i.click &&
                      f.node.addEventListener("click", i.click.bind(this, i));
                }
              },
            },
            {
              key: "drawPointAnnotations",
              value: function () {
                var i = this,
                  s = this.w,
                  l = this.annoCtx.graphics.group({
                    class: "apexcharts-point-annotations",
                  });
                return (
                  s.config.annotations.points.map(function (c, h) {
                    i.addPointAnnotation(c, l.node, h);
                  }),
                  l
                );
              },
            },
          ]),
          U
        );
      })(),
      pt = {
        name: "en",
        options: {
          months: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
          shortMonths: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          days: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          toolbar: {
            exportToSVG: "Download SVG",
            exportToPNG: "Download PNG",
            exportToCSV: "Download CSV",
            menu: "Menu",
            selection: "Selection",
            selectionZoom: "Selection Zoom",
            zoomIn: "Zoom In",
            zoomOut: "Zoom Out",
            pan: "Panning",
            reset: "Reset Zoom",
          },
        },
      },
      Mt = (function () {
        function U() {
          o(this, U),
            (this.yAxis = {
              show: !0,
              showAlways: !1,
              showForNullSeries: !0,
              seriesName: void 0,
              opposite: !1,
              reversed: !1,
              logarithmic: !1,
              logBase: 10,
              tickAmount: void 0,
              forceNiceScale: !1,
              max: void 0,
              min: void 0,
              floating: !1,
              decimalsInFloat: void 0,
              labels: {
                show: !0,
                minWidth: 0,
                maxWidth: 160,
                offsetX: 0,
                offsetY: 0,
                align: void 0,
                rotate: 0,
                padding: 20,
                style: {
                  colors: [],
                  fontSize: "11px",
                  fontWeight: 400,
                  fontFamily: void 0,
                  cssClass: "",
                },
                formatter: void 0,
              },
              axisBorder: {
                show: !1,
                color: "#e0e0e0",
                width: 1,
                offsetX: 0,
                offsetY: 0,
              },
              axisTicks: {
                show: !1,
                color: "#e0e0e0",
                width: 6,
                offsetX: 0,
                offsetY: 0,
              },
              title: {
                text: void 0,
                rotate: -90,
                offsetY: 0,
                offsetX: 0,
                style: {
                  color: void 0,
                  fontSize: "11px",
                  fontWeight: 900,
                  fontFamily: void 0,
                  cssClass: "",
                },
              },
              tooltip: { enabled: !1, offsetX: 0 },
              crosshairs: {
                show: !0,
                position: "front",
                stroke: { color: "#b6b6b6", width: 1, dashArray: 0 },
              },
            }),
            (this.pointAnnotation = {
              id: void 0,
              x: 0,
              y: null,
              yAxisIndex: 0,
              seriesIndex: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              marker: {
                size: 4,
                fillColor: "#fff",
                strokeWidth: 2,
                strokeColor: "#333",
                shape: "circle",
                offsetX: 0,
                offsetY: 0,
                radius: 2,
                cssClass: "",
              },
              label: {
                borderColor: "#c2c2c2",
                borderWidth: 1,
                borderRadius: 2,
                text: void 0,
                textAnchor: "middle",
                offsetX: 0,
                offsetY: 0,
                mouseEnter: void 0,
                mouseLeave: void 0,
                click: void 0,
                style: {
                  background: "#fff",
                  color: void 0,
                  fontSize: "11px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  cssClass: "",
                  padding: { left: 5, right: 5, top: 2, bottom: 2 },
                },
              },
              customSVG: {
                SVG: void 0,
                cssClass: void 0,
                offsetX: 0,
                offsetY: 0,
              },
              image: {
                path: void 0,
                width: 20,
                height: 20,
                offsetX: 0,
                offsetY: 0,
              },
            }),
            (this.yAxisAnnotation = {
              id: void 0,
              y: 0,
              y2: null,
              strokeDashArray: 1,
              fillColor: "#c2c2c2",
              borderColor: "#c2c2c2",
              borderWidth: 1,
              opacity: 0.3,
              offsetX: 0,
              offsetY: 0,
              width: "100%",
              yAxisIndex: 0,
              label: {
                borderColor: "#c2c2c2",
                borderWidth: 1,
                borderRadius: 2,
                text: void 0,
                textAnchor: "end",
                position: "right",
                offsetX: 0,
                offsetY: -3,
                mouseEnter: void 0,
                mouseLeave: void 0,
                click: void 0,
                style: {
                  background: "#fff",
                  color: void 0,
                  fontSize: "11px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  cssClass: "",
                  padding: { left: 5, right: 5, top: 2, bottom: 2 },
                },
              },
            }),
            (this.xAxisAnnotation = {
              id: void 0,
              x: 0,
              x2: null,
              strokeDashArray: 1,
              fillColor: "#c2c2c2",
              borderColor: "#c2c2c2",
              borderWidth: 1,
              opacity: 0.3,
              offsetX: 0,
              offsetY: 0,
              label: {
                borderColor: "#c2c2c2",
                borderWidth: 1,
                borderRadius: 2,
                text: void 0,
                textAnchor: "middle",
                orientation: "vertical",
                position: "top",
                offsetX: 0,
                offsetY: 0,
                mouseEnter: void 0,
                mouseLeave: void 0,
                click: void 0,
                style: {
                  background: "#fff",
                  color: void 0,
                  fontSize: "11px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  cssClass: "",
                  padding: { left: 5, right: 5, top: 2, bottom: 2 },
                },
              },
            }),
            (this.text = {
              x: 0,
              y: 0,
              text: "",
              textAnchor: "start",
              foreColor: void 0,
              fontSize: "13px",
              fontFamily: void 0,
              fontWeight: 400,
              appendTo: ".apexcharts-annotations",
              backgroundColor: "transparent",
              borderColor: "#c2c2c2",
              borderRadius: 0,
              borderWidth: 0,
              paddingLeft: 4,
              paddingRight: 4,
              paddingTop: 2,
              paddingBottom: 2,
            });
        }
        return (
          g(U, [
            {
              key: "init",
              value: function () {
                return {
                  annotations: {
                    yaxis: [this.yAxisAnnotation],
                    xaxis: [this.xAxisAnnotation],
                    points: [this.pointAnnotation],
                    texts: [],
                    images: [],
                    shapes: [],
                  },
                  chart: {
                    animations: {
                      enabled: !0,
                      easing: "easeinout",
                      speed: 800,
                      animateGradually: { delay: 150, enabled: !0 },
                      dynamicAnimation: { enabled: !0, speed: 350 },
                    },
                    background: "transparent",
                    locales: [pt],
                    defaultLocale: "en",
                    dropShadow: {
                      enabled: !1,
                      enabledOnSeries: void 0,
                      top: 2,
                      left: 2,
                      blur: 4,
                      color: "#000",
                      opacity: 0.35,
                    },
                    events: {
                      animationEnd: void 0,
                      beforeMount: void 0,
                      mounted: void 0,
                      updated: void 0,
                      click: void 0,
                      mouseMove: void 0,
                      mouseLeave: void 0,
                      xAxisLabelClick: void 0,
                      legendClick: void 0,
                      markerClick: void 0,
                      selection: void 0,
                      dataPointSelection: void 0,
                      dataPointMouseEnter: void 0,
                      dataPointMouseLeave: void 0,
                      beforeZoom: void 0,
                      beforeResetZoom: void 0,
                      zoomed: void 0,
                      scrolled: void 0,
                      brushScrolled: void 0,
                    },
                    foreColor: "#373d3f",
                    fontFamily: "Helvetica, Arial, sans-serif",
                    height: "auto",
                    parentHeightOffset: 15,
                    redrawOnParentResize: !0,
                    redrawOnWindowResize: !0,
                    id: void 0,
                    group: void 0,
                    nonce: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    selection: {
                      enabled: !1,
                      type: "x",
                      fill: { color: "#24292e", opacity: 0.1 },
                      stroke: {
                        width: 1,
                        color: "#24292e",
                        opacity: 0.4,
                        dashArray: 3,
                      },
                      xaxis: { min: void 0, max: void 0 },
                      yaxis: { min: void 0, max: void 0 },
                    },
                    sparkline: { enabled: !1 },
                    brush: {
                      enabled: !1,
                      autoScaleYaxis: !0,
                      target: void 0,
                      targets: void 0,
                    },
                    stacked: !1,
                    stackOnlyBar: !0,
                    stackType: "normal",
                    toolbar: {
                      show: !0,
                      offsetX: 0,
                      offsetY: 0,
                      tools: {
                        download: !0,
                        selection: !0,
                        zoom: !0,
                        zoomin: !0,
                        zoomout: !0,
                        pan: !0,
                        reset: !0,
                        customIcons: [],
                      },
                      export: {
                        csv: {
                          filename: void 0,
                          columnDelimiter: ",",
                          headerCategory: "category",
                          headerValue: "value",
                          dateFormatter: function (i) {
                            return new Date(i).toDateString();
                          },
                        },
                        png: { filename: void 0 },
                        svg: { filename: void 0 },
                      },
                      autoSelected: "zoom",
                    },
                    type: "line",
                    width: "100%",
                    zoom: {
                      enabled: !0,
                      type: "x",
                      autoScaleYaxis: !1,
                      zoomedArea: {
                        fill: { color: "#90CAF9", opacity: 0.4 },
                        stroke: { color: "#0D47A1", opacity: 0.4, width: 1 },
                      },
                    },
                  },
                  plotOptions: {
                    area: { fillTo: "origin" },
                    bar: {
                      horizontal: !1,
                      columnWidth: "70%",
                      barHeight: "70%",
                      distributed: !1,
                      borderRadius: 0,
                      borderRadiusApplication: "around",
                      borderRadiusWhenStacked: "last",
                      rangeBarOverlap: !0,
                      rangeBarGroupRows: !1,
                      hideZeroBarsWhenGrouped: !1,
                      isDumbbell: !1,
                      dumbbellColors: void 0,
                      isFunnel: !1,
                      isFunnel3d: !0,
                      colors: {
                        ranges: [],
                        backgroundBarColors: [],
                        backgroundBarOpacity: 1,
                        backgroundBarRadius: 0,
                      },
                      dataLabels: {
                        position: "top",
                        maxItems: 100,
                        hideOverflowingLabels: !0,
                        orientation: "horizontal",
                        total: {
                          enabled: !1,
                          formatter: void 0,
                          offsetX: 0,
                          offsetY: 0,
                          style: {
                            color: "#373d3f",
                            fontSize: "12px",
                            fontFamily: void 0,
                            fontWeight: 600,
                          },
                        },
                      },
                    },
                    bubble: {
                      zScaling: !0,
                      minBubbleRadius: void 0,
                      maxBubbleRadius: void 0,
                    },
                    candlestick: {
                      colors: { upward: "#00B746", downward: "#EF403C" },
                      wick: { useFillColor: !0 },
                    },
                    boxPlot: { colors: { upper: "#00E396", lower: "#008FFB" } },
                    heatmap: {
                      radius: 2,
                      enableShades: !0,
                      shadeIntensity: 0.5,
                      reverseNegativeShade: !1,
                      distributed: !1,
                      useFillColorAsStroke: !1,
                      colorScale: {
                        inverse: !1,
                        ranges: [],
                        min: void 0,
                        max: void 0,
                      },
                    },
                    treemap: {
                      enableShades: !0,
                      shadeIntensity: 0.5,
                      distributed: !1,
                      reverseNegativeShade: !1,
                      useFillColorAsStroke: !1,
                      dataLabels: { format: "scale" },
                      colorScale: {
                        inverse: !1,
                        ranges: [],
                        min: void 0,
                        max: void 0,
                      },
                    },
                    radialBar: {
                      inverseOrder: !1,
                      startAngle: 0,
                      endAngle: 360,
                      offsetX: 0,
                      offsetY: 0,
                      hollow: {
                        margin: 5,
                        size: "50%",
                        background: "transparent",
                        image: void 0,
                        imageWidth: 150,
                        imageHeight: 150,
                        imageOffsetX: 0,
                        imageOffsetY: 0,
                        imageClipped: !0,
                        position: "front",
                        dropShadow: {
                          enabled: !1,
                          top: 0,
                          left: 0,
                          blur: 3,
                          color: "#000",
                          opacity: 0.5,
                        },
                      },
                      track: {
                        show: !0,
                        startAngle: void 0,
                        endAngle: void 0,
                        background: "#f2f2f2",
                        strokeWidth: "97%",
                        opacity: 1,
                        margin: 5,
                        dropShadow: {
                          enabled: !1,
                          top: 0,
                          left: 0,
                          blur: 3,
                          color: "#000",
                          opacity: 0.5,
                        },
                      },
                      dataLabels: {
                        show: !0,
                        name: {
                          show: !0,
                          fontSize: "16px",
                          fontFamily: void 0,
                          fontWeight: 600,
                          color: void 0,
                          offsetY: 0,
                          formatter: function (i) {
                            return i;
                          },
                        },
                        value: {
                          show: !0,
                          fontSize: "14px",
                          fontFamily: void 0,
                          fontWeight: 400,
                          color: void 0,
                          offsetY: 16,
                          formatter: function (i) {
                            return i + "%";
                          },
                        },
                        total: {
                          show: !1,
                          label: "Total",
                          fontSize: "16px",
                          fontWeight: 600,
                          fontFamily: void 0,
                          color: void 0,
                          formatter: function (i) {
                            return (
                              i.globals.seriesTotals.reduce(function (s, l) {
                                return s + l;
                              }, 0) /
                                i.globals.series.length +
                              "%"
                            );
                          },
                        },
                      },
                      barLabels: {
                        enabled: !1,
                        margin: 5,
                        useSeriesColors: !0,
                        fontFamily: void 0,
                        fontWeight: 600,
                        fontSize: "16px",
                        formatter: function (i) {
                          return i;
                        },
                        onClick: void 0,
                      },
                    },
                    pie: {
                      customScale: 1,
                      offsetX: 0,
                      offsetY: 0,
                      startAngle: 0,
                      endAngle: 360,
                      expandOnClick: !0,
                      dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                      donut: {
                        size: "65%",
                        background: "transparent",
                        labels: {
                          show: !1,
                          name: {
                            show: !0,
                            fontSize: "16px",
                            fontFamily: void 0,
                            fontWeight: 600,
                            color: void 0,
                            offsetY: -10,
                            formatter: function (i) {
                              return i;
                            },
                          },
                          value: {
                            show: !0,
                            fontSize: "20px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            color: void 0,
                            offsetY: 10,
                            formatter: function (i) {
                              return i;
                            },
                          },
                          total: {
                            show: !1,
                            showAlways: !1,
                            label: "Total",
                            fontSize: "16px",
                            fontWeight: 400,
                            fontFamily: void 0,
                            color: void 0,
                            formatter: function (i) {
                              return i.globals.seriesTotals.reduce(function (
                                s,
                                l
                              ) {
                                return s + l;
                              },
                              0);
                            },
                          },
                        },
                      },
                    },
                    polarArea: {
                      rings: { strokeWidth: 1, strokeColor: "#e8e8e8" },
                      spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" },
                    },
                    radar: {
                      size: void 0,
                      offsetX: 0,
                      offsetY: 0,
                      polygons: {
                        strokeWidth: 1,
                        strokeColors: "#e8e8e8",
                        connectorColors: "#e8e8e8",
                        fill: { colors: void 0 },
                      },
                    },
                  },
                  colors: void 0,
                  dataLabels: {
                    enabled: !0,
                    enabledOnSeries: void 0,
                    formatter: function (i) {
                      return i !== null ? i : "";
                    },
                    textAnchor: "middle",
                    distributed: !1,
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                      fontSize: "12px",
                      fontFamily: void 0,
                      fontWeight: 600,
                      colors: void 0,
                    },
                    background: {
                      enabled: !0,
                      foreColor: "#fff",
                      borderRadius: 2,
                      padding: 4,
                      opacity: 0.9,
                      borderWidth: 1,
                      borderColor: "#fff",
                      dropShadow: {
                        enabled: !1,
                        top: 1,
                        left: 1,
                        blur: 1,
                        color: "#000",
                        opacity: 0.45,
                      },
                    },
                    dropShadow: {
                      enabled: !1,
                      top: 1,
                      left: 1,
                      blur: 1,
                      color: "#000",
                      opacity: 0.45,
                    },
                  },
                  fill: {
                    type: "solid",
                    colors: void 0,
                    opacity: 0.85,
                    gradient: {
                      shade: "dark",
                      type: "horizontal",
                      shadeIntensity: 0.5,
                      gradientToColors: void 0,
                      inverseColors: !0,
                      opacityFrom: 1,
                      opacityTo: 1,
                      stops: [0, 50, 100],
                      colorStops: [],
                    },
                    image: { src: [], width: void 0, height: void 0 },
                    pattern: {
                      style: "squares",
                      width: 6,
                      height: 6,
                      strokeWidth: 2,
                    },
                  },
                  forecastDataPoints: {
                    count: 0,
                    fillOpacity: 0.5,
                    strokeWidth: void 0,
                    dashArray: 4,
                  },
                  grid: {
                    show: !0,
                    borderColor: "#e0e0e0",
                    strokeDashArray: 0,
                    position: "back",
                    xaxis: { lines: { show: !1 } },
                    yaxis: { lines: { show: !0 } },
                    row: { colors: void 0, opacity: 0.5 },
                    column: { colors: void 0, opacity: 0.5 },
                    padding: { top: 0, right: 10, bottom: 0, left: 12 },
                  },
                  labels: [],
                  legend: {
                    show: !0,
                    showForSingleSeries: !1,
                    showForNullSeries: !0,
                    showForZeroSeries: !0,
                    floating: !1,
                    position: "bottom",
                    horizontalAlign: "center",
                    inverseOrder: !1,
                    fontSize: "12px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    width: void 0,
                    height: void 0,
                    formatter: void 0,
                    tooltipHoverFormatter: void 0,
                    offsetX: -20,
                    offsetY: 4,
                    customLegendItems: [],
                    labels: { colors: void 0, useSeriesColors: !1 },
                    markers: {
                      width: 12,
                      height: 12,
                      strokeWidth: 0,
                      fillColors: void 0,
                      strokeColor: "#fff",
                      radius: 12,
                      customHTML: void 0,
                      offsetX: 0,
                      offsetY: 0,
                      onClick: void 0,
                    },
                    itemMargin: { horizontal: 5, vertical: 2 },
                    onItemClick: { toggleDataSeries: !0 },
                    onItemHover: { highlightDataSeries: !0 },
                  },
                  markers: {
                    discrete: [],
                    size: 0,
                    colors: void 0,
                    strokeColors: "#fff",
                    strokeWidth: 2,
                    strokeOpacity: 0.9,
                    strokeDashArray: 0,
                    fillOpacity: 1,
                    shape: "circle",
                    width: 8,
                    height: 8,
                    radius: 2,
                    offsetX: 0,
                    offsetY: 0,
                    onClick: void 0,
                    onDblClick: void 0,
                    showNullDataPoints: !0,
                    hover: { size: void 0, sizeOffset: 3 },
                  },
                  noData: {
                    text: void 0,
                    align: "center",
                    verticalAlign: "middle",
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                      color: void 0,
                      fontSize: "14px",
                      fontFamily: void 0,
                    },
                  },
                  responsive: [],
                  series: void 0,
                  states: {
                    normal: { filter: { type: "none", value: 0 } },
                    hover: { filter: { type: "lighten", value: 0.1 } },
                    active: {
                      allowMultipleDataPointsSelection: !1,
                      filter: { type: "darken", value: 0.5 },
                    },
                  },
                  title: {
                    text: void 0,
                    align: "left",
                    margin: 5,
                    offsetX: 0,
                    offsetY: 0,
                    floating: !1,
                    style: {
                      fontSize: "14px",
                      fontWeight: 900,
                      fontFamily: void 0,
                      color: void 0,
                    },
                  },
                  subtitle: {
                    text: void 0,
                    align: "left",
                    margin: 5,
                    offsetX: 0,
                    offsetY: 30,
                    floating: !1,
                    style: {
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      color: void 0,
                    },
                  },
                  stroke: {
                    show: !0,
                    curve: "smooth",
                    lineCap: "butt",
                    width: 2,
                    colors: void 0,
                    dashArray: 0,
                    fill: {
                      type: "solid",
                      colors: void 0,
                      opacity: 0.85,
                      gradient: {
                        shade: "dark",
                        type: "horizontal",
                        shadeIntensity: 0.5,
                        gradientToColors: void 0,
                        inverseColors: !0,
                        opacityFrom: 1,
                        opacityTo: 1,
                        stops: [0, 50, 100],
                        colorStops: [],
                      },
                    },
                  },
                  tooltip: {
                    enabled: !0,
                    enabledOnSeries: void 0,
                    shared: !0,
                    hideEmptySeries: !0,
                    followCursor: !1,
                    intersect: !1,
                    inverseOrder: !1,
                    custom: void 0,
                    fillSeriesColor: !1,
                    theme: "light",
                    cssClass: "",
                    style: { fontSize: "12px", fontFamily: void 0 },
                    onDatasetHover: { highlightDataSeries: !1 },
                    x: { show: !0, format: "dd MMM", formatter: void 0 },
                    y: {
                      formatter: void 0,
                      title: {
                        formatter: function (i) {
                          return i ? i + ": " : "";
                        },
                      },
                    },
                    z: { formatter: void 0, title: "Size: " },
                    marker: { show: !0, fillColors: void 0 },
                    items: { display: "flex" },
                    fixed: {
                      enabled: !1,
                      position: "topRight",
                      offsetX: 0,
                      offsetY: 0,
                    },
                  },
                  xaxis: {
                    type: "category",
                    categories: [],
                    convertedCatToNumeric: !1,
                    offsetX: 0,
                    offsetY: 0,
                    overwriteCategories: void 0,
                    labels: {
                      show: !0,
                      rotate: -45,
                      rotateAlways: !1,
                      hideOverlappingLabels: !0,
                      trim: !1,
                      minHeight: void 0,
                      maxHeight: 120,
                      showDuplicates: !0,
                      style: {
                        colors: [],
                        fontSize: "12px",
                        fontWeight: 400,
                        fontFamily: void 0,
                        cssClass: "",
                      },
                      offsetX: 0,
                      offsetY: 0,
                      format: void 0,
                      formatter: void 0,
                      datetimeUTC: !0,
                      datetimeFormatter: {
                        year: "yyyy",
                        month: "MMM 'yy",
                        day: "dd MMM",
                        hour: "HH:mm",
                        minute: "HH:mm:ss",
                        second: "HH:mm:ss",
                      },
                    },
                    group: {
                      groups: [],
                      style: {
                        colors: [],
                        fontSize: "12px",
                        fontWeight: 400,
                        fontFamily: void 0,
                        cssClass: "",
                      },
                    },
                    axisBorder: {
                      show: !0,
                      color: "#e0e0e0",
                      width: "100%",
                      height: 1,
                      offsetX: 0,
                      offsetY: 0,
                    },
                    axisTicks: {
                      show: !0,
                      color: "#e0e0e0",
                      height: 6,
                      offsetX: 0,
                      offsetY: 0,
                    },
                    tickAmount: void 0,
                    tickPlacement: "on",
                    min: void 0,
                    max: void 0,
                    range: void 0,
                    floating: !1,
                    decimalsInFloat: void 0,
                    position: "bottom",
                    title: {
                      text: void 0,
                      offsetX: 0,
                      offsetY: 0,
                      style: {
                        color: void 0,
                        fontSize: "12px",
                        fontWeight: 900,
                        fontFamily: void 0,
                        cssClass: "",
                      },
                    },
                    crosshairs: {
                      show: !0,
                      width: 1,
                      position: "back",
                      opacity: 0.9,
                      stroke: { color: "#b6b6b6", width: 1, dashArray: 3 },
                      fill: {
                        type: "solid",
                        color: "#B1B9C4",
                        gradient: {
                          colorFrom: "#D8E3F0",
                          colorTo: "#BED1E6",
                          stops: [0, 100],
                          opacityFrom: 0.4,
                          opacityTo: 0.5,
                        },
                      },
                      dropShadow: {
                        enabled: !1,
                        left: 0,
                        top: 0,
                        blur: 1,
                        opacity: 0.4,
                      },
                    },
                    tooltip: {
                      enabled: !0,
                      offsetY: 0,
                      formatter: void 0,
                      style: { fontSize: "12px", fontFamily: void 0 },
                    },
                  },
                  yaxis: this.yAxis,
                  theme: {
                    mode: "light",
                    palette: "palette1",
                    monochrome: {
                      enabled: !1,
                      color: "#008FFB",
                      shadeTo: "light",
                      shadeIntensity: 0.65,
                    },
                  },
                };
              },
            },
          ]),
          U
        );
      })(),
      Vt = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.graphics = new C(this.ctx)),
            this.w.globals.isBarHorizontal && (this.invertAxis = !0),
            (this.helpers = new je(this)),
            (this.xAxisAnnotations = new tt(this)),
            (this.yAxisAnnotations = new Ct(this)),
            (this.pointsAnnotations = new xt(this)),
            this.w.globals.isBarHorizontal &&
              this.w.config.yaxis[0].reversed &&
              (this.inversedReversedAxis = !0),
            (this.xDivision =
              this.w.globals.gridWidth / this.w.globals.dataPoints);
        }
        return (
          g(U, [
            {
              key: "drawAxesAnnotations",
              value: function () {
                var i = this.w;
                if (i.globals.axisCharts) {
                  for (
                    var s = this.yAxisAnnotations.drawYAxisAnnotations(),
                      l = this.xAxisAnnotations.drawXAxisAnnotations(),
                      c = this.pointsAnnotations.drawPointAnnotations(),
                      h = i.config.chart.animations.enabled,
                      d = [s, l, c],
                      f = [l.node, s.node, c.node],
                      p = 0;
                    p < 3;
                    p++
                  )
                    i.globals.dom.elGraphical.add(d[p]),
                      !h ||
                        i.globals.resized ||
                        i.globals.dataChanged ||
                        (i.config.chart.type !== "scatter" &&
                          i.config.chart.type !== "bubble" &&
                          i.globals.dataPoints > 1 &&
                          f[p].classList.add("apexcharts-element-hidden")),
                      i.globals.delayedElements.push({ el: f[p], index: 0 });
                  this.helpers.annotationsBackground();
                }
              },
            },
            {
              key: "drawImageAnnos",
              value: function () {
                var i = this;
                this.w.config.annotations.images.map(function (s, l) {
                  i.addImage(s, l);
                });
              },
            },
            {
              key: "drawTextAnnos",
              value: function () {
                var i = this;
                this.w.config.annotations.texts.map(function (s, l) {
                  i.addText(s, l);
                });
              },
            },
            {
              key: "addXaxisAnnotation",
              value: function (i, s, l) {
                this.xAxisAnnotations.addXaxisAnnotation(i, s, l);
              },
            },
            {
              key: "addYaxisAnnotation",
              value: function (i, s, l) {
                this.yAxisAnnotations.addYaxisAnnotation(i, s, l);
              },
            },
            {
              key: "addPointAnnotation",
              value: function (i, s, l) {
                this.pointsAnnotations.addPointAnnotation(i, s, l);
              },
            },
            {
              key: "addText",
              value: function (i, s) {
                var l = i.x,
                  c = i.y,
                  h = i.text,
                  d = i.textAnchor,
                  f = i.foreColor,
                  p = i.fontSize,
                  v = i.fontFamily,
                  b = i.fontWeight,
                  _ = i.cssClass,
                  S = i.backgroundColor,
                  T = i.borderWidth,
                  O = i.strokeDashArray,
                  D = i.borderRadius,
                  V = i.borderColor,
                  G = i.appendTo,
                  Q = G === void 0 ? ".apexcharts-svg" : G,
                  m = i.paddingLeft,
                  k = m === void 0 ? 4 : m,
                  N = i.paddingRight,
                  X = N === void 0 ? 4 : N,
                  K = i.paddingBottom,
                  ee = K === void 0 ? 2 : K,
                  fe = i.paddingTop,
                  ge = fe === void 0 ? 2 : fe,
                  Pe = this.w,
                  We = this.graphics.drawText({
                    x: l,
                    y: c,
                    text: h,
                    textAnchor: d || "start",
                    fontSize: p || "12px",
                    fontWeight: b || "regular",
                    fontFamily: v || Pe.config.chart.fontFamily,
                    foreColor: f || Pe.config.chart.foreColor,
                    cssClass: _,
                  }),
                  ze = Pe.globals.dom.baseEl.querySelector(Q);
                ze && ze.appendChild(We.node);
                var ut = We.bbox();
                if (h) {
                  var St = this.graphics.drawRect(
                    ut.x - k,
                    ut.y - ge,
                    ut.width + k + X,
                    ut.height + ee + ge,
                    D,
                    S || "transparent",
                    1,
                    T,
                    V,
                    O
                  );
                  ze.insertBefore(St.node, We.node);
                }
              },
            },
            {
              key: "addImage",
              value: function (i, s) {
                var l = this.w,
                  c = i.path,
                  h = i.x,
                  d = h === void 0 ? 0 : h,
                  f = i.y,
                  p = f === void 0 ? 0 : f,
                  v = i.width,
                  b = v === void 0 ? 20 : v,
                  _ = i.height,
                  S = _ === void 0 ? 20 : _,
                  T = i.appendTo,
                  O = T === void 0 ? ".apexcharts-svg" : T,
                  D = l.globals.dom.Paper.image(c);
                D.size(b, S).move(d, p);
                var V = l.globals.dom.baseEl.querySelector(O);
                return V && V.appendChild(D.node), D;
              },
            },
            {
              key: "addXaxisAnnotationExternal",
              value: function (i, s, l) {
                return (
                  this.addAnnotationExternal({
                    params: i,
                    pushToMemory: s,
                    context: l,
                    type: "xaxis",
                    contextMethod: l.addXaxisAnnotation,
                  }),
                  l
                );
              },
            },
            {
              key: "addYaxisAnnotationExternal",
              value: function (i, s, l) {
                return (
                  this.addAnnotationExternal({
                    params: i,
                    pushToMemory: s,
                    context: l,
                    type: "yaxis",
                    contextMethod: l.addYaxisAnnotation,
                  }),
                  l
                );
              },
            },
            {
              key: "addPointAnnotationExternal",
              value: function (i, s, l) {
                return (
                  this.invertAxis === void 0 &&
                    (this.invertAxis = l.w.globals.isBarHorizontal),
                  this.addAnnotationExternal({
                    params: i,
                    pushToMemory: s,
                    context: l,
                    type: "point",
                    contextMethod: l.addPointAnnotation,
                  }),
                  l
                );
              },
            },
            {
              key: "addAnnotationExternal",
              value: function (i) {
                var s = i.params,
                  l = i.pushToMemory,
                  c = i.context,
                  h = i.type,
                  d = i.contextMethod,
                  f = c,
                  p = f.w,
                  v = p.globals.dom.baseEl.querySelector(
                    ".apexcharts-".concat(h, "-annotations")
                  ),
                  b = v.childNodes.length + 1,
                  _ = new Mt(),
                  S = Object.assign(
                    {},
                    h === "xaxis"
                      ? _.xAxisAnnotation
                      : h === "yaxis"
                      ? _.yAxisAnnotation
                      : _.pointAnnotation
                  ),
                  T = F.extend(S, s);
                switch (h) {
                  case "xaxis":
                    this.addXaxisAnnotation(T, v, b);
                    break;
                  case "yaxis":
                    this.addYaxisAnnotation(T, v, b);
                    break;
                  case "point":
                    this.addPointAnnotation(T, v, b);
                }
                var O = p.globals.dom.baseEl.querySelector(
                    ".apexcharts-"
                      .concat(h, "-annotations .apexcharts-")
                      .concat(h, "-annotation-label[rel='")
                      .concat(b, "']")
                  ),
                  D = this.helpers.addBackgroundToAnno(O, T);
                return (
                  D && v.insertBefore(D.node, O),
                  l &&
                    p.globals.memory.methodsToExec.push({
                      context: f,
                      id: T.id ? T.id : F.randomId(),
                      method: d,
                      label: "addAnnotation",
                      params: s,
                    }),
                  c
                );
              },
            },
            {
              key: "clearAnnotations",
              value: function (i) {
                var s = i.w,
                  l = s.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations"
                  );
                s.globals.memory.methodsToExec.map(function (c, h) {
                  (c.label !== "addText" && c.label !== "addAnnotation") ||
                    s.globals.memory.methodsToExec.splice(h, 1);
                }),
                  (l = F.listToArray(l)),
                  Array.prototype.forEach.call(l, function (c) {
                    for (; c.firstChild; ) c.removeChild(c.firstChild);
                  });
              },
            },
            {
              key: "removeAnnotation",
              value: function (i, s) {
                var l = i.w,
                  c = l.globals.dom.baseEl.querySelectorAll(".".concat(s));
                c &&
                  (l.globals.memory.methodsToExec.map(function (h, d) {
                    h.id === s && l.globals.memory.methodsToExec.splice(d, 1);
                  }),
                  Array.prototype.forEach.call(c, function (h) {
                    h.parentElement.removeChild(h);
                  }));
              },
            },
          ]),
          U
        );
      })(),
      It = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
            (this.months30 = [2, 4, 6, 9, 11]),
            (this.daysCntOfYear = [
              0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
            ]);
        }
        return (
          g(U, [
            {
              key: "isValidDate",
              value: function (i) {
                return typeof i != "number" && !isNaN(this.parseDate(i));
              },
            },
            {
              key: "getTimeStamp",
              value: function (i) {
                return Date.parse(i)
                  ? this.w.config.xaxis.labels.datetimeUTC
                    ? new Date(
                        new Date(i).toISOString().substr(0, 25)
                      ).getTime()
                    : new Date(i).getTime()
                  : i;
              },
            },
            {
              key: "getDate",
              value: function (i) {
                return this.w.config.xaxis.labels.datetimeUTC
                  ? new Date(new Date(i).toUTCString())
                  : new Date(i);
              },
            },
            {
              key: "parseDate",
              value: function (i) {
                var s = Date.parse(i);
                if (!isNaN(s)) return this.getTimeStamp(i);
                var l = Date.parse(
                  i.replace(/-/g, "/").replace(/[a-z]+/gi, " ")
                );
                return (l = this.getTimeStamp(l));
              },
            },
            {
              key: "parseDateWithTimezone",
              value: function (i) {
                return Date.parse(
                  i.replace(/-/g, "/").replace(/[a-z]+/gi, " ")
                );
              },
            },
            {
              key: "formatDate",
              value: function (i, s) {
                var l = this.w.globals.locale,
                  c = this.w.config.xaxis.labels.datetimeUTC,
                  h = ["\0"].concat(le(l.months)),
                  d = [""].concat(le(l.shortMonths)),
                  f = [""].concat(le(l.days)),
                  p = [""].concat(le(l.shortDays));
                function v(ee, fe) {
                  var ge = ee + "";
                  for (fe = fe || 2; ge.length < fe; ) ge = "0" + ge;
                  return ge;
                }
                var b = c ? i.getUTCFullYear() : i.getFullYear();
                s = (s = (s = s.replace(/(^|[^\\])yyyy+/g, "$1" + b)).replace(
                  /(^|[^\\])yy/g,
                  "$1" + b.toString().substr(2, 2)
                )).replace(/(^|[^\\])y/g, "$1" + b);
                var _ = (c ? i.getUTCMonth() : i.getMonth()) + 1;
                s = (s = (s = (s = s.replace(
                  /(^|[^\\])MMMM+/g,
                  "$1" + h[0]
                )).replace(/(^|[^\\])MMM/g, "$1" + d[0])).replace(
                  /(^|[^\\])MM/g,
                  "$1" + v(_)
                )).replace(/(^|[^\\])M/g, "$1" + _);
                var S = c ? i.getUTCDate() : i.getDate();
                s = (s = (s = (s = s.replace(
                  /(^|[^\\])dddd+/g,
                  "$1" + f[0]
                )).replace(/(^|[^\\])ddd/g, "$1" + p[0])).replace(
                  /(^|[^\\])dd/g,
                  "$1" + v(S)
                )).replace(/(^|[^\\])d/g, "$1" + S);
                var T = c ? i.getUTCHours() : i.getHours(),
                  O = T > 12 ? T - 12 : T === 0 ? 12 : T;
                s = (s = (s = (s = s.replace(
                  /(^|[^\\])HH+/g,
                  "$1" + v(T)
                )).replace(/(^|[^\\])H/g, "$1" + T)).replace(
                  /(^|[^\\])hh+/g,
                  "$1" + v(O)
                )).replace(/(^|[^\\])h/g, "$1" + O);
                var D = c ? i.getUTCMinutes() : i.getMinutes();
                s = (s = s.replace(/(^|[^\\])mm+/g, "$1" + v(D))).replace(
                  /(^|[^\\])m/g,
                  "$1" + D
                );
                var V = c ? i.getUTCSeconds() : i.getSeconds();
                s = (s = s.replace(/(^|[^\\])ss+/g, "$1" + v(V))).replace(
                  /(^|[^\\])s/g,
                  "$1" + V
                );
                var G = c ? i.getUTCMilliseconds() : i.getMilliseconds();
                (s = s.replace(/(^|[^\\])fff+/g, "$1" + v(G, 3))),
                  (G = Math.round(G / 10)),
                  (s = s.replace(/(^|[^\\])ff/g, "$1" + v(G))),
                  (G = Math.round(G / 10));
                var Q = T < 12 ? "AM" : "PM";
                s = (s = (s = s.replace(/(^|[^\\])f/g, "$1" + G)).replace(
                  /(^|[^\\])TT+/g,
                  "$1" + Q
                )).replace(/(^|[^\\])T/g, "$1" + Q.charAt(0));
                var m = Q.toLowerCase();
                s = (s = s.replace(/(^|[^\\])tt+/g, "$1" + m)).replace(
                  /(^|[^\\])t/g,
                  "$1" + m.charAt(0)
                );
                var k = -i.getTimezoneOffset(),
                  N = c || !k ? "Z" : k > 0 ? "+" : "-";
                if (!c) {
                  var X = (k = Math.abs(k)) % 60;
                  N += v(Math.floor(k / 60)) + ":" + v(X);
                }
                s = s.replace(/(^|[^\\])K/g, "$1" + N);
                var K = (c ? i.getUTCDay() : i.getDay()) + 1;
                return (s = (s = (s = (s = (s = s.replace(
                  new RegExp(f[0], "g"),
                  f[K]
                )).replace(new RegExp(p[0], "g"), p[K])).replace(
                  new RegExp(h[0], "g"),
                  h[_]
                )).replace(new RegExp(d[0], "g"), d[_])).replace(
                  /\\(.)/g,
                  "$1"
                ));
              },
            },
            {
              key: "getTimeUnitsfromTimestamp",
              value: function (i, s, l) {
                var c = this.w;
                c.config.xaxis.min !== void 0 && (i = c.config.xaxis.min),
                  c.config.xaxis.max !== void 0 && (s = c.config.xaxis.max);
                var h = this.getDate(i),
                  d = this.getDate(s),
                  f = this.formatDate(h, "yyyy MM dd HH mm ss fff").split(" "),
                  p = this.formatDate(d, "yyyy MM dd HH mm ss fff").split(" ");
                return {
                  minMillisecond: parseInt(f[6], 10),
                  maxMillisecond: parseInt(p[6], 10),
                  minSecond: parseInt(f[5], 10),
                  maxSecond: parseInt(p[5], 10),
                  minMinute: parseInt(f[4], 10),
                  maxMinute: parseInt(p[4], 10),
                  minHour: parseInt(f[3], 10),
                  maxHour: parseInt(p[3], 10),
                  minDate: parseInt(f[2], 10),
                  maxDate: parseInt(p[2], 10),
                  minMonth: parseInt(f[1], 10) - 1,
                  maxMonth: parseInt(p[1], 10) - 1,
                  minYear: parseInt(f[0], 10),
                  maxYear: parseInt(p[0], 10),
                };
              },
            },
            {
              key: "isLeapYear",
              value: function (i) {
                return (i % 4 == 0 && i % 100 != 0) || i % 400 == 0;
              },
            },
            {
              key: "calculcateLastDaysOfMonth",
              value: function (i, s, l) {
                return this.determineDaysOfMonths(i, s) - l;
              },
            },
            {
              key: "determineDaysOfYear",
              value: function (i) {
                var s = 365;
                return this.isLeapYear(i) && (s = 366), s;
              },
            },
            {
              key: "determineRemainingDaysOfYear",
              value: function (i, s, l) {
                var c = this.daysCntOfYear[s] + l;
                return s > 1 && this.isLeapYear() && c++, c;
              },
            },
            {
              key: "determineDaysOfMonths",
              value: function (i, s) {
                var l = 30;
                switch (((i = F.monthMod(i)), !0)) {
                  case this.months30.indexOf(i) > -1:
                    i === 2 && (l = this.isLeapYear(s) ? 29 : 28);
                    break;
                  case this.months31.indexOf(i) > -1:
                  default:
                    l = 31;
                }
                return l;
              },
            },
          ]),
          U
        );
      })(),
      ht = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.tooltipKeyFormat = "dd MMM");
        }
        return (
          g(U, [
            {
              key: "xLabelFormat",
              value: function (i, s, l, c) {
                var h = this.w;
                if (
                  h.config.xaxis.type === "datetime" &&
                  h.config.xaxis.labels.formatter === void 0 &&
                  h.config.tooltip.x.formatter === void 0
                ) {
                  var d = new It(this.ctx);
                  return d.formatDate(d.getDate(s), h.config.tooltip.x.format);
                }
                return i(s, l, c);
              },
            },
            {
              key: "defaultGeneralFormatter",
              value: function (i) {
                return Array.isArray(i)
                  ? i.map(function (s) {
                      return s;
                    })
                  : i;
              },
            },
            {
              key: "defaultYFormatter",
              value: function (i, s, l) {
                var c = this.w;
                return (
                  F.isNumber(i) &&
                    (i =
                      c.globals.yValueDecimal !== 0
                        ? i.toFixed(
                            s.decimalsInFloat !== void 0
                              ? s.decimalsInFloat
                              : c.globals.yValueDecimal
                          )
                        : c.globals.maxYArr[l] - c.globals.minYArr[l] < 5
                        ? i.toFixed(1)
                        : i.toFixed(0)),
                  i
                );
              },
            },
            {
              key: "setLabelFormatters",
              value: function () {
                var i = this,
                  s = this.w;
                return (
                  (s.globals.xaxisTooltipFormatter = function (l) {
                    return i.defaultGeneralFormatter(l);
                  }),
                  (s.globals.ttKeyFormatter = function (l) {
                    return i.defaultGeneralFormatter(l);
                  }),
                  (s.globals.ttZFormatter = function (l) {
                    return l;
                  }),
                  (s.globals.legendFormatter = function (l) {
                    return i.defaultGeneralFormatter(l);
                  }),
                  s.config.xaxis.labels.formatter !== void 0
                    ? (s.globals.xLabelFormatter =
                        s.config.xaxis.labels.formatter)
                    : (s.globals.xLabelFormatter = function (l) {
                        if (F.isNumber(l)) {
                          if (
                            !s.config.xaxis.convertedCatToNumeric &&
                            s.config.xaxis.type === "numeric"
                          ) {
                            if (F.isNumber(s.config.xaxis.decimalsInFloat))
                              return l.toFixed(s.config.xaxis.decimalsInFloat);
                            var c = s.globals.maxX - s.globals.minX;
                            return c > 0 && c < 100
                              ? l.toFixed(1)
                              : l.toFixed(0);
                          }
                          return s.globals.isBarHorizontal &&
                            s.globals.maxY - s.globals.minYArr < 4
                            ? l.toFixed(1)
                            : l.toFixed(0);
                        }
                        return l;
                      }),
                  typeof s.config.tooltip.x.formatter == "function"
                    ? (s.globals.ttKeyFormatter = s.config.tooltip.x.formatter)
                    : (s.globals.ttKeyFormatter = s.globals.xLabelFormatter),
                  typeof s.config.xaxis.tooltip.formatter == "function" &&
                    (s.globals.xaxisTooltipFormatter =
                      s.config.xaxis.tooltip.formatter),
                  (Array.isArray(s.config.tooltip.y) ||
                    s.config.tooltip.y.formatter !== void 0) &&
                    (s.globals.ttVal = s.config.tooltip.y),
                  s.config.tooltip.z.formatter !== void 0 &&
                    (s.globals.ttZFormatter = s.config.tooltip.z.formatter),
                  s.config.legend.formatter !== void 0 &&
                    (s.globals.legendFormatter = s.config.legend.formatter),
                  s.config.yaxis.forEach(function (l, c) {
                    l.labels.formatter !== void 0
                      ? (s.globals.yLabelFormatters[c] = l.labels.formatter)
                      : (s.globals.yLabelFormatters[c] = function (h) {
                          return s.globals.xyCharts
                            ? Array.isArray(h)
                              ? h.map(function (d) {
                                  return i.defaultYFormatter(d, l, c);
                                })
                              : i.defaultYFormatter(h, l, c)
                            : h;
                        });
                  }),
                  s.globals
                );
              },
            },
            {
              key: "heatmapLabelFormatters",
              value: function () {
                var i = this.w;
                if (i.config.chart.type === "heatmap") {
                  i.globals.yAxisScale[0].result =
                    i.globals.seriesNames.slice();
                  var s = i.globals.seriesNames.reduce(function (l, c) {
                    return l.length > c.length ? l : c;
                  }, 0);
                  (i.globals.yAxisScale[0].niceMax = s),
                    (i.globals.yAxisScale[0].niceMin = s);
                }
              },
            },
          ]),
          U
        );
      })(),
      Ie = function (U) {
        var i,
          s = U.isTimeline,
          l = U.ctx,
          c = U.seriesIndex,
          h = U.dataPointIndex,
          d = U.y1,
          f = U.y2,
          p = U.w,
          v = p.globals.seriesRangeStart[c][h],
          b = p.globals.seriesRangeEnd[c][h],
          _ = p.globals.labels[h],
          S = p.config.series[c].name ? p.config.series[c].name : "",
          T = p.globals.ttKeyFormatter,
          O = p.config.tooltip.y.title.formatter,
          D = { w: p, seriesIndex: c, dataPointIndex: h, start: v, end: b };
        typeof O == "function" && (S = O(S, D)),
          (i = p.config.series[c].data[h]) !== null &&
            i !== void 0 &&
            i.x &&
            (_ = p.config.series[c].data[h].x),
          s ||
            (p.config.xaxis.type === "datetime" &&
              (_ = new ht(l).xLabelFormat(p.globals.ttKeyFormatter, _, _, {
                i: void 0,
                dateFormatter: new It(l).formatDate,
                w: p,
              }))),
          typeof T == "function" && (_ = T(_, D)),
          Number.isFinite(d) && Number.isFinite(f) && ((v = d), (b = f));
        var V = "",
          G = "",
          Q = p.globals.colors[c];
        if (p.config.tooltip.x.formatter === void 0)
          if (p.config.xaxis.type === "datetime") {
            var m = new It(l);
            (V = m.formatDate(m.getDate(v), p.config.tooltip.x.format)),
              (G = m.formatDate(m.getDate(b), p.config.tooltip.x.format));
          } else (V = v), (G = b);
        else
          (V = p.config.tooltip.x.formatter(v)),
            (G = p.config.tooltip.x.formatter(b));
        return {
          start: v,
          end: b,
          startVal: V,
          endVal: G,
          ylabel: _,
          color: Q,
          seriesName: S,
        };
      },
      Lt = function (U) {
        var i = U.color,
          s = U.seriesName,
          l = U.ylabel,
          c = U.start,
          h = U.end,
          d = U.seriesIndex,
          f = U.dataPointIndex,
          p = U.ctx.tooltip.tooltipLabels.getFormatters(d);
        (c = p.yLbFormatter(c)), (h = p.yLbFormatter(h));
        var v = p.yLbFormatter(U.w.globals.series[d][f]),
          b = `<span class="value start-value">
  `
            .concat(
              c,
              `
  </span> <span class="separator">-</span> <span class="value end-value">
  `
            )
            .concat(
              h,
              `
  </span>`
            );
        return (
          '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
          i +
          '">' +
          (s || "") +
          '</span></div><div> <span class="category">' +
          l +
          ": </span> " +
          (U.w.globals.comboCharts
            ? U.w.config.series[d].type === "rangeArea" ||
              U.w.config.series[d].type === "rangeBar"
              ? b
              : "<span>".concat(v, "</span>")
            : b) +
          " </div></div>"
        );
      },
      we = (function () {
        function U(i) {
          o(this, U), (this.opts = i);
        }
        return (
          g(U, [
            {
              key: "hideYAxis",
              value: function () {
                (this.opts.yaxis[0].show = !1),
                  (this.opts.yaxis[0].title.text = ""),
                  (this.opts.yaxis[0].axisBorder.show = !1),
                  (this.opts.yaxis[0].axisTicks.show = !1),
                  (this.opts.yaxis[0].floating = !0);
              },
            },
            {
              key: "line",
              value: function () {
                return {
                  chart: { animations: { easing: "swing" } },
                  dataLabels: { enabled: !1 },
                  stroke: { width: 5, curve: "straight" },
                  markers: { size: 0, hover: { sizeOffset: 6 } },
                  xaxis: { crosshairs: { width: 1 } },
                };
              },
            },
            {
              key: "sparkline",
              value: function (i) {
                return (
                  this.hideYAxis(),
                  F.extend(i, {
                    grid: {
                      show: !1,
                      padding: { left: 0, right: 0, top: 0, bottom: 0 },
                    },
                    legend: { show: !1 },
                    xaxis: {
                      labels: { show: !1 },
                      tooltip: { enabled: !1 },
                      axisBorder: { show: !1 },
                      axisTicks: { show: !1 },
                    },
                    chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                    dataLabels: { enabled: !1 },
                  })
                );
              },
            },
            {
              key: "bar",
              value: function () {
                return {
                  chart: { stacked: !1, animations: { easing: "swing" } },
                  plotOptions: { bar: { dataLabels: { position: "center" } } },
                  dataLabels: {
                    style: { colors: ["#fff"] },
                    background: { enabled: !1 },
                  },
                  stroke: { width: 0, lineCap: "round" },
                  fill: { opacity: 0.85 },
                  legend: { markers: { shape: "square", radius: 2, size: 8 } },
                  tooltip: { shared: !1, intersect: !0 },
                  xaxis: {
                    tooltip: { enabled: !1 },
                    tickPlacement: "between",
                    crosshairs: {
                      width: "barWidth",
                      position: "back",
                      fill: { type: "gradient" },
                      dropShadow: { enabled: !1 },
                      stroke: { width: 0 },
                    },
                  },
                };
              },
            },
            {
              key: "funnel",
              value: function () {
                return (
                  this.hideYAxis(),
                  r(
                    r({}, this.bar()),
                    {},
                    {
                      chart: {
                        animations: {
                          easing: "linear",
                          speed: 800,
                          animateGradually: { enabled: !1 },
                        },
                      },
                      plotOptions: {
                        bar: {
                          horizontal: !0,
                          borderRadiusApplication: "around",
                          borderRadius: 0,
                          dataLabels: { position: "center" },
                        },
                      },
                      grid: { show: !1, padding: { left: 0, right: 0 } },
                      xaxis: {
                        labels: { show: !1 },
                        tooltip: { enabled: !1 },
                        axisBorder: { show: !1 },
                        axisTicks: { show: !1 },
                      },
                    }
                  )
                );
              },
            },
            {
              key: "candlestick",
              value: function () {
                var i = this;
                return {
                  stroke: { width: 1, colors: ["#333"] },
                  fill: { opacity: 1 },
                  dataLabels: { enabled: !1 },
                  tooltip: {
                    shared: !0,
                    custom: function (s) {
                      var l = s.seriesIndex,
                        c = s.dataPointIndex,
                        h = s.w;
                      return i._getBoxTooltip(
                        h,
                        l,
                        c,
                        ["Open", "High", "", "Low", "Close"],
                        "candlestick"
                      );
                    },
                  },
                  states: { active: { filter: { type: "none" } } },
                  xaxis: { crosshairs: { width: 1 } },
                };
              },
            },
            {
              key: "boxPlot",
              value: function () {
                var i = this;
                return {
                  chart: { animations: { dynamicAnimation: { enabled: !1 } } },
                  stroke: { width: 1, colors: ["#24292e"] },
                  dataLabels: { enabled: !1 },
                  tooltip: {
                    shared: !0,
                    custom: function (s) {
                      var l = s.seriesIndex,
                        c = s.dataPointIndex,
                        h = s.w;
                      return i._getBoxTooltip(
                        h,
                        l,
                        c,
                        ["Minimum", "Q1", "Median", "Q3", "Maximum"],
                        "boxPlot"
                      );
                    },
                  },
                  markers: { size: 5, strokeWidth: 1, strokeColors: "#111" },
                  xaxis: { crosshairs: { width: 1 } },
                };
              },
            },
            {
              key: "rangeBar",
              value: function () {
                return {
                  chart: { animations: { animateGradually: !1 } },
                  stroke: { width: 0, lineCap: "square" },
                  plotOptions: {
                    bar: {
                      borderRadius: 0,
                      dataLabels: { position: "center" },
                    },
                  },
                  dataLabels: {
                    enabled: !1,
                    formatter: function (i, s) {
                      s.ctx;
                      var l = s.seriesIndex,
                        c = s.dataPointIndex,
                        h = s.w,
                        d = function () {
                          var f = h.globals.seriesRangeStart[l][c];
                          return h.globals.seriesRangeEnd[l][c] - f;
                        };
                      return h.globals.comboCharts
                        ? h.config.series[l].type === "rangeBar" ||
                          h.config.series[l].type === "rangeArea"
                          ? d()
                          : i
                        : d();
                    },
                    background: { enabled: !1 },
                    style: { colors: ["#fff"] },
                  },
                  markers: { size: 10 },
                  tooltip: {
                    shared: !1,
                    followCursor: !0,
                    custom: function (i) {
                      return i.w.config.plotOptions &&
                        i.w.config.plotOptions.bar &&
                        i.w.config.plotOptions.bar.horizontal
                        ? (function (s) {
                            var l = Ie(r(r({}, s), {}, { isTimeline: !0 })),
                              c = l.color,
                              h = l.seriesName,
                              d = l.ylabel,
                              f = l.startVal,
                              p = l.endVal;
                            return Lt(
                              r(
                                r({}, s),
                                {},
                                {
                                  color: c,
                                  seriesName: h,
                                  ylabel: d,
                                  start: f,
                                  end: p,
                                }
                              )
                            );
                          })(i)
                        : (function (s) {
                            var l = Ie(s),
                              c = l.color,
                              h = l.seriesName,
                              d = l.ylabel,
                              f = l.start,
                              p = l.end;
                            return Lt(
                              r(
                                r({}, s),
                                {},
                                {
                                  color: c,
                                  seriesName: h,
                                  ylabel: d,
                                  start: f,
                                  end: p,
                                }
                              )
                            );
                          })(i);
                    },
                  },
                  xaxis: {
                    tickPlacement: "between",
                    tooltip: { enabled: !1 },
                    crosshairs: { stroke: { width: 0 } },
                  },
                };
              },
            },
            {
              key: "dumbbell",
              value: function (i) {
                var s, l;
                return (
                  ((s = i.plotOptions.bar) !== null &&
                    s !== void 0 &&
                    s.barHeight) ||
                    (i.plotOptions.bar.barHeight = 2),
                  ((l = i.plotOptions.bar) !== null &&
                    l !== void 0 &&
                    l.columnWidth) ||
                    (i.plotOptions.bar.columnWidth = 2),
                  i
                );
              },
            },
            {
              key: "area",
              value: function () {
                return {
                  stroke: {
                    width: 4,
                    fill: {
                      type: "solid",
                      gradient: {
                        inverseColors: !1,
                        shade: "light",
                        type: "vertical",
                        opacityFrom: 0.65,
                        opacityTo: 0.5,
                        stops: [0, 100, 100],
                      },
                    },
                  },
                  fill: {
                    type: "gradient",
                    gradient: {
                      inverseColors: !1,
                      shade: "light",
                      type: "vertical",
                      opacityFrom: 0.65,
                      opacityTo: 0.5,
                      stops: [0, 100, 100],
                    },
                  },
                  markers: { size: 0, hover: { sizeOffset: 6 } },
                  tooltip: { followCursor: !1 },
                };
              },
            },
            {
              key: "rangeArea",
              value: function () {
                return {
                  stroke: { curve: "straight", width: 0 },
                  fill: { type: "solid", opacity: 0.6 },
                  markers: { size: 0 },
                  states: {
                    hover: { filter: { type: "none" } },
                    active: { filter: { type: "none" } },
                  },
                  tooltip: {
                    intersect: !1,
                    shared: !0,
                    followCursor: !0,
                    custom: function (i) {
                      return (function (s) {
                        var l = Ie(s),
                          c = l.color,
                          h = l.seriesName,
                          d = l.ylabel,
                          f = l.start,
                          p = l.end;
                        return Lt(
                          r(
                            r({}, s),
                            {},
                            {
                              color: c,
                              seriesName: h,
                              ylabel: d,
                              start: f,
                              end: p,
                            }
                          )
                        );
                      })(i);
                    },
                  },
                };
              },
            },
            {
              key: "brush",
              value: function (i) {
                return F.extend(i, {
                  chart: {
                    toolbar: { autoSelected: "selection", show: !1 },
                    zoom: { enabled: !1 },
                  },
                  dataLabels: { enabled: !1 },
                  stroke: { width: 1 },
                  tooltip: { enabled: !1 },
                  xaxis: { tooltip: { enabled: !1 } },
                });
              },
            },
            {
              key: "stacked100",
              value: function (i) {
                (i.dataLabels = i.dataLabels || {}),
                  (i.dataLabels.formatter = i.dataLabels.formatter || void 0);
                var s = i.dataLabels.formatter;
                return (
                  i.yaxis.forEach(function (l, c) {
                    (i.yaxis[c].min = 0), (i.yaxis[c].max = 100);
                  }),
                  i.chart.type === "bar" &&
                    (i.dataLabels.formatter =
                      s ||
                      function (l) {
                        return typeof l == "number" && l
                          ? l.toFixed(0) + "%"
                          : l;
                      }),
                  i
                );
              },
            },
            {
              key: "stackedBars",
              value: function () {
                var i = this.bar();
                return r(
                  r({}, i),
                  {},
                  {
                    plotOptions: r(
                      r({}, i.plotOptions),
                      {},
                      {
                        bar: r(
                          r({}, i.plotOptions.bar),
                          {},
                          {
                            borderRadiusApplication: "end",
                            borderRadiusWhenStacked: "last",
                          }
                        ),
                      }
                    ),
                  }
                );
              },
            },
            {
              key: "convertCatToNumeric",
              value: function (i) {
                return (i.xaxis.convertedCatToNumeric = !0), i;
              },
            },
            {
              key: "convertCatToNumericXaxis",
              value: function (i, s, l) {
                (i.xaxis.type = "numeric"),
                  (i.xaxis.labels = i.xaxis.labels || {}),
                  (i.xaxis.labels.formatter =
                    i.xaxis.labels.formatter ||
                    function (d) {
                      return F.isNumber(d) ? Math.floor(d) : d;
                    });
                var c = i.xaxis.labels.formatter,
                  h =
                    i.xaxis.categories && i.xaxis.categories.length
                      ? i.xaxis.categories
                      : i.labels;
                return (
                  l &&
                    l.length &&
                    (h = l.map(function (d) {
                      return Array.isArray(d) ? d : String(d);
                    })),
                  h &&
                    h.length &&
                    (i.xaxis.labels.formatter = function (d) {
                      return F.isNumber(d) ? c(h[Math.floor(d) - 1]) : c(d);
                    }),
                  (i.xaxis.categories = []),
                  (i.labels = []),
                  (i.xaxis.tickAmount = i.xaxis.tickAmount || "dataPoints"),
                  i
                );
              },
            },
            {
              key: "bubble",
              value: function () {
                return {
                  dataLabels: { style: { colors: ["#fff"] } },
                  tooltip: { shared: !1, intersect: !0 },
                  xaxis: { crosshairs: { width: 0 } },
                  fill: {
                    type: "solid",
                    gradient: {
                      shade: "light",
                      inverse: !0,
                      shadeIntensity: 0.55,
                      opacityFrom: 0.4,
                      opacityTo: 0.8,
                    },
                  },
                };
              },
            },
            {
              key: "scatter",
              value: function () {
                return {
                  dataLabels: { enabled: !1 },
                  tooltip: { shared: !1, intersect: !0 },
                  markers: {
                    size: 6,
                    strokeWidth: 1,
                    hover: { sizeOffset: 2 },
                  },
                };
              },
            },
            {
              key: "heatmap",
              value: function () {
                return {
                  chart: { stacked: !1 },
                  fill: { opacity: 1 },
                  dataLabels: { style: { colors: ["#fff"] } },
                  stroke: { colors: ["#fff"] },
                  tooltip: {
                    followCursor: !0,
                    marker: { show: !1 },
                    x: { show: !1 },
                  },
                  legend: {
                    position: "top",
                    markers: { shape: "square", size: 10, offsetY: 2 },
                  },
                  grid: { padding: { right: 20 } },
                };
              },
            },
            {
              key: "treemap",
              value: function () {
                return {
                  chart: { zoom: { enabled: !1 } },
                  dataLabels: {
                    style: { fontSize: 14, fontWeight: 600, colors: ["#fff"] },
                  },
                  stroke: { show: !0, width: 2, colors: ["#fff"] },
                  legend: { show: !1 },
                  fill: { gradient: { stops: [0, 100] } },
                  tooltip: { followCursor: !0, x: { show: !1 } },
                  grid: { padding: { left: 0, right: 0 } },
                  xaxis: { crosshairs: { show: !1 }, tooltip: { enabled: !1 } },
                };
              },
            },
            {
              key: "pie",
              value: function () {
                return {
                  chart: { toolbar: { show: !1 } },
                  plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                  dataLabels: {
                    formatter: function (i) {
                      return i.toFixed(1) + "%";
                    },
                    style: { colors: ["#fff"] },
                    background: { enabled: !1 },
                    dropShadow: { enabled: !0 },
                  },
                  stroke: { colors: ["#fff"] },
                  fill: {
                    opacity: 1,
                    gradient: { shade: "light", stops: [0, 100] },
                  },
                  tooltip: { theme: "dark", fillSeriesColor: !0 },
                  legend: { position: "right" },
                };
              },
            },
            {
              key: "donut",
              value: function () {
                return {
                  chart: { toolbar: { show: !1 } },
                  dataLabels: {
                    formatter: function (i) {
                      return i.toFixed(1) + "%";
                    },
                    style: { colors: ["#fff"] },
                    background: { enabled: !1 },
                    dropShadow: { enabled: !0 },
                  },
                  stroke: { colors: ["#fff"] },
                  fill: {
                    opacity: 1,
                    gradient: {
                      shade: "light",
                      shadeIntensity: 0.35,
                      stops: [80, 100],
                      opacityFrom: 1,
                      opacityTo: 1,
                    },
                  },
                  tooltip: { theme: "dark", fillSeriesColor: !0 },
                  legend: { position: "right" },
                };
              },
            },
            {
              key: "polarArea",
              value: function () {
                return (
                  (this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount
                    ? this.opts.yaxis[0].tickAmount
                    : 6),
                  {
                    chart: { toolbar: { show: !1 } },
                    dataLabels: {
                      formatter: function (i) {
                        return i.toFixed(1) + "%";
                      },
                      enabled: !1,
                    },
                    stroke: { show: !0, width: 2 },
                    fill: { opacity: 0.7 },
                    tooltip: { theme: "dark", fillSeriesColor: !0 },
                    legend: { position: "right" },
                  }
                );
              },
            },
            {
              key: "radar",
              value: function () {
                return (
                  (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels
                    .offsetY
                    ? this.opts.yaxis[0].labels.offsetY
                    : 6),
                  {
                    dataLabels: { enabled: !1, style: { fontSize: "11px" } },
                    stroke: { width: 2 },
                    markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 },
                    fill: { opacity: 0.2 },
                    tooltip: { shared: !1, intersect: !0, followCursor: !0 },
                    grid: { show: !1 },
                    xaxis: {
                      labels: {
                        formatter: function (i) {
                          return i;
                        },
                        style: { colors: ["#a8a8a8"], fontSize: "11px" },
                      },
                      tooltip: { enabled: !1 },
                      crosshairs: { show: !1 },
                    },
                  }
                );
              },
            },
            {
              key: "radialBar",
              value: function () {
                return {
                  chart: {
                    animations: {
                      dynamicAnimation: { enabled: !0, speed: 800 },
                    },
                    toolbar: { show: !1 },
                  },
                  fill: {
                    gradient: {
                      shade: "dark",
                      shadeIntensity: 0.4,
                      inverseColors: !1,
                      type: "diagonal2",
                      opacityFrom: 1,
                      opacityTo: 1,
                      stops: [70, 98, 100],
                    },
                  },
                  legend: { show: !1, position: "right" },
                  tooltip: { enabled: !1, fillSeriesColor: !0 },
                };
              },
            },
            {
              key: "_getBoxTooltip",
              value: function (i, s, l, c, h) {
                var d = i.globals.seriesCandleO[s][l],
                  f = i.globals.seriesCandleH[s][l],
                  p = i.globals.seriesCandleM[s][l],
                  v = i.globals.seriesCandleL[s][l],
                  b = i.globals.seriesCandleC[s][l];
                return i.config.series[s].type && i.config.series[s].type !== h
                  ? `<div class="apexcharts-custom-tooltip">
          `
                      .concat(
                        i.config.series[s].name
                          ? i.config.series[s].name
                          : "series-" + (s + 1),
                        ": <strong>"
                      )
                      .concat(
                        i.globals.series[s][l],
                        `</strong>
        </div>`
                      )
                  : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                      i.config.chart.type,
                      '">'
                    ) +
                      "<div>".concat(c[0], ': <span class="value">') +
                      d +
                      "</span></div>" +
                      "<div>".concat(c[1], ': <span class="value">') +
                      f +
                      "</span></div>" +
                      (p
                        ? "<div>".concat(c[2], ': <span class="value">') +
                          p +
                          "</span></div>"
                        : "") +
                      "<div>".concat(c[3], ': <span class="value">') +
                      v +
                      "</span></div>" +
                      "<div>".concat(c[4], ': <span class="value">') +
                      b +
                      "</span></div></div>";
              },
            },
          ]),
          U
        );
      })(),
      Xe = (function () {
        function U(i) {
          o(this, U), (this.opts = i);
        }
        return (
          g(U, [
            {
              key: "init",
              value: function (i) {
                var s = i.responsiveOverride,
                  l = this.opts,
                  c = new Mt(),
                  h = new we(l);
                (this.chartType = l.chart.type),
                  (l = this.extendYAxis(l)),
                  (l = this.extendAnnotations(l));
                var d = c.init(),
                  f = {};
                if (l && a(l) === "object") {
                  var p,
                    v,
                    b,
                    _,
                    S,
                    T,
                    O,
                    D,
                    V,
                    G,
                    Q = {};
                  (Q =
                    [
                      "line",
                      "area",
                      "bar",
                      "candlestick",
                      "boxPlot",
                      "rangeBar",
                      "rangeArea",
                      "bubble",
                      "scatter",
                      "heatmap",
                      "treemap",
                      "pie",
                      "polarArea",
                      "donut",
                      "radar",
                      "radialBar",
                    ].indexOf(l.chart.type) !== -1
                      ? h[l.chart.type]()
                      : h.line()),
                    (p = l.plotOptions) !== null &&
                      p !== void 0 &&
                      (v = p.bar) !== null &&
                      v !== void 0 &&
                      v.isFunnel &&
                      (Q = h.funnel()),
                    l.chart.stacked &&
                      l.chart.type === "bar" &&
                      (Q = h.stackedBars()),
                    (b = l.chart.brush) !== null &&
                      b !== void 0 &&
                      b.enabled &&
                      (Q = h.brush(Q)),
                    l.chart.stacked &&
                      l.chart.stackType === "100%" &&
                      (l = h.stacked100(l)),
                    (_ = l.plotOptions) !== null &&
                      _ !== void 0 &&
                      (S = _.bar) !== null &&
                      S !== void 0 &&
                      S.isDumbbell &&
                      (l = h.dumbbell(l)),
                    ((T = l) === null ||
                    T === void 0 ||
                    (O = T.stroke) === null ||
                    O === void 0
                      ? void 0
                      : O.curve) === "monotoneCubic" &&
                      (l.stroke.curve = "smooth"),
                    this.checkForDarkTheme(window.Apex),
                    this.checkForDarkTheme(l),
                    (l.xaxis = l.xaxis || window.Apex.xaxis || {}),
                    s || (l.xaxis.convertedCatToNumeric = !1),
                    (((D = (l = this.checkForCatToNumericXAxis(
                      this.chartType,
                      Q,
                      l
                    )).chart.sparkline) !== null &&
                      D !== void 0 &&
                      D.enabled) ||
                      ((V = window.Apex.chart) !== null &&
                        V !== void 0 &&
                        (G = V.sparkline) !== null &&
                        G !== void 0 &&
                        G.enabled)) &&
                      (Q = h.sparkline(Q)),
                    (f = F.extend(d, Q));
                }
                var m = F.extend(f, window.Apex);
                return (
                  (d = F.extend(m, l)), (d = this.handleUserInputErrors(d))
                );
              },
            },
            {
              key: "checkForCatToNumericXAxis",
              value: function (i, s, l) {
                var c,
                  h,
                  d = new we(l),
                  f =
                    (i === "bar" || i === "boxPlot") &&
                    ((c = l.plotOptions) === null ||
                    c === void 0 ||
                    (h = c.bar) === null ||
                    h === void 0
                      ? void 0
                      : h.horizontal),
                  p =
                    i === "pie" ||
                    i === "polarArea" ||
                    i === "donut" ||
                    i === "radar" ||
                    i === "radialBar" ||
                    i === "heatmap",
                  v = l.xaxis.type !== "datetime" && l.xaxis.type !== "numeric",
                  b = l.xaxis.tickPlacement
                    ? l.xaxis.tickPlacement
                    : s.xaxis && s.xaxis.tickPlacement;
                return (
                  f ||
                    p ||
                    !v ||
                    b === "between" ||
                    (l = d.convertCatToNumeric(l)),
                  l
                );
              },
            },
            {
              key: "extendYAxis",
              value: function (i, s) {
                var l = new Mt();
                (i.yaxis === void 0 ||
                  !i.yaxis ||
                  (Array.isArray(i.yaxis) && i.yaxis.length === 0)) &&
                  (i.yaxis = {}),
                  i.yaxis.constructor !== Array &&
                    window.Apex.yaxis &&
                    window.Apex.yaxis.constructor !== Array &&
                    (i.yaxis = F.extend(i.yaxis, window.Apex.yaxis)),
                  i.yaxis.constructor !== Array
                    ? (i.yaxis = [F.extend(l.yAxis, i.yaxis)])
                    : (i.yaxis = F.extendArray(i.yaxis, l.yAxis));
                var c = !1;
                i.yaxis.forEach(function (d) {
                  d.logarithmic && (c = !0);
                });
                var h = i.series;
                return (
                  s && !h && (h = s.config.series),
                  c &&
                    h.length !== i.yaxis.length &&
                    h.length &&
                    (i.yaxis = h.map(function (d, f) {
                      if (
                        (d.name || (h[f].name = "series-".concat(f + 1)),
                        i.yaxis[f])
                      )
                        return (i.yaxis[f].seriesName = h[f].name), i.yaxis[f];
                      var p = F.extend(l.yAxis, i.yaxis[0]);
                      return (p.show = !1), p;
                    })),
                  c &&
                    h.length > 1 &&
                    h.length !== i.yaxis.length &&
                    console.warn(
                      "A multi-series logarithmic chart should have equal number of series and y-axes"
                    ),
                  i
                );
              },
            },
            {
              key: "extendAnnotations",
              value: function (i) {
                return (
                  i.annotations === void 0 &&
                    ((i.annotations = {}),
                    (i.annotations.yaxis = []),
                    (i.annotations.xaxis = []),
                    (i.annotations.points = [])),
                  (i = this.extendYAxisAnnotations(i)),
                  (i = this.extendXAxisAnnotations(i)),
                  (i = this.extendPointAnnotations(i))
                );
              },
            },
            {
              key: "extendYAxisAnnotations",
              value: function (i) {
                var s = new Mt();
                return (
                  (i.annotations.yaxis = F.extendArray(
                    i.annotations.yaxis !== void 0 ? i.annotations.yaxis : [],
                    s.yAxisAnnotation
                  )),
                  i
                );
              },
            },
            {
              key: "extendXAxisAnnotations",
              value: function (i) {
                var s = new Mt();
                return (
                  (i.annotations.xaxis = F.extendArray(
                    i.annotations.xaxis !== void 0 ? i.annotations.xaxis : [],
                    s.xAxisAnnotation
                  )),
                  i
                );
              },
            },
            {
              key: "extendPointAnnotations",
              value: function (i) {
                var s = new Mt();
                return (
                  (i.annotations.points = F.extendArray(
                    i.annotations.points !== void 0 ? i.annotations.points : [],
                    s.pointAnnotation
                  )),
                  i
                );
              },
            },
            {
              key: "checkForDarkTheme",
              value: function (i) {
                i.theme &&
                  i.theme.mode === "dark" &&
                  (i.tooltip || (i.tooltip = {}),
                  i.tooltip.theme !== "light" && (i.tooltip.theme = "dark"),
                  i.chart.foreColor || (i.chart.foreColor = "#f6f7f8"),
                  i.chart.background || (i.chart.background = "#424242"),
                  i.theme.palette || (i.theme.palette = "palette4"));
              },
            },
            {
              key: "handleUserInputErrors",
              value: function (i) {
                var s = i;
                if (s.tooltip.shared && s.tooltip.intersect)
                  throw new Error(
                    "tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false."
                  );
                if (s.chart.type === "bar" && s.plotOptions.bar.horizontal) {
                  if (s.yaxis.length > 1)
                    throw new Error(
                      "Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false"
                    );
                  s.yaxis[0].reversed && (s.yaxis[0].opposite = !0),
                    (s.xaxis.tooltip.enabled = !1),
                    (s.yaxis[0].tooltip.enabled = !1),
                    (s.chart.zoom.enabled = !1);
                }
                return (
                  (s.chart.type !== "bar" && s.chart.type !== "rangeBar") ||
                    (s.tooltip.shared &&
                      s.xaxis.crosshairs.width === "barWidth" &&
                      s.series.length > 1 &&
                      (s.xaxis.crosshairs.width = "tickWidth")),
                  (s.chart.type !== "candlestick" &&
                    s.chart.type !== "boxPlot") ||
                    (s.yaxis[0].reversed &&
                      (console.warn(
                        "Reversed y-axis in ".concat(
                          s.chart.type,
                          " chart is not supported."
                        )
                      ),
                      (s.yaxis[0].reversed = !1))),
                  s
                );
              },
            },
          ]),
          U
        );
      })(),
      Oe = (function () {
        function U() {
          o(this, U);
        }
        return (
          g(U, [
            {
              key: "initGlobalVars",
              value: function (i) {
                (i.series = []),
                  (i.seriesCandleO = []),
                  (i.seriesCandleH = []),
                  (i.seriesCandleM = []),
                  (i.seriesCandleL = []),
                  (i.seriesCandleC = []),
                  (i.seriesRangeStart = []),
                  (i.seriesRangeEnd = []),
                  (i.seriesRange = []),
                  (i.seriesPercent = []),
                  (i.seriesGoals = []),
                  (i.seriesX = []),
                  (i.seriesZ = []),
                  (i.seriesNames = []),
                  (i.seriesTotals = []),
                  (i.seriesLog = []),
                  (i.seriesColors = []),
                  (i.stackedSeriesTotals = []),
                  (i.seriesXvalues = []),
                  (i.seriesYvalues = []),
                  (i.labels = []),
                  (i.hasXaxisGroups = !1),
                  (i.groups = []),
                  (i.hasSeriesGroups = !1),
                  (i.seriesGroups = []),
                  (i.categoryLabels = []),
                  (i.timescaleLabels = []),
                  (i.noLabelsProvided = !1),
                  (i.resizeTimer = null),
                  (i.selectionResizeTimer = null),
                  (i.delayedElements = []),
                  (i.pointsArray = []),
                  (i.dataLabelsRects = []),
                  (i.isXNumeric = !1),
                  (i.skipLastTimelinelabel = !1),
                  (i.skipFirstTimelinelabel = !1),
                  (i.isDataXYZ = !1),
                  (i.isMultiLineX = !1),
                  (i.isMultipleYAxis = !1),
                  (i.maxY = -Number.MAX_VALUE),
                  (i.minY = Number.MIN_VALUE),
                  (i.minYArr = []),
                  (i.maxYArr = []),
                  (i.maxX = -Number.MAX_VALUE),
                  (i.minX = Number.MAX_VALUE),
                  (i.initialMaxX = -Number.MAX_VALUE),
                  (i.initialMinX = Number.MAX_VALUE),
                  (i.maxDate = 0),
                  (i.minDate = Number.MAX_VALUE),
                  (i.minZ = Number.MAX_VALUE),
                  (i.maxZ = -Number.MAX_VALUE),
                  (i.minXDiff = Number.MAX_VALUE),
                  (i.yAxisScale = []),
                  (i.xAxisScale = null),
                  (i.xAxisTicksPositions = []),
                  (i.yLabelsCoords = []),
                  (i.yTitleCoords = []),
                  (i.barPadForNumericAxis = 0),
                  (i.padHorizontal = 0),
                  (i.xRange = 0),
                  (i.yRange = []),
                  (i.zRange = 0),
                  (i.dataPoints = 0),
                  (i.xTickAmount = 0);
              },
            },
            {
              key: "globalVars",
              value: function (i) {
                return {
                  chartID: null,
                  cuid: null,
                  events: {
                    beforeMount: [],
                    mounted: [],
                    updated: [],
                    clicked: [],
                    selection: [],
                    dataPointSelection: [],
                    zoomed: [],
                    scrolled: [],
                  },
                  colors: [],
                  clientX: null,
                  clientY: null,
                  fill: { colors: [] },
                  stroke: { colors: [] },
                  dataLabels: { style: { colors: [] } },
                  radarPolygons: { fill: { colors: [] } },
                  markers: { colors: [], size: i.markers.size, largestSize: 0 },
                  animationEnded: !1,
                  isTouchDevice:
                    "ontouchstart" in window || navigator.msMaxTouchPoints,
                  isDirty: !1,
                  isExecCalled: !1,
                  initialConfig: null,
                  initialSeries: [],
                  lastXAxis: [],
                  lastYAxis: [],
                  columnSeries: null,
                  labels: [],
                  timescaleLabels: [],
                  noLabelsProvided: !1,
                  allSeriesCollapsed: !1,
                  collapsedSeries: [],
                  collapsedSeriesIndices: [],
                  ancillaryCollapsedSeries: [],
                  ancillaryCollapsedSeriesIndices: [],
                  risingSeries: [],
                  dataFormatXNumeric: !1,
                  capturedSeriesIndex: -1,
                  capturedDataPointIndex: -1,
                  selectedDataPoints: [],
                  goldenPadding: 35,
                  invalidLogScale: !1,
                  ignoreYAxisIndexes: [],
                  yAxisSameScaleIndices: [],
                  maxValsInArrayIndex: 0,
                  radialSize: 0,
                  selection: void 0,
                  zoomEnabled:
                    i.chart.toolbar.autoSelected === "zoom" &&
                    i.chart.toolbar.tools.zoom &&
                    i.chart.zoom.enabled,
                  panEnabled:
                    i.chart.toolbar.autoSelected === "pan" &&
                    i.chart.toolbar.tools.pan,
                  selectionEnabled:
                    i.chart.toolbar.autoSelected === "selection" &&
                    i.chart.toolbar.tools.selection,
                  yaxis: null,
                  mousedown: !1,
                  lastClientPosition: {},
                  visibleXRange: void 0,
                  yValueDecimal: 0,
                  total: 0,
                  SVGNS: "http://www.w3.org/2000/svg",
                  svgWidth: 0,
                  svgHeight: 0,
                  noData: !1,
                  locale: {},
                  dom: {},
                  memory: { methodsToExec: [] },
                  shouldAnimate: !0,
                  skipLastTimelinelabel: !1,
                  skipFirstTimelinelabel: !1,
                  delayedElements: [],
                  axisCharts: !0,
                  isDataXYZ: !1,
                  resized: !1,
                  resizeTimer: null,
                  comboCharts: !1,
                  dataChanged: !1,
                  previousPaths: [],
                  allSeriesHasEqualX: !0,
                  pointsArray: [],
                  dataLabelsRects: [],
                  lastDrawnDataLabelsIndexes: [],
                  hasNullValues: !1,
                  easing: null,
                  zoomed: !1,
                  gridWidth: 0,
                  gridHeight: 0,
                  rotateXLabels: !1,
                  defaultLabels: !1,
                  xLabelFormatter: void 0,
                  yLabelFormatters: [],
                  xaxisTooltipFormatter: void 0,
                  ttKeyFormatter: void 0,
                  ttVal: void 0,
                  ttZFormatter: void 0,
                  LINE_HEIGHT_RATIO: 1.618,
                  xAxisLabelsHeight: 0,
                  xAxisGroupLabelsHeight: 0,
                  xAxisLabelsWidth: 0,
                  yAxisLabelsWidth: 0,
                  scaleX: 1,
                  scaleY: 1,
                  translateX: 0,
                  translateY: 0,
                  translateYAxisX: [],
                  yAxisWidths: [],
                  translateXAxisY: 0,
                  translateXAxisX: 0,
                  tooltip: null,
                };
              },
            },
            {
              key: "init",
              value: function (i) {
                var s = this.globalVars(i);
                return (
                  this.initGlobalVars(s),
                  (s.initialConfig = F.extend({}, i)),
                  (s.initialSeries = F.clone(i.series)),
                  (s.lastXAxis = F.clone(s.initialConfig.xaxis)),
                  (s.lastYAxis = F.clone(s.initialConfig.yaxis)),
                  s
                );
              },
            },
          ]),
          U
        );
      })(),
      Ye = (function () {
        function U(i) {
          o(this, U), (this.opts = i);
        }
        return (
          g(U, [
            {
              key: "init",
              value: function () {
                var i = new Xe(this.opts).init({ responsiveOverride: !1 });
                return { config: i, globals: new Oe().init(i) };
              },
            },
          ]),
          U
        );
      })(),
      Re = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.opts = null),
            (this.seriesIndex = 0);
        }
        return (
          g(U, [
            {
              key: "clippedImgArea",
              value: function (i) {
                var s = this.w,
                  l = s.config,
                  c = parseInt(s.globals.gridWidth, 10),
                  h = parseInt(s.globals.gridHeight, 10),
                  d = c > h ? c : h,
                  f = i.image,
                  p = 0,
                  v = 0;
                i.width === void 0 && i.height === void 0
                  ? l.fill.image.width !== void 0 &&
                    l.fill.image.height !== void 0
                    ? ((p = l.fill.image.width + 1), (v = l.fill.image.height))
                    : ((p = d + 1), (v = d))
                  : ((p = i.width), (v = i.height));
                var b = document.createElementNS(s.globals.SVGNS, "pattern");
                C.setAttrs(b, {
                  id: i.patternID,
                  patternUnits: i.patternUnits
                    ? i.patternUnits
                    : "userSpaceOnUse",
                  width: p + "px",
                  height: v + "px",
                });
                var _ = document.createElementNS(s.globals.SVGNS, "image");
                b.appendChild(_),
                  _.setAttributeNS(window.SVG.xlink, "href", f),
                  C.setAttrs(_, {
                    x: 0,
                    y: 0,
                    preserveAspectRatio: "none",
                    width: p + "px",
                    height: v + "px",
                  }),
                  (_.style.opacity = i.opacity),
                  s.globals.dom.elDefs.node.appendChild(b);
              },
            },
            {
              key: "getSeriesIndex",
              value: function (i) {
                var s = this.w,
                  l = s.config.chart.type;
                return (
                  ((l === "bar" || l === "rangeBar") &&
                    s.config.plotOptions.bar.distributed) ||
                  l === "heatmap" ||
                  l === "treemap"
                    ? (this.seriesIndex = i.seriesNumber)
                    : (this.seriesIndex =
                        i.seriesNumber % s.globals.series.length),
                  this.seriesIndex
                );
              },
            },
            {
              key: "fillPath",
              value: function (i) {
                var s = this.w;
                this.opts = i;
                var l,
                  c,
                  h,
                  d = this.w.config;
                this.seriesIndex = this.getSeriesIndex(i);
                var f = this.getFillColors()[this.seriesIndex];
                s.globals.seriesColors[this.seriesIndex] !== void 0 &&
                  (f = s.globals.seriesColors[this.seriesIndex]),
                  typeof f == "function" &&
                    (f = f({
                      seriesIndex: this.seriesIndex,
                      dataPointIndex: i.dataPointIndex,
                      value: i.value,
                      w: s,
                    }));
                var p = i.fillType
                    ? i.fillType
                    : this.getFillType(this.seriesIndex),
                  v = Array.isArray(d.fill.opacity)
                    ? d.fill.opacity[this.seriesIndex]
                    : d.fill.opacity;
                i.color && (f = i.color),
                  f ||
                    ((f = "#fff"),
                    console.warn("undefined color - ApexCharts"));
                var b = f;
                if (
                  (f.indexOf("rgb") === -1
                    ? f.length < 9 && (b = F.hexToRgba(f, v))
                    : f.indexOf("rgba") > -1 && (v = F.getOpacityFromRGBA(f)),
                  i.opacity && (v = i.opacity),
                  p === "pattern" &&
                    (c = this.handlePatternFill({
                      fillConfig: i.fillConfig,
                      patternFill: c,
                      fillColor: f,
                      fillOpacity: v,
                      defaultColor: b,
                    })),
                  p === "gradient" &&
                    (h = this.handleGradientFill({
                      fillConfig: i.fillConfig,
                      fillColor: f,
                      fillOpacity: v,
                      i: this.seriesIndex,
                    })),
                  p === "image")
                ) {
                  var _ = d.fill.image.src,
                    S = i.patternID ? i.patternID : "";
                  this.clippedImgArea({
                    opacity: v,
                    image: Array.isArray(_)
                      ? i.seriesNumber < _.length
                        ? _[i.seriesNumber]
                        : _[0]
                      : _,
                    width: i.width ? i.width : void 0,
                    height: i.height ? i.height : void 0,
                    patternUnits: i.patternUnits,
                    patternID: "pattern"
                      .concat(s.globals.cuid)
                      .concat(i.seriesNumber + 1)
                      .concat(S),
                  }),
                    (l = "url(#pattern"
                      .concat(s.globals.cuid)
                      .concat(i.seriesNumber + 1)
                      .concat(S, ")"));
                } else l = p === "gradient" ? h : p === "pattern" ? c : b;
                return i.solid && (l = b), l;
              },
            },
            {
              key: "getFillType",
              value: function (i) {
                var s = this.w;
                return Array.isArray(s.config.fill.type)
                  ? s.config.fill.type[i]
                  : s.config.fill.type;
              },
            },
            {
              key: "getFillColors",
              value: function () {
                var i = this.w,
                  s = i.config,
                  l = this.opts,
                  c = [];
                return (
                  i.globals.comboCharts
                    ? i.config.series[this.seriesIndex].type === "line"
                      ? Array.isArray(i.globals.stroke.colors)
                        ? (c = i.globals.stroke.colors)
                        : c.push(i.globals.stroke.colors)
                      : Array.isArray(i.globals.fill.colors)
                      ? (c = i.globals.fill.colors)
                      : c.push(i.globals.fill.colors)
                    : s.chart.type === "line"
                    ? Array.isArray(i.globals.stroke.colors)
                      ? (c = i.globals.stroke.colors)
                      : c.push(i.globals.stroke.colors)
                    : Array.isArray(i.globals.fill.colors)
                    ? (c = i.globals.fill.colors)
                    : c.push(i.globals.fill.colors),
                  l.fillColors !== void 0 &&
                    ((c = []),
                    Array.isArray(l.fillColors)
                      ? (c = l.fillColors.slice())
                      : c.push(l.fillColors)),
                  c
                );
              },
            },
            {
              key: "handlePatternFill",
              value: function (i) {
                var s = i.fillConfig,
                  l = i.patternFill,
                  c = i.fillColor,
                  h = i.fillOpacity,
                  d = i.defaultColor,
                  f = this.w.config.fill;
                s && (f = s);
                var p = this.opts,
                  v = new C(this.ctx),
                  b = Array.isArray(f.pattern.strokeWidth)
                    ? f.pattern.strokeWidth[this.seriesIndex]
                    : f.pattern.strokeWidth,
                  _ = c;
                return (
                  Array.isArray(f.pattern.style)
                    ? (l =
                        f.pattern.style[p.seriesNumber] !== void 0
                          ? v.drawPattern(
                              f.pattern.style[p.seriesNumber],
                              f.pattern.width,
                              f.pattern.height,
                              _,
                              b,
                              h
                            )
                          : d)
                    : (l = v.drawPattern(
                        f.pattern.style,
                        f.pattern.width,
                        f.pattern.height,
                        _,
                        b,
                        h
                      )),
                  l
                );
              },
            },
            {
              key: "handleGradientFill",
              value: function (i) {
                var s = i.fillColor,
                  l = i.fillOpacity,
                  c = i.fillConfig,
                  h = i.i,
                  d = this.w.config.fill;
                c && (d = r(r({}, d), c));
                var f,
                  p = this.opts,
                  v = new C(this.ctx),
                  b = new F(),
                  _ = d.gradient.type,
                  S = s,
                  T =
                    d.gradient.opacityFrom === void 0
                      ? l
                      : Array.isArray(d.gradient.opacityFrom)
                      ? d.gradient.opacityFrom[h]
                      : d.gradient.opacityFrom;
                S.indexOf("rgba") > -1 && (T = F.getOpacityFromRGBA(S));
                var O =
                  d.gradient.opacityTo === void 0
                    ? l
                    : Array.isArray(d.gradient.opacityTo)
                    ? d.gradient.opacityTo[h]
                    : d.gradient.opacityTo;
                if (
                  d.gradient.gradientToColors === void 0 ||
                  d.gradient.gradientToColors.length === 0
                )
                  f =
                    d.gradient.shade === "dark"
                      ? b.shadeColor(
                          -1 * parseFloat(d.gradient.shadeIntensity),
                          s.indexOf("rgb") > -1 ? F.rgb2hex(s) : s
                        )
                      : b.shadeColor(
                          parseFloat(d.gradient.shadeIntensity),
                          s.indexOf("rgb") > -1 ? F.rgb2hex(s) : s
                        );
                else if (d.gradient.gradientToColors[p.seriesNumber]) {
                  var D = d.gradient.gradientToColors[p.seriesNumber];
                  (f = D),
                    D.indexOf("rgba") > -1 && (O = F.getOpacityFromRGBA(D));
                } else f = s;
                if (
                  (d.gradient.gradientFrom && (S = d.gradient.gradientFrom),
                  d.gradient.gradientTo && (f = d.gradient.gradientTo),
                  d.gradient.inverseColors)
                ) {
                  var V = S;
                  (S = f), (f = V);
                }
                return (
                  S.indexOf("rgb") > -1 && (S = F.rgb2hex(S)),
                  f.indexOf("rgb") > -1 && (f = F.rgb2hex(f)),
                  v.drawGradient(
                    _,
                    S,
                    f,
                    T,
                    O,
                    p.size,
                    d.gradient.stops,
                    d.gradient.colorStops,
                    h
                  )
                );
              },
            },
          ]),
          U
        );
      })(),
      $e = (function () {
        function U(i, s) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "setGlobalMarkerSize",
              value: function () {
                var i = this.w;
                if (
                  ((i.globals.markers.size = Array.isArray(
                    i.config.markers.size
                  )
                    ? i.config.markers.size
                    : [i.config.markers.size]),
                  i.globals.markers.size.length > 0)
                ) {
                  if (
                    i.globals.markers.size.length <
                    i.globals.series.length + 1
                  )
                    for (var s = 0; s <= i.globals.series.length; s++)
                      i.globals.markers.size[s] === void 0 &&
                        i.globals.markers.size.push(i.globals.markers.size[0]);
                } else
                  i.globals.markers.size = i.config.series.map(function (l) {
                    return i.config.markers.size;
                  });
              },
            },
            {
              key: "plotChartMarkers",
              value: function (i, s, l, c) {
                var h,
                  d =
                    arguments.length > 4 &&
                    arguments[4] !== void 0 &&
                    arguments[4],
                  f = this.w,
                  p = s,
                  v = i,
                  b = null,
                  _ = new C(this.ctx),
                  S =
                    f.config.markers.discrete &&
                    f.config.markers.discrete.length;
                if (
                  ((f.globals.markers.size[s] > 0 || d || S) &&
                    (b = _.group({
                      class: d || S ? "" : "apexcharts-series-markers",
                    })).attr(
                      "clip-path",
                      "url(#gridRectMarkerMask".concat(f.globals.cuid, ")")
                    ),
                  Array.isArray(v.x))
                )
                  for (var T = 0; T < v.x.length; T++) {
                    var O = l;
                    l === 1 && T === 0 && (O = 0),
                      l === 1 && T === 1 && (O = 1);
                    var D = "apexcharts-marker";
                    if (
                      ((f.config.chart.type !== "line" &&
                        f.config.chart.type !== "area") ||
                        f.globals.comboCharts ||
                        f.config.tooltip.intersect ||
                        (D += " no-pointer-events"),
                      (Array.isArray(f.config.markers.size)
                        ? f.globals.markers.size[s] > 0
                        : f.config.markers.size > 0) ||
                        d ||
                        S)
                    ) {
                      F.isNumber(v.y[T])
                        ? (D += " w".concat(F.randomId()))
                        : (D = "apexcharts-nullpoint");
                      var V = this.getMarkerConfig({
                        cssClass: D,
                        seriesIndex: s,
                        dataPointIndex: O,
                      });
                      f.config.series[p].data[O] &&
                        (f.config.series[p].data[O].fillColor &&
                          (V.pointFillColor =
                            f.config.series[p].data[O].fillColor),
                        f.config.series[p].data[O].strokeColor &&
                          (V.pointStrokeColor =
                            f.config.series[p].data[O].strokeColor)),
                        c && (V.pSize = c),
                        (v.x[T] < 0 ||
                          v.x[T] > f.globals.gridWidth ||
                          v.y[T] < -f.globals.markers.largestSize ||
                          v.y[T] >
                            f.globals.gridHeight +
                              f.globals.markers.largestSize) &&
                          (V.pSize = 0),
                        (h = _.drawMarker(v.x[T], v.y[T], V)).attr("rel", O),
                        h.attr("j", O),
                        h.attr("index", s),
                        h.node.setAttribute("default-marker-size", V.pSize),
                        new ye(this.ctx).setSelectionFilter(h, s, O),
                        this.addEvents(h),
                        b && b.add(h);
                    } else
                      f.globals.pointsArray[s] === void 0 &&
                        (f.globals.pointsArray[s] = []),
                        f.globals.pointsArray[s].push([v.x[T], v.y[T]]);
                  }
                return b;
              },
            },
            {
              key: "getMarkerConfig",
              value: function (i) {
                var s = i.cssClass,
                  l = i.seriesIndex,
                  c = i.dataPointIndex,
                  h = c === void 0 ? null : c,
                  d = i.finishRadius,
                  f = d === void 0 ? null : d,
                  p = this.w,
                  v = this.getMarkerStyle(l),
                  b = p.globals.markers.size[l],
                  _ = p.config.markers;
                return (
                  h !== null &&
                    _.discrete.length &&
                    _.discrete.map(function (S) {
                      S.seriesIndex === l &&
                        S.dataPointIndex === h &&
                        ((v.pointStrokeColor = S.strokeColor),
                        (v.pointFillColor = S.fillColor),
                        (b = S.size),
                        (v.pointShape = S.shape));
                    }),
                  {
                    pSize: f === null ? b : f,
                    pRadius: _.radius,
                    width: Array.isArray(_.width) ? _.width[l] : _.width,
                    height: Array.isArray(_.height) ? _.height[l] : _.height,
                    pointStrokeWidth: Array.isArray(_.strokeWidth)
                      ? _.strokeWidth[l]
                      : _.strokeWidth,
                    pointStrokeColor: v.pointStrokeColor,
                    pointFillColor: v.pointFillColor,
                    shape:
                      v.pointShape ||
                      (Array.isArray(_.shape) ? _.shape[l] : _.shape),
                    class: s,
                    pointStrokeOpacity: Array.isArray(_.strokeOpacity)
                      ? _.strokeOpacity[l]
                      : _.strokeOpacity,
                    pointStrokeDashArray: Array.isArray(_.strokeDashArray)
                      ? _.strokeDashArray[l]
                      : _.strokeDashArray,
                    pointFillOpacity: Array.isArray(_.fillOpacity)
                      ? _.fillOpacity[l]
                      : _.fillOpacity,
                    seriesIndex: l,
                  }
                );
              },
            },
            {
              key: "addEvents",
              value: function (i) {
                var s = this.w,
                  l = new C(this.ctx);
                i.node.addEventListener(
                  "mouseenter",
                  l.pathMouseEnter.bind(this.ctx, i)
                ),
                  i.node.addEventListener(
                    "mouseleave",
                    l.pathMouseLeave.bind(this.ctx, i)
                  ),
                  i.node.addEventListener(
                    "mousedown",
                    l.pathMouseDown.bind(this.ctx, i)
                  ),
                  i.node.addEventListener("click", s.config.markers.onClick),
                  i.node.addEventListener(
                    "dblclick",
                    s.config.markers.onDblClick
                  ),
                  i.node.addEventListener(
                    "touchstart",
                    l.pathMouseDown.bind(this.ctx, i),
                    { passive: !0 }
                  );
              },
            },
            {
              key: "getMarkerStyle",
              value: function (i) {
                var s = this.w,
                  l = s.globals.markers.colors,
                  c =
                    s.config.markers.strokeColor ||
                    s.config.markers.strokeColors;
                return {
                  pointStrokeColor: Array.isArray(c) ? c[i] : c,
                  pointFillColor: Array.isArray(l) ? l[i] : l,
                };
              },
            },
          ]),
          U
        );
      })(),
      Fe = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.initialAnim = this.w.config.chart.animations.enabled),
            (this.dynamicAnim =
              this.initialAnim &&
              this.w.config.chart.animations.dynamicAnimation.enabled);
        }
        return (
          g(U, [
            {
              key: "draw",
              value: function (i, s, l) {
                var c = this.w,
                  h = new C(this.ctx),
                  d = l.realIndex,
                  f = l.pointsPos,
                  p = l.zRatio,
                  v = l.elParent,
                  b = h.group({
                    class:
                      "apexcharts-series-markers apexcharts-series-".concat(
                        c.config.chart.type
                      ),
                  });
                if (
                  (b.attr(
                    "clip-path",
                    "url(#gridRectMarkerMask".concat(c.globals.cuid, ")")
                  ),
                  Array.isArray(f.x))
                )
                  for (var _ = 0; _ < f.x.length; _++) {
                    var S = s + 1,
                      T = !0;
                    s === 0 && _ === 0 && (S = 0),
                      s === 0 && _ === 1 && (S = 1);
                    var O = 0,
                      D = c.globals.markers.size[d];
                    if (p !== 1 / 0) {
                      var V = c.config.plotOptions.bubble;
                      (D = c.globals.seriesZ[d][S]),
                        V.zScaling && (D /= p),
                        V.minBubbleRadius &&
                          D < V.minBubbleRadius &&
                          (D = V.minBubbleRadius),
                        V.maxBubbleRadius &&
                          D > V.maxBubbleRadius &&
                          (D = V.maxBubbleRadius);
                    }
                    c.config.chart.animations.enabled || (O = D);
                    var G = f.x[_],
                      Q = f.y[_];
                    if (
                      ((O = O || 0),
                      (Q !== null && c.globals.series[d][S] !== void 0) ||
                        (T = !1),
                      T)
                    ) {
                      var m = this.drawPoint(G, Q, O, D, d, S, s);
                      b.add(m);
                    }
                    v.add(b);
                  }
              },
            },
            {
              key: "drawPoint",
              value: function (i, s, l, c, h, d, f) {
                var p = this.w,
                  v = h,
                  b = new ce(this.ctx),
                  _ = new ye(this.ctx),
                  S = new Re(this.ctx),
                  T = new $e(this.ctx),
                  O = new C(this.ctx),
                  D = T.getMarkerConfig({
                    cssClass: "apexcharts-marker",
                    seriesIndex: v,
                    dataPointIndex: d,
                    finishRadius:
                      p.config.chart.type === "bubble" ||
                      (p.globals.comboCharts &&
                        p.config.series[h] &&
                        p.config.series[h].type === "bubble")
                        ? c
                        : null,
                  });
                c = D.pSize;
                var V,
                  G = S.fillPath({
                    seriesNumber: h,
                    dataPointIndex: d,
                    color: D.pointFillColor,
                    patternUnits: "objectBoundingBox",
                    value: p.globals.series[h][f],
                  });
                if (
                  (D.shape === "circle"
                    ? (V = O.drawCircle(l))
                    : (D.shape !== "square" && D.shape !== "rect") ||
                      (V = O.drawRect(
                        0,
                        0,
                        D.width - D.pointStrokeWidth / 2,
                        D.height - D.pointStrokeWidth / 2,
                        D.pRadius
                      )),
                  p.config.series[v].data[d] &&
                    p.config.series[v].data[d].fillColor &&
                    (G = p.config.series[v].data[d].fillColor),
                  V.attr({
                    x: i - D.width / 2 - D.pointStrokeWidth / 2,
                    y: s - D.height / 2 - D.pointStrokeWidth / 2,
                    cx: i,
                    cy: s,
                    fill: G,
                    "fill-opacity": D.pointFillOpacity,
                    stroke: D.pointStrokeColor,
                    r: c,
                    "stroke-width": D.pointStrokeWidth,
                    "stroke-dasharray": D.pointStrokeDashArray,
                    "stroke-opacity": D.pointStrokeOpacity,
                  }),
                  p.config.chart.dropShadow.enabled)
                ) {
                  var Q = p.config.chart.dropShadow;
                  _.dropShadow(V, Q, h);
                }
                if (
                  !this.initialAnim ||
                  p.globals.dataChanged ||
                  p.globals.resized
                )
                  p.globals.animationEnded = !0;
                else {
                  var m = p.config.chart.animations.speed;
                  b.animateMarker(
                    V,
                    0,
                    D.shape === "circle"
                      ? c
                      : { width: D.width, height: D.height },
                    m,
                    p.globals.easing,
                    function () {
                      window.setTimeout(function () {
                        b.animationCompleted(V);
                      }, 100);
                    }
                  );
                }
                if (p.globals.dataChanged && D.shape === "circle")
                  if (this.dynamicAnim) {
                    var k,
                      N,
                      X,
                      K,
                      ee = p.config.chart.animations.dynamicAnimation.speed;
                    (K =
                      p.globals.previousPaths[h] &&
                      p.globals.previousPaths[h][f]) != null &&
                      ((k = K.x), (N = K.y), (X = K.r !== void 0 ? K.r : c));
                    for (
                      var fe = 0;
                      fe < p.globals.collapsedSeries.length;
                      fe++
                    )
                      p.globals.collapsedSeries[fe].index === h &&
                        ((ee = 1), (c = 0));
                    i === 0 && s === 0 && (c = 0),
                      b.animateCircle(
                        V,
                        { cx: k, cy: N, r: X },
                        { cx: i, cy: s, r: c },
                        ee,
                        p.globals.easing
                      );
                  } else V.attr({ r: c });
                return (
                  V.attr({ rel: d, j: d, index: h, "default-marker-size": c }),
                  _.setSelectionFilter(V, h, d),
                  T.addEvents(V),
                  V.node.classList.add("apexcharts-marker"),
                  V
                );
              },
            },
            {
              key: "centerTextInBubble",
              value: function (i) {
                var s = this.w;
                return {
                  y: (i +=
                    parseInt(s.config.dataLabels.style.fontSize, 10) / 4),
                };
              },
            },
          ]),
          U
        );
      })(),
      ct = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "dataLabelsCorrection",
              value: function (i, s, l, c, h, d, f) {
                var p = this.w,
                  v = !1,
                  b = new C(this.ctx).getTextRects(l, f),
                  _ = b.width,
                  S = b.height;
                s < 0 && (s = 0),
                  s > p.globals.gridHeight + S &&
                    (s = p.globals.gridHeight + S / 2),
                  p.globals.dataLabelsRects[c] === void 0 &&
                    (p.globals.dataLabelsRects[c] = []),
                  p.globals.dataLabelsRects[c].push({
                    x: i,
                    y: s,
                    width: _,
                    height: S,
                  });
                var T = p.globals.dataLabelsRects[c].length - 2,
                  O =
                    p.globals.lastDrawnDataLabelsIndexes[c] !== void 0
                      ? p.globals.lastDrawnDataLabelsIndexes[c][
                          p.globals.lastDrawnDataLabelsIndexes[c].length - 1
                        ]
                      : 0;
                if (p.globals.dataLabelsRects[c][T] !== void 0) {
                  var D = p.globals.dataLabelsRects[c][O];
                  (i > D.x + D.width ||
                    s > D.y + D.height ||
                    s + S < D.y ||
                    i + _ < D.x) &&
                    (v = !0);
                }
                return (
                  (h === 0 || d) && (v = !0),
                  { x: i, y: s, textRects: b, drawnextLabel: v }
                );
              },
            },
            {
              key: "drawDataLabel",
              value: function (i) {
                var s = this,
                  l = i.type,
                  c = i.pos,
                  h = i.i,
                  d = i.j,
                  f = i.isRangeStart,
                  p = i.strokeWidth,
                  v = p === void 0 ? 2 : p,
                  b = this.w,
                  _ = new C(this.ctx),
                  S = b.config.dataLabels,
                  T = 0,
                  O = 0,
                  D = d,
                  V = null;
                if (!S.enabled || !Array.isArray(c.x)) return V;
                V = _.group({ class: "apexcharts-data-labels" });
                for (var G = 0; G < c.x.length; G++)
                  if (
                    ((T = c.x[G] + S.offsetX),
                    (O = c.y[G] + S.offsetY + v),
                    !isNaN(T))
                  ) {
                    d === 1 && G === 0 && (D = 0),
                      d === 1 && G === 1 && (D = 1);
                    var Q = b.globals.series[h][D];
                    l === "rangeArea" &&
                      (Q = f
                        ? b.globals.seriesRangeStart[h][D]
                        : b.globals.seriesRangeEnd[h][D]);
                    var m = "",
                      k = function (N) {
                        return b.config.dataLabels.formatter(N, {
                          ctx: s.ctx,
                          seriesIndex: h,
                          dataPointIndex: D,
                          w: b,
                        });
                      };
                    b.config.chart.type === "bubble"
                      ? ((m = k((Q = b.globals.seriesZ[h][D]))),
                        (O = c.y[G]),
                        (O = new Fe(this.ctx).centerTextInBubble(O, h, D).y))
                      : Q !== void 0 && (m = k(Q)),
                      this.plotDataLabelsText({
                        x: T,
                        y: O,
                        text: m,
                        i: h,
                        j: D,
                        parent: V,
                        offsetCorrection: !0,
                        dataLabelsConfig: b.config.dataLabels,
                      });
                  }
                return V;
              },
            },
            {
              key: "plotDataLabelsText",
              value: function (i) {
                var s = this.w,
                  l = new C(this.ctx),
                  c = i.x,
                  h = i.y,
                  d = i.i,
                  f = i.j,
                  p = i.text,
                  v = i.textAnchor,
                  b = i.fontSize,
                  _ = i.parent,
                  S = i.dataLabelsConfig,
                  T = i.color,
                  O = i.alwaysDrawDataLabel,
                  D = i.offsetCorrection;
                if (
                  !(
                    Array.isArray(s.config.dataLabels.enabledOnSeries) &&
                    s.config.dataLabels.enabledOnSeries.indexOf(d) < 0
                  )
                ) {
                  var V = { x: c, y: h, drawnextLabel: !0, textRects: null };
                  D &&
                    (V = this.dataLabelsCorrection(
                      c,
                      h,
                      p,
                      d,
                      f,
                      O,
                      parseInt(S.style.fontSize, 10)
                    )),
                    s.globals.zoomed || ((c = V.x), (h = V.y)),
                    V.textRects &&
                      (c < -20 - V.textRects.width ||
                        c > s.globals.gridWidth + V.textRects.width + 30) &&
                      (p = "");
                  var G = s.globals.dataLabels.style.colors[d];
                  (((s.config.chart.type === "bar" ||
                    s.config.chart.type === "rangeBar") &&
                    s.config.plotOptions.bar.distributed) ||
                    s.config.dataLabels.distributed) &&
                    (G = s.globals.dataLabels.style.colors[f]),
                    typeof G == "function" &&
                      (G = G({
                        series: s.globals.series,
                        seriesIndex: d,
                        dataPointIndex: f,
                        w: s,
                      })),
                    T && (G = T);
                  var Q = S.offsetX,
                    m = S.offsetY;
                  if (
                    ((s.config.chart.type !== "bar" &&
                      s.config.chart.type !== "rangeBar") ||
                      ((Q = 0), (m = 0)),
                    V.drawnextLabel)
                  ) {
                    var k = l.drawText({
                      width: 100,
                      height: parseInt(S.style.fontSize, 10),
                      x: c + Q,
                      y: h + m,
                      foreColor: G,
                      textAnchor: v || S.textAnchor,
                      text: p,
                      fontSize: b || S.style.fontSize,
                      fontFamily: S.style.fontFamily,
                      fontWeight: S.style.fontWeight || "normal",
                    });
                    if (
                      (k.attr({ class: "apexcharts-datalabel", cx: c, cy: h }),
                      S.dropShadow.enabled)
                    ) {
                      var N = S.dropShadow;
                      new ye(this.ctx).dropShadow(k, N);
                    }
                    _.add(k),
                      s.globals.lastDrawnDataLabelsIndexes[d] === void 0 &&
                        (s.globals.lastDrawnDataLabelsIndexes[d] = []),
                      s.globals.lastDrawnDataLabelsIndexes[d].push(f);
                  }
                }
              },
            },
            {
              key: "addBackgroundToDataLabel",
              value: function (i, s) {
                var l = this.w,
                  c = l.config.dataLabels.background,
                  h = c.padding,
                  d = c.padding / 2,
                  f = s.width,
                  p = s.height,
                  v = new C(this.ctx).drawRect(
                    s.x - h,
                    s.y - d / 2,
                    f + 2 * h,
                    p + d,
                    c.borderRadius,
                    l.config.chart.background === "transparent"
                      ? "#fff"
                      : l.config.chart.background,
                    c.opacity,
                    c.borderWidth,
                    c.borderColor
                  );
                return (
                  c.dropShadow.enabled &&
                    new ye(this.ctx).dropShadow(v, c.dropShadow),
                  v
                );
              },
            },
            {
              key: "dataLabelsBackground",
              value: function () {
                var i = this.w;
                if (i.config.chart.type !== "bubble")
                  for (
                    var s = i.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-datalabels text"
                      ),
                      l = 0;
                    l < s.length;
                    l++
                  ) {
                    var c = s[l],
                      h = c.getBBox(),
                      d = null;
                    if (
                      (h.width &&
                        h.height &&
                        (d = this.addBackgroundToDataLabel(c, h)),
                      d)
                    ) {
                      c.parentNode.insertBefore(d.node, c);
                      var f = c.getAttribute("fill");
                      i.config.chart.animations.enabled &&
                      !i.globals.resized &&
                      !i.globals.dataChanged
                        ? d.animate().attr({ fill: f })
                        : d.attr({ fill: f }),
                        c.setAttribute(
                          "fill",
                          i.config.dataLabels.background.foreColor
                        );
                    }
                  }
              },
            },
            {
              key: "bringForward",
              value: function () {
                for (
                  var i = this.w,
                    s = i.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-datalabels"
                    ),
                    l = i.globals.dom.baseEl.querySelector(
                      ".apexcharts-plot-series:last-child"
                    ),
                    c = 0;
                  c < s.length;
                  c++
                )
                  l && l.insertBefore(s[c], l.nextSibling);
              },
            },
          ]),
          U
        );
      })(),
      de = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.legendInactiveClass = "legend-mouseover-inactive");
        }
        return (
          g(U, [
            {
              key: "getAllSeriesEls",
              value: function () {
                return this.w.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-series"
                );
              },
            },
            {
              key: "getSeriesByName",
              value: function (i) {
                return this.w.globals.dom.baseEl.querySelector(
                  ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                    F.escapeString(i),
                    "']"
                  )
                );
              },
            },
            {
              key: "isSeriesHidden",
              value: function (i) {
                var s = this.getSeriesByName(i),
                  l = parseInt(s.getAttribute("data:realIndex"), 10);
                return {
                  isHidden: s.classList.contains("apexcharts-series-collapsed"),
                  realIndex: l,
                };
              },
            },
            {
              key: "addCollapsedClassToSeries",
              value: function (i, s) {
                var l = this.w;
                function c(h) {
                  for (var d = 0; d < h.length; d++)
                    h[d].index === s &&
                      i.node.classList.add("apexcharts-series-collapsed");
                }
                c(l.globals.collapsedSeries),
                  c(l.globals.ancillaryCollapsedSeries);
              },
            },
            {
              key: "toggleSeries",
              value: function (i) {
                var s = this.isSeriesHidden(i);
                return (
                  this.ctx.legend.legendHelpers.toggleDataSeries(
                    s.realIndex,
                    s.isHidden
                  ),
                  s.isHidden
                );
              },
            },
            {
              key: "showSeries",
              value: function (i) {
                var s = this.isSeriesHidden(i);
                s.isHidden &&
                  this.ctx.legend.legendHelpers.toggleDataSeries(
                    s.realIndex,
                    !0
                  );
              },
            },
            {
              key: "hideSeries",
              value: function (i) {
                var s = this.isSeriesHidden(i);
                s.isHidden ||
                  this.ctx.legend.legendHelpers.toggleDataSeries(
                    s.realIndex,
                    !1
                  );
              },
            },
            {
              key: "resetSeries",
              value: function () {
                var i =
                    !(arguments.length > 0 && arguments[0] !== void 0) ||
                    arguments[0],
                  s =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  l =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  c = this.w,
                  h = F.clone(c.globals.initialSeries);
                (c.globals.previousPaths = []),
                  l
                    ? ((c.globals.collapsedSeries = []),
                      (c.globals.ancillaryCollapsedSeries = []),
                      (c.globals.collapsedSeriesIndices = []),
                      (c.globals.ancillaryCollapsedSeriesIndices = []))
                    : (h = this.emptyCollapsedSeries(h)),
                  (c.config.series = h),
                  i &&
                    (s &&
                      ((c.globals.zoomed = !1),
                      this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                    this.ctx.updateHelpers._updateSeries(
                      h,
                      c.config.chart.animations.dynamicAnimation.enabled
                    ));
              },
            },
            {
              key: "emptyCollapsedSeries",
              value: function (i) {
                for (var s = this.w, l = 0; l < i.length; l++)
                  s.globals.collapsedSeriesIndices.indexOf(l) > -1 &&
                    (i[l].data = []);
                return i;
              },
            },
            {
              key: "toggleSeriesOnHover",
              value: function (i, s) {
                var l = this.w;
                s || (s = i.target);
                var c = l.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-series, .apexcharts-datalabels"
                );
                if (i.type === "mousemove") {
                  var h = parseInt(s.getAttribute("rel"), 10) - 1,
                    d = null,
                    f = null;
                  l.globals.axisCharts || l.config.chart.type === "radialBar"
                    ? l.globals.axisCharts
                      ? ((d = l.globals.dom.baseEl.querySelector(
                          ".apexcharts-series[data\\:realIndex='".concat(
                            h,
                            "']"
                          )
                        )),
                        (f = l.globals.dom.baseEl.querySelector(
                          ".apexcharts-datalabels[data\\:realIndex='".concat(
                            h,
                            "']"
                          )
                        )))
                      : (d = l.globals.dom.baseEl.querySelector(
                          ".apexcharts-series[rel='".concat(h + 1, "']")
                        ))
                    : (d = l.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(h + 1, "'] path")
                      ));
                  for (var p = 0; p < c.length; p++)
                    c[p].classList.add(this.legendInactiveClass);
                  d !== null &&
                    (l.globals.axisCharts ||
                      d.parentNode.classList.remove(this.legendInactiveClass),
                    d.classList.remove(this.legendInactiveClass),
                    f !== null && f.classList.remove(this.legendInactiveClass));
                } else if (i.type === "mouseout")
                  for (var v = 0; v < c.length; v++)
                    c[v].classList.remove(this.legendInactiveClass);
              },
            },
            {
              key: "highlightRangeInSeries",
              value: function (i, s) {
                var l = this,
                  c = this.w,
                  h = c.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-heatmap-rect"
                  ),
                  d = function (p) {
                    for (var v = 0; v < h.length; v++)
                      h[v].classList[p](l.legendInactiveClass);
                  };
                if (i.type === "mousemove") {
                  var f = parseInt(s.getAttribute("rel"), 10) - 1;
                  d("add"),
                    (function (p) {
                      for (var v = 0; v < h.length; v++) {
                        var b = parseInt(h[v].getAttribute("val"), 10);
                        b >= p.from &&
                          b <= p.to &&
                          h[v].classList.remove(l.legendInactiveClass);
                      }
                    })(c.config.plotOptions.heatmap.colorScale.ranges[f]);
                } else i.type === "mouseout" && d("remove");
              },
            },
            {
              key: "getActiveConfigSeriesIndex",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "asc",
                  s =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : [],
                  l = this.w,
                  c = 0;
                if (l.config.series.length > 1) {
                  for (
                    var h = l.config.series.map(function (f, p) {
                        return f.data &&
                          f.data.length > 0 &&
                          l.globals.collapsedSeriesIndices.indexOf(p) === -1 &&
                          (!l.globals.comboCharts ||
                            s.length === 0 ||
                            (s.length &&
                              s.indexOf(l.config.series[p].type) > -1))
                          ? p
                          : -1;
                      }),
                      d = i === "asc" ? 0 : h.length - 1;
                    i === "asc" ? d < h.length : d >= 0;
                    i === "asc" ? d++ : d--
                  )
                    if (h[d] !== -1) {
                      c = h[d];
                      break;
                    }
                }
                return c;
              },
            },
            {
              key: "getBarSeriesIndices",
              value: function () {
                return this.w.globals.comboCharts
                  ? this.w.config.series
                      .map(function (i, s) {
                        return i.type === "bar" || i.type === "column" ? s : -1;
                      })
                      .filter(function (i) {
                        return i !== -1;
                      })
                  : this.w.config.series.map(function (i, s) {
                      return s;
                    });
              },
            },
            {
              key: "getPreviousPaths",
              value: function () {
                var i = this.w;
                function s(d, f, p) {
                  for (
                    var v = d[f].childNodes,
                      b = {
                        type: p,
                        paths: [],
                        realIndex: d[f].getAttribute("data:realIndex"),
                      },
                      _ = 0;
                    _ < v.length;
                    _++
                  )
                    if (v[_].hasAttribute("pathTo")) {
                      var S = v[_].getAttribute("pathTo");
                      b.paths.push({ d: S });
                    }
                  i.globals.previousPaths.push(b);
                }
                (i.globals.previousPaths = []),
                  [
                    "line",
                    "area",
                    "bar",
                    "rangebar",
                    "rangeArea",
                    "candlestick",
                    "radar",
                  ].forEach(function (d) {
                    for (
                      var f,
                        p =
                          ((f = d),
                          i.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-".concat(
                              f,
                              "-series .apexcharts-series"
                            )
                          )),
                        v = 0;
                      v < p.length;
                      v++
                    )
                      s(p, v, d);
                  }),
                  this.handlePrevBubbleScatterPaths("bubble"),
                  this.handlePrevBubbleScatterPaths("scatter");
                var l = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-".concat(
                    i.config.chart.type,
                    " .apexcharts-series"
                  )
                );
                if (l.length > 0)
                  for (
                    var c = function (d) {
                        for (
                          var f = i.globals.dom.baseEl.querySelectorAll(
                              ".apexcharts-"
                                .concat(
                                  i.config.chart.type,
                                  " .apexcharts-series[data\\:realIndex='"
                                )
                                .concat(d, "'] rect")
                            ),
                            p = [],
                            v = function (_) {
                              var S = function (O) {
                                  return f[_].getAttribute(O);
                                },
                                T = {
                                  x: parseFloat(S("x")),
                                  y: parseFloat(S("y")),
                                  width: parseFloat(S("width")),
                                  height: parseFloat(S("height")),
                                };
                              p.push({
                                rect: T,
                                color: f[_].getAttribute("color"),
                              });
                            },
                            b = 0;
                          b < f.length;
                          b++
                        )
                          v(b);
                        i.globals.previousPaths.push(p);
                      },
                      h = 0;
                    h < l.length;
                    h++
                  )
                    c(h);
                i.globals.axisCharts ||
                  (i.globals.previousPaths = i.globals.series);
              },
            },
            {
              key: "handlePrevBubbleScatterPaths",
              value: function (i) {
                var s = this.w,
                  l = s.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-".concat(i, "-series .apexcharts-series")
                  );
                if (l.length > 0)
                  for (var c = 0; c < l.length; c++) {
                    for (
                      var h = s.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-"
                            .concat(
                              i,
                              "-series .apexcharts-series[data\\:realIndex='"
                            )
                            .concat(c, "'] circle")
                        ),
                        d = [],
                        f = 0;
                      f < h.length;
                      f++
                    )
                      d.push({
                        x: h[f].getAttribute("cx"),
                        y: h[f].getAttribute("cy"),
                        r: h[f].getAttribute("r"),
                      });
                    s.globals.previousPaths.push(d);
                  }
              },
            },
            {
              key: "clearPreviousPaths",
              value: function () {
                var i = this.w;
                (i.globals.previousPaths = []),
                  (i.globals.allSeriesCollapsed = !1);
              },
            },
            {
              key: "handleNoData",
              value: function () {
                var i = this.w,
                  s = i.config.noData,
                  l = new C(this.ctx),
                  c = i.globals.svgWidth / 2,
                  h = i.globals.svgHeight / 2,
                  d = "middle";
                if (
                  ((i.globals.noData = !0),
                  (i.globals.animationEnded = !0),
                  s.align === "left"
                    ? ((c = 10), (d = "start"))
                    : s.align === "right" &&
                      ((c = i.globals.svgWidth - 10), (d = "end")),
                  s.verticalAlign === "top"
                    ? (h = 50)
                    : s.verticalAlign === "bottom" &&
                      (h = i.globals.svgHeight - 50),
                  (c += s.offsetX),
                  (h = h + parseInt(s.style.fontSize, 10) + 2 + s.offsetY),
                  s.text !== void 0 && s.text !== "")
                ) {
                  var f = l.drawText({
                    x: c,
                    y: h,
                    text: s.text,
                    textAnchor: d,
                    fontSize: s.style.fontSize,
                    fontFamily: s.style.fontFamily,
                    foreColor: s.style.color,
                    opacity: 1,
                    class: "apexcharts-text-nodata",
                  });
                  i.globals.dom.Paper.add(f);
                }
              },
            },
            {
              key: "setNullSeriesToZeroValues",
              value: function (i) {
                for (var s = this.w, l = 0; l < i.length; l++)
                  if (i[l].length === 0)
                    for (
                      var c = 0;
                      c < i[s.globals.maxValsInArrayIndex].length;
                      c++
                    )
                      i[l].push(0);
                return i;
              },
            },
            {
              key: "hasAllSeriesEqualX",
              value: function () {
                for (
                  var i = !0, s = this.w, l = this.filteredSeriesX(), c = 0;
                  c < l.length - 1;
                  c++
                )
                  if (l[c][0] !== l[c + 1][0]) {
                    i = !1;
                    break;
                  }
                return (s.globals.allSeriesHasEqualX = i), i;
              },
            },
            {
              key: "filteredSeriesX",
              value: function () {
                var i = this.w.globals.seriesX.map(function (s) {
                  return s.length > 0 ? s : [];
                });
                return i;
              },
            },
          ]),
          U
        );
      })(),
      yt = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.twoDSeries = []),
            (this.threeDSeries = []),
            (this.twoDSeriesX = []),
            (this.seriesGoals = []),
            (this.coreUtils = new ke(this.ctx));
        }
        return (
          g(U, [
            {
              key: "isMultiFormat",
              value: function () {
                return this.isFormatXY() || this.isFormat2DArray();
              },
            },
            {
              key: "isFormatXY",
              value: function () {
                var i = this.w.config.series.slice(),
                  s = new de(this.ctx);
                if (
                  ((this.activeSeriesIndex = s.getActiveConfigSeriesIndex()),
                  i[this.activeSeriesIndex].data !== void 0 &&
                    i[this.activeSeriesIndex].data.length > 0 &&
                    i[this.activeSeriesIndex].data[0] !== null &&
                    i[this.activeSeriesIndex].data[0].x !== void 0 &&
                    i[this.activeSeriesIndex].data[0] !== null)
                )
                  return !0;
              },
            },
            {
              key: "isFormat2DArray",
              value: function () {
                var i = this.w.config.series.slice(),
                  s = new de(this.ctx);
                if (
                  ((this.activeSeriesIndex = s.getActiveConfigSeriesIndex()),
                  i[this.activeSeriesIndex].data !== void 0 &&
                    i[this.activeSeriesIndex].data.length > 0 &&
                    i[this.activeSeriesIndex].data[0] !== void 0 &&
                    i[this.activeSeriesIndex].data[0] !== null &&
                    i[this.activeSeriesIndex].data[0].constructor === Array)
                )
                  return !0;
              },
            },
            {
              key: "handleFormat2DArray",
              value: function (i, s) {
                for (
                  var l = this.w.config,
                    c = this.w.globals,
                    h =
                      l.chart.type === "boxPlot" ||
                      l.series[s].type === "boxPlot",
                    d = 0;
                  d < i[s].data.length;
                  d++
                )
                  if (
                    (i[s].data[d][1] !== void 0 &&
                      (Array.isArray(i[s].data[d][1]) &&
                      i[s].data[d][1].length === 4 &&
                      !h
                        ? this.twoDSeries.push(
                            F.parseNumber(i[s].data[d][1][3])
                          )
                        : i[s].data[d].length >= 5
                        ? this.twoDSeries.push(F.parseNumber(i[s].data[d][4]))
                        : this.twoDSeries.push(F.parseNumber(i[s].data[d][1])),
                      (c.dataFormatXNumeric = !0)),
                    l.xaxis.type === "datetime")
                  ) {
                    var f = new Date(i[s].data[d][0]);
                    (f = new Date(f).getTime()), this.twoDSeriesX.push(f);
                  } else this.twoDSeriesX.push(i[s].data[d][0]);
                for (var p = 0; p < i[s].data.length; p++)
                  i[s].data[p][2] !== void 0 &&
                    (this.threeDSeries.push(i[s].data[p][2]),
                    (c.isDataXYZ = !0));
              },
            },
            {
              key: "handleFormatXY",
              value: function (i, s) {
                var l = this.w.config,
                  c = this.w.globals,
                  h = new It(this.ctx),
                  d = s;
                c.collapsedSeriesIndices.indexOf(s) > -1 &&
                  (d = this.activeSeriesIndex);
                for (var f = 0; f < i[s].data.length; f++)
                  i[s].data[f].y !== void 0 &&
                    (Array.isArray(i[s].data[f].y)
                      ? this.twoDSeries.push(
                          F.parseNumber(
                            i[s].data[f].y[i[s].data[f].y.length - 1]
                          )
                        )
                      : this.twoDSeries.push(F.parseNumber(i[s].data[f].y))),
                    i[s].data[f].goals !== void 0 &&
                    Array.isArray(i[s].data[f].goals)
                      ? (this.seriesGoals[s] === void 0 &&
                          (this.seriesGoals[s] = []),
                        this.seriesGoals[s].push(i[s].data[f].goals))
                      : (this.seriesGoals[s] === void 0 &&
                          (this.seriesGoals[s] = []),
                        this.seriesGoals[s].push(null));
                for (var p = 0; p < i[d].data.length; p++) {
                  var v = typeof i[d].data[p].x == "string",
                    b = Array.isArray(i[d].data[p].x),
                    _ = !b && !!h.isValidDate(i[d].data[p].x);
                  if (v || _)
                    if (v || l.xaxis.convertedCatToNumeric) {
                      var S = c.isBarHorizontal && c.isRangeData;
                      l.xaxis.type !== "datetime" || S
                        ? ((this.fallbackToCategory = !0),
                          this.twoDSeriesX.push(i[d].data[p].x),
                          isNaN(i[d].data[p].x) ||
                            this.w.config.xaxis.type === "category" ||
                            typeof i[d].data[p].x == "string" ||
                            (c.isXNumeric = !0))
                        : this.twoDSeriesX.push(h.parseDate(i[d].data[p].x));
                    } else
                      l.xaxis.type === "datetime"
                        ? this.twoDSeriesX.push(
                            h.parseDate(i[d].data[p].x.toString())
                          )
                        : ((c.dataFormatXNumeric = !0),
                          (c.isXNumeric = !0),
                          this.twoDSeriesX.push(parseFloat(i[d].data[p].x)));
                  else
                    b
                      ? ((this.fallbackToCategory = !0),
                        this.twoDSeriesX.push(i[d].data[p].x))
                      : ((c.isXNumeric = !0),
                        (c.dataFormatXNumeric = !0),
                        this.twoDSeriesX.push(i[d].data[p].x));
                }
                if (i[s].data[0] && i[s].data[0].z !== void 0) {
                  for (var T = 0; T < i[s].data.length; T++)
                    this.threeDSeries.push(i[s].data[T].z);
                  c.isDataXYZ = !0;
                }
              },
            },
            {
              key: "handleRangeData",
              value: function (i, s) {
                var l = this.w.globals,
                  c = {};
                return (
                  this.isFormat2DArray()
                    ? (c = this.handleRangeDataFormat("array", i, s))
                    : this.isFormatXY() &&
                      (c = this.handleRangeDataFormat("xy", i, s)),
                  l.seriesRangeStart.push(c.start),
                  l.seriesRangeEnd.push(c.end),
                  l.seriesRange.push(c.rangeUniques),
                  l.seriesRange.forEach(function (h, d) {
                    h &&
                      h.forEach(function (f, p) {
                        f.y.forEach(function (v, b) {
                          for (var _ = 0; _ < f.y.length; _++)
                            if (b !== _) {
                              var S = v.y1,
                                T = v.y2,
                                O = f.y[_].y1;
                              S <= f.y[_].y2 &&
                                O <= T &&
                                (f.overlaps.indexOf(v.rangeName) < 0 &&
                                  f.overlaps.push(v.rangeName),
                                f.overlaps.indexOf(f.y[_].rangeName) < 0 &&
                                  f.overlaps.push(f.y[_].rangeName));
                            }
                        });
                      });
                  }),
                  c
                );
              },
            },
            {
              key: "handleCandleStickBoxData",
              value: function (i, s) {
                var l = this.w.globals,
                  c = {};
                return (
                  this.isFormat2DArray()
                    ? (c = this.handleCandleStickBoxDataFormat("array", i, s))
                    : this.isFormatXY() &&
                      (c = this.handleCandleStickBoxDataFormat("xy", i, s)),
                  (l.seriesCandleO[s] = c.o),
                  (l.seriesCandleH[s] = c.h),
                  (l.seriesCandleM[s] = c.m),
                  (l.seriesCandleL[s] = c.l),
                  (l.seriesCandleC[s] = c.c),
                  c
                );
              },
            },
            {
              key: "handleRangeDataFormat",
              value: function (i, s, l) {
                var c = [],
                  h = [],
                  d = s[l].data
                    .filter(function (b, _, S) {
                      return (
                        _ ===
                        S.findIndex(function (T) {
                          return T.x === b.x;
                        })
                      );
                    })
                    .map(function (b, _) {
                      return { x: b.x, overlaps: [], y: [] };
                    });
                if (i === "array")
                  for (var f = 0; f < s[l].data.length; f++)
                    Array.isArray(s[l].data[f])
                      ? (c.push(s[l].data[f][1][0]), h.push(s[l].data[f][1][1]))
                      : (c.push(s[l].data[f]), h.push(s[l].data[f]));
                else if (i === "xy")
                  for (
                    var p = function (b) {
                        var _ = Array.isArray(s[l].data[b].y),
                          S = F.randomId(),
                          T = s[l].data[b].x,
                          O = {
                            y1: _ ? s[l].data[b].y[0] : s[l].data[b].y,
                            y2: _ ? s[l].data[b].y[1] : s[l].data[b].y,
                            rangeName: S,
                          };
                        s[l].data[b].rangeName = S;
                        var D = d.findIndex(function (V) {
                          return V.x === T;
                        });
                        d[D].y.push(O), c.push(O.y1), h.push(O.y2);
                      },
                      v = 0;
                    v < s[l].data.length;
                    v++
                  )
                    p(v);
                return { start: c, end: h, rangeUniques: d };
              },
            },
            {
              key: "handleCandleStickBoxDataFormat",
              value: function (i, s, l) {
                var c = this.w,
                  h =
                    c.config.chart.type === "boxPlot" ||
                    c.config.series[l].type === "boxPlot",
                  d = [],
                  f = [],
                  p = [],
                  v = [],
                  b = [];
                if (i === "array")
                  if (
                    (h && s[l].data[0].length === 6) ||
                    (!h && s[l].data[0].length === 5)
                  )
                    for (var _ = 0; _ < s[l].data.length; _++)
                      d.push(s[l].data[_][1]),
                        f.push(s[l].data[_][2]),
                        h
                          ? (p.push(s[l].data[_][3]),
                            v.push(s[l].data[_][4]),
                            b.push(s[l].data[_][5]))
                          : (v.push(s[l].data[_][3]), b.push(s[l].data[_][4]));
                  else
                    for (var S = 0; S < s[l].data.length; S++)
                      Array.isArray(s[l].data[S][1]) &&
                        (d.push(s[l].data[S][1][0]),
                        f.push(s[l].data[S][1][1]),
                        h
                          ? (p.push(s[l].data[S][1][2]),
                            v.push(s[l].data[S][1][3]),
                            b.push(s[l].data[S][1][4]))
                          : (v.push(s[l].data[S][1][2]),
                            b.push(s[l].data[S][1][3])));
                else if (i === "xy")
                  for (var T = 0; T < s[l].data.length; T++)
                    Array.isArray(s[l].data[T].y) &&
                      (d.push(s[l].data[T].y[0]),
                      f.push(s[l].data[T].y[1]),
                      h
                        ? (p.push(s[l].data[T].y[2]),
                          v.push(s[l].data[T].y[3]),
                          b.push(s[l].data[T].y[4]))
                        : (v.push(s[l].data[T].y[2]),
                          b.push(s[l].data[T].y[3])));
                return { o: d, h: f, m: p, l: v, c: b };
              },
            },
            {
              key: "parseDataAxisCharts",
              value: function (i) {
                var s,
                  l = this,
                  c =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : this.ctx,
                  h = this.w.config,
                  d = this.w.globals,
                  f = new It(c),
                  p =
                    h.labels.length > 0
                      ? h.labels.slice()
                      : h.xaxis.categories.slice();
                if (
                  ((d.isRangeBar =
                    h.chart.type === "rangeBar" && d.isBarHorizontal),
                  (d.hasXaxisGroups =
                    h.xaxis.type === "category" &&
                    h.xaxis.group.groups.length > 0),
                  d.hasXaxisGroups && (d.groups = h.xaxis.group.groups),
                  (d.hasSeriesGroups =
                    (s = i[0]) === null || s === void 0 ? void 0 : s.group),
                  d.hasSeriesGroups)
                ) {
                  var v = [],
                    b = le(
                      new Set(
                        i.map(function (O) {
                          return O.group;
                        })
                      )
                    );
                  i.forEach(function (O, D) {
                    var V = b.indexOf(O.group);
                    v[V] || (v[V] = []), v[V].push(O.name);
                  }),
                    (d.seriesGroups = v);
                }
                for (
                  var _ = function () {
                      for (var O = 0; O < p.length; O++)
                        if (typeof p[O] == "string") {
                          if (!f.isValidDate(p[O]))
                            throw new Error(
                              "You have provided invalid Date format. Please provide a valid JavaScript Date"
                            );
                          l.twoDSeriesX.push(f.parseDate(p[O]));
                        } else l.twoDSeriesX.push(p[O]);
                    },
                    S = 0;
                  S < i.length;
                  S++
                ) {
                  if (
                    ((this.twoDSeries = []),
                    (this.twoDSeriesX = []),
                    (this.threeDSeries = []),
                    i[S].data === void 0)
                  )
                    return void console.error(
                      "It is a possibility that you may have not included 'data' property in series."
                    );
                  if (
                    ((h.chart.type !== "rangeBar" &&
                      h.chart.type !== "rangeArea" &&
                      i[S].type !== "rangeBar" &&
                      i[S].type !== "rangeArea") ||
                      ((d.isRangeData = !0),
                      (h.chart.type !== "rangeBar" &&
                        h.chart.type !== "rangeArea") ||
                        this.handleRangeData(i, S)),
                    this.isMultiFormat())
                  )
                    this.isFormat2DArray()
                      ? this.handleFormat2DArray(i, S)
                      : this.isFormatXY() && this.handleFormatXY(i, S),
                      (h.chart.type !== "candlestick" &&
                        i[S].type !== "candlestick" &&
                        h.chart.type !== "boxPlot" &&
                        i[S].type !== "boxPlot") ||
                        this.handleCandleStickBoxData(i, S),
                      d.series.push(this.twoDSeries),
                      d.labels.push(this.twoDSeriesX),
                      d.seriesX.push(this.twoDSeriesX),
                      (d.seriesGoals = this.seriesGoals),
                      S !== this.activeSeriesIndex ||
                        this.fallbackToCategory ||
                        (d.isXNumeric = !0);
                  else {
                    h.xaxis.type === "datetime"
                      ? ((d.isXNumeric = !0),
                        _(),
                        d.seriesX.push(this.twoDSeriesX))
                      : h.xaxis.type === "numeric" &&
                        ((d.isXNumeric = !0),
                        p.length > 0 &&
                          ((this.twoDSeriesX = p),
                          d.seriesX.push(this.twoDSeriesX))),
                      d.labels.push(this.twoDSeriesX);
                    var T = i[S].data.map(function (O) {
                      return F.parseNumber(O);
                    });
                    d.series.push(T);
                  }
                  d.seriesZ.push(this.threeDSeries),
                    i[S].name !== void 0
                      ? d.seriesNames.push(i[S].name)
                      : d.seriesNames.push("series-" + parseInt(S + 1, 10)),
                    i[S].color !== void 0
                      ? d.seriesColors.push(i[S].color)
                      : d.seriesColors.push(void 0);
                }
                return this.w;
              },
            },
            {
              key: "parseDataNonAxisCharts",
              value: function (i) {
                var s = this.w.globals,
                  l = this.w.config;
                (s.series = i.slice()), (s.seriesNames = l.labels.slice());
                for (var c = 0; c < s.series.length; c++)
                  s.seriesNames[c] === void 0 &&
                    s.seriesNames.push("series-" + (c + 1));
                return this.w;
              },
            },
            {
              key: "handleExternalLabelsData",
              value: function (i) {
                var s = this.w.config,
                  l = this.w.globals;
                s.xaxis.categories.length > 0
                  ? (l.labels = s.xaxis.categories)
                  : s.labels.length > 0
                  ? (l.labels = s.labels.slice())
                  : this.fallbackToCategory
                  ? ((l.labels = l.labels[0]),
                    l.seriesRange.length &&
                      (l.seriesRange.map(function (c) {
                        c.forEach(function (h) {
                          l.labels.indexOf(h.x) < 0 &&
                            h.x &&
                            l.labels.push(h.x);
                        });
                      }),
                      (l.labels = Array.from(
                        new Set(l.labels.map(JSON.stringify)),
                        JSON.parse
                      ))),
                    s.xaxis.convertedCatToNumeric &&
                      (new we(s).convertCatToNumericXaxis(
                        s,
                        this.ctx,
                        l.seriesX[0]
                      ),
                      this._generateExternalLabels(i)))
                  : this._generateExternalLabels(i);
              },
            },
            {
              key: "_generateExternalLabels",
              value: function (i) {
                var s = this.w.globals,
                  l = this.w.config,
                  c = [];
                if (s.axisCharts) {
                  if (s.series.length > 0)
                    if (this.isFormatXY())
                      for (
                        var h = l.series.map(function (_, S) {
                            return _.data.filter(function (T, O, D) {
                              return (
                                D.findIndex(function (V) {
                                  return V.x === T.x;
                                }) === O
                              );
                            });
                          }),
                          d = h.reduce(function (_, S, T, O) {
                            return O[_].length > S.length ? _ : T;
                          }, 0),
                          f = 0;
                        f < h[d].length;
                        f++
                      )
                        c.push(f + 1);
                    else
                      for (
                        var p = 0;
                        p < s.series[s.maxValsInArrayIndex].length;
                        p++
                      )
                        c.push(p + 1);
                  s.seriesX = [];
                  for (var v = 0; v < i.length; v++) s.seriesX.push(c);
                  this.w.globals.isBarHorizontal || (s.isXNumeric = !0);
                }
                if (c.length === 0) {
                  c = s.axisCharts
                    ? []
                    : s.series.map(function (_, S) {
                        return S + 1;
                      });
                  for (var b = 0; b < i.length; b++) s.seriesX.push(c);
                }
                (s.labels = c),
                  l.xaxis.convertedCatToNumeric &&
                    (s.categoryLabels = c.map(function (_) {
                      return l.xaxis.labels.formatter(_);
                    })),
                  (s.noLabelsProvided = !0);
              },
            },
            {
              key: "parseData",
              value: function (i) {
                var s = this.w,
                  l = s.config,
                  c = s.globals;
                if (
                  (this.excludeCollapsedSeriesInYAxis(),
                  (this.fallbackToCategory = !1),
                  this.ctx.core.resetGlobals(),
                  this.ctx.core.isMultipleY(),
                  c.axisCharts
                    ? (this.parseDataAxisCharts(i),
                      this.coreUtils.getLargestSeries())
                    : this.parseDataNonAxisCharts(i),
                  l.chart.stacked)
                ) {
                  var h = new de(this.ctx);
                  c.series = h.setNullSeriesToZeroValues(c.series);
                }
                this.coreUtils.getSeriesTotals(),
                  c.axisCharts &&
                    ((c.stackedSeriesTotals =
                      this.coreUtils.getStackedSeriesTotals()),
                    (c.stackedSeriesTotalsByGroups =
                      this.coreUtils.getStackedSeriesTotalsByGroups())),
                  this.coreUtils.getPercentSeries(),
                  c.dataFormatXNumeric ||
                    (c.isXNumeric &&
                      (l.xaxis.type !== "numeric" ||
                        l.labels.length !== 0 ||
                        l.xaxis.categories.length !== 0)) ||
                    this.handleExternalLabelsData(i);
                for (
                  var d = this.coreUtils.getCategoryLabels(c.labels), f = 0;
                  f < d.length;
                  f++
                )
                  if (Array.isArray(d[f])) {
                    c.isMultiLineX = !0;
                    break;
                  }
              },
            },
            {
              key: "excludeCollapsedSeriesInYAxis",
              value: function () {
                var i = this,
                  s = this.w;
                s.globals.ignoreYAxisIndexes = s.globals.collapsedSeries.map(
                  function (l, c) {
                    if (i.w.globals.isMultipleYAxis && !s.config.chart.stacked)
                      return l.index;
                  }
                );
              },
            },
          ]),
          U
        );
      })(),
      Ze = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "getLabel",
              value: function (i, s, l, c) {
                var h =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : [],
                  d =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : "12px",
                  f =
                    !(arguments.length > 6 && arguments[6] !== void 0) ||
                    arguments[6],
                  p = this.w,
                  v = i[c] === void 0 ? "" : i[c],
                  b = v,
                  _ = p.globals.xLabelFormatter,
                  S = p.config.xaxis.labels.formatter,
                  T = !1,
                  O = new ht(this.ctx),
                  D = v;
                f &&
                  ((b = O.xLabelFormat(_, v, D, {
                    i: c,
                    dateFormatter: new It(this.ctx).formatDate,
                    w: p,
                  })),
                  S !== void 0 &&
                    (b = S(v, i[c], {
                      i: c,
                      dateFormatter: new It(this.ctx).formatDate,
                      w: p,
                    })));
                var V, G;
                s.length > 0
                  ? ((V = s[c].unit),
                    (G = null),
                    s.forEach(function (N) {
                      N.unit === "month"
                        ? (G = "year")
                        : N.unit === "day"
                        ? (G = "month")
                        : N.unit === "hour"
                        ? (G = "day")
                        : N.unit === "minute" && (G = "hour");
                    }),
                    (T = G === V),
                    (l = s[c].position),
                    (b = s[c].value))
                  : p.config.xaxis.type === "datetime" &&
                    S === void 0 &&
                    (b = ""),
                  b === void 0 && (b = ""),
                  (b = Array.isArray(b) ? b : b.toString());
                var Q = new C(this.ctx),
                  m = {};
                m =
                  p.globals.rotateXLabels && f
                    ? Q.getTextRects(
                        b,
                        parseInt(d, 10),
                        null,
                        "rotate(".concat(p.config.xaxis.labels.rotate, " 0 0)"),
                        !1
                      )
                    : Q.getTextRects(b, parseInt(d, 10));
                var k =
                  !p.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
                return (
                  !Array.isArray(b) &&
                    (b.indexOf("NaN") === 0 ||
                      b.toLowerCase().indexOf("invalid") === 0 ||
                      b.toLowerCase().indexOf("infinity") >= 0 ||
                      (h.indexOf(b) >= 0 && k)) &&
                    (b = ""),
                  { x: l, text: b, textRect: m, isBold: T }
                );
              },
            },
            {
              key: "checkLabelBasedOnTickamount",
              value: function (i, s, l) {
                var c = this.w,
                  h = c.config.xaxis.tickAmount;
                return (
                  h === "dataPoints" &&
                    (h = Math.round(c.globals.gridWidth / 120)),
                  h > l || i % Math.round(l / (h + 1)) == 0 || (s.text = ""),
                  s
                );
              },
            },
            {
              key: "checkForOverflowingLabels",
              value: function (i, s, l, c, h) {
                var d = this.w;
                if (
                  (i === 0 && d.globals.skipFirstTimelinelabel && (s.text = ""),
                  i === l - 1 &&
                    d.globals.skipLastTimelinelabel &&
                    (s.text = ""),
                  d.config.xaxis.labels.hideOverlappingLabels && c.length > 0)
                ) {
                  var f = h[h.length - 1];
                  s.x <
                    f.textRect.width /
                      (d.globals.rotateXLabels
                        ? Math.abs(d.config.xaxis.labels.rotate) / 12
                        : 1.01) +
                      f.x && (s.text = "");
                }
                return s;
              },
            },
            {
              key: "checkForReversedLabels",
              value: function (i, s) {
                var l = this.w;
                return (
                  l.config.yaxis[i] &&
                    l.config.yaxis[i].reversed &&
                    s.reverse(),
                  s
                );
              },
            },
            {
              key: "isYAxisHidden",
              value: function (i) {
                var s = this.w,
                  l = new ke(this.ctx);
                return (
                  !s.config.yaxis[i].show ||
                  (!s.config.yaxis[i].showForNullSeries &&
                    l.isSeriesNull(i) &&
                    s.globals.collapsedSeriesIndices.indexOf(i) === -1)
                );
              },
            },
            {
              key: "getYAxisForeColor",
              value: function (i, s) {
                var l = this.w;
                return (
                  Array.isArray(i) &&
                    l.globals.yAxisScale[s] &&
                    this.ctx.theme.pushExtraColors(
                      i,
                      l.globals.yAxisScale[s].result.length,
                      !1
                    ),
                  i
                );
              },
            },
            {
              key: "drawYAxisTicks",
              value: function (i, s, l, c, h, d, f) {
                var p = this.w,
                  v = new C(this.ctx),
                  b = p.globals.translateY;
                if (c.show && s > 0) {
                  p.config.yaxis[h].opposite === !0 && (i += c.width);
                  for (var _ = s; _ >= 0; _--) {
                    var S = b + s / 10 + p.config.yaxis[h].labels.offsetY - 1;
                    p.globals.isBarHorizontal && (S = d * _),
                      p.config.chart.type === "heatmap" && (S += d / 2);
                    var T = v.drawLine(
                      i + l.offsetX - c.width + c.offsetX,
                      S + c.offsetY,
                      i + l.offsetX + c.offsetX,
                      S + c.offsetY,
                      c.color
                    );
                    f.add(T), (b += d);
                  }
                }
              },
            },
          ]),
          U
        );
      })(),
      Zt = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "scaleSvgNode",
              value: function (i, s) {
                var l = parseFloat(i.getAttributeNS(null, "width")),
                  c = parseFloat(i.getAttributeNS(null, "height"));
                i.setAttributeNS(null, "width", l * s),
                  i.setAttributeNS(null, "height", c * s),
                  i.setAttributeNS(null, "viewBox", "0 0 " + l + " " + c);
              },
            },
            {
              key: "fixSvgStringForIe11",
              value: function (i) {
                if (!F.isIE11()) return i.replace(/&nbsp;/g, "&#160;");
                var s = 0,
                  l = i.replace(
                    /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                    function (c) {
                      return ++s === 2
                        ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                        : c;
                    }
                  );
                return (l = (l = l.replace(/xmlns:NS\d+=""/g, "")).replace(
                  /NS\d+:(\w+:\w+=")/g,
                  "$1"
                ));
              },
            },
            {
              key: "getSvgString",
              value: function (i) {
                i == null && (i = 1);
                var s = this.w.globals.dom.Paper.svg();
                if (i !== 1) {
                  var l = this.w.globals.dom.Paper.node.cloneNode(!0);
                  this.scaleSvgNode(l, i),
                    (s = new XMLSerializer().serializeToString(l));
                }
                return this.fixSvgStringForIe11(s);
              },
            },
            {
              key: "cleanup",
              value: function () {
                var i = this.w,
                  s = i.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-xcrosshairs"
                  ),
                  l = i.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-ycrosshairs"
                  ),
                  c = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-zoom-rect, .apexcharts-selection-rect"
                  );
                Array.prototype.forEach.call(c, function (h) {
                  h.setAttribute("width", 0);
                }),
                  s &&
                    s[0] &&
                    (s[0].setAttribute("x", -500),
                    s[0].setAttribute("x1", -500),
                    s[0].setAttribute("x2", -500)),
                  l &&
                    l[0] &&
                    (l[0].setAttribute("y", -100),
                    l[0].setAttribute("y1", -100),
                    l[0].setAttribute("y2", -100));
              },
            },
            {
              key: "svgUrl",
              value: function () {
                this.cleanup();
                var i = this.getSvgString(),
                  s = new Blob([i], { type: "image/svg+xml;charset=utf-8" });
                return URL.createObjectURL(s);
              },
            },
            {
              key: "dataURI",
              value: function (i) {
                var s = this;
                return new Promise(function (l) {
                  var c = s.w,
                    h = i ? i.scale || i.width / c.globals.svgWidth : 1;
                  s.cleanup();
                  var d = document.createElement("canvas");
                  (d.width = c.globals.svgWidth * h),
                    (d.height =
                      parseInt(c.globals.dom.elWrap.style.height, 10) * h);
                  var f =
                      c.config.chart.background === "transparent"
                        ? "#fff"
                        : c.config.chart.background,
                    p = d.getContext("2d");
                  (p.fillStyle = f),
                    p.fillRect(0, 0, d.width * h, d.height * h);
                  var v = s.getSvgString(h);
                  if (window.canvg && F.isIE11()) {
                    var b = window.canvg.Canvg.fromString(p, v, {
                      ignoreClear: !0,
                      ignoreDimensions: !0,
                    });
                    b.start();
                    var _ = d.msToBlob();
                    b.stop(), l({ blob: _ });
                  } else {
                    var S = "data:image/svg+xml," + encodeURIComponent(v),
                      T = new Image();
                    (T.crossOrigin = "anonymous"),
                      (T.onload = function () {
                        if ((p.drawImage(T, 0, 0), d.msToBlob)) {
                          var O = d.msToBlob();
                          l({ blob: O });
                        } else {
                          var D = d.toDataURL("image/png");
                          l({ imgURI: D });
                        }
                      }),
                      (T.src = S);
                  }
                });
              },
            },
            {
              key: "exportToSVG",
              value: function () {
                this.triggerDownload(
                  this.svgUrl(),
                  this.w.config.chart.toolbar.export.svg.filename,
                  ".svg"
                );
              },
            },
            {
              key: "exportToPng",
              value: function () {
                var i = this;
                this.dataURI().then(function (s) {
                  var l = s.imgURI,
                    c = s.blob;
                  c
                    ? navigator.msSaveOrOpenBlob(
                        c,
                        i.w.globals.chartID + ".png"
                      )
                    : i.triggerDownload(
                        l,
                        i.w.config.chart.toolbar.export.png.filename,
                        ".png"
                      );
                });
              },
            },
            {
              key: "exportToCSV",
              value: function (i) {
                var s = this,
                  l = i.series,
                  c = i.fileName,
                  h = i.columnDelimiter,
                  d = h === void 0 ? "," : h,
                  f = i.lineDelimiter,
                  p =
                    f === void 0
                      ? `
`
                      : f,
                  v = this.w;
                l || (l = v.config.series);
                var b,
                  _,
                  S = [],
                  T = [],
                  O = "",
                  D = v.globals.series.map(function (X, K) {
                    return v.globals.collapsedSeriesIndices.indexOf(K) === -1
                      ? X
                      : [];
                  }),
                  V = function (X) {
                    return (
                      v.config.xaxis.type === "datetime" &&
                      String(X).length >= 10
                    );
                  },
                  G = Math.max.apply(
                    Math,
                    le(
                      l.map(function (X) {
                        return X.data ? X.data.length : 0;
                      })
                    )
                  ),
                  Q = new yt(this.ctx),
                  m = new Ze(this.ctx),
                  k = function (X) {
                    var K = "";
                    if (v.globals.axisCharts) {
                      if (
                        v.config.xaxis.type === "category" ||
                        v.config.xaxis.convertedCatToNumeric
                      )
                        if (v.globals.isBarHorizontal) {
                          var ee = v.globals.yLabelFormatters[0],
                            fe = new de(s.ctx).getActiveConfigSeriesIndex();
                          K = ee(v.globals.labels[X], {
                            seriesIndex: fe,
                            dataPointIndex: X,
                            w: v,
                          });
                        } else
                          K = m.getLabel(
                            v.globals.labels,
                            v.globals.timescaleLabels,
                            0,
                            X
                          ).text;
                      v.config.xaxis.type === "datetime" &&
                        (v.config.xaxis.categories.length
                          ? (K = v.config.xaxis.categories[X])
                          : v.config.labels.length && (K = v.config.labels[X]));
                    } else K = v.config.labels[X];
                    return (
                      Array.isArray(K) && (K = K.join(" ")),
                      F.isNumber(K) ? K : K.split(d).join("")
                    );
                  },
                  N = function (X, K) {
                    if ((S.length && K === 0 && T.push(S.join(d)), X.data)) {
                      X.data =
                        (X.data.length && X.data) ||
                        le(Array(G)).map(function () {
                          return "";
                        });
                      for (var ee = 0; ee < X.data.length; ee++) {
                        S = [];
                        var fe = k(ee);
                        if (
                          (fe ||
                            (Q.isFormatXY()
                              ? (fe = l[K].data[ee].x)
                              : Q.isFormat2DArray() &&
                                (fe = l[K].data[ee] ? l[K].data[ee][0] : "")),
                          K === 0)
                        ) {
                          S.push(
                            V(fe)
                              ? v.config.chart.toolbar.export.csv.dateFormatter(
                                  fe
                                )
                              : F.isNumber(fe)
                              ? fe
                              : fe.split(d).join("")
                          );
                          for (var ge = 0; ge < v.globals.series.length; ge++) {
                            var Pe;
                            Q.isFormatXY()
                              ? S.push(
                                  (Pe = l[ge].data[ee]) === null ||
                                    Pe === void 0
                                    ? void 0
                                    : Pe.y
                                )
                              : S.push(D[ge][ee]);
                          }
                        }
                        (v.config.chart.type === "candlestick" ||
                          (X.type && X.type === "candlestick")) &&
                          (S.pop(),
                          S.push(v.globals.seriesCandleO[K][ee]),
                          S.push(v.globals.seriesCandleH[K][ee]),
                          S.push(v.globals.seriesCandleL[K][ee]),
                          S.push(v.globals.seriesCandleC[K][ee])),
                          (v.config.chart.type === "boxPlot" ||
                            (X.type && X.type === "boxPlot")) &&
                            (S.pop(),
                            S.push(v.globals.seriesCandleO[K][ee]),
                            S.push(v.globals.seriesCandleH[K][ee]),
                            S.push(v.globals.seriesCandleM[K][ee]),
                            S.push(v.globals.seriesCandleL[K][ee]),
                            S.push(v.globals.seriesCandleC[K][ee])),
                          v.config.chart.type === "rangeBar" &&
                            (S.pop(),
                            S.push(v.globals.seriesRangeStart[K][ee]),
                            S.push(v.globals.seriesRangeEnd[K][ee])),
                          S.length && T.push(S.join(d));
                      }
                    }
                  };
                S.push(v.config.chart.toolbar.export.csv.headerCategory),
                  v.config.chart.type === "boxPlot"
                    ? (S.push("minimum"),
                      S.push("q1"),
                      S.push("median"),
                      S.push("q3"),
                      S.push("maximum"))
                    : v.config.chart.type === "candlestick"
                    ? (S.push("open"),
                      S.push("high"),
                      S.push("low"),
                      S.push("close"))
                    : v.config.chart.type === "rangeBar"
                    ? (S.push("minimum"), S.push("maximum"))
                    : l.map(function (X, K) {
                        var ee = (X.name ? X.name : "series-".concat(K)) + "";
                        v.globals.axisCharts &&
                          S.push(
                            ee.split(d).join("")
                              ? ee.split(d).join("")
                              : "series-".concat(K)
                          );
                      }),
                  v.globals.axisCharts ||
                    (S.push(v.config.chart.toolbar.export.csv.headerValue),
                    T.push(S.join(d))),
                  v.globals.allSeriesHasEqualX ||
                  !v.globals.axisCharts ||
                  v.config.xaxis.categories.length ||
                  v.config.labels.length
                    ? l.map(function (X, K) {
                        v.globals.axisCharts
                          ? N(X, K)
                          : ((S = []).push(
                              v.globals.labels[K].split(d).join("")
                            ),
                            S.push(D[K]),
                            T.push(S.join(d)));
                      })
                    : ((b = new Set()),
                      (_ = {}),
                      l.forEach(function (X, K) {
                        X == null ||
                          X.data.forEach(function (ee) {
                            var fe, ge;
                            if (Q.isFormatXY()) (fe = ee.x), (ge = ee.y);
                            else {
                              if (!Q.isFormat2DArray()) return;
                              (fe = ee[0]), (ge = ee[1]);
                            }
                            _[fe] || (_[fe] = Array(l.length).fill("")),
                              (_[fe][K] = ge),
                              b.add(fe);
                          });
                      }),
                      S.length && T.push(S.join(d)),
                      Array.from(b)
                        .sort()
                        .forEach(function (X) {
                          T.push([
                            V(X) && v.config.xaxis.type === "datetime"
                              ? v.config.chart.toolbar.export.csv.dateFormatter(
                                  X
                                )
                              : F.isNumber(X)
                              ? X
                              : X.split(d).join(""),
                            _[X].join(d),
                          ]);
                        })),
                  (O += T.join(p)),
                  this.triggerDownload(
                    "data:text/csv; charset=utf-8," +
                      encodeURIComponent("\uFEFF" + O),
                    c || v.config.chart.toolbar.export.csv.filename,
                    ".csv"
                  );
              },
            },
            {
              key: "triggerDownload",
              value: function (i, s, l) {
                var c = document.createElement("a");
                (c.href = i),
                  (c.download = (s || this.w.globals.chartID) + l),
                  document.body.appendChild(c),
                  c.click(),
                  document.body.removeChild(c);
              },
            },
          ]),
          U
        );
      })(),
      Wt = (function () {
        function U(i, s) {
          o(this, U), (this.ctx = i), (this.elgrid = s), (this.w = i.w);
          var l = this.w;
          (this.axesUtils = new Ze(i)),
            (this.xaxisLabels = l.globals.labels.slice()),
            l.globals.timescaleLabels.length > 0 &&
              !l.globals.isBarHorizontal &&
              (this.xaxisLabels = l.globals.timescaleLabels.slice()),
            l.config.xaxis.overwriteCategories &&
              (this.xaxisLabels = l.config.xaxis.overwriteCategories),
            (this.drawnLabels = []),
            (this.drawnLabelsRects = []),
            l.config.xaxis.position === "top"
              ? (this.offY = 0)
              : (this.offY = l.globals.gridHeight + 1),
            (this.offY = this.offY + l.config.xaxis.axisBorder.offsetY),
            (this.isCategoryBarHorizontal =
              l.config.chart.type === "bar" &&
              l.config.plotOptions.bar.horizontal),
            (this.xaxisFontSize = l.config.xaxis.labels.style.fontSize),
            (this.xaxisFontFamily = l.config.xaxis.labels.style.fontFamily),
            (this.xaxisForeColors = l.config.xaxis.labels.style.colors),
            (this.xaxisBorderWidth = l.config.xaxis.axisBorder.width),
            this.isCategoryBarHorizontal &&
              (this.xaxisBorderWidth =
                l.config.yaxis[0].axisBorder.width.toString()),
            this.xaxisBorderWidth.indexOf("%") > -1
              ? (this.xaxisBorderWidth =
                  (l.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10)) /
                  100)
              : (this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)),
            (this.xaxisBorderHeight = l.config.xaxis.axisBorder.height),
            (this.yaxis = l.config.yaxis[0]);
        }
        return (
          g(U, [
            {
              key: "drawXaxis",
              value: function () {
                var i = this.w,
                  s = new C(this.ctx),
                  l = s.group({
                    class: "apexcharts-xaxis",
                    transform: "translate("
                      .concat(i.config.xaxis.offsetX, ", ")
                      .concat(i.config.xaxis.offsetY, ")"),
                  }),
                  c = s.group({
                    class: "apexcharts-xaxis-texts-g",
                    transform: "translate("
                      .concat(i.globals.translateXAxisX, ", ")
                      .concat(i.globals.translateXAxisY, ")"),
                  });
                l.add(c);
                for (var h = [], d = 0; d < this.xaxisLabels.length; d++)
                  h.push(this.xaxisLabels[d]);
                if (
                  (this.drawXAxisLabelAndGroup(
                    !0,
                    s,
                    c,
                    h,
                    i.globals.isXNumeric,
                    function (O, D) {
                      return D;
                    }
                  ),
                  i.globals.hasXaxisGroups)
                ) {
                  var f = i.globals.groups;
                  h = [];
                  for (var p = 0; p < f.length; p++) h.push(f[p].title);
                  var v = {};
                  i.config.xaxis.group.style &&
                    ((v.xaxisFontSize = i.config.xaxis.group.style.fontSize),
                    (v.xaxisFontFamily = i.config.xaxis.group.style.fontFamily),
                    (v.xaxisForeColors = i.config.xaxis.group.style.colors),
                    (v.fontWeight = i.config.xaxis.group.style.fontWeight),
                    (v.cssClass = i.config.xaxis.group.style.cssClass)),
                    this.drawXAxisLabelAndGroup(
                      !1,
                      s,
                      c,
                      h,
                      !1,
                      function (O, D) {
                        return f[O].cols * D;
                      },
                      v
                    );
                }
                if (i.config.xaxis.title.text !== void 0) {
                  var b = s.group({ class: "apexcharts-xaxis-title" }),
                    _ = s.drawText({
                      x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
                      y:
                        this.offY +
                        parseFloat(this.xaxisFontSize) +
                        (i.config.xaxis.position === "bottom"
                          ? i.globals.xAxisLabelsHeight
                          : -i.globals.xAxisLabelsHeight - 10) +
                        i.config.xaxis.title.offsetY,
                      text: i.config.xaxis.title.text,
                      textAnchor: "middle",
                      fontSize: i.config.xaxis.title.style.fontSize,
                      fontFamily: i.config.xaxis.title.style.fontFamily,
                      fontWeight: i.config.xaxis.title.style.fontWeight,
                      foreColor: i.config.xaxis.title.style.color,
                      cssClass:
                        "apexcharts-xaxis-title-text " +
                        i.config.xaxis.title.style.cssClass,
                    });
                  b.add(_), l.add(b);
                }
                if (i.config.xaxis.axisBorder.show) {
                  var S = i.globals.barPadForNumericAxis,
                    T = s.drawLine(
                      i.globals.padHorizontal +
                        i.config.xaxis.axisBorder.offsetX -
                        S,
                      this.offY,
                      this.xaxisBorderWidth + S,
                      this.offY,
                      i.config.xaxis.axisBorder.color,
                      0,
                      this.xaxisBorderHeight
                    );
                  this.elgrid && this.elgrid.elGridBorders && i.config.grid.show
                    ? this.elgrid.elGridBorders.add(T)
                    : l.add(T);
                }
                return l;
              },
            },
            {
              key: "drawXAxisLabelAndGroup",
              value: function (i, s, l, c, h, d) {
                var f,
                  p = this,
                  v =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : {},
                  b = [],
                  _ = [],
                  S = this.w,
                  T = v.xaxisFontSize || this.xaxisFontSize,
                  O = v.xaxisFontFamily || this.xaxisFontFamily,
                  D = v.xaxisForeColors || this.xaxisForeColors,
                  V = v.fontWeight || S.config.xaxis.labels.style.fontWeight,
                  G = v.cssClass || S.config.xaxis.labels.style.cssClass,
                  Q = S.globals.padHorizontal,
                  m = c.length,
                  k =
                    S.config.xaxis.type === "category"
                      ? S.globals.dataPoints
                      : m;
                if ((k === 0 && m > k && (k = m), h)) {
                  var N = k > 1 ? k - 1 : k;
                  (f = S.globals.gridWidth / Math.min(N, m - 1)),
                    (Q = Q + d(0, f) / 2 + S.config.xaxis.labels.offsetX);
                } else
                  (f = S.globals.gridWidth / k),
                    (Q = Q + d(0, f) + S.config.xaxis.labels.offsetX);
                for (
                  var X = function (ee) {
                      var fe = Q - d(ee, f) / 2 + S.config.xaxis.labels.offsetX;
                      ee === 0 &&
                        m === 1 &&
                        f / 2 === Q &&
                        k === 1 &&
                        (fe = S.globals.gridWidth / 2);
                      var ge = p.axesUtils.getLabel(
                          c,
                          S.globals.timescaleLabels,
                          fe,
                          ee,
                          b,
                          T,
                          i
                        ),
                        Pe = 28;
                      if (
                        (S.globals.rotateXLabels && i && (Pe = 22),
                        S.config.xaxis.title.text &&
                          S.config.xaxis.position === "top" &&
                          (Pe +=
                            parseFloat(S.config.xaxis.title.style.fontSize) +
                            2),
                        i ||
                          (Pe =
                            Pe +
                            parseFloat(T) +
                            (S.globals.xAxisLabelsHeight -
                              S.globals.xAxisGroupLabelsHeight) +
                            (S.globals.rotateXLabels ? 10 : 0)),
                        (ge =
                          S.config.xaxis.tickAmount !== void 0 &&
                          S.config.xaxis.tickAmount !== "dataPoints" &&
                          S.config.xaxis.type !== "datetime"
                            ? p.axesUtils.checkLabelBasedOnTickamount(ee, ge, m)
                            : p.axesUtils.checkForOverflowingLabels(
                                ee,
                                ge,
                                m,
                                b,
                                _
                              )),
                        S.config.xaxis.labels.show)
                      ) {
                        var We = s.drawText({
                          x: ge.x,
                          y:
                            p.offY +
                            S.config.xaxis.labels.offsetY +
                            Pe -
                            (S.config.xaxis.position === "top"
                              ? S.globals.xAxisHeight +
                                S.config.xaxis.axisTicks.height -
                                2
                              : 0),
                          text: ge.text,
                          textAnchor: "middle",
                          fontWeight: ge.isBold ? 600 : V,
                          fontSize: T,
                          fontFamily: O,
                          foreColor: Array.isArray(D)
                            ? i && S.config.xaxis.convertedCatToNumeric
                              ? D[S.globals.minX + ee - 1]
                              : D[ee]
                            : D,
                          isPlainText: !1,
                          cssClass:
                            (i
                              ? "apexcharts-xaxis-label "
                              : "apexcharts-xaxis-group-label ") + G,
                        });
                        if (
                          (l.add(We),
                          We.on("click", function (ut) {
                            if (
                              typeof S.config.chart.events.xAxisLabelClick ==
                              "function"
                            ) {
                              var St = Object.assign({}, S, { labelIndex: ee });
                              S.config.chart.events.xAxisLabelClick(
                                ut,
                                p.ctx,
                                St
                              );
                            }
                          }),
                          i)
                        ) {
                          var ze = document.createElementNS(
                            S.globals.SVGNS,
                            "title"
                          );
                          (ze.textContent = Array.isArray(ge.text)
                            ? ge.text.join(" ")
                            : ge.text),
                            We.node.appendChild(ze),
                            ge.text !== "" && (b.push(ge.text), _.push(ge));
                        }
                      }
                      ee < m - 1 && (Q += d(ee + 1, f));
                    },
                    K = 0;
                  K <= m - 1;
                  K++
                )
                  X(K);
              },
            },
            {
              key: "drawXaxisInversed",
              value: function (i) {
                var s,
                  l,
                  c = this,
                  h = this.w,
                  d = new C(this.ctx),
                  f = h.config.yaxis[0].opposite
                    ? h.globals.translateYAxisX[i]
                    : 0,
                  p = d.group({
                    class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                    rel: i,
                  }),
                  v = d.group({
                    class:
                      "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                    transform: "translate(" + f + ", 0)",
                  });
                p.add(v);
                var b = [];
                if (h.config.yaxis[i].show)
                  for (var _ = 0; _ < this.xaxisLabels.length; _++)
                    b.push(this.xaxisLabels[_]);
                (s = h.globals.gridHeight / b.length), (l = -s / 2.2);
                var S = h.globals.yLabelFormatters[0],
                  T = h.config.yaxis[0].labels;
                if (T.show)
                  for (
                    var O = function (N) {
                        var X = b[N] === void 0 ? "" : b[N];
                        X = S(X, { seriesIndex: i, dataPointIndex: N, w: h });
                        var K = c.axesUtils.getYAxisForeColor(
                            T.style.colors,
                            i
                          ),
                          ee = 0;
                        Array.isArray(X) &&
                          (ee =
                            (X.length / 2) * parseInt(T.style.fontSize, 10));
                        var fe = T.offsetX - 15,
                          ge = "end";
                        c.yaxis.opposite && (ge = "start"),
                          h.config.yaxis[0].labels.align === "left"
                            ? ((fe = T.offsetX), (ge = "start"))
                            : h.config.yaxis[0].labels.align === "center"
                            ? ((fe = T.offsetX), (ge = "middle"))
                            : h.config.yaxis[0].labels.align === "right" &&
                              (ge = "end");
                        var Pe = d.drawText({
                          x: fe,
                          y: l + s + T.offsetY - ee,
                          text: X,
                          textAnchor: ge,
                          foreColor: Array.isArray(K) ? K[N] : K,
                          fontSize: T.style.fontSize,
                          fontFamily: T.style.fontFamily,
                          fontWeight: T.style.fontWeight,
                          isPlainText: !1,
                          cssClass:
                            "apexcharts-yaxis-label " + T.style.cssClass,
                          maxWidth: T.maxWidth,
                        });
                        v.add(Pe),
                          Pe.on("click", function (ut) {
                            if (
                              typeof h.config.chart.events.xAxisLabelClick ==
                              "function"
                            ) {
                              var St = Object.assign({}, h, { labelIndex: N });
                              h.config.chart.events.xAxisLabelClick(
                                ut,
                                c.ctx,
                                St
                              );
                            }
                          });
                        var We = document.createElementNS(
                          h.globals.SVGNS,
                          "title"
                        );
                        if (
                          ((We.textContent = Array.isArray(X)
                            ? X.join(" ")
                            : X),
                          Pe.node.appendChild(We),
                          h.config.yaxis[i].labels.rotate !== 0)
                        ) {
                          var ze = d.rotateAroundCenter(Pe.node);
                          Pe.node.setAttribute(
                            "transform",
                            "rotate("
                              .concat(h.config.yaxis[i].labels.rotate, " 0 ")
                              .concat(ze.y, ")")
                          );
                        }
                        l += s;
                      },
                      D = 0;
                    D <= b.length - 1;
                    D++
                  )
                    O(D);
                if (h.config.yaxis[0].title.text !== void 0) {
                  var V = d.group({
                      class:
                        "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                      transform: "translate(" + f + ", 0)",
                    }),
                    G = d.drawText({
                      x: h.config.yaxis[0].title.offsetX,
                      y:
                        h.globals.gridHeight / 2 +
                        h.config.yaxis[0].title.offsetY,
                      text: h.config.yaxis[0].title.text,
                      textAnchor: "middle",
                      foreColor: h.config.yaxis[0].title.style.color,
                      fontSize: h.config.yaxis[0].title.style.fontSize,
                      fontWeight: h.config.yaxis[0].title.style.fontWeight,
                      fontFamily: h.config.yaxis[0].title.style.fontFamily,
                      cssClass:
                        "apexcharts-yaxis-title-text " +
                        h.config.yaxis[0].title.style.cssClass,
                    });
                  V.add(G), p.add(V);
                }
                var Q = 0;
                this.isCategoryBarHorizontal &&
                  h.config.yaxis[0].opposite &&
                  (Q = h.globals.gridWidth);
                var m = h.config.xaxis.axisBorder;
                if (m.show) {
                  var k = d.drawLine(
                    h.globals.padHorizontal + m.offsetX + Q,
                    1 + m.offsetY,
                    h.globals.padHorizontal + m.offsetX + Q,
                    h.globals.gridHeight + m.offsetY,
                    m.color,
                    0
                  );
                  this.elgrid && this.elgrid.elGridBorders && h.config.grid.show
                    ? this.elgrid.elGridBorders.add(k)
                    : p.add(k);
                }
                return (
                  h.config.yaxis[0].axisTicks.show &&
                    this.axesUtils.drawYAxisTicks(
                      Q,
                      b.length,
                      h.config.yaxis[0].axisBorder,
                      h.config.yaxis[0].axisTicks,
                      0,
                      s,
                      p
                    ),
                  p
                );
              },
            },
            {
              key: "drawXaxisTicks",
              value: function (i, s, l) {
                var c = this.w,
                  h = i;
                if (!(i < 0 || i - 2 > c.globals.gridWidth)) {
                  var d = this.offY + c.config.xaxis.axisTicks.offsetY;
                  if (
                    ((s = s + d + c.config.xaxis.axisTicks.height),
                    c.config.xaxis.position === "top" &&
                      (s = d - c.config.xaxis.axisTicks.height),
                    c.config.xaxis.axisTicks.show)
                  ) {
                    var f = new C(this.ctx).drawLine(
                      i + c.config.xaxis.axisTicks.offsetX,
                      d + c.config.xaxis.offsetY,
                      h + c.config.xaxis.axisTicks.offsetX,
                      s + c.config.xaxis.offsetY,
                      c.config.xaxis.axisTicks.color
                    );
                    l.add(f), f.node.classList.add("apexcharts-xaxis-tick");
                  }
                }
              },
            },
            {
              key: "getXAxisTicksPositions",
              value: function () {
                var i = this.w,
                  s = [],
                  l = this.xaxisLabels.length,
                  c = i.globals.padHorizontal;
                if (i.globals.timescaleLabels.length > 0)
                  for (var h = 0; h < l; h++)
                    (c = this.xaxisLabels[h].position), s.push(c);
                else
                  for (var d = l, f = 0; f < d; f++) {
                    var p = d;
                    i.globals.isXNumeric &&
                      i.config.chart.type !== "bar" &&
                      (p -= 1),
                      (c += i.globals.gridWidth / p),
                      s.push(c);
                  }
                return s;
              },
            },
            {
              key: "xAxisLabelCorrections",
              value: function () {
                var i = this.w,
                  s = new C(this.ctx),
                  l = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxis-texts-g"
                  ),
                  c = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"
                  ),
                  h = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-yaxis-inversed text"
                  ),
                  d = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-xaxis-inversed-texts-g text tspan"
                  );
                if (
                  i.globals.rotateXLabels ||
                  i.config.xaxis.labels.rotateAlways
                )
                  for (var f = 0; f < c.length; f++) {
                    var p = s.rotateAroundCenter(c[f]);
                    (p.y = p.y - 1),
                      (p.x = p.x + 1),
                      c[f].setAttribute(
                        "transform",
                        "rotate("
                          .concat(i.config.xaxis.labels.rotate, " ")
                          .concat(p.x, " ")
                          .concat(p.y, ")")
                      ),
                      c[f].setAttribute("text-anchor", "end"),
                      l.setAttribute(
                        "transform",
                        "translate(0, ".concat(-10, ")")
                      );
                    var v = c[f].childNodes;
                    i.config.xaxis.labels.trim &&
                      Array.prototype.forEach.call(v, function (T) {
                        s.placeTextWithEllipsis(
                          T,
                          T.textContent,
                          i.globals.xAxisLabelsHeight -
                            (i.config.legend.position === "bottom" ? 20 : 10)
                        );
                      });
                  }
                else
                  (function () {
                    for (
                      var T =
                          i.globals.gridWidth / (i.globals.labels.length + 1),
                        O = 0;
                      O < c.length;
                      O++
                    ) {
                      var D = c[O].childNodes;
                      i.config.xaxis.labels.trim &&
                        i.config.xaxis.type !== "datetime" &&
                        Array.prototype.forEach.call(D, function (V) {
                          s.placeTextWithEllipsis(V, V.textContent, T);
                        });
                    }
                  })();
                if (h.length > 0) {
                  var b = h[h.length - 1].getBBox(),
                    _ = h[0].getBBox();
                  b.x < -20 &&
                    h[h.length - 1].parentNode.removeChild(h[h.length - 1]),
                    _.x + _.width > i.globals.gridWidth &&
                      !i.globals.isBarHorizontal &&
                      h[0].parentNode.removeChild(h[0]);
                  for (var S = 0; S < d.length; S++)
                    s.placeTextWithEllipsis(
                      d[S],
                      d[S].textContent,
                      i.config.yaxis[0].labels.maxWidth -
                        (i.config.yaxis[0].title.text
                          ? 2 *
                            parseFloat(i.config.yaxis[0].title.style.fontSize)
                          : 0) -
                        15
                    );
                }
              },
            },
          ]),
          U
        );
      })(),
      $t = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
          var s = this.w;
          (this.xaxisLabels = s.globals.labels.slice()),
            (this.axesUtils = new Ze(i)),
            (this.isRangeBar =
              s.globals.seriesRange.length && s.globals.isBarHorizontal),
            s.globals.timescaleLabels.length > 0 &&
              (this.xaxisLabels = s.globals.timescaleLabels.slice());
        }
        return (
          g(U, [
            {
              key: "drawGridArea",
              value: function () {
                var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  s = this.w,
                  l = new C(this.ctx);
                i === null && (i = l.group({ class: "apexcharts-grid" }));
                var c = l.drawLine(
                    s.globals.padHorizontal,
                    1,
                    s.globals.padHorizontal,
                    s.globals.gridHeight,
                    "transparent"
                  ),
                  h = l.drawLine(
                    s.globals.padHorizontal,
                    s.globals.gridHeight,
                    s.globals.gridWidth,
                    s.globals.gridHeight,
                    "transparent"
                  );
                return i.add(h), i.add(c), i;
              },
            },
            {
              key: "drawGrid",
              value: function () {
                var i = null;
                return (
                  this.w.globals.axisCharts &&
                    ((i = this.renderGrid()), this.drawGridArea(i.el)),
                  i
                );
              },
            },
            {
              key: "createGridMask",
              value: function () {
                var i = this.w,
                  s = i.globals,
                  l = new C(this.ctx),
                  c = Array.isArray(i.config.stroke.width)
                    ? 0
                    : i.config.stroke.width;
                if (Array.isArray(i.config.stroke.width)) {
                  var h = 0;
                  i.config.stroke.width.forEach(function (_) {
                    h = Math.max(h, _);
                  }),
                    (c = h);
                }
                (s.dom.elGridRectMask = document.createElementNS(
                  s.SVGNS,
                  "clipPath"
                )),
                  s.dom.elGridRectMask.setAttribute(
                    "id",
                    "gridRectMask".concat(s.cuid)
                  ),
                  (s.dom.elGridRectMarkerMask = document.createElementNS(
                    s.SVGNS,
                    "clipPath"
                  )),
                  s.dom.elGridRectMarkerMask.setAttribute(
                    "id",
                    "gridRectMarkerMask".concat(s.cuid)
                  ),
                  (s.dom.elForecastMask = document.createElementNS(
                    s.SVGNS,
                    "clipPath"
                  )),
                  s.dom.elForecastMask.setAttribute(
                    "id",
                    "forecastMask".concat(s.cuid)
                  ),
                  (s.dom.elNonForecastMask = document.createElementNS(
                    s.SVGNS,
                    "clipPath"
                  )),
                  s.dom.elNonForecastMask.setAttribute(
                    "id",
                    "nonForecastMask".concat(s.cuid)
                  );
                var d = i.config.chart.type,
                  f = 0,
                  p = 0;
                (d === "bar" ||
                  d === "rangeBar" ||
                  d === "candlestick" ||
                  d === "boxPlot" ||
                  i.globals.comboBarCount > 0) &&
                  i.globals.isXNumeric &&
                  !i.globals.isBarHorizontal &&
                  ((f = i.config.grid.padding.left),
                  (p = i.config.grid.padding.right),
                  s.barPadForNumericAxis > f &&
                    ((f = s.barPadForNumericAxis),
                    (p = s.barPadForNumericAxis))),
                  (s.dom.elGridRect = l.drawRect(
                    -c - f - 2,
                    2 * -c - 2,
                    s.gridWidth + c + p + f + 4,
                    s.gridHeight + 4 * c + 4,
                    0,
                    "#fff"
                  ));
                var v = i.globals.markers.largestSize + 1;
                (s.dom.elGridRectMarker = l.drawRect(
                  2 * -v,
                  2 * -v,
                  s.gridWidth + 4 * v,
                  s.gridHeight + 4 * v,
                  0,
                  "#fff"
                )),
                  s.dom.elGridRectMask.appendChild(s.dom.elGridRect.node),
                  s.dom.elGridRectMarkerMask.appendChild(
                    s.dom.elGridRectMarker.node
                  );
                var b = s.dom.baseEl.querySelector("defs");
                b.appendChild(s.dom.elGridRectMask),
                  b.appendChild(s.dom.elForecastMask),
                  b.appendChild(s.dom.elNonForecastMask),
                  b.appendChild(s.dom.elGridRectMarkerMask);
              },
            },
            {
              key: "_drawGridLines",
              value: function (i) {
                var s = i.i,
                  l = i.x1,
                  c = i.y1,
                  h = i.x2,
                  d = i.y2,
                  f = i.xCount,
                  p = i.parent,
                  v = this.w;
                if (
                  !(
                    (s === 0 && v.globals.skipFirstTimelinelabel) ||
                    (s === f - 1 &&
                      v.globals.skipLastTimelinelabel &&
                      !v.config.xaxis.labels.formatter) ||
                    v.config.chart.type === "radar"
                  )
                ) {
                  v.config.grid.xaxis.lines.show &&
                    this._drawGridLine({
                      i: s,
                      x1: l,
                      y1: c,
                      x2: h,
                      y2: d,
                      xCount: f,
                      parent: p,
                    });
                  var b = 0;
                  if (
                    v.globals.hasXaxisGroups &&
                    v.config.xaxis.tickPlacement === "between"
                  ) {
                    var _ = v.globals.groups;
                    if (_) {
                      for (var S = 0, T = 0; S < s && T < _.length; T++)
                        S += _[T].cols;
                      S === s && (b = 0.6 * v.globals.xAxisLabelsHeight);
                    }
                  }
                  new Wt(this.ctx).drawXaxisTicks(
                    l,
                    b,
                    v.globals.dom.elGraphical
                  );
                }
              },
            },
            {
              key: "_drawGridLine",
              value: function (i) {
                var s = i.i,
                  l = i.x1,
                  c = i.y1,
                  h = i.x2,
                  d = i.y2,
                  f = i.xCount,
                  p = i.parent,
                  v = this.w,
                  b = !1,
                  _ = p.node.classList.contains(
                    "apexcharts-gridlines-horizontal"
                  ),
                  S = v.config.grid.strokeDashArray,
                  T = v.globals.barPadForNumericAxis;
                ((c === 0 && d === 0) || (l === 0 && h === 0)) && (b = !0),
                  c === v.globals.gridHeight &&
                    d === v.globals.gridHeight &&
                    (b = !0),
                  !v.globals.isBarHorizontal ||
                    (s !== 0 && s !== f - 1) ||
                    (b = !0);
                var O = new C(this).drawLine(
                  l - (_ ? T : 0),
                  c,
                  h + (_ ? T : 0),
                  d,
                  v.config.grid.borderColor,
                  S
                );
                O.node.classList.add("apexcharts-gridline"),
                  b && v.config.grid.show
                    ? this.elGridBorders.add(O)
                    : p.add(O);
              },
            },
            {
              key: "_drawGridBandRect",
              value: function (i) {
                var s = i.c,
                  l = i.x1,
                  c = i.y1,
                  h = i.x2,
                  d = i.y2,
                  f = i.type,
                  p = this.w,
                  v = new C(this.ctx),
                  b = p.globals.barPadForNumericAxis;
                if (f !== "column" || p.config.xaxis.type !== "datetime") {
                  var _ = p.config.grid[f].colors[s],
                    S = v.drawRect(
                      l - (f === "row" ? b : 0),
                      c,
                      h + (f === "row" ? 2 * b : 0),
                      d,
                      0,
                      _,
                      p.config.grid[f].opacity
                    );
                  this.elg.add(S),
                    S.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(p.globals.cuid, ")")
                    ),
                    S.node.classList.add("apexcharts-grid-".concat(f));
                }
              },
            },
            {
              key: "_drawXYLines",
              value: function (i) {
                var s = this,
                  l = i.xCount,
                  c = i.tickAmount,
                  h = this.w;
                if (
                  h.config.grid.xaxis.lines.show ||
                  h.config.xaxis.axisTicks.show
                ) {
                  var d,
                    f = h.globals.padHorizontal,
                    p = h.globals.gridHeight;
                  h.globals.timescaleLabels.length
                    ? (function (O) {
                        for (
                          var D = O.xC,
                            V = O.x1,
                            G = O.y1,
                            Q = O.x2,
                            m = O.y2,
                            k = 0;
                          k < D;
                          k++
                        )
                          (V = s.xaxisLabels[k].position),
                            (Q = s.xaxisLabels[k].position),
                            s._drawGridLines({
                              i: k,
                              x1: V,
                              y1: G,
                              x2: Q,
                              y2: m,
                              xCount: l,
                              parent: s.elgridLinesV,
                            });
                      })({ xC: l, x1: f, y1: 0, x2: d, y2: p })
                    : (h.globals.isXNumeric &&
                        (l = h.globals.xAxisScale.result.length),
                      (function (O) {
                        for (
                          var D = O.xC,
                            V = O.x1,
                            G = O.y1,
                            Q = O.x2,
                            m = O.y2,
                            k = 0;
                          k < D + (h.globals.isXNumeric ? 0 : 1);
                          k++
                        )
                          k === 0 &&
                            D === 1 &&
                            h.globals.dataPoints === 1 &&
                            (Q = V = h.globals.gridWidth / 2),
                            s._drawGridLines({
                              i: k,
                              x1: V,
                              y1: G,
                              x2: Q,
                              y2: m,
                              xCount: l,
                              parent: s.elgridLinesV,
                            }),
                            (Q = V +=
                              h.globals.gridWidth /
                              (h.globals.isXNumeric ? D - 1 : D));
                      })({ xC: l, x1: f, y1: 0, x2: d, y2: p }));
                }
                if (h.config.grid.yaxis.lines.show) {
                  var v = 0,
                    b = 0,
                    _ = h.globals.gridWidth,
                    S = c + 1;
                  this.isRangeBar && (S = h.globals.labels.length);
                  for (var T = 0; T < S + (this.isRangeBar ? 1 : 0); T++)
                    this._drawGridLine({
                      i: T,
                      xCount: S + (this.isRangeBar ? 1 : 0),
                      x1: 0,
                      y1: v,
                      x2: _,
                      y2: b,
                      parent: this.elgridLinesH,
                    }),
                      (b = v +=
                        h.globals.gridHeight / (this.isRangeBar ? S : c));
                }
              },
            },
            {
              key: "_drawInvertedXYLines",
              value: function (i) {
                var s = i.xCount,
                  l = this.w;
                if (
                  l.config.grid.xaxis.lines.show ||
                  l.config.xaxis.axisTicks.show
                )
                  for (
                    var c,
                      h = l.globals.padHorizontal,
                      d = l.globals.gridHeight,
                      f = 0;
                    f < s + 1;
                    f++
                  )
                    l.config.grid.xaxis.lines.show &&
                      this._drawGridLine({
                        i: f,
                        xCount: s + 1,
                        x1: h,
                        y1: 0,
                        x2: c,
                        y2: d,
                        parent: this.elgridLinesV,
                      }),
                      new Wt(this.ctx).drawXaxisTicks(
                        h,
                        0,
                        l.globals.dom.elGraphical
                      ),
                      (c = h = h + l.globals.gridWidth / s + 0.3);
                if (l.config.grid.yaxis.lines.show)
                  for (
                    var p = 0, v = 0, b = l.globals.gridWidth, _ = 0;
                    _ < l.globals.dataPoints + 1;
                    _++
                  )
                    this._drawGridLine({
                      i: _,
                      xCount: l.globals.dataPoints + 1,
                      x1: 0,
                      y1: p,
                      x2: b,
                      y2: v,
                      parent: this.elgridLinesH,
                    }),
                      (v = p += l.globals.gridHeight / l.globals.dataPoints);
              },
            },
            {
              key: "renderGrid",
              value: function () {
                var i = this.w,
                  s = new C(this.ctx);
                (this.elg = s.group({ class: "apexcharts-grid" })),
                  (this.elgridLinesH = s.group({
                    class: "apexcharts-gridlines-horizontal",
                  })),
                  (this.elgridLinesV = s.group({
                    class: "apexcharts-gridlines-vertical",
                  })),
                  (this.elGridBorders = s.group({
                    class: "apexcharts-grid-borders",
                  })),
                  this.elg.add(this.elgridLinesH),
                  this.elg.add(this.elgridLinesV),
                  i.config.grid.show ||
                    (this.elgridLinesV.hide(),
                    this.elgridLinesH.hide(),
                    this.elGridBorders.hide());
                for (
                  var l,
                    c = i.globals.yAxisScale.length
                      ? i.globals.yAxisScale[0].result.length - 1
                      : 5,
                    h = 0;
                  h < i.globals.series.length &&
                  (i.globals.yAxisScale[h] !== void 0 &&
                    (c = i.globals.yAxisScale[h].result.length - 1),
                  !(c > 2));
                  h++
                );
                return (
                  !i.globals.isBarHorizontal || this.isRangeBar
                    ? ((l = this.xaxisLabels.length),
                      this.isRangeBar &&
                        (l--,
                        (c = i.globals.labels.length),
                        i.config.xaxis.tickAmount &&
                          i.config.xaxis.labels.formatter &&
                          (l = i.config.xaxis.tickAmount)),
                      this._drawXYLines({ xCount: l, tickAmount: c }))
                    : ((l = c),
                      (c = i.globals.xTickAmount),
                      this._drawInvertedXYLines({ xCount: l, tickAmount: c })),
                  this.drawGridBands(l, c),
                  {
                    el: this.elg,
                    elGridBorders: this.elGridBorders,
                    xAxisTickWidth: i.globals.gridWidth / l,
                  }
                );
              },
            },
            {
              key: "drawGridBands",
              value: function (i, s) {
                var l = this.w;
                if (
                  l.config.grid.row.colors !== void 0 &&
                  l.config.grid.row.colors.length > 0
                )
                  for (
                    var c = 0,
                      h = l.globals.gridHeight / s,
                      d = l.globals.gridWidth,
                      f = 0,
                      p = 0;
                    f < s;
                    f++, p++
                  )
                    p >= l.config.grid.row.colors.length && (p = 0),
                      this._drawGridBandRect({
                        c: p,
                        x1: 0,
                        y1: c,
                        x2: d,
                        y2: h,
                        type: "row",
                      }),
                      (c += l.globals.gridHeight / s);
                if (
                  l.config.grid.column.colors !== void 0 &&
                  l.config.grid.column.colors.length > 0
                )
                  for (
                    var v =
                        l.globals.isBarHorizontal ||
                        l.config.xaxis.tickPlacement !== "on" ||
                        (l.config.xaxis.type !== "category" &&
                          !l.config.xaxis.convertedCatToNumeric)
                          ? i
                          : i - 1,
                      b = l.globals.padHorizontal,
                      _ = l.globals.padHorizontal + l.globals.gridWidth / v,
                      S = l.globals.gridHeight,
                      T = 0,
                      O = 0;
                    T < i;
                    T++, O++
                  )
                    O >= l.config.grid.column.colors.length && (O = 0),
                      this._drawGridBandRect({
                        c: O,
                        x1: b,
                        y1: 0,
                        x2: _,
                        y2: S,
                        type: "column",
                      }),
                      (b += l.globals.gridWidth / v);
              },
            },
          ]),
          U
        );
      })(),
      Rt = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "niceScale",
              value: function (i, s) {
                var l =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 10,
                  c =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 0,
                  h = arguments.length > 4 ? arguments[4] : void 0,
                  d = this.w,
                  f = Math.abs(s - i);
                if (
                  ((l = this._adjustTicksForSmallRange(l, c, f)) ===
                    "dataPoints" && (l = d.globals.dataPoints - 1),
                  (i === Number.MIN_VALUE && s === 0) ||
                    (!F.isNumber(i) && !F.isNumber(s)) ||
                    (i === Number.MIN_VALUE && s === -Number.MAX_VALUE))
                )
                  return (i = 0), (s = l), this.linearScale(i, s, l);
                i > s
                  ? (console.warn("axis.min cannot be greater than axis.max"),
                    (s = i + 0.1))
                  : i === s &&
                    ((i = i === 0 ? 0 : i - 0.5), (s = s === 0 ? 2 : s + 0.5));
                var p = [];
                f < 1 &&
                  h &&
                  (d.config.chart.type === "candlestick" ||
                    d.config.series[c].type === "candlestick" ||
                    d.config.chart.type === "boxPlot" ||
                    d.config.series[c].type === "boxPlot" ||
                    d.globals.isRangeData) &&
                  (s *= 1.01);
                var v = l + 1;
                v < 2 ? (v = 2) : v > 2 && (v -= 2);
                var b = f / v,
                  _ = Math.floor(F.log10(b)),
                  S = Math.pow(10, _),
                  T = Math.round(b / S);
                T < 1 && (T = 1);
                var O = T * S,
                  D = O * Math.floor(i / O),
                  V = O * Math.ceil(s / O),
                  G = D;
                if (h && f > 2) {
                  for (; p.push(F.stripNumber(G, 7)), !((G += O) > V); );
                  return { result: p, niceMin: p[0], niceMax: p[p.length - 1] };
                }
                var Q = i;
                (p = []).push(F.stripNumber(Q, 7));
                for (var m = Math.abs(s - i) / l, k = 0; k <= l; k++)
                  (Q += m), p.push(Q);
                return (
                  p[p.length - 2] >= s && p.pop(),
                  { result: p, niceMin: p[0], niceMax: p[p.length - 1] }
                );
              },
            },
            {
              key: "linearScale",
              value: function (i, s) {
                var l =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 10,
                  c = arguments.length > 3 ? arguments[3] : void 0,
                  h = Math.abs(s - i);
                (l = this._adjustTicksForSmallRange(l, c, h)) ===
                  "dataPoints" && (l = this.w.globals.dataPoints - 1);
                var d = h / l;
                l === Number.MAX_VALUE && ((l = 10), (d = 1));
                for (var f = [], p = i; l >= 0; ) f.push(p), (p += d), (l -= 1);
                return { result: f, niceMin: f[0], niceMax: f[f.length - 1] };
              },
            },
            {
              key: "logarithmicScaleNice",
              value: function (i, s, l) {
                s <= 0 && (s = Math.max(i, l)), i <= 0 && (i = Math.min(s, l));
                for (
                  var c = [],
                    h = Math.ceil(Math.log(s) / Math.log(l) + 1),
                    d = Math.floor(Math.log(i) / Math.log(l));
                  d < h;
                  d++
                )
                  c.push(Math.pow(l, d));
                return { result: c, niceMin: c[0], niceMax: c[c.length - 1] };
              },
            },
            {
              key: "logarithmicScale",
              value: function (i, s, l) {
                s <= 0 && (s = Math.max(i, l)), i <= 0 && (i = Math.min(s, l));
                for (
                  var c = [],
                    h = Math.log(s) / Math.log(l),
                    d = Math.log(i) / Math.log(l),
                    f = h - d,
                    p = Math.round(f),
                    v = f / p,
                    b = 0,
                    _ = d;
                  b < p;
                  b++, _ += v
                )
                  c.push(Math.pow(l, _));
                return (
                  c.push(Math.pow(l, h)), { result: c, niceMin: i, niceMax: s }
                );
              },
            },
            {
              key: "_adjustTicksForSmallRange",
              value: function (i, s, l) {
                var c = i;
                if (
                  s !== void 0 &&
                  this.w.config.yaxis[s].labels.formatter &&
                  this.w.config.yaxis[s].tickAmount === void 0
                ) {
                  var h = Number(this.w.config.yaxis[s].labels.formatter(1));
                  F.isNumber(h) &&
                    this.w.globals.yValueDecimal === 0 &&
                    (c = Math.ceil(l));
                }
                return c < i ? c : i;
              },
            },
            {
              key: "setYScaleForIndex",
              value: function (i, s, l) {
                var c = this.w.globals,
                  h = this.w.config,
                  d = c.isBarHorizontal ? h.xaxis : h.yaxis[i];
                c.yAxisScale[i] === void 0 && (c.yAxisScale[i] = []);
                var f = Math.abs(l - s);
                if (
                  (d.logarithmic && f <= 5 && (c.invalidLogScale = !0),
                  d.logarithmic && f > 5)
                )
                  (c.allSeriesCollapsed = !1),
                    (c.yAxisScale[i] = this.logarithmicScale(s, l, d.logBase)),
                    (c.yAxisScale[i] = d.forceNiceScale
                      ? this.logarithmicScaleNice(s, l, d.logBase)
                      : this.logarithmicScale(s, l, d.logBase));
                else if (l !== -Number.MAX_VALUE && F.isNumber(l))
                  if (
                    ((c.allSeriesCollapsed = !1),
                    (d.min === void 0 && d.max === void 0) || d.forceNiceScale)
                  ) {
                    var p =
                      (h.yaxis[i].max === void 0 &&
                        h.yaxis[i].min === void 0) ||
                      h.yaxis[i].forceNiceScale;
                    c.yAxisScale[i] = this.niceScale(
                      s,
                      l,
                      d.tickAmount ? d.tickAmount : f < 5 && f > 1 ? f + 1 : 5,
                      i,
                      p
                    );
                  } else
                    c.yAxisScale[i] = this.linearScale(s, l, d.tickAmount, i);
                else c.yAxisScale[i] = this.linearScale(0, 5, 5);
              },
            },
            {
              key: "setXScale",
              value: function (i, s) {
                var l = this.w,
                  c = l.globals,
                  h = l.config.xaxis,
                  d = Math.abs(s - i);
                return (
                  s !== -Number.MAX_VALUE && F.isNumber(s)
                    ? (c.xAxisScale = this.linearScale(
                        i,
                        s,
                        h.tickAmount
                          ? h.tickAmount
                          : d < 5 && d > 1
                          ? d + 1
                          : 5,
                        0
                      ))
                    : (c.xAxisScale = this.linearScale(0, 5, 5)),
                  c.xAxisScale
                );
              },
            },
            {
              key: "setMultipleYScales",
              value: function () {
                var i = this,
                  s = this.w.globals,
                  l = this.w.config,
                  c = s.minYArr.concat([]),
                  h = s.maxYArr.concat([]),
                  d = [];
                l.yaxis.forEach(function (f, p) {
                  var v = p;
                  l.series.forEach(function (S, T) {
                    S.name === f.seriesName &&
                      ((v = T),
                      p !== T
                        ? d.push({
                            index: T,
                            similarIndex: p,
                            alreadyExists: !0,
                          })
                        : d.push({ index: T }));
                  });
                  var b = c[v],
                    _ = h[v];
                  i.setYScaleForIndex(p, b, _);
                }),
                  this.sameScaleInMultipleAxes(c, h, d);
              },
            },
            {
              key: "sameScaleInMultipleAxes",
              value: function (i, s, l) {
                var c = this,
                  h = this.w.config,
                  d = this.w.globals,
                  f = [];
                l.forEach(function (D) {
                  D.alreadyExists &&
                    (f[D.index] === void 0 && (f[D.index] = []),
                    f[D.index].push(D.index),
                    f[D.index].push(D.similarIndex));
                }),
                  (d.yAxisSameScaleIndices = f),
                  f.forEach(function (D, V) {
                    f.forEach(function (G, Q) {
                      var m, k;
                      V !== Q &&
                        ((m = D),
                        (k = G),
                        m.filter(function (N) {
                          return k.indexOf(N) !== -1;
                        })).length > 0 &&
                        (f[V] = f[V].concat(f[Q]));
                    });
                  });
                var p = f
                  .map(function (D) {
                    return D.filter(function (V, G) {
                      return D.indexOf(V) === G;
                    });
                  })
                  .map(function (D) {
                    return D.sort();
                  });
                f = f.filter(function (D) {
                  return !!D;
                });
                var v = p.slice(),
                  b = v.map(function (D) {
                    return JSON.stringify(D);
                  });
                v = v.filter(function (D, V) {
                  return b.indexOf(JSON.stringify(D)) === V;
                });
                var _ = [],
                  S = [];
                i.forEach(function (D, V) {
                  v.forEach(function (G, Q) {
                    G.indexOf(V) > -1 &&
                      (_[Q] === void 0 && ((_[Q] = []), (S[Q] = [])),
                      _[Q].push({ key: V, value: D }),
                      S[Q].push({ key: V, value: s[V] }));
                  });
                });
                var T = Array.apply(null, Array(v.length)).map(
                    Number.prototype.valueOf,
                    Number.MIN_VALUE
                  ),
                  O = Array.apply(null, Array(v.length)).map(
                    Number.prototype.valueOf,
                    -Number.MAX_VALUE
                  );
                _.forEach(function (D, V) {
                  D.forEach(function (G, Q) {
                    T[V] = Math.min(G.value, T[V]);
                  });
                }),
                  S.forEach(function (D, V) {
                    D.forEach(function (G, Q) {
                      O[V] = Math.max(G.value, O[V]);
                    });
                  }),
                  i.forEach(function (D, V) {
                    S.forEach(function (G, Q) {
                      var m = T[Q],
                        k = O[Q];
                      h.chart.stacked &&
                        ((k = 0),
                        G.forEach(function (N, X) {
                          N.value !== -Number.MAX_VALUE && (k += N.value),
                            m !== Number.MIN_VALUE && (m += _[Q][X].value);
                        })),
                        G.forEach(function (N, X) {
                          G[X].key === V &&
                            (h.yaxis[V].min !== void 0 &&
                              (m =
                                typeof h.yaxis[V].min == "function"
                                  ? h.yaxis[V].min(d.minY)
                                  : h.yaxis[V].min),
                            h.yaxis[V].max !== void 0 &&
                              (k =
                                typeof h.yaxis[V].max == "function"
                                  ? h.yaxis[V].max(d.maxY)
                                  : h.yaxis[V].max),
                            c.setYScaleForIndex(V, m, k));
                        });
                    });
                  });
              },
            },
            {
              key: "autoScaleY",
              value: function (i, s, l) {
                i || (i = this);
                var c = i.w;
                if (
                  c.globals.isMultipleYAxis ||
                  c.globals.collapsedSeries.length
                )
                  return (
                    console.warn(
                      "autoScaleYaxis not supported in a multi-yaxis chart."
                    ),
                    s
                  );
                var h = c.globals.seriesX[0],
                  d = c.config.chart.stacked;
                return (
                  s.forEach(function (f, p) {
                    for (var v = 0, b = 0; b < h.length; b++)
                      if (h[b] >= l.xaxis.min) {
                        v = b;
                        break;
                      }
                    var _,
                      S,
                      T = c.globals.minYArr[p],
                      O = c.globals.maxYArr[p],
                      D = c.globals.stackedSeriesTotals;
                    c.globals.series.forEach(function (V, G) {
                      var Q = V[v];
                      d
                        ? ((Q = D[v]),
                          (_ = S = Q),
                          D.forEach(function (m, k) {
                            h[k] <= l.xaxis.max &&
                              h[k] >= l.xaxis.min &&
                              (m > S && m !== null && (S = m),
                              V[k] < _ && V[k] !== null && (_ = V[k]));
                          }))
                        : ((_ = S = Q),
                          V.forEach(function (m, k) {
                            if (h[k] <= l.xaxis.max && h[k] >= l.xaxis.min) {
                              var N = m,
                                X = m;
                              c.globals.series.forEach(function (K, ee) {
                                m !== null &&
                                  ((N = Math.min(K[k], N)),
                                  (X = Math.max(K[k], X)));
                              }),
                                X > S && X !== null && (S = X),
                                N < _ && N !== null && (_ = N);
                            }
                          })),
                        _ === void 0 && S === void 0 && ((_ = T), (S = O)),
                        (S *= S < 0 ? 0.9 : 1.1),
                        (_ *= _ < 0 ? 1.1 : 0.9) === 0 &&
                          S === 0 &&
                          ((_ = -1), (S = 1)),
                        S < 0 && S < O && (S = O),
                        _ < 0 && _ > T && (_ = T),
                        s.length > 1
                          ? ((s[G].min = f.min === void 0 ? _ : f.min),
                            (s[G].max = f.max === void 0 ? S : f.max))
                          : ((s[0].min = f.min === void 0 ? _ : f.min),
                            (s[0].max = f.max === void 0 ? S : f.max));
                    });
                  }),
                  s
                );
              },
            },
          ]),
          U
        );
      })(),
      sn = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w), (this.scales = new Rt(i));
        }
        return (
          g(U, [
            {
              key: "init",
              value: function () {
                this.setYRange(), this.setXRange(), this.setZRange();
              },
            },
            {
              key: "getMinYMaxY",
              value: function (i) {
                var s =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : Number.MAX_VALUE,
                  l =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : -Number.MAX_VALUE,
                  c =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : null,
                  h = this.w.config,
                  d = this.w.globals,
                  f = -Number.MAX_VALUE,
                  p = Number.MIN_VALUE;
                c === null && (c = i + 1);
                var v = d.series,
                  b = v,
                  _ = v;
                h.chart.type === "candlestick"
                  ? ((b = d.seriesCandleL), (_ = d.seriesCandleH))
                  : h.chart.type === "boxPlot"
                  ? ((b = d.seriesCandleO), (_ = d.seriesCandleC))
                  : d.isRangeData &&
                    ((b = d.seriesRangeStart), (_ = d.seriesRangeEnd));
                for (var S = i; S < c; S++) {
                  (d.dataPoints = Math.max(d.dataPoints, v[S].length)),
                    d.categoryLabels.length &&
                      (d.dataPoints = d.categoryLabels.filter(function (D) {
                        return D !== void 0;
                      }).length),
                    d.labels.length &&
                      h.xaxis.type !== "datetime" &&
                      d.series.reduce(function (D, V) {
                        return D + V.length;
                      }, 0) !== 0 &&
                      (d.dataPoints = Math.max(d.dataPoints, d.labels.length));
                  for (var T = 0; T < d.series[S].length; T++) {
                    var O = v[S][T];
                    O !== null && F.isNumber(O)
                      ? (_[S][T] !== void 0 &&
                          ((f = Math.max(f, _[S][T])),
                          (s = Math.min(s, _[S][T]))),
                        b[S][T] !== void 0 &&
                          ((s = Math.min(s, b[S][T])),
                          (l = Math.max(l, b[S][T]))),
                        (this.w.config.chart.type !== "candlestick" &&
                          this.w.config.chart.type !== "boxPlot" &&
                          this.w.config.chart.type === "rangeArea" &&
                          this.w.config.chart.type === "rangeBar") ||
                          ((this.w.config.chart.type !== "candlestick" &&
                            this.w.config.chart.type !== "boxPlot") ||
                            (d.seriesCandleC[S][T] !== void 0 &&
                              ((f = Math.max(f, d.seriesCandleO[S][T])),
                              (f = Math.max(f, d.seriesCandleH[S][T])),
                              (f = Math.max(f, d.seriesCandleL[S][T])),
                              (f = Math.max(f, d.seriesCandleC[S][T])),
                              this.w.config.chart.type === "boxPlot" &&
                                (f = Math.max(f, d.seriesCandleM[S][T])))),
                          !h.series[S].type ||
                            (h.series[S].type === "candlestick" &&
                              h.series[S].type === "boxPlot" &&
                              h.series[S].type === "rangeArea" &&
                              h.series[S].type === "rangeBar") ||
                            ((f = Math.max(f, d.series[S][T])),
                            (s = Math.min(s, d.series[S][T]))),
                          (l = f)),
                        d.seriesGoals[S] &&
                          d.seriesGoals[S][T] &&
                          Array.isArray(d.seriesGoals[S][T]) &&
                          d.seriesGoals[S][T].forEach(function (D) {
                            p !== Number.MIN_VALUE &&
                              ((p = Math.min(p, D.value)), (s = p)),
                              (f = Math.max(f, D.value)),
                              (l = f);
                          }),
                        F.isFloat(O) &&
                          ((O = F.noExponents(O)),
                          (d.yValueDecimal = Math.max(
                            d.yValueDecimal,
                            O.toString().split(".")[1].length
                          ))),
                        p > b[S][T] && b[S][T] < 0 && (p = b[S][T]))
                      : (d.hasNullValues = !0);
                  }
                }
                return (
                  h.chart.type === "rangeBar" &&
                    d.seriesRangeStart.length &&
                    d.isBarHorizontal &&
                    (p = s),
                  h.chart.type === "bar" &&
                    (p < 0 && f < 0 && (f = 0),
                    p === Number.MIN_VALUE && (p = 0)),
                  { minY: p, maxY: f, lowestY: s, highestY: l }
                );
              },
            },
            {
              key: "setYRange",
              value: function () {
                var i = this.w.globals,
                  s = this.w.config;
                (i.maxY = -Number.MAX_VALUE), (i.minY = Number.MIN_VALUE);
                var l = Number.MAX_VALUE;
                if (i.isMultipleYAxis)
                  for (var c = 0; c < i.series.length; c++) {
                    var h = this.getMinYMaxY(c, l, null, c + 1);
                    i.minYArr.push(h.minY),
                      i.maxYArr.push(h.maxY),
                      (l = h.lowestY);
                  }
                var d = this.getMinYMaxY(0, l, null, i.series.length);
                if (
                  ((i.minY = d.minY),
                  (i.maxY = d.maxY),
                  (l = d.lowestY),
                  s.chart.stacked && this._setStackedMinMax(),
                  (s.chart.type === "line" ||
                    s.chart.type === "area" ||
                    s.chart.type === "candlestick" ||
                    s.chart.type === "boxPlot" ||
                    (s.chart.type === "rangeBar" && !i.isBarHorizontal)) &&
                    i.minY === Number.MIN_VALUE &&
                    l !== -Number.MAX_VALUE &&
                    l !== i.maxY)
                ) {
                  var f = i.maxY - l;
                  ((l >= 0 && l <= 10) ||
                    s.yaxis[0].min !== void 0 ||
                    s.yaxis[0].max !== void 0) &&
                    (f = 0),
                    (i.minY = l - (5 * f) / 100),
                    l > 0 && i.minY < 0 && (i.minY = 0),
                    (i.maxY = i.maxY + (5 * f) / 100);
                }
                return (
                  s.yaxis.forEach(function (p, v) {
                    p.max !== void 0 &&
                      (typeof p.max == "number"
                        ? (i.maxYArr[v] = p.max)
                        : typeof p.max == "function" &&
                          (i.maxYArr[v] = p.max(
                            i.isMultipleYAxis ? i.maxYArr[v] : i.maxY
                          )),
                      (i.maxY = i.maxYArr[v])),
                      p.min !== void 0 &&
                        (typeof p.min == "number"
                          ? (i.minYArr[v] = p.min)
                          : typeof p.min == "function" &&
                            (i.minYArr[v] = p.min(
                              i.isMultipleYAxis
                                ? i.minYArr[v] === Number.MIN_VALUE
                                  ? 0
                                  : i.minYArr[v]
                                : i.minY
                            )),
                        (i.minY = i.minYArr[v]));
                  }),
                  i.isBarHorizontal &&
                    ["min", "max"].forEach(function (p) {
                      s.xaxis[p] !== void 0 &&
                        typeof s.xaxis[p] == "number" &&
                        (p === "min"
                          ? (i.minY = s.xaxis[p])
                          : (i.maxY = s.xaxis[p]));
                    }),
                  i.isMultipleYAxis
                    ? (this.scales.setMultipleYScales(),
                      (i.minY = l),
                      i.yAxisScale.forEach(function (p, v) {
                        (i.minYArr[v] = p.niceMin), (i.maxYArr[v] = p.niceMax);
                      }))
                    : (this.scales.setYScaleForIndex(0, i.minY, i.maxY),
                      (i.minY = i.yAxisScale[0].niceMin),
                      (i.maxY = i.yAxisScale[0].niceMax),
                      (i.minYArr[0] = i.yAxisScale[0].niceMin),
                      (i.maxYArr[0] = i.yAxisScale[0].niceMax)),
                  {
                    minY: i.minY,
                    maxY: i.maxY,
                    minYArr: i.minYArr,
                    maxYArr: i.maxYArr,
                    yAxisScale: i.yAxisScale,
                  }
                );
              },
            },
            {
              key: "setXRange",
              value: function () {
                var i = this.w.globals,
                  s = this.w.config,
                  l =
                    s.xaxis.type === "numeric" ||
                    s.xaxis.type === "datetime" ||
                    (s.xaxis.type === "category" && !i.noLabelsProvided) ||
                    i.noLabelsProvided ||
                    i.isXNumeric;
                if (
                  (i.isXNumeric &&
                    (function () {
                      for (var f = 0; f < i.series.length; f++)
                        if (i.labels[f])
                          for (var p = 0; p < i.labels[f].length; p++)
                            i.labels[f][p] !== null &&
                              F.isNumber(i.labels[f][p]) &&
                              ((i.maxX = Math.max(i.maxX, i.labels[f][p])),
                              (i.initialMaxX = Math.max(
                                i.maxX,
                                i.labels[f][p]
                              )),
                              (i.minX = Math.min(i.minX, i.labels[f][p])),
                              (i.initialMinX = Math.min(
                                i.minX,
                                i.labels[f][p]
                              )));
                    })(),
                  i.noLabelsProvided &&
                    s.xaxis.categories.length === 0 &&
                    ((i.maxX = i.labels[i.labels.length - 1]),
                    (i.initialMaxX = i.labels[i.labels.length - 1]),
                    (i.minX = 1),
                    (i.initialMinX = 1)),
                  i.isXNumeric || i.noLabelsProvided || i.dataFormatXNumeric)
                ) {
                  var c;
                  if (
                    (s.xaxis.tickAmount === void 0
                      ? ((c = Math.round(i.svgWidth / 150)),
                        s.xaxis.type === "numeric" &&
                          i.dataPoints < 30 &&
                          (c = i.dataPoints - 1),
                        c > i.dataPoints &&
                          i.dataPoints !== 0 &&
                          (c = i.dataPoints - 1))
                      : s.xaxis.tickAmount === "dataPoints"
                      ? (i.series.length > 1 &&
                          (c = i.series[i.maxValsInArrayIndex].length - 1),
                        i.isXNumeric && (c = i.maxX - i.minX - 1))
                      : (c = s.xaxis.tickAmount),
                    (i.xTickAmount = c),
                    s.xaxis.max !== void 0 &&
                      typeof s.xaxis.max == "number" &&
                      (i.maxX = s.xaxis.max),
                    s.xaxis.min !== void 0 &&
                      typeof s.xaxis.min == "number" &&
                      (i.minX = s.xaxis.min),
                    s.xaxis.range !== void 0 &&
                      (i.minX = i.maxX - s.xaxis.range),
                    i.minX !== Number.MAX_VALUE && i.maxX !== -Number.MAX_VALUE)
                  )
                    if (
                      s.xaxis.convertedCatToNumeric &&
                      !i.dataFormatXNumeric
                    ) {
                      for (var h = [], d = i.minX - 1; d < i.maxX; d++)
                        h.push(d + 1);
                      i.xAxisScale = {
                        result: h,
                        niceMin: h[0],
                        niceMax: h[h.length - 1],
                      };
                    } else i.xAxisScale = this.scales.setXScale(i.minX, i.maxX);
                  else
                    (i.xAxisScale = this.scales.linearScale(0, c, c)),
                      i.noLabelsProvided &&
                        i.labels.length > 0 &&
                        ((i.xAxisScale = this.scales.linearScale(
                          1,
                          i.labels.length,
                          c - 1
                        )),
                        (i.seriesX = i.labels.slice()));
                  l && (i.labels = i.xAxisScale.result.slice());
                }
                return (
                  i.isBarHorizontal &&
                    i.labels.length &&
                    (i.xTickAmount = i.labels.length),
                  this._handleSingleDataPoint(),
                  this._getMinXDiff(),
                  { minX: i.minX, maxX: i.maxX }
                );
              },
            },
            {
              key: "setZRange",
              value: function () {
                var i = this.w.globals;
                if (i.isDataXYZ) {
                  for (var s = 0; s < i.series.length; s++)
                    if (i.seriesZ[s] !== void 0)
                      for (var l = 0; l < i.seriesZ[s].length; l++)
                        i.seriesZ[s][l] !== null &&
                          F.isNumber(i.seriesZ[s][l]) &&
                          ((i.maxZ = Math.max(i.maxZ, i.seriesZ[s][l])),
                          (i.minZ = Math.min(i.minZ, i.seriesZ[s][l])));
                }
              },
            },
            {
              key: "_handleSingleDataPoint",
              value: function () {
                var i = this.w.globals,
                  s = this.w.config;
                if (i.minX === i.maxX) {
                  var l = new It(this.ctx);
                  if (s.xaxis.type === "datetime") {
                    var c = l.getDate(i.minX);
                    s.xaxis.labels.datetimeUTC
                      ? c.setUTCDate(c.getUTCDate() - 2)
                      : c.setDate(c.getDate() - 2),
                      (i.minX = new Date(c).getTime());
                    var h = l.getDate(i.maxX);
                    s.xaxis.labels.datetimeUTC
                      ? h.setUTCDate(h.getUTCDate() + 2)
                      : h.setDate(h.getDate() + 2),
                      (i.maxX = new Date(h).getTime());
                  } else
                    (s.xaxis.type === "numeric" ||
                      (s.xaxis.type === "category" && !i.noLabelsProvided)) &&
                      ((i.minX = i.minX - 2),
                      (i.initialMinX = i.minX),
                      (i.maxX = i.maxX + 2),
                      (i.initialMaxX = i.maxX));
                }
              },
            },
            {
              key: "_getMinXDiff",
              value: function () {
                var i = this.w.globals;
                i.isXNumeric &&
                  i.seriesX.forEach(function (s, l) {
                    s.length === 1 &&
                      s.push(
                        i.seriesX[i.maxValsInArrayIndex][
                          i.seriesX[i.maxValsInArrayIndex].length - 1
                        ]
                      );
                    var c = s.slice();
                    c.sort(function (h, d) {
                      return h - d;
                    }),
                      c.forEach(function (h, d) {
                        if (d > 0) {
                          var f = h - c[d - 1];
                          f > 0 && (i.minXDiff = Math.min(f, i.minXDiff));
                        }
                      }),
                      (i.dataPoints !== 1 && i.minXDiff !== Number.MAX_VALUE) ||
                        (i.minXDiff = 0.5);
                  });
              },
            },
            {
              key: "_setStackedMinMax",
              value: function () {
                var i = this,
                  s = this.w.globals;
                if (s.series.length) {
                  var l = s.seriesGroups;
                  l.length ||
                    (l = [
                      this.w.config.series.map(function (d) {
                        return d.name;
                      }),
                    ]);
                  var c = {},
                    h = {};
                  l.forEach(function (d) {
                    (c[d] = []),
                      (h[d] = []),
                      i.w.config.series
                        .map(function (f, p) {
                          return d.indexOf(f.name) > -1 ? p : null;
                        })
                        .filter(function (f) {
                          return f !== null;
                        })
                        .forEach(function (f) {
                          for (
                            var p = 0;
                            p < s.series[s.maxValsInArrayIndex].length;
                            p++
                          ) {
                            var v, b;
                            c[d][p] === void 0 &&
                              ((c[d][p] = 0), (h[d][p] = 0)),
                              ((i.w.config.chart.stacked && !s.comboCharts) ||
                                (i.w.config.chart.stacked &&
                                  s.comboCharts &&
                                  (!i.w.config.chart.stackOnlyBar ||
                                    ((v = i.w.config.series) === null ||
                                    v === void 0 ||
                                    (b = v[f]) === null ||
                                    b === void 0
                                      ? void 0
                                      : b.type) === "bar"))) &&
                                s.series[f][p] !== null &&
                                F.isNumber(s.series[f][p]) &&
                                (s.series[f][p] > 0
                                  ? (c[d][p] +=
                                      parseFloat(s.series[f][p]) + 1e-4)
                                  : (h[d][p] += parseFloat(s.series[f][p])));
                          }
                        });
                  }),
                    Object.entries(c).forEach(function (d) {
                      var f = se(d, 1)[0];
                      c[f].forEach(function (p, v) {
                        (s.maxY = Math.max(s.maxY, c[f][v])),
                          (s.minY = Math.min(s.minY, h[f][v]));
                      });
                    });
                }
              },
            },
          ]),
          U
        );
      })(),
      dt = (function () {
        function U(i, s) {
          o(this, U), (this.ctx = i), (this.elgrid = s), (this.w = i.w);
          var l = this.w;
          (this.xaxisFontSize = l.config.xaxis.labels.style.fontSize),
            (this.axisFontFamily = l.config.xaxis.labels.style.fontFamily),
            (this.xaxisForeColors = l.config.xaxis.labels.style.colors),
            (this.isCategoryBarHorizontal =
              l.config.chart.type === "bar" &&
              l.config.plotOptions.bar.horizontal),
            (this.xAxisoffX = 0),
            l.config.xaxis.position === "bottom" &&
              (this.xAxisoffX = l.globals.gridHeight),
            (this.drawnLabels = []),
            (this.axesUtils = new Ze(i));
        }
        return (
          g(U, [
            {
              key: "drawYaxis",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = new C(this.ctx),
                  h = l.config.yaxis[i].labels.style,
                  d = h.fontSize,
                  f = h.fontFamily,
                  p = h.fontWeight,
                  v = c.group({
                    class: "apexcharts-yaxis",
                    rel: i,
                    transform:
                      "translate(" + l.globals.translateYAxisX[i] + ", 0)",
                  });
                if (this.axesUtils.isYAxisHidden(i)) return v;
                var b = c.group({ class: "apexcharts-yaxis-texts-g" });
                v.add(b);
                var _ = l.globals.yAxisScale[i].result.length - 1,
                  S = l.globals.gridHeight / _,
                  T = l.globals.translateY,
                  O = l.globals.yLabelFormatters[i],
                  D = l.globals.yAxisScale[i].result.slice();
                D = this.axesUtils.checkForReversedLabels(i, D);
                var V = "";
                if (l.config.yaxis[i].labels.show)
                  for (
                    var G = function (fe) {
                        var ge = D[fe];
                        ge = O(ge, fe, l);
                        var Pe = l.config.yaxis[i].labels.padding;
                        l.config.yaxis[i].opposite &&
                          l.config.yaxis.length !== 0 &&
                          (Pe *= -1);
                        var We = "end";
                        l.config.yaxis[i].opposite && (We = "start"),
                          l.config.yaxis[i].labels.align === "left"
                            ? (We = "start")
                            : l.config.yaxis[i].labels.align === "center"
                            ? (We = "middle")
                            : l.config.yaxis[i].labels.align === "right" &&
                              (We = "end");
                        var ze = s.axesUtils.getYAxisForeColor(h.colors, i),
                          ut = l.config.yaxis[i].labels.offsetY;
                        l.config.chart.type === "heatmap" &&
                          (ut -=
                            (l.globals.gridHeight / l.globals.series.length -
                              1) /
                            2);
                        var St = c.drawText({
                          x: Pe,
                          y: T + _ / 10 + ut + 1,
                          text: ge,
                          textAnchor: We,
                          fontSize: d,
                          fontFamily: f,
                          fontWeight: p,
                          maxWidth: l.config.yaxis[i].labels.maxWidth,
                          foreColor: Array.isArray(ze) ? ze[fe] : ze,
                          isPlainText: !1,
                          cssClass: "apexcharts-yaxis-label " + h.cssClass,
                        });
                        fe === _ && (V = St), b.add(St);
                        var zt = document.createElementNS(
                          l.globals.SVGNS,
                          "title"
                        );
                        if (
                          ((zt.textContent = Array.isArray(ge)
                            ? ge.join(" ")
                            : ge),
                          St.node.appendChild(zt),
                          l.config.yaxis[i].labels.rotate !== 0)
                        ) {
                          var Ot = c.rotateAroundCenter(V.node),
                            dn = c.rotateAroundCenter(St.node);
                          St.node.setAttribute(
                            "transform",
                            "rotate("
                              .concat(l.config.yaxis[i].labels.rotate, " ")
                              .concat(Ot.x, " ")
                              .concat(dn.y, ")")
                          );
                        }
                        T += S;
                      },
                      Q = _;
                    Q >= 0;
                    Q--
                  )
                    G(Q);
                if (l.config.yaxis[i].title.text !== void 0) {
                  var m = c.group({ class: "apexcharts-yaxis-title" }),
                    k = 0;
                  l.config.yaxis[i].opposite &&
                    (k = l.globals.translateYAxisX[i]);
                  var N = c.drawText({
                    x: k,
                    y:
                      l.globals.gridHeight / 2 +
                      l.globals.translateY +
                      l.config.yaxis[i].title.offsetY,
                    text: l.config.yaxis[i].title.text,
                    textAnchor: "end",
                    foreColor: l.config.yaxis[i].title.style.color,
                    fontSize: l.config.yaxis[i].title.style.fontSize,
                    fontWeight: l.config.yaxis[i].title.style.fontWeight,
                    fontFamily: l.config.yaxis[i].title.style.fontFamily,
                    cssClass:
                      "apexcharts-yaxis-title-text " +
                      l.config.yaxis[i].title.style.cssClass,
                  });
                  m.add(N), v.add(m);
                }
                var X = l.config.yaxis[i].axisBorder,
                  K = 31 + X.offsetX;
                if (
                  (l.config.yaxis[i].opposite && (K = -31 - X.offsetX), X.show)
                ) {
                  var ee = c.drawLine(
                    K,
                    l.globals.translateY + X.offsetY - 2,
                    K,
                    l.globals.gridHeight + l.globals.translateY + X.offsetY + 2,
                    X.color,
                    0,
                    X.width
                  );
                  v.add(ee);
                }
                return (
                  l.config.yaxis[i].axisTicks.show &&
                    this.axesUtils.drawYAxisTicks(
                      K,
                      _,
                      X,
                      l.config.yaxis[i].axisTicks,
                      i,
                      S,
                      v
                    ),
                  v
                );
              },
            },
            {
              key: "drawYaxisInversed",
              value: function (i) {
                var s = this.w,
                  l = new C(this.ctx),
                  c = l.group({
                    class: "apexcharts-xaxis apexcharts-yaxis-inversed",
                  }),
                  h = l.group({
                    class: "apexcharts-xaxis-texts-g",
                    transform: "translate("
                      .concat(s.globals.translateXAxisX, ", ")
                      .concat(s.globals.translateXAxisY, ")"),
                  });
                c.add(h);
                var d = s.globals.yAxisScale[i].result.length - 1,
                  f = s.globals.gridWidth / d + 0.1,
                  p = f + s.config.xaxis.labels.offsetX,
                  v = s.globals.xLabelFormatter,
                  b = s.globals.yAxisScale[i].result.slice(),
                  _ = s.globals.timescaleLabels;
                _.length > 0 &&
                  ((this.xaxisLabels = _.slice()),
                  (d = (b = _.slice()).length)),
                  (b = this.axesUtils.checkForReversedLabels(i, b));
                var S = _.length;
                if (s.config.xaxis.labels.show)
                  for (var T = S ? 0 : d; S ? T < S : T >= 0; S ? T++ : T--) {
                    var O = b[T];
                    O = v(O, T, s);
                    var D =
                      s.globals.gridWidth +
                      s.globals.padHorizontal -
                      (p - f + s.config.xaxis.labels.offsetX);
                    if (_.length) {
                      var V = this.axesUtils.getLabel(
                        b,
                        _,
                        D,
                        T,
                        this.drawnLabels,
                        this.xaxisFontSize
                      );
                      (D = V.x),
                        (O = V.text),
                        this.drawnLabels.push(V.text),
                        T === 0 && s.globals.skipFirstTimelinelabel && (O = ""),
                        T === b.length - 1 &&
                          s.globals.skipLastTimelinelabel &&
                          (O = "");
                    }
                    var G = l.drawText({
                      x: D,
                      y:
                        this.xAxisoffX +
                        s.config.xaxis.labels.offsetY +
                        30 -
                        (s.config.xaxis.position === "top"
                          ? s.globals.xAxisHeight +
                            s.config.xaxis.axisTicks.height -
                            2
                          : 0),
                      text: O,
                      textAnchor: "middle",
                      foreColor: Array.isArray(this.xaxisForeColors)
                        ? this.xaxisForeColors[i]
                        : this.xaxisForeColors,
                      fontSize: this.xaxisFontSize,
                      fontFamily: this.xaxisFontFamily,
                      fontWeight: s.config.xaxis.labels.style.fontWeight,
                      isPlainText: !1,
                      cssClass:
                        "apexcharts-xaxis-label " +
                        s.config.xaxis.labels.style.cssClass,
                    });
                    h.add(G), G.tspan(O);
                    var Q = document.createElementNS(s.globals.SVGNS, "title");
                    (Q.textContent = O), G.node.appendChild(Q), (p += f);
                  }
                return (
                  this.inversedYAxisTitleText(c), this.inversedYAxisBorder(c), c
                );
              },
            },
            {
              key: "inversedYAxisBorder",
              value: function (i) {
                var s = this.w,
                  l = new C(this.ctx),
                  c = s.config.xaxis.axisBorder;
                if (c.show) {
                  var h = 0;
                  s.config.chart.type === "bar" &&
                    s.globals.isXNumeric &&
                    (h -= 15);
                  var d = l.drawLine(
                    s.globals.padHorizontal + h + c.offsetX,
                    this.xAxisoffX,
                    s.globals.gridWidth,
                    this.xAxisoffX,
                    c.color,
                    0,
                    c.height
                  );
                  this.elgrid && this.elgrid.elGridBorders && s.config.grid.show
                    ? this.elgrid.elGridBorders.add(d)
                    : i.add(d);
                }
              },
            },
            {
              key: "inversedYAxisTitleText",
              value: function (i) {
                var s = this.w,
                  l = new C(this.ctx);
                if (s.config.xaxis.title.text !== void 0) {
                  var c = l.group({
                      class:
                        "apexcharts-xaxis-title apexcharts-yaxis-title-inversed",
                    }),
                    h = l.drawText({
                      x: s.globals.gridWidth / 2 + s.config.xaxis.title.offsetX,
                      y:
                        this.xAxisoffX +
                        parseFloat(this.xaxisFontSize) +
                        parseFloat(s.config.xaxis.title.style.fontSize) +
                        s.config.xaxis.title.offsetY +
                        20,
                      text: s.config.xaxis.title.text,
                      textAnchor: "middle",
                      fontSize: s.config.xaxis.title.style.fontSize,
                      fontFamily: s.config.xaxis.title.style.fontFamily,
                      fontWeight: s.config.xaxis.title.style.fontWeight,
                      foreColor: s.config.xaxis.title.style.color,
                      cssClass:
                        "apexcharts-xaxis-title-text " +
                        s.config.xaxis.title.style.cssClass,
                    });
                  c.add(h), i.add(c);
                }
              },
            },
            {
              key: "yAxisTitleRotate",
              value: function (i, s) {
                var l = this.w,
                  c = new C(this.ctx),
                  h = { width: 0, height: 0 },
                  d = { width: 0, height: 0 },
                  f = l.globals.dom.baseEl.querySelector(
                    " .apexcharts-yaxis[rel='".concat(
                      i,
                      "'] .apexcharts-yaxis-texts-g"
                    )
                  );
                f !== null && (h = f.getBoundingClientRect());
                var p = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-yaxis[rel='".concat(
                    i,
                    "'] .apexcharts-yaxis-title text"
                  )
                );
                if (
                  (p !== null && (d = p.getBoundingClientRect()), p !== null)
                ) {
                  var v = this.xPaddingForYAxisTitle(i, h, d, s);
                  p.setAttribute("x", v.xPos - (s ? 10 : 0));
                }
                if (p !== null) {
                  var b = c.rotateAroundCenter(p);
                  p.setAttribute(
                    "transform",
                    "rotate("
                      .concat(
                        s
                          ? -1 * l.config.yaxis[i].title.rotate
                          : l.config.yaxis[i].title.rotate,
                        " "
                      )
                      .concat(b.x, " ")
                      .concat(b.y, ")")
                  );
                }
              },
            },
            {
              key: "xPaddingForYAxisTitle",
              value: function (i, s, l, c) {
                var h = this.w,
                  d = 0,
                  f = 0,
                  p = 10;
                return h.config.yaxis[i].title.text === void 0 || i < 0
                  ? { xPos: f, padd: 0 }
                  : (c
                      ? ((f =
                          s.width +
                          h.config.yaxis[i].title.offsetX +
                          l.width / 2 +
                          p / 2),
                        (d += 1) === 0 && (f -= p / 2))
                      : ((f =
                          -1 * s.width +
                          h.config.yaxis[i].title.offsetX +
                          p / 2 +
                          l.width / 2),
                        h.globals.isBarHorizontal &&
                          ((p = 25),
                          (f =
                            -1 * s.width -
                            h.config.yaxis[i].title.offsetX -
                            p))),
                    { xPos: f, padd: p });
              },
            },
            {
              key: "setYAxisXPosition",
              value: function (i, s) {
                var l = this.w,
                  c = 0,
                  h = 0,
                  d = 18,
                  f = 1;
                l.config.yaxis.length > 1 && (this.multipleYs = !0),
                  l.config.yaxis.map(function (p, v) {
                    var b =
                        l.globals.ignoreYAxisIndexes.indexOf(v) > -1 ||
                        !p.show ||
                        p.floating ||
                        i[v].width === 0,
                      _ = i[v].width + s[v].width;
                    p.opposite
                      ? l.globals.isBarHorizontal
                        ? ((h = l.globals.gridWidth + l.globals.translateX - 1),
                          (l.globals.translateYAxisX[v] = h - p.labels.offsetX))
                        : ((h = l.globals.gridWidth + l.globals.translateX + f),
                          b || (f = f + _ + 20),
                          (l.globals.translateYAxisX[v] =
                            h - p.labels.offsetX + 20))
                      : ((c = l.globals.translateX - d),
                        b || (d = d + _ + 20),
                        (l.globals.translateYAxisX[v] = c + p.labels.offsetX));
                  });
              },
            },
            {
              key: "setYAxisTextAlignments",
              value: function () {
                var i = this.w,
                  s =
                    i.globals.dom.baseEl.getElementsByClassName(
                      "apexcharts-yaxis"
                    );
                (s = F.listToArray(s)).forEach(function (l, c) {
                  var h = i.config.yaxis[c];
                  if (h && !h.floating && h.labels.align !== void 0) {
                    var d = i.globals.dom.baseEl.querySelector(
                        ".apexcharts-yaxis[rel='".concat(
                          c,
                          "'] .apexcharts-yaxis-texts-g"
                        )
                      ),
                      f = i.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-yaxis[rel='".concat(
                          c,
                          "'] .apexcharts-yaxis-label"
                        )
                      );
                    f = F.listToArray(f);
                    var p = d.getBoundingClientRect();
                    h.labels.align === "left"
                      ? (f.forEach(function (v, b) {
                          v.setAttribute("text-anchor", "start");
                        }),
                        h.opposite ||
                          d.setAttribute(
                            "transform",
                            "translate(-".concat(p.width, ", 0)")
                          ))
                      : h.labels.align === "center"
                      ? (f.forEach(function (v, b) {
                          v.setAttribute("text-anchor", "middle");
                        }),
                        d.setAttribute(
                          "transform",
                          "translate(".concat(
                            (p.width / 2) * (h.opposite ? 1 : -1),
                            ", 0)"
                          )
                        ))
                      : h.labels.align === "right" &&
                        (f.forEach(function (v, b) {
                          v.setAttribute("text-anchor", "end");
                        }),
                        h.opposite &&
                          d.setAttribute(
                            "transform",
                            "translate(".concat(p.width, ", 0)")
                          ));
                  }
                });
              },
            },
          ]),
          U
        );
      })(),
      gt = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.documentEvent = F.bind(this.documentEvent, this));
        }
        return (
          g(U, [
            {
              key: "addEventListener",
              value: function (i, s) {
                var l = this.w;
                l.globals.events.hasOwnProperty(i)
                  ? l.globals.events[i].push(s)
                  : (l.globals.events[i] = [s]);
              },
            },
            {
              key: "removeEventListener",
              value: function (i, s) {
                var l = this.w;
                if (l.globals.events.hasOwnProperty(i)) {
                  var c = l.globals.events[i].indexOf(s);
                  c !== -1 && l.globals.events[i].splice(c, 1);
                }
              },
            },
            {
              key: "fireEvent",
              value: function (i, s) {
                var l = this.w;
                if (l.globals.events.hasOwnProperty(i)) {
                  (s && s.length) || (s = []);
                  for (
                    var c = l.globals.events[i], h = c.length, d = 0;
                    d < h;
                    d++
                  )
                    c[d].apply(null, s);
                }
              },
            },
            {
              key: "setupEventHandlers",
              value: function () {
                var i = this,
                  s = this.w,
                  l = this.ctx,
                  c = s.globals.dom.baseEl.querySelector(s.globals.chartClass);
                this.ctx.eventList.forEach(function (h) {
                  c.addEventListener(
                    h,
                    function (d) {
                      var f = Object.assign({}, s, {
                        seriesIndex: s.globals.capturedSeriesIndex,
                        dataPointIndex: s.globals.capturedDataPointIndex,
                      });
                      d.type === "mousemove" || d.type === "touchmove"
                        ? typeof s.config.chart.events.mouseMove ==
                            "function" &&
                          s.config.chart.events.mouseMove(d, l, f)
                        : d.type === "mouseleave" || d.type === "touchleave"
                        ? typeof s.config.chart.events.mouseLeave ==
                            "function" &&
                          s.config.chart.events.mouseLeave(d, l, f)
                        : ((d.type === "mouseup" && d.which === 1) ||
                            d.type === "touchend") &&
                          (typeof s.config.chart.events.click == "function" &&
                            s.config.chart.events.click(d, l, f),
                          l.ctx.events.fireEvent("click", [d, l, f]));
                    },
                    { capture: !1, passive: !0 }
                  );
                }),
                  this.ctx.eventList.forEach(function (h) {
                    s.globals.dom.baseEl.addEventListener(h, i.documentEvent, {
                      passive: !0,
                    });
                  }),
                  this.ctx.core.setupBrushHandler();
              },
            },
            {
              key: "documentEvent",
              value: function (i) {
                var s = this.w,
                  l = i.target.className;
                if (i.type === "click") {
                  var c =
                    s.globals.dom.baseEl.querySelector(".apexcharts-menu");
                  c &&
                    c.classList.contains("apexcharts-menu-open") &&
                    l !== "apexcharts-menu-icon" &&
                    c.classList.remove("apexcharts-menu-open");
                }
                (s.globals.clientX =
                  i.type === "touchmove" ? i.touches[0].clientX : i.clientX),
                  (s.globals.clientY =
                    i.type === "touchmove" ? i.touches[0].clientY : i.clientY);
              },
            },
          ]),
          U
        );
      })(),
      mn = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "setCurrentLocaleValues",
              value: function (i) {
                var s = this.w.config.chart.locales;
                window.Apex.chart &&
                  window.Apex.chart.locales &&
                  window.Apex.chart.locales.length > 0 &&
                  (s = this.w.config.chart.locales.concat(
                    window.Apex.chart.locales
                  ));
                var l = s.filter(function (h) {
                  return h.name === i;
                })[0];
                if (!l)
                  throw new Error(
                    "Wrong locale name provided. Please make sure you set the correct locale name in options"
                  );
                var c = F.extend(pt, l);
                this.w.globals.locale = c.options;
              },
            },
          ]),
          U
        );
      })(),
      Jt = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "drawAxis",
              value: function (i, s) {
                var l,
                  c,
                  h = this,
                  d = this.w.globals,
                  f = this.w.config,
                  p = new Wt(this.ctx, s),
                  v = new dt(this.ctx, s);
                d.axisCharts &&
                  i !== "radar" &&
                  (d.isBarHorizontal
                    ? ((c = v.drawYaxisInversed(0)),
                      (l = p.drawXaxisInversed(0)),
                      d.dom.elGraphical.add(l),
                      d.dom.elGraphical.add(c))
                    : ((l = p.drawXaxis()),
                      d.dom.elGraphical.add(l),
                      f.yaxis.map(function (b, _) {
                        if (
                          d.ignoreYAxisIndexes.indexOf(_) === -1 &&
                          ((c = v.drawYaxis(_)),
                          d.dom.Paper.add(c),
                          h.w.config.grid.position === "back")
                        ) {
                          var S = d.dom.Paper.children()[1];
                          S.remove(), d.dom.Paper.add(S);
                        }
                      })));
              },
            },
          ]),
          U
        );
      })(),
      Rn = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "drawXCrosshairs",
              value: function () {
                var i = this.w,
                  s = new C(this.ctx),
                  l = new ye(this.ctx),
                  c = i.config.xaxis.crosshairs.fill.gradient,
                  h = i.config.xaxis.crosshairs.dropShadow,
                  d = i.config.xaxis.crosshairs.fill.type,
                  f = c.colorFrom,
                  p = c.colorTo,
                  v = c.opacityFrom,
                  b = c.opacityTo,
                  _ = c.stops,
                  S = h.enabled,
                  T = h.left,
                  O = h.top,
                  D = h.blur,
                  V = h.color,
                  G = h.opacity,
                  Q = i.config.xaxis.crosshairs.fill.color;
                if (i.config.xaxis.crosshairs.show) {
                  d === "gradient" &&
                    (Q = s.drawGradient("vertical", f, p, v, b, null, _, null));
                  var m = s.drawRect();
                  i.config.xaxis.crosshairs.width === 1 && (m = s.drawLine());
                  var k = i.globals.gridHeight;
                  (!F.isNumber(k) || k < 0) && (k = 0);
                  var N = i.config.xaxis.crosshairs.width;
                  (!F.isNumber(N) || N < 0) && (N = 0),
                    m.attr({
                      class: "apexcharts-xcrosshairs",
                      x: 0,
                      y: 0,
                      y2: k,
                      width: N,
                      height: k,
                      fill: Q,
                      filter: "none",
                      "fill-opacity": i.config.xaxis.crosshairs.opacity,
                      stroke: i.config.xaxis.crosshairs.stroke.color,
                      "stroke-width": i.config.xaxis.crosshairs.stroke.width,
                      "stroke-dasharray":
                        i.config.xaxis.crosshairs.stroke.dashArray,
                    }),
                    S &&
                      (m = l.dropShadow(m, {
                        left: T,
                        top: O,
                        blur: D,
                        color: V,
                        opacity: G,
                      })),
                    i.globals.dom.elGraphical.add(m);
                }
              },
            },
            {
              key: "drawYCrosshairs",
              value: function () {
                var i = this.w,
                  s = new C(this.ctx),
                  l = i.config.yaxis[0].crosshairs,
                  c = i.globals.barPadForNumericAxis;
                if (i.config.yaxis[0].crosshairs.show) {
                  var h = s.drawLine(
                    -c,
                    0,
                    i.globals.gridWidth + c,
                    0,
                    l.stroke.color,
                    l.stroke.dashArray,
                    l.stroke.width
                  );
                  h.attr({ class: "apexcharts-ycrosshairs" }),
                    i.globals.dom.elGraphical.add(h);
                }
                var d = s.drawLine(
                  -c,
                  0,
                  i.globals.gridWidth + c,
                  0,
                  l.stroke.color,
                  0,
                  0
                );
                d.attr({ class: "apexcharts-ycrosshairs-hidden" }),
                  i.globals.dom.elGraphical.add(d);
              },
            },
          ]),
          U
        );
      })(),
      jr = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "checkResponsiveConfig",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = l.config;
                if (c.responsive.length !== 0) {
                  var h = c.responsive.slice();
                  h.sort(function (v, b) {
                    return v.breakpoint > b.breakpoint
                      ? 1
                      : b.breakpoint > v.breakpoint
                      ? -1
                      : 0;
                  }).reverse();
                  var d = new Xe({}),
                    f = function () {
                      var v =
                          arguments.length > 0 && arguments[0] !== void 0
                            ? arguments[0]
                            : {},
                        b = h[0].breakpoint,
                        _ =
                          window.innerWidth > 0
                            ? window.innerWidth
                            : screen.width;
                      if (_ > b) {
                        var S = ke.extendArrayProps(
                          d,
                          l.globals.initialConfig,
                          l
                        );
                        (v = F.extend(S, v)),
                          (v = F.extend(l.config, v)),
                          s.overrideResponsiveOptions(v);
                      } else
                        for (var T = 0; T < h.length; T++)
                          _ < h[T].breakpoint &&
                            ((v = ke.extendArrayProps(d, h[T].options, l)),
                            (v = F.extend(l.config, v)),
                            s.overrideResponsiveOptions(v));
                    };
                  if (i) {
                    var p = ke.extendArrayProps(d, i, l);
                    (p = F.extend(l.config, p)), f((p = F.extend(p, i)));
                  } else f({});
                }
              },
            },
            {
              key: "overrideResponsiveOptions",
              value: function (i) {
                var s = new Xe(i).init({ responsiveOverride: !0 });
                this.w.config = s;
              },
            },
          ]),
          U
        );
      })(),
      vn = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.colors = []), (this.w = i.w);
          var s = this.w;
          (this.isColorFn = !1),
            (this.isHeatmapDistributed =
              (s.config.chart.type === "treemap" &&
                s.config.plotOptions.treemap.distributed) ||
              (s.config.chart.type === "heatmap" &&
                s.config.plotOptions.heatmap.distributed)),
            (this.isBarDistributed =
              s.config.plotOptions.bar.distributed &&
              (s.config.chart.type === "bar" ||
                s.config.chart.type === "rangeBar"));
        }
        return (
          g(U, [
            {
              key: "init",
              value: function () {
                this.setDefaultColors();
              },
            },
            {
              key: "setDefaultColors",
              value: function () {
                var i,
                  s = this,
                  l = this.w,
                  c = new F();
                if (
                  (l.globals.dom.elWrap.classList.add(
                    "apexcharts-theme-".concat(l.config.theme.mode)
                  ),
                  l.config.colors === void 0 ||
                  ((i = l.config.colors) === null || i === void 0
                    ? void 0
                    : i.length) === 0
                    ? (l.globals.colors = this.predefined())
                    : ((l.globals.colors = l.config.colors),
                      Array.isArray(l.config.colors) &&
                        l.config.colors.length > 0 &&
                        typeof l.config.colors[0] == "function" &&
                        (l.globals.colors = l.config.series.map(function (
                          O,
                          D
                        ) {
                          var V = l.config.colors[D];
                          return (
                            V || (V = l.config.colors[0]),
                            typeof V == "function"
                              ? ((s.isColorFn = !0),
                                V({
                                  value: l.globals.axisCharts
                                    ? l.globals.series[D][0]
                                      ? l.globals.series[D][0]
                                      : 0
                                    : l.globals.series[D],
                                  seriesIndex: D,
                                  dataPointIndex: D,
                                  w: l,
                                }))
                              : V
                          );
                        }))),
                  l.globals.seriesColors.map(function (O, D) {
                    O && (l.globals.colors[D] = O);
                  }),
                  l.config.theme.monochrome.enabled)
                ) {
                  var h = [],
                    d = l.globals.series.length;
                  (this.isBarDistributed || this.isHeatmapDistributed) &&
                    (d = l.globals.series[0].length * l.globals.series.length);
                  for (
                    var f = l.config.theme.monochrome.color,
                      p = 1 / (d / l.config.theme.monochrome.shadeIntensity),
                      v = l.config.theme.monochrome.shadeTo,
                      b = 0,
                      _ = 0;
                    _ < d;
                    _++
                  ) {
                    var S = void 0;
                    v === "dark"
                      ? ((S = c.shadeColor(-1 * b, f)), (b += p))
                      : ((S = c.shadeColor(b, f)), (b += p)),
                      h.push(S);
                  }
                  l.globals.colors = h.slice();
                }
                var T = l.globals.colors.slice();
                this.pushExtraColors(l.globals.colors),
                  ["fill", "stroke"].forEach(function (O) {
                    l.config[O].colors === void 0
                      ? (l.globals[O].colors = s.isColorFn
                          ? l.config.colors
                          : T)
                      : (l.globals[O].colors = l.config[O].colors.slice()),
                      s.pushExtraColors(l.globals[O].colors);
                  }),
                  l.config.dataLabels.style.colors === void 0
                    ? (l.globals.dataLabels.style.colors = T)
                    : (l.globals.dataLabels.style.colors =
                        l.config.dataLabels.style.colors.slice()),
                  this.pushExtraColors(l.globals.dataLabels.style.colors, 50),
                  l.config.plotOptions.radar.polygons.fill.colors === void 0
                    ? (l.globals.radarPolygons.fill.colors = [
                        l.config.theme.mode === "dark" ? "#424242" : "none",
                      ])
                    : (l.globals.radarPolygons.fill.colors =
                        l.config.plotOptions.radar.polygons.fill.colors.slice()),
                  this.pushExtraColors(l.globals.radarPolygons.fill.colors, 20),
                  l.config.markers.colors === void 0
                    ? (l.globals.markers.colors = T)
                    : (l.globals.markers.colors =
                        l.config.markers.colors.slice()),
                  this.pushExtraColors(l.globals.markers.colors);
              },
            },
            {
              key: "pushExtraColors",
              value: function (i, s) {
                var l =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  c = this.w,
                  h = s || c.globals.series.length;
                if (
                  (l === null &&
                    (l =
                      this.isBarDistributed ||
                      this.isHeatmapDistributed ||
                      (c.config.chart.type === "heatmap" &&
                        c.config.plotOptions.heatmap.colorScale.inverse)),
                  l &&
                    c.globals.series.length &&
                    (h =
                      c.globals.series[c.globals.maxValsInArrayIndex].length *
                      c.globals.series.length),
                  i.length < h)
                )
                  for (var d = h - i.length, f = 0; f < d; f++) i.push(i[f]);
              },
            },
            {
              key: "updateThemeOptions",
              value: function (i) {
                (i.chart = i.chart || {}), (i.tooltip = i.tooltip || {});
                var s = i.theme.mode || "light",
                  l = i.theme.palette
                    ? i.theme.palette
                    : s === "dark"
                    ? "palette4"
                    : "palette1",
                  c = i.chart.foreColor
                    ? i.chart.foreColor
                    : s === "dark"
                    ? "#f6f7f8"
                    : "#373d3f";
                return (
                  (i.tooltip.theme = s),
                  (i.chart.foreColor = c),
                  (i.theme.palette = l),
                  i
                );
              },
            },
            {
              key: "predefined",
              value: function () {
                switch (this.w.config.theme.palette) {
                  case "palette1":
                  default:
                    this.colors = [
                      "#008FFB",
                      "#00E396",
                      "#FEB019",
                      "#FF4560",
                      "#775DD0",
                    ];
                    break;
                  case "palette2":
                    this.colors = [
                      "#3f51b5",
                      "#03a9f4",
                      "#4caf50",
                      "#f9ce1d",
                      "#FF9800",
                    ];
                    break;
                  case "palette3":
                    this.colors = [
                      "#33b2df",
                      "#546E7A",
                      "#d4526e",
                      "#13d8aa",
                      "#A5978B",
                    ];
                    break;
                  case "palette4":
                    this.colors = [
                      "#4ecdc4",
                      "#c7f464",
                      "#81D4FA",
                      "#fd6a6a",
                      "#546E7A",
                    ];
                    break;
                  case "palette5":
                    this.colors = [
                      "#2b908f",
                      "#f9a3a4",
                      "#90ee7e",
                      "#fa4443",
                      "#69d2e7",
                    ];
                    break;
                  case "palette6":
                    this.colors = [
                      "#449DD1",
                      "#F86624",
                      "#EA3546",
                      "#662E9B",
                      "#C5D86D",
                    ];
                    break;
                  case "palette7":
                    this.colors = [
                      "#D7263D",
                      "#1B998B",
                      "#2E294E",
                      "#F46036",
                      "#E2C044",
                    ];
                    break;
                  case "palette8":
                    this.colors = [
                      "#662E9B",
                      "#F86624",
                      "#F9C80E",
                      "#EA3546",
                      "#43BCCD",
                    ];
                    break;
                  case "palette9":
                    this.colors = [
                      "#5C4742",
                      "#A5978B",
                      "#8D5B4C",
                      "#5A2A27",
                      "#C4BBAF",
                    ];
                    break;
                  case "palette10":
                    this.colors = [
                      "#A300D6",
                      "#7D02EB",
                      "#5653FE",
                      "#2983FF",
                      "#00B1F2",
                    ];
                }
                return this.colors;
              },
            },
          ]),
          U
        );
      })(),
      zn = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "draw",
              value: function () {
                this.drawTitleSubtitle("title"),
                  this.drawTitleSubtitle("subtitle");
              },
            },
            {
              key: "drawTitleSubtitle",
              value: function (i) {
                var s = this.w,
                  l = i === "title" ? s.config.title : s.config.subtitle,
                  c = s.globals.svgWidth / 2,
                  h = l.offsetY,
                  d = "middle";
                if (
                  (l.align === "left"
                    ? ((c = 10), (d = "start"))
                    : l.align === "right" &&
                      ((c = s.globals.svgWidth - 10), (d = "end")),
                  (c += l.offsetX),
                  (h = h + parseInt(l.style.fontSize, 10) + l.margin / 2),
                  l.text !== void 0)
                ) {
                  var f = new C(this.ctx).drawText({
                    x: c,
                    y: h,
                    text: l.text,
                    textAnchor: d,
                    fontSize: l.style.fontSize,
                    fontFamily: l.style.fontFamily,
                    fontWeight: l.style.fontWeight,
                    foreColor: l.style.color,
                    opacity: 1,
                  });
                  f.node.setAttribute(
                    "class",
                    "apexcharts-".concat(i, "-text")
                  ),
                    s.globals.dom.Paper.add(f);
                }
              },
            },
          ]),
          U
        );
      })(),
      Te = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.dCtx = i);
        }
        return (
          g(U, [
            {
              key: "getTitleSubtitleCoords",
              value: function (i) {
                var s = this.w,
                  l = 0,
                  c = 0,
                  h =
                    i === "title"
                      ? s.config.title.floating
                      : s.config.subtitle.floating,
                  d = s.globals.dom.baseEl.querySelector(
                    ".apexcharts-".concat(i, "-text")
                  );
                if (d !== null && !h) {
                  var f = d.getBoundingClientRect();
                  (l = f.width),
                    (c = s.globals.axisCharts ? f.height + 5 : f.height);
                }
                return { width: l, height: c };
              },
            },
            {
              key: "getLegendsRect",
              value: function () {
                var i = this.w,
                  s = i.globals.dom.elLegendWrap;
                i.config.legend.height ||
                  (i.config.legend.position !== "top" &&
                    i.config.legend.position !== "bottom") ||
                  (s.style.maxHeight = i.globals.svgHeight / 2 + "px");
                var l = Object.assign({}, F.getBoundingClientRect(s));
                return (
                  s !== null &&
                  !i.config.legend.floating &&
                  i.config.legend.show
                    ? (this.dCtx.lgRect = {
                        x: l.x,
                        y: l.y,
                        height: l.height,
                        width: l.height === 0 ? 0 : l.width,
                      })
                    : (this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }),
                  (i.config.legend.position !== "left" &&
                    i.config.legend.position !== "right") ||
                    (1.5 * this.dCtx.lgRect.width > i.globals.svgWidth &&
                      (this.dCtx.lgRect.width = i.globals.svgWidth / 1.5)),
                  this.dCtx.lgRect
                );
              },
            },
            {
              key: "getLargestStringFromMultiArr",
              value: function (i, s) {
                var l = i;
                if (this.w.globals.isMultiLineX) {
                  var c = s.map(function (d, f) {
                      return Array.isArray(d) ? d.length : 1;
                    }),
                    h = Math.max.apply(Math, le(c));
                  l = s[c.indexOf(h)];
                }
                return l;
              },
            },
          ]),
          U
        );
      })(),
      st = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.dCtx = i);
        }
        return (
          g(U, [
            {
              key: "getxAxisLabelsCoords",
              value: function () {
                var i,
                  s = this.w,
                  l = s.globals.labels.slice();
                if (
                  (s.config.xaxis.convertedCatToNumeric &&
                    l.length === 0 &&
                    (l = s.globals.categoryLabels),
                  s.globals.timescaleLabels.length > 0)
                ) {
                  var c = this.getxAxisTimeScaleLabelsCoords();
                  (i = { width: c.width, height: c.height }),
                    (s.globals.rotateXLabels = !1);
                } else {
                  this.dCtx.lgWidthForSideLegends =
                    (s.config.legend.position !== "left" &&
                      s.config.legend.position !== "right") ||
                    s.config.legend.floating
                      ? 0
                      : this.dCtx.lgRect.width;
                  var h = s.globals.xLabelFormatter,
                    d = F.getLargestStringFromArr(l),
                    f = this.dCtx.dimHelpers.getLargestStringFromMultiArr(d, l);
                  s.globals.isBarHorizontal &&
                    (f = d =
                      s.globals.yAxisScale[0].result.reduce(function (O, D) {
                        return O.length > D.length ? O : D;
                      }, 0));
                  var p = new ht(this.dCtx.ctx),
                    v = d;
                  (d = p.xLabelFormat(h, d, v, {
                    i: void 0,
                    dateFormatter: new It(this.dCtx.ctx).formatDate,
                    w: s,
                  })),
                    (f = p.xLabelFormat(h, f, v, {
                      i: void 0,
                      dateFormatter: new It(this.dCtx.ctx).formatDate,
                      w: s,
                    })),
                    ((s.config.xaxis.convertedCatToNumeric && d === void 0) ||
                      String(d).trim() === "") &&
                      (f = d = "1");
                  var b = new C(this.dCtx.ctx),
                    _ = b.getTextRects(d, s.config.xaxis.labels.style.fontSize),
                    S = _;
                  if (
                    (d !== f &&
                      (S = b.getTextRects(
                        f,
                        s.config.xaxis.labels.style.fontSize
                      )),
                    ((i = {
                      width: _.width >= S.width ? _.width : S.width,
                      height: _.height >= S.height ? _.height : S.height,
                    }).width *
                      l.length >
                      s.globals.svgWidth -
                        this.dCtx.lgWidthForSideLegends -
                        this.dCtx.yAxisWidth -
                        this.dCtx.gridPad.left -
                        this.dCtx.gridPad.right &&
                      s.config.xaxis.labels.rotate !== 0) ||
                      s.config.xaxis.labels.rotateAlways)
                  ) {
                    if (!s.globals.isBarHorizontal) {
                      s.globals.rotateXLabels = !0;
                      var T = function (O) {
                        return b.getTextRects(
                          O,
                          s.config.xaxis.labels.style.fontSize,
                          s.config.xaxis.labels.style.fontFamily,
                          "rotate(".concat(
                            s.config.xaxis.labels.rotate,
                            " 0 0)"
                          ),
                          !1
                        );
                      };
                      (_ = T(d)),
                        d !== f && (S = T(f)),
                        (i.height =
                          (_.height > S.height ? _.height : S.height) / 1.5),
                        (i.width = _.width > S.width ? _.width : S.width);
                    }
                  } else s.globals.rotateXLabels = !1;
                }
                return (
                  s.config.xaxis.labels.show || (i = { width: 0, height: 0 }),
                  { width: i.width, height: i.height }
                );
              },
            },
            {
              key: "getxAxisGroupLabelsCoords",
              value: function () {
                var i,
                  s = this.w;
                if (!s.globals.hasXaxisGroups) return { width: 0, height: 0 };
                var l,
                  c =
                    ((i = s.config.xaxis.group.style) === null || i === void 0
                      ? void 0
                      : i.fontSize) || s.config.xaxis.labels.style.fontSize,
                  h = s.globals.groups.map(function (_) {
                    return _.title;
                  }),
                  d = F.getLargestStringFromArr(h),
                  f = this.dCtx.dimHelpers.getLargestStringFromMultiArr(d, h),
                  p = new C(this.dCtx.ctx),
                  v = p.getTextRects(d, c),
                  b = v;
                return (
                  d !== f && (b = p.getTextRects(f, c)),
                  (l = {
                    width: v.width >= b.width ? v.width : b.width,
                    height: v.height >= b.height ? v.height : b.height,
                  }),
                  s.config.xaxis.labels.show || (l = { width: 0, height: 0 }),
                  { width: l.width, height: l.height }
                );
              },
            },
            {
              key: "getxAxisTitleCoords",
              value: function () {
                var i = this.w,
                  s = 0,
                  l = 0;
                if (i.config.xaxis.title.text !== void 0) {
                  var c = new C(this.dCtx.ctx).getTextRects(
                    i.config.xaxis.title.text,
                    i.config.xaxis.title.style.fontSize
                  );
                  (s = c.width), (l = c.height);
                }
                return { width: s, height: l };
              },
            },
            {
              key: "getxAxisTimeScaleLabelsCoords",
              value: function () {
                var i,
                  s = this.w;
                this.dCtx.timescaleLabels = s.globals.timescaleLabels.slice();
                var l = this.dCtx.timescaleLabels.map(function (h) {
                    return h.value;
                  }),
                  c = l.reduce(function (h, d) {
                    return h === void 0
                      ? (console.error(
                          "You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"
                        ),
                        0)
                      : h.length > d.length
                      ? h
                      : d;
                  }, 0);
                return (
                  1.05 *
                    (i = new C(this.dCtx.ctx).getTextRects(
                      c,
                      s.config.xaxis.labels.style.fontSize
                    )).width *
                    l.length >
                    s.globals.gridWidth &&
                    s.config.xaxis.labels.rotate !== 0 &&
                    (s.globals.overlappingXLabels = !0),
                  i
                );
              },
            },
            {
              key: "additionalPaddingXLabels",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = l.globals,
                  h = l.config,
                  d = h.xaxis.type,
                  f = i.width;
                (c.skipLastTimelinelabel = !1), (c.skipFirstTimelinelabel = !1);
                var p = l.config.yaxis[0].opposite && l.globals.isBarHorizontal,
                  v = function (b, _) {
                    (h.yaxis.length > 1 &&
                      (function (S) {
                        return c.collapsedSeriesIndices.indexOf(S) !== -1;
                      })(_)) ||
                      (function (S) {
                        if (
                          s.dCtx.timescaleLabels &&
                          s.dCtx.timescaleLabels.length
                        ) {
                          var T = s.dCtx.timescaleLabels[0],
                            O =
                              s.dCtx.timescaleLabels[
                                s.dCtx.timescaleLabels.length - 1
                              ].position +
                              f / 1.75 -
                              s.dCtx.yAxisWidthRight,
                            D = T.position - f / 1.75 + s.dCtx.yAxisWidthLeft,
                            V =
                              l.config.legend.position === "right" &&
                              s.dCtx.lgRect.width > 0
                                ? s.dCtx.lgRect.width
                                : 0;
                          O > c.svgWidth - c.translateX - V &&
                            (c.skipLastTimelinelabel = !0),
                            D <
                              -((S.show && !S.floating) ||
                              (h.chart.type !== "bar" &&
                                h.chart.type !== "candlestick" &&
                                h.chart.type !== "rangeBar" &&
                                h.chart.type !== "boxPlot")
                                ? 10
                                : f / 1.75) && (c.skipFirstTimelinelabel = !0);
                        } else
                          d === "datetime"
                            ? s.dCtx.gridPad.right < f &&
                              !c.rotateXLabels &&
                              (c.skipLastTimelinelabel = !0)
                            : d !== "datetime" &&
                              s.dCtx.gridPad.right <
                                f / 2 - s.dCtx.yAxisWidthRight &&
                              !c.rotateXLabels &&
                              !l.config.xaxis.labels.trim &&
                              (l.config.xaxis.tickPlacement !== "between" ||
                                l.globals.isBarHorizontal) &&
                              (s.dCtx.xPadRight = f / 2 + 1);
                      })(b);
                  };
                h.yaxis.forEach(function (b, _) {
                  p
                    ? (s.dCtx.gridPad.left < f && (s.dCtx.xPadLeft = f / 2 + 1),
                      (s.dCtx.xPadRight = f / 2 + 1))
                    : v(b, _);
                });
              },
            },
          ]),
          U
        );
      })(),
      Ge = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.dCtx = i);
        }
        return (
          g(U, [
            {
              key: "getyAxisLabelsCoords",
              value: function () {
                var i = this,
                  s = this.w,
                  l = [],
                  c = 10,
                  h = new Ze(this.dCtx.ctx);
                return (
                  s.config.yaxis.map(function (d, f) {
                    var p = { seriesIndex: f, dataPointIndex: -1, w: s },
                      v = s.globals.yAxisScale[f],
                      b = 0;
                    if (
                      (!h.isYAxisHidden(f) &&
                        d.labels.show &&
                        d.labels.minWidth !== void 0 &&
                        (b = d.labels.minWidth),
                      !h.isYAxisHidden(f) && d.labels.show && v.result.length)
                    ) {
                      var _ = s.globals.yLabelFormatters[f],
                        S = v.niceMin === Number.MIN_VALUE ? 0 : v.niceMin,
                        T = v.result.reduce(function (k, N) {
                          var X, K;
                          return ((X = String(_(k, p))) === null || X === void 0
                            ? void 0
                            : X.length) >
                            ((K = String(_(N, p))) === null || K === void 0
                              ? void 0
                              : K.length)
                            ? k
                            : N;
                        }, S),
                        O = (T = _(T, p));
                      if (
                        ((T !== void 0 && T.length !== 0) || (T = v.niceMax),
                        s.globals.isBarHorizontal)
                      ) {
                        c = 0;
                        var D = s.globals.labels.slice();
                        (T = F.getLargestStringFromArr(D)),
                          (T = _(T, {
                            seriesIndex: f,
                            dataPointIndex: -1,
                            w: s,
                          })),
                          (O = i.dCtx.dimHelpers.getLargestStringFromMultiArr(
                            T,
                            D
                          ));
                      }
                      var V = new C(i.dCtx.ctx),
                        G = "rotate(".concat(d.labels.rotate, " 0 0)"),
                        Q = V.getTextRects(
                          T,
                          d.labels.style.fontSize,
                          d.labels.style.fontFamily,
                          G,
                          !1
                        ),
                        m = Q;
                      T !== O &&
                        (m = V.getTextRects(
                          O,
                          d.labels.style.fontSize,
                          d.labels.style.fontFamily,
                          G,
                          !1
                        )),
                        l.push({
                          width:
                            (b > m.width || b > Q.width
                              ? b
                              : m.width > Q.width
                              ? m.width
                              : Q.width) + c,
                          height: m.height > Q.height ? m.height : Q.height,
                        });
                    } else l.push({ width: 0, height: 0 });
                  }),
                  l
                );
              },
            },
            {
              key: "getyAxisTitleCoords",
              value: function () {
                var i = this,
                  s = this.w,
                  l = [];
                return (
                  s.config.yaxis.map(function (c, h) {
                    if (c.show && c.title.text !== void 0) {
                      var d = new C(i.dCtx.ctx),
                        f = "rotate(".concat(c.title.rotate, " 0 0)"),
                        p = d.getTextRects(
                          c.title.text,
                          c.title.style.fontSize,
                          c.title.style.fontFamily,
                          f,
                          !1
                        );
                      l.push({ width: p.width, height: p.height });
                    } else l.push({ width: 0, height: 0 });
                  }),
                  l
                );
              },
            },
            {
              key: "getTotalYAxisWidth",
              value: function () {
                var i = this.w,
                  s = 0,
                  l = 0,
                  c = 0,
                  h = i.globals.yAxisScale.length > 1 ? 10 : 0,
                  d = new Ze(this.dCtx.ctx),
                  f = function (p, v) {
                    var b = i.config.yaxis[v].floating,
                      _ = 0;
                    p.width > 0 && !b
                      ? ((_ = p.width + h),
                        (function (S) {
                          return i.globals.ignoreYAxisIndexes.indexOf(S) > -1;
                        })(v) && (_ = _ - p.width - h))
                      : (_ = b || d.isYAxisHidden(v) ? 0 : 5),
                      i.config.yaxis[v].opposite ? (c += _) : (l += _),
                      (s += _);
                  };
                return (
                  i.globals.yLabelsCoords.map(function (p, v) {
                    f(p, v);
                  }),
                  i.globals.yTitleCoords.map(function (p, v) {
                    f(p, v);
                  }),
                  i.globals.isBarHorizontal &&
                    !i.config.yaxis[0].floating &&
                    (s =
                      i.globals.yLabelsCoords[0].width +
                      i.globals.yTitleCoords[0].width +
                      15),
                  (this.dCtx.yAxisWidthLeft = l),
                  (this.dCtx.yAxisWidthRight = c),
                  s
                );
              },
            },
          ]),
          U
        );
      })(),
      qe = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.dCtx = i);
        }
        return (
          g(U, [
            {
              key: "gridPadForColumnsInNumericAxis",
              value: function (i) {
                var s = this.w;
                if (s.globals.noData || s.globals.allSeriesCollapsed) return 0;
                var l = function (b) {
                    return (
                      b === "bar" ||
                      b === "rangeBar" ||
                      b === "candlestick" ||
                      b === "boxPlot"
                    );
                  },
                  c = s.config.chart.type,
                  h = 0,
                  d = l(c) ? s.config.series.length : 1;
                if (
                  (s.globals.comboBarCount > 0 && (d = s.globals.comboBarCount),
                  s.globals.collapsedSeries.forEach(function (b) {
                    l(b.type) && (d -= 1);
                  }),
                  s.config.chart.stacked && (d = 1),
                  (l(c) || s.globals.comboBarCount > 0) &&
                    s.globals.isXNumeric &&
                    !s.globals.isBarHorizontal &&
                    d > 0)
                ) {
                  var f,
                    p,
                    v = Math.abs(s.globals.initialMaxX - s.globals.initialMinX);
                  v <= 3 && (v = s.globals.dataPoints),
                    (f = v / i),
                    s.globals.minXDiff &&
                      s.globals.minXDiff / f > 0 &&
                      (p = s.globals.minXDiff / f),
                    p > i / 2 && (p /= 2),
                    (h =
                      ((p / d) *
                        parseInt(s.config.plotOptions.bar.columnWidth, 10)) /
                      100) < 1 && (h = 1),
                    (h = h / (d > 1 ? 1 : 1.5) + 5),
                    (s.globals.barPadForNumericAxis = h);
                }
                return h;
              },
            },
            {
              key: "gridPadFortitleSubtitle",
              value: function () {
                var i = this,
                  s = this.w,
                  l = s.globals,
                  c = this.dCtx.isSparkline || !s.globals.axisCharts ? 0 : 10;
                ["title", "subtitle"].forEach(function (f) {
                  s.config[f].text !== void 0
                    ? (c += s.config[f].margin)
                    : (c +=
                        i.dCtx.isSparkline || !s.globals.axisCharts ? 0 : 5);
                }),
                  !s.config.legend.show ||
                    s.config.legend.position !== "bottom" ||
                    s.config.legend.floating ||
                    s.globals.axisCharts ||
                    (c += 10);
                var h = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                  d = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
                (l.gridHeight = l.gridHeight - h.height - d.height - c),
                  (l.translateY = l.translateY + h.height + d.height + c);
              },
            },
            {
              key: "setGridXPosForDualYAxis",
              value: function (i, s) {
                var l = this.w,
                  c = new Ze(this.dCtx.ctx);
                l.config.yaxis.map(function (h, d) {
                  l.globals.ignoreYAxisIndexes.indexOf(d) !== -1 ||
                    h.floating ||
                    c.isYAxisHidden(d) ||
                    (h.opposite &&
                      (l.globals.translateX =
                        l.globals.translateX -
                        (s[d].width + i[d].width) -
                        parseInt(l.config.yaxis[d].labels.style.fontSize, 10) /
                          1.2 -
                        12),
                    l.globals.translateX < 2 && (l.globals.translateX = 2));
                });
              },
            },
          ]),
          U
        );
      })(),
      Dt = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.lgRect = {}),
            (this.yAxisWidth = 0),
            (this.yAxisWidthLeft = 0),
            (this.yAxisWidthRight = 0),
            (this.xAxisHeight = 0),
            (this.isSparkline = this.w.config.chart.sparkline.enabled),
            (this.dimHelpers = new Te(this)),
            (this.dimYAxis = new Ge(this)),
            (this.dimXAxis = new st(this)),
            (this.dimGrid = new qe(this)),
            (this.lgWidthForSideLegends = 0),
            (this.gridPad = this.w.config.grid.padding),
            (this.xPadRight = 0),
            (this.xPadLeft = 0);
        }
        return (
          g(U, [
            {
              key: "plotCoords",
              value: function () {
                var i = this,
                  s = this.w,
                  l = s.globals;
                (this.lgRect = this.dimHelpers.getLegendsRect()),
                  this.isSparkline &&
                    ((s.config.markers.discrete.length > 0 ||
                      s.config.markers.size > 0) &&
                      Object.entries(this.gridPad).forEach(function (h) {
                        var d = se(h, 2),
                          f = d[0],
                          p = d[1];
                        i.gridPad[f] = Math.max(
                          p,
                          i.w.globals.markers.largestSize / 1.5
                        );
                      }),
                    (this.gridPad.top = Math.max(
                      s.config.stroke.width / 2,
                      this.gridPad.top
                    )),
                    (this.gridPad.bottom = Math.max(
                      s.config.stroke.width / 2,
                      this.gridPad.bottom
                    ))),
                  l.axisCharts
                    ? this.setDimensionsForAxisCharts()
                    : this.setDimensionsForNonAxisCharts(),
                  this.dimGrid.gridPadFortitleSubtitle(),
                  (l.gridHeight =
                    l.gridHeight - this.gridPad.top - this.gridPad.bottom),
                  (l.gridWidth =
                    l.gridWidth -
                    this.gridPad.left -
                    this.gridPad.right -
                    this.xPadRight -
                    this.xPadLeft);
                var c = this.dimGrid.gridPadForColumnsInNumericAxis(
                  l.gridWidth
                );
                (l.gridWidth = l.gridWidth - 2 * c),
                  (l.translateX =
                    l.translateX +
                    this.gridPad.left +
                    this.xPadLeft +
                    (c > 0 ? c + 4 : 0)),
                  (l.translateY = l.translateY + this.gridPad.top);
              },
            },
            {
              key: "setDimensionsForAxisCharts",
              value: function () {
                var i = this,
                  s = this.w,
                  l = s.globals,
                  c = this.dimYAxis.getyAxisLabelsCoords(),
                  h = this.dimYAxis.getyAxisTitleCoords();
                (s.globals.yLabelsCoords = []),
                  (s.globals.yTitleCoords = []),
                  s.config.yaxis.map(function (T, O) {
                    s.globals.yLabelsCoords.push({
                      width: c[O].width,
                      index: O,
                    }),
                      s.globals.yTitleCoords.push({
                        width: h[O].width,
                        index: O,
                      });
                  }),
                  (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
                var d = this.dimXAxis.getxAxisLabelsCoords(),
                  f = this.dimXAxis.getxAxisGroupLabelsCoords(),
                  p = this.dimXAxis.getxAxisTitleCoords();
                this.conditionalChecksForAxisCoords(d, p, f),
                  (l.translateXAxisY = s.globals.rotateXLabels
                    ? this.xAxisHeight / 8
                    : -4),
                  (l.translateXAxisX =
                    s.globals.rotateXLabels &&
                    s.globals.isXNumeric &&
                    s.config.xaxis.labels.rotate <= -45
                      ? -this.xAxisWidth / 4
                      : 0),
                  s.globals.isBarHorizontal &&
                    ((l.rotateXLabels = !1),
                    (l.translateXAxisY =
                      (parseInt(s.config.xaxis.labels.style.fontSize, 10) /
                        1.5) *
                      -1)),
                  (l.translateXAxisY =
                    l.translateXAxisY + s.config.xaxis.labels.offsetY),
                  (l.translateXAxisX =
                    l.translateXAxisX + s.config.xaxis.labels.offsetX);
                var v = this.yAxisWidth,
                  b = this.xAxisHeight;
                (l.xAxisLabelsHeight = this.xAxisHeight - p.height),
                  (l.xAxisGroupLabelsHeight = l.xAxisLabelsHeight - d.height),
                  (l.xAxisLabelsWidth = this.xAxisWidth),
                  (l.xAxisHeight = this.xAxisHeight);
                var _ = 10;
                (s.config.chart.type === "radar" || this.isSparkline) &&
                  ((v = 0), (b = l.goldenPadding)),
                  this.isSparkline && (this.lgRect = { height: 0, width: 0 }),
                  (this.isSparkline || s.config.chart.type === "treemap") &&
                    ((v = 0), (b = 0), (_ = 0)),
                  this.isSparkline || this.dimXAxis.additionalPaddingXLabels(d);
                var S = function () {
                  (l.translateX = v),
                    (l.gridHeight =
                      l.svgHeight -
                      i.lgRect.height -
                      b -
                      (i.isSparkline || s.config.chart.type === "treemap"
                        ? 0
                        : s.globals.rotateXLabels
                        ? 10
                        : 15)),
                    (l.gridWidth = l.svgWidth - v);
                };
                switch (
                  (s.config.xaxis.position === "top" &&
                    (_ = l.xAxisHeight - s.config.xaxis.axisTicks.height - 5),
                  s.config.legend.position)
                ) {
                  case "bottom":
                    (l.translateY = _), S();
                    break;
                  case "top":
                    (l.translateY = this.lgRect.height + _), S();
                    break;
                  case "left":
                    (l.translateY = _),
                      (l.translateX = this.lgRect.width + v),
                      (l.gridHeight = l.svgHeight - b - 12),
                      (l.gridWidth = l.svgWidth - this.lgRect.width - v);
                    break;
                  case "right":
                    (l.translateY = _),
                      (l.translateX = v),
                      (l.gridHeight = l.svgHeight - b - 12),
                      (l.gridWidth = l.svgWidth - this.lgRect.width - v - 5);
                    break;
                  default:
                    throw new Error("Legend position not supported");
                }
                this.dimGrid.setGridXPosForDualYAxis(h, c),
                  new dt(this.ctx).setYAxisXPosition(c, h);
              },
            },
            {
              key: "setDimensionsForNonAxisCharts",
              value: function () {
                var i = this.w,
                  s = i.globals,
                  l = i.config,
                  c = 0;
                i.config.legend.show && !i.config.legend.floating && (c = 20);
                var h =
                    l.chart.type === "pie" ||
                    l.chart.type === "polarArea" ||
                    l.chart.type === "donut"
                      ? "pie"
                      : "radialBar",
                  d = l.plotOptions[h].offsetY,
                  f = l.plotOptions[h].offsetX;
                if (!l.legend.show || l.legend.floating)
                  return (
                    (s.gridHeight =
                      s.svgHeight - l.grid.padding.left + l.grid.padding.right),
                    (s.gridWidth = s.gridHeight),
                    (s.translateY = d),
                    void (s.translateX = f + (s.svgWidth - s.gridWidth) / 2)
                  );
                switch (l.legend.position) {
                  case "bottom":
                    (s.gridHeight =
                      s.svgHeight - this.lgRect.height - s.goldenPadding),
                      (s.gridWidth = s.svgWidth),
                      (s.translateY = d - 10),
                      (s.translateX = f + (s.svgWidth - s.gridWidth) / 2);
                    break;
                  case "top":
                    (s.gridHeight =
                      s.svgHeight - this.lgRect.height - s.goldenPadding),
                      (s.gridWidth = s.svgWidth),
                      (s.translateY = this.lgRect.height + d + 10),
                      (s.translateX = f + (s.svgWidth - s.gridWidth) / 2);
                    break;
                  case "left":
                    (s.gridWidth = s.svgWidth - this.lgRect.width - c),
                      (s.gridHeight =
                        l.chart.height !== "auto" ? s.svgHeight : s.gridWidth),
                      (s.translateY = d),
                      (s.translateX = f + this.lgRect.width + c);
                    break;
                  case "right":
                    (s.gridWidth = s.svgWidth - this.lgRect.width - c - 5),
                      (s.gridHeight =
                        l.chart.height !== "auto" ? s.svgHeight : s.gridWidth),
                      (s.translateY = d),
                      (s.translateX = f + 10);
                    break;
                  default:
                    throw new Error("Legend position not supported");
                }
              },
            },
            {
              key: "conditionalChecksForAxisCoords",
              value: function (i, s, l) {
                var c = this.w,
                  h = c.globals.hasXaxisGroups ? 2 : 1,
                  d = l.height + i.height + s.height,
                  f = c.globals.isMultiLineX
                    ? 1.2
                    : c.globals.LINE_HEIGHT_RATIO,
                  p = c.globals.rotateXLabels ? 22 : 10,
                  v =
                    c.globals.rotateXLabels &&
                    c.config.legend.position === "bottom"
                      ? 10
                      : 0;
                (this.xAxisHeight = d * f + h * p + v),
                  (this.xAxisWidth = i.width),
                  this.xAxisHeight - s.height >
                    c.config.xaxis.labels.maxHeight &&
                    (this.xAxisHeight = c.config.xaxis.labels.maxHeight),
                  c.config.xaxis.labels.minHeight &&
                    this.xAxisHeight < c.config.xaxis.labels.minHeight &&
                    (this.xAxisHeight = c.config.xaxis.labels.minHeight),
                  c.config.xaxis.floating && (this.xAxisHeight = 0);
                var b = 0,
                  _ = 0;
                c.config.yaxis.forEach(function (S) {
                  (b += S.labels.minWidth), (_ += S.labels.maxWidth);
                }),
                  this.yAxisWidth < b && (this.yAxisWidth = b),
                  this.yAxisWidth > _ && (this.yAxisWidth = _);
              },
            },
          ]),
          U
        );
      })(),
      nn = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.lgCtx = i);
        }
        return (
          g(U, [
            {
              key: "getLegendStyles",
              value: function () {
                var i,
                  s,
                  l,
                  c = document.createElement("style");
                c.setAttribute("type", "text/css");
                var h =
                  ((i = this.lgCtx.ctx) === null ||
                  i === void 0 ||
                  (s = i.opts) === null ||
                  s === void 0 ||
                  (l = s.chart) === null ||
                  l === void 0
                    ? void 0
                    : l.nonce) || this.w.config.chart.nonce;
                h && c.setAttribute("nonce", h);
                var d = document.createTextNode(`	
    	
      .apexcharts-legend {	
        display: flex;	
        overflow: auto;	
        padding: 0 10px;	
      }	
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	
        flex-wrap: wrap	
      }	
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        flex-direction: column;	
        bottom: 0;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        justify-content: flex-start;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	
        justify-content: center;  	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	
        justify-content: flex-end;	
      }	
      .apexcharts-legend-series {	
        cursor: pointer;	
        line-height: normal;	
      }	
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	
        display: flex;	
        align-items: center;	
      }	
      .apexcharts-legend-text {	
        position: relative;	
        font-size: 14px;	
      }	
      .apexcharts-legend-text *, .apexcharts-legend-marker * {	
        pointer-events: none;	
      }	
      .apexcharts-legend-marker {	
        position: relative;	
        display: inline-block;	
        cursor: pointer;	
        margin-right: 3px;	
        border-style: solid;
      }	
      	
      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	
        display: inline-block;	
      }	
      .apexcharts-legend-series.apexcharts-no-click {	
        cursor: auto;	
      }	
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	
        display: none !important;	
      }	
      .apexcharts-inactive-legend {	
        opacity: 0.45;	
      }`);
                return c.appendChild(d), c;
              },
            },
            {
              key: "getLegendBBox",
              value: function () {
                var i = this.w.globals.dom.baseEl
                    .querySelector(".apexcharts-legend")
                    .getBoundingClientRect(),
                  s = i.width;
                return { clwh: i.height, clww: s };
              },
            },
            {
              key: "appendToForeignObject",
              value: function () {
                this.w.globals.dom.elLegendForeign.appendChild(
                  this.getLegendStyles()
                );
              },
            },
            {
              key: "toggleDataSeries",
              value: function (i, s) {
                var l = this,
                  c = this.w;
                if (
                  c.globals.axisCharts ||
                  c.config.chart.type === "radialBar"
                ) {
                  c.globals.resized = !0;
                  var h = null,
                    d = null;
                  (c.globals.risingSeries = []),
                    c.globals.axisCharts
                      ? ((h = c.globals.dom.baseEl.querySelector(
                          ".apexcharts-series[data\\:realIndex='".concat(
                            i,
                            "']"
                          )
                        )),
                        (d = parseInt(h.getAttribute("data:realIndex"), 10)))
                      : ((h = c.globals.dom.baseEl.querySelector(
                          ".apexcharts-series[rel='".concat(i + 1, "']")
                        )),
                        (d = parseInt(h.getAttribute("rel"), 10) - 1)),
                    s
                      ? [
                          {
                            cs: c.globals.collapsedSeries,
                            csi: c.globals.collapsedSeriesIndices,
                          },
                          {
                            cs: c.globals.ancillaryCollapsedSeries,
                            csi: c.globals.ancillaryCollapsedSeriesIndices,
                          },
                        ].forEach(function (b) {
                          l.riseCollapsedSeries(b.cs, b.csi, d);
                        })
                      : this.hideSeries({ seriesEl: h, realIndex: d });
                } else {
                  var f = c.globals.dom.Paper.select(
                      " .apexcharts-series[rel='".concat(i + 1, "'] path")
                    ),
                    p = c.config.chart.type;
                  if (p === "pie" || p === "polarArea" || p === "donut") {
                    var v = c.config.plotOptions.pie.donut.labels;
                    new C(this.lgCtx.ctx).pathMouseDown(f.members[0], null),
                      this.lgCtx.ctx.pie.printDataLabelsInner(
                        f.members[0].node,
                        v
                      );
                  }
                  f.fire("click");
                }
              },
            },
            {
              key: "hideSeries",
              value: function (i) {
                var s = i.seriesEl,
                  l = i.realIndex,
                  c = this.w,
                  h = F.clone(c.config.series);
                if (c.globals.axisCharts) {
                  var d = !1;
                  if (
                    (c.config.yaxis[l] &&
                      c.config.yaxis[l].show &&
                      c.config.yaxis[l].showAlways &&
                      ((d = !0),
                      c.globals.ancillaryCollapsedSeriesIndices.indexOf(l) <
                        0 &&
                        (c.globals.ancillaryCollapsedSeries.push({
                          index: l,
                          data: h[l].data.slice(),
                          type: s.parentNode.className.baseVal.split("-")[1],
                        }),
                        c.globals.ancillaryCollapsedSeriesIndices.push(l))),
                    !d)
                  ) {
                    c.globals.collapsedSeries.push({
                      index: l,
                      data: h[l].data.slice(),
                      type: s.parentNode.className.baseVal.split("-")[1],
                    }),
                      c.globals.collapsedSeriesIndices.push(l);
                    var f = c.globals.risingSeries.indexOf(l);
                    c.globals.risingSeries.splice(f, 1);
                  }
                } else
                  c.globals.collapsedSeries.push({ index: l, data: h[l] }),
                    c.globals.collapsedSeriesIndices.push(l);
                for (var p = s.childNodes, v = 0; v < p.length; v++)
                  p[v].classList.contains("apexcharts-series-markers-wrap") &&
                    (p[v].classList.contains("apexcharts-hide")
                      ? p[v].classList.remove("apexcharts-hide")
                      : p[v].classList.add("apexcharts-hide"));
                (c.globals.allSeriesCollapsed =
                  c.globals.collapsedSeries.length === c.config.series.length),
                  (h = this._getSeriesBasedOnCollapsedState(h)),
                  this.lgCtx.ctx.updateHelpers._updateSeries(
                    h,
                    c.config.chart.animations.dynamicAnimation.enabled
                  );
              },
            },
            {
              key: "riseCollapsedSeries",
              value: function (i, s, l) {
                var c = this.w,
                  h = F.clone(c.config.series);
                if (i.length > 0) {
                  for (var d = 0; d < i.length; d++)
                    i[d].index === l &&
                      (c.globals.axisCharts
                        ? ((h[l].data = i[d].data.slice()),
                          i.splice(d, 1),
                          s.splice(d, 1),
                          c.globals.risingSeries.push(l))
                        : ((h[l] = i[d].data),
                          i.splice(d, 1),
                          s.splice(d, 1),
                          c.globals.risingSeries.push(l)));
                  (h = this._getSeriesBasedOnCollapsedState(h)),
                    this.lgCtx.ctx.updateHelpers._updateSeries(
                      h,
                      c.config.chart.animations.dynamicAnimation.enabled
                    );
                }
              },
            },
            {
              key: "_getSeriesBasedOnCollapsedState",
              value: function (i) {
                var s = this.w;
                return (
                  s.globals.axisCharts
                    ? i.forEach(function (l, c) {
                        s.globals.collapsedSeriesIndices.indexOf(c) > -1 &&
                          (i[c].data = []);
                      })
                    : i.forEach(function (l, c) {
                        s.globals.collapsedSeriesIndices.indexOf(c) > -1 &&
                          (i[c] = 0);
                      }),
                  i
                );
              },
            },
          ]),
          U
        );
      })(),
      fn = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.onLegendClick = this.onLegendClick.bind(this)),
            (this.onLegendHovered = this.onLegendHovered.bind(this)),
            (this.isBarsDistributed =
              this.w.config.chart.type === "bar" &&
              this.w.config.plotOptions.bar.distributed &&
              this.w.config.series.length === 1),
            (this.legendHelpers = new nn(this));
        }
        return (
          g(U, [
            {
              key: "init",
              value: function () {
                var i = this.w,
                  s = i.globals,
                  l = i.config;
                if (
                  ((l.legend.showForSingleSeries && s.series.length === 1) ||
                    this.isBarsDistributed ||
                    s.series.length > 1 ||
                    !s.axisCharts) &&
                  l.legend.show
                ) {
                  for (; s.dom.elLegendWrap.firstChild; )
                    s.dom.elLegendWrap.removeChild(
                      s.dom.elLegendWrap.firstChild
                    );
                  this.drawLegends(),
                    F.isIE11()
                      ? document
                          .getElementsByTagName("head")[0]
                          .appendChild(this.legendHelpers.getLegendStyles())
                      : this.legendHelpers.appendToForeignObject(),
                    l.legend.position === "bottom" ||
                    l.legend.position === "top"
                      ? this.legendAlignHorizontal()
                      : (l.legend.position !== "right" &&
                          l.legend.position !== "left") ||
                        this.legendAlignVertical();
                }
              },
            },
            {
              key: "drawLegends",
              value: function () {
                var i = this,
                  s = this.w,
                  l = s.config.legend.fontFamily,
                  c = s.globals.seriesNames,
                  h = s.globals.colors.slice();
                if (s.config.chart.type === "heatmap") {
                  var d = s.config.plotOptions.heatmap.colorScale.ranges;
                  (c = d.map(function (ze) {
                    return ze.name ? ze.name : ze.from + " - " + ze.to;
                  })),
                    (h = d.map(function (ze) {
                      return ze.color;
                    }));
                } else this.isBarsDistributed && (c = s.globals.labels.slice());
                s.config.legend.customLegendItems.length &&
                  (c = s.config.legend.customLegendItems);
                for (
                  var f = s.globals.legendFormatter,
                    p = s.config.legend.inverseOrder,
                    v = p ? c.length - 1 : 0;
                  p ? v >= 0 : v <= c.length - 1;
                  p ? v-- : v++
                ) {
                  var b,
                    _ = f(c[v], { seriesIndex: v, w: s }),
                    S = !1,
                    T = !1;
                  if (s.globals.collapsedSeries.length > 0)
                    for (var O = 0; O < s.globals.collapsedSeries.length; O++)
                      s.globals.collapsedSeries[O].index === v && (S = !0);
                  if (s.globals.ancillaryCollapsedSeriesIndices.length > 0)
                    for (
                      var D = 0;
                      D < s.globals.ancillaryCollapsedSeriesIndices.length;
                      D++
                    )
                      s.globals.ancillaryCollapsedSeriesIndices[D] === v &&
                        (T = !0);
                  var V = document.createElement("span");
                  V.classList.add("apexcharts-legend-marker");
                  var G = s.config.legend.markers.offsetX,
                    Q = s.config.legend.markers.offsetY,
                    m = s.config.legend.markers.height,
                    k = s.config.legend.markers.width,
                    N = s.config.legend.markers.strokeWidth,
                    X = s.config.legend.markers.strokeColor,
                    K = s.config.legend.markers.radius,
                    ee = V.style;
                  (ee.background = h[v]),
                    (ee.color = h[v]),
                    ee.setProperty("background", h[v], "important"),
                    s.config.legend.markers.fillColors &&
                      s.config.legend.markers.fillColors[v] &&
                      (ee.background = s.config.legend.markers.fillColors[v]),
                    s.globals.seriesColors[v] !== void 0 &&
                      ((ee.background = s.globals.seriesColors[v]),
                      (ee.color = s.globals.seriesColors[v])),
                    (ee.height = Array.isArray(m)
                      ? parseFloat(m[v]) + "px"
                      : parseFloat(m) + "px"),
                    (ee.width = Array.isArray(k)
                      ? parseFloat(k[v]) + "px"
                      : parseFloat(k) + "px"),
                    (ee.left =
                      (Array.isArray(G) ? parseFloat(G[v]) : parseFloat(G)) +
                      "px"),
                    (ee.top =
                      (Array.isArray(Q) ? parseFloat(Q[v]) : parseFloat(Q)) +
                      "px"),
                    (ee.borderWidth = Array.isArray(N) ? N[v] : N),
                    (ee.borderColor = Array.isArray(X) ? X[v] : X),
                    (ee.borderRadius = Array.isArray(K)
                      ? parseFloat(K[v]) + "px"
                      : parseFloat(K) + "px"),
                    s.config.legend.markers.customHTML &&
                      (Array.isArray(s.config.legend.markers.customHTML)
                        ? s.config.legend.markers.customHTML[v] &&
                          (V.innerHTML =
                            s.config.legend.markers.customHTML[v]())
                        : (V.innerHTML = s.config.legend.markers.customHTML())),
                    C.setAttrs(V, { rel: v + 1, "data:collapsed": S || T }),
                    (S || T) && V.classList.add("apexcharts-inactive-legend");
                  var fe = document.createElement("div"),
                    ge = document.createElement("span");
                  ge.classList.add("apexcharts-legend-text"),
                    (ge.innerHTML = Array.isArray(_) ? _.join(" ") : _);
                  var Pe = s.config.legend.labels.useSeriesColors
                    ? s.globals.colors[v]
                    : Array.isArray(s.config.legend.labels.colors)
                    ? (b = s.config.legend.labels.colors) === null ||
                      b === void 0
                      ? void 0
                      : b[v]
                    : s.config.legend.labels.colors;
                  Pe || (Pe = s.config.chart.foreColor),
                    (ge.style.color = Pe),
                    (ge.style.fontSize =
                      parseFloat(s.config.legend.fontSize) + "px"),
                    (ge.style.fontWeight = s.config.legend.fontWeight),
                    (ge.style.fontFamily = l || s.config.chart.fontFamily),
                    C.setAttrs(ge, {
                      rel: v + 1,
                      i: v,
                      "data:default-text": encodeURIComponent(_),
                      "data:collapsed": S || T,
                    }),
                    fe.appendChild(V),
                    fe.appendChild(ge);
                  var We = new ke(this.ctx);
                  s.config.legend.showForZeroSeries ||
                    (We.getSeriesTotalByIndex(v) === 0 &&
                      We.seriesHaveSameValues(v) &&
                      !We.isSeriesNull(v) &&
                      s.globals.collapsedSeriesIndices.indexOf(v) === -1 &&
                      s.globals.ancillaryCollapsedSeriesIndices.indexOf(v) ===
                        -1 &&
                      fe.classList.add("apexcharts-hidden-zero-series")),
                    s.config.legend.showForNullSeries ||
                      (We.isSeriesNull(v) &&
                        s.globals.collapsedSeriesIndices.indexOf(v) === -1 &&
                        s.globals.ancillaryCollapsedSeriesIndices.indexOf(v) ===
                          -1 &&
                        fe.classList.add("apexcharts-hidden-null-series")),
                    s.globals.dom.elLegendWrap.appendChild(fe),
                    s.globals.dom.elLegendWrap.classList.add(
                      "apexcharts-align-".concat(
                        s.config.legend.horizontalAlign
                      )
                    ),
                    s.globals.dom.elLegendWrap.classList.add(
                      "apx-legend-position-" + s.config.legend.position
                    ),
                    fe.classList.add("apexcharts-legend-series"),
                    (fe.style.margin = ""
                      .concat(s.config.legend.itemMargin.vertical, "px ")
                      .concat(s.config.legend.itemMargin.horizontal, "px")),
                    (s.globals.dom.elLegendWrap.style.width = s.config.legend
                      .width
                      ? s.config.legend.width + "px"
                      : ""),
                    (s.globals.dom.elLegendWrap.style.height = s.config.legend
                      .height
                      ? s.config.legend.height + "px"
                      : ""),
                    C.setAttrs(fe, {
                      rel: v + 1,
                      seriesName: F.escapeString(c[v]),
                      "data:collapsed": S || T,
                    }),
                    (S || T) && fe.classList.add("apexcharts-inactive-legend"),
                    s.config.legend.onItemClick.toggleDataSeries ||
                      fe.classList.add("apexcharts-no-click");
                }
                s.globals.dom.elWrap.addEventListener(
                  "click",
                  i.onLegendClick,
                  !0
                ),
                  s.config.legend.onItemHover.highlightDataSeries &&
                    s.config.legend.customLegendItems.length === 0 &&
                    (s.globals.dom.elWrap.addEventListener(
                      "mousemove",
                      i.onLegendHovered,
                      !0
                    ),
                    s.globals.dom.elWrap.addEventListener(
                      "mouseout",
                      i.onLegendHovered,
                      !0
                    ));
              },
            },
            {
              key: "setLegendWrapXY",
              value: function (i, s) {
                var l = this.w,
                  c = l.globals.dom.elLegendWrap,
                  h = c.getBoundingClientRect(),
                  d = 0,
                  f = 0;
                if (l.config.legend.position === "bottom")
                  f += l.globals.svgHeight - h.height / 2;
                else if (l.config.legend.position === "top") {
                  var p = new Dt(this.ctx),
                    v = p.dimHelpers.getTitleSubtitleCoords("title").height,
                    b = p.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                  f = f + (v > 0 ? v - 10 : 0) + (b > 0 ? b - 10 : 0);
                }
                (c.style.position = "absolute"),
                  (d = d + i + l.config.legend.offsetX),
                  (f = f + s + l.config.legend.offsetY),
                  (c.style.left = d + "px"),
                  (c.style.top = f + "px"),
                  l.config.legend.position === "bottom"
                    ? ((c.style.top = "auto"),
                      (c.style.bottom = 5 - l.config.legend.offsetY + "px"))
                    : l.config.legend.position === "right" &&
                      ((c.style.left = "auto"),
                      (c.style.right = 25 + l.config.legend.offsetX + "px")),
                  ["width", "height"].forEach(function (_) {
                    c.style[_] &&
                      (c.style[_] = parseInt(l.config.legend[_], 10) + "px");
                  });
              },
            },
            {
              key: "legendAlignHorizontal",
              value: function () {
                var i = this.w;
                i.globals.dom.elLegendWrap.style.right = 0;
                var s = this.legendHelpers.getLegendBBox(),
                  l = new Dt(this.ctx),
                  c = l.dimHelpers.getTitleSubtitleCoords("title"),
                  h = l.dimHelpers.getTitleSubtitleCoords("subtitle"),
                  d = 0;
                i.config.legend.position === "bottom"
                  ? (d = -s.clwh / 1.8)
                  : i.config.legend.position === "top" &&
                    (d =
                      c.height +
                      h.height +
                      i.config.title.margin +
                      i.config.subtitle.margin -
                      10),
                  this.setLegendWrapXY(20, d);
              },
            },
            {
              key: "legendAlignVertical",
              value: function () {
                var i = this.w,
                  s = this.legendHelpers.getLegendBBox(),
                  l = 0;
                i.config.legend.position === "left" && (l = 20),
                  i.config.legend.position === "right" &&
                    (l = i.globals.svgWidth - s.clww - 10),
                  this.setLegendWrapXY(l, 20);
              },
            },
            {
              key: "onLegendHovered",
              value: function (i) {
                var s = this.w,
                  l =
                    i.target.classList.contains("apexcharts-legend-series") ||
                    i.target.classList.contains("apexcharts-legend-text") ||
                    i.target.classList.contains("apexcharts-legend-marker");
                if (
                  s.config.chart.type === "heatmap" ||
                  this.isBarsDistributed
                ) {
                  if (l) {
                    var c = parseInt(i.target.getAttribute("rel"), 10) - 1;
                    this.ctx.events.fireEvent("legendHover", [
                      this.ctx,
                      c,
                      this.w,
                    ]),
                      new de(this.ctx).highlightRangeInSeries(i, i.target);
                  }
                } else
                  !i.target.classList.contains("apexcharts-inactive-legend") &&
                    l &&
                    new de(this.ctx).toggleSeriesOnHover(i, i.target);
              },
            },
            {
              key: "onLegendClick",
              value: function (i) {
                var s = this.w;
                if (
                  !s.config.legend.customLegendItems.length &&
                  (i.target.classList.contains("apexcharts-legend-series") ||
                    i.target.classList.contains("apexcharts-legend-text") ||
                    i.target.classList.contains("apexcharts-legend-marker"))
                ) {
                  var l = parseInt(i.target.getAttribute("rel"), 10) - 1,
                    c = i.target.getAttribute("data:collapsed") === "true",
                    h = this.w.config.chart.events.legendClick;
                  typeof h == "function" && h(this.ctx, l, this.w),
                    this.ctx.events.fireEvent("legendClick", [
                      this.ctx,
                      l,
                      this.w,
                    ]);
                  var d = this.w.config.legend.markers.onClick;
                  typeof d == "function" &&
                    i.target.classList.contains("apexcharts-legend-marker") &&
                    (d(this.ctx, l, this.w),
                    this.ctx.events.fireEvent("legendMarkerClick", [
                      this.ctx,
                      l,
                      this.w,
                    ])),
                    s.config.chart.type !== "treemap" &&
                      s.config.chart.type !== "heatmap" &&
                      !this.isBarsDistributed &&
                      s.config.legend.onItemClick.toggleDataSeries &&
                      this.legendHelpers.toggleDataSeries(l, c);
                }
              },
            },
          ]),
          U
        );
      })(),
      _r = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
          var s = this.w;
          (this.ev = this.w.config.chart.events),
            (this.selectedClass = "apexcharts-selected"),
            (this.localeValues = this.w.globals.locale.toolbar),
            (this.minX = s.globals.minX),
            (this.maxX = s.globals.maxX);
        }
        return (
          g(U, [
            {
              key: "createToolbar",
              value: function () {
                var i = this,
                  s = this.w,
                  l = function () {
                    return document.createElement("div");
                  },
                  c = l();
                if (
                  (c.setAttribute("class", "apexcharts-toolbar"),
                  (c.style.top = s.config.chart.toolbar.offsetY + "px"),
                  (c.style.right = 3 - s.config.chart.toolbar.offsetX + "px"),
                  s.globals.dom.elWrap.appendChild(c),
                  (this.elZoom = l()),
                  (this.elZoomIn = l()),
                  (this.elZoomOut = l()),
                  (this.elPan = l()),
                  (this.elSelection = l()),
                  (this.elZoomReset = l()),
                  (this.elMenuIcon = l()),
                  (this.elMenu = l()),
                  (this.elCustomIcons = []),
                  (this.t = s.config.chart.toolbar.tools),
                  Array.isArray(this.t.customIcons))
                )
                  for (var h = 0; h < this.t.customIcons.length; h++)
                    this.elCustomIcons.push(l());
                var d = [],
                  f = function (_, S, T) {
                    var O = _.toLowerCase();
                    i.t[O] &&
                      s.config.chart.zoom.enabled &&
                      d.push({
                        el: S,
                        icon: typeof i.t[O] == "string" ? i.t[O] : T,
                        title: i.localeValues[_],
                        class: "apexcharts-".concat(O, "-icon"),
                      });
                  };
                f(
                  "zoomIn",
                  this.elZoomIn,
                  `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
                ),
                  f(
                    "zoomOut",
                    this.elZoomOut,
                    `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
                  );
                var p = function (_) {
                  i.t[_] &&
                    s.config.chart[_].enabled &&
                    d.push({
                      el: _ === "zoom" ? i.elZoom : i.elSelection,
                      icon:
                        typeof i.t[_] == "string"
                          ? i.t[_]
                          : _ === "zoom"
                          ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`
                          : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                      title:
                        i.localeValues[
                          _ === "zoom" ? "selectionZoom" : "selection"
                        ],
                      class: s.globals.isTouchDevice
                        ? "apexcharts-element-hidden"
                        : "apexcharts-".concat(_, "-icon"),
                    });
                };
                p("zoom"),
                  p("selection"),
                  this.t.pan &&
                    s.config.chart.zoom.enabled &&
                    d.push({
                      el: this.elPan,
                      icon:
                        typeof this.t.pan == "string"
                          ? this.t.pan
                          : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                      title: this.localeValues.pan,
                      class: s.globals.isTouchDevice
                        ? "apexcharts-element-hidden"
                        : "apexcharts-pan-icon",
                    }),
                  f(
                    "reset",
                    this.elZoomReset,
                    `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`
                  ),
                  this.t.download &&
                    d.push({
                      el: this.elMenuIcon,
                      icon:
                        typeof this.t.download == "string"
                          ? this.t.download
                          : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                      title: this.localeValues.menu,
                      class: "apexcharts-menu-icon",
                    });
                for (var v = 0; v < this.elCustomIcons.length; v++)
                  d.push({
                    el: this.elCustomIcons[v],
                    icon: this.t.customIcons[v].icon,
                    title: this.t.customIcons[v].title,
                    index: this.t.customIcons[v].index,
                    class:
                      "apexcharts-toolbar-custom-icon " +
                      this.t.customIcons[v].class,
                  });
                d.forEach(function (_, S) {
                  _.index && F.moveIndexInArray(d, S, _.index);
                });
                for (var b = 0; b < d.length; b++)
                  C.setAttrs(d[b].el, { class: d[b].class, title: d[b].title }),
                    (d[b].el.innerHTML = d[b].icon),
                    c.appendChild(d[b].el);
                this._createHamburgerMenu(c),
                  s.globals.zoomEnabled
                    ? this.elZoom.classList.add(this.selectedClass)
                    : s.globals.panEnabled
                    ? this.elPan.classList.add(this.selectedClass)
                    : s.globals.selectionEnabled &&
                      this.elSelection.classList.add(this.selectedClass),
                  this.addToolbarEventListeners();
              },
            },
            {
              key: "_createHamburgerMenu",
              value: function (i) {
                (this.elMenuItems = []),
                  i.appendChild(this.elMenu),
                  C.setAttrs(this.elMenu, { class: "apexcharts-menu" });
                for (
                  var s = [
                      {
                        name: "exportSVG",
                        title: this.localeValues.exportToSVG,
                      },
                      {
                        name: "exportPNG",
                        title: this.localeValues.exportToPNG,
                      },
                      {
                        name: "exportCSV",
                        title: this.localeValues.exportToCSV,
                      },
                    ],
                    l = 0;
                  l < s.length;
                  l++
                )
                  this.elMenuItems.push(document.createElement("div")),
                    (this.elMenuItems[l].innerHTML = s[l].title),
                    C.setAttrs(this.elMenuItems[l], {
                      class: "apexcharts-menu-item ".concat(s[l].name),
                      title: s[l].title,
                    }),
                    this.elMenu.appendChild(this.elMenuItems[l]);
              },
            },
            {
              key: "addToolbarEventListeners",
              value: function () {
                var i = this;
                this.elZoomReset.addEventListener(
                  "click",
                  this.handleZoomReset.bind(this)
                ),
                  this.elSelection.addEventListener(
                    "click",
                    this.toggleZoomSelection.bind(this, "selection")
                  ),
                  this.elZoom.addEventListener(
                    "click",
                    this.toggleZoomSelection.bind(this, "zoom")
                  ),
                  this.elZoomIn.addEventListener(
                    "click",
                    this.handleZoomIn.bind(this)
                  ),
                  this.elZoomOut.addEventListener(
                    "click",
                    this.handleZoomOut.bind(this)
                  ),
                  this.elPan.addEventListener(
                    "click",
                    this.togglePanning.bind(this)
                  ),
                  this.elMenuIcon.addEventListener(
                    "click",
                    this.toggleMenu.bind(this)
                  ),
                  this.elMenuItems.forEach(function (l) {
                    l.classList.contains("exportSVG")
                      ? l.addEventListener(
                          "click",
                          i.handleDownload.bind(i, "svg")
                        )
                      : l.classList.contains("exportPNG")
                      ? l.addEventListener(
                          "click",
                          i.handleDownload.bind(i, "png")
                        )
                      : l.classList.contains("exportCSV") &&
                        l.addEventListener(
                          "click",
                          i.handleDownload.bind(i, "csv")
                        );
                  });
                for (var s = 0; s < this.t.customIcons.length; s++)
                  this.elCustomIcons[s].addEventListener(
                    "click",
                    this.t.customIcons[s].click.bind(this, this.ctx, this.ctx.w)
                  );
              },
            },
            {
              key: "toggleZoomSelection",
              value: function (i) {
                this.ctx.getSyncedCharts().forEach(function (s) {
                  s.ctx.toolbar.toggleOtherControls();
                  var l =
                      i === "selection"
                        ? s.ctx.toolbar.elSelection
                        : s.ctx.toolbar.elZoom,
                    c = i === "selection" ? "selectionEnabled" : "zoomEnabled";
                  (s.w.globals[c] = !s.w.globals[c]),
                    l.classList.contains(s.ctx.toolbar.selectedClass)
                      ? l.classList.remove(s.ctx.toolbar.selectedClass)
                      : l.classList.add(s.ctx.toolbar.selectedClass);
                });
              },
            },
            {
              key: "getToolbarIconsReference",
              value: function () {
                var i = this.w;
                this.elZoom ||
                  (this.elZoom = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-zoom-icon"
                  )),
                  this.elPan ||
                    (this.elPan = i.globals.dom.baseEl.querySelector(
                      ".apexcharts-pan-icon"
                    )),
                  this.elSelection ||
                    (this.elSelection = i.globals.dom.baseEl.querySelector(
                      ".apexcharts-selection-icon"
                    ));
              },
            },
            {
              key: "enableZoomPanFromToolbar",
              value: function (i) {
                this.toggleOtherControls(),
                  i === "pan"
                    ? (this.w.globals.panEnabled = !0)
                    : (this.w.globals.zoomEnabled = !0);
                var s = i === "pan" ? this.elPan : this.elZoom,
                  l = i === "pan" ? this.elZoom : this.elPan;
                s && s.classList.add(this.selectedClass),
                  l && l.classList.remove(this.selectedClass);
              },
            },
            {
              key: "togglePanning",
              value: function () {
                this.ctx.getSyncedCharts().forEach(function (i) {
                  i.ctx.toolbar.toggleOtherControls(),
                    (i.w.globals.panEnabled = !i.w.globals.panEnabled),
                    i.ctx.toolbar.elPan.classList.contains(
                      i.ctx.toolbar.selectedClass
                    )
                      ? i.ctx.toolbar.elPan.classList.remove(
                          i.ctx.toolbar.selectedClass
                        )
                      : i.ctx.toolbar.elPan.classList.add(
                          i.ctx.toolbar.selectedClass
                        );
                });
              },
            },
            {
              key: "toggleOtherControls",
              value: function () {
                var i = this,
                  s = this.w;
                (s.globals.panEnabled = !1),
                  (s.globals.zoomEnabled = !1),
                  (s.globals.selectionEnabled = !1),
                  this.getToolbarIconsReference(),
                  [this.elPan, this.elSelection, this.elZoom].forEach(function (
                    l
                  ) {
                    l && l.classList.remove(i.selectedClass);
                  });
              },
            },
            {
              key: "handleZoomIn",
              value: function () {
                var i = this.w;
                i.globals.isRangeBar &&
                  ((this.minX = i.globals.minY), (this.maxX = i.globals.maxY));
                var s = (this.minX + this.maxX) / 2,
                  l = (this.minX + s) / 2,
                  c = (this.maxX + s) / 2,
                  h = this._getNewMinXMaxX(l, c);
                i.globals.disableZoomIn ||
                  this.zoomUpdateOptions(h.minX, h.maxX);
              },
            },
            {
              key: "handleZoomOut",
              value: function () {
                var i = this.w;
                if (
                  (i.globals.isRangeBar &&
                    ((this.minX = i.globals.minY),
                    (this.maxX = i.globals.maxY)),
                  !(
                    i.config.xaxis.type === "datetime" &&
                    new Date(this.minX).getUTCFullYear() < 1e3
                  ))
                ) {
                  var s = (this.minX + this.maxX) / 2,
                    l = this.minX - (s - this.minX),
                    c = this.maxX - (s - this.maxX),
                    h = this._getNewMinXMaxX(l, c);
                  i.globals.disableZoomOut ||
                    this.zoomUpdateOptions(h.minX, h.maxX);
                }
              },
            },
            {
              key: "_getNewMinXMaxX",
              value: function (i, s) {
                var l = this.w.config.xaxis.convertedCatToNumeric;
                return {
                  minX: l ? Math.floor(i) : i,
                  maxX: l ? Math.floor(s) : s,
                };
              },
            },
            {
              key: "zoomUpdateOptions",
              value: function (i, s) {
                var l = this.w;
                if (i !== void 0 || s !== void 0) {
                  if (
                    !(
                      l.config.xaxis.convertedCatToNumeric &&
                      (i < 1 && ((i = 1), (s = l.globals.dataPoints)),
                      s - i < 2)
                    )
                  ) {
                    var c = { min: i, max: s },
                      h = this.getBeforeZoomRange(c);
                    h && (c = h.xaxis);
                    var d = { xaxis: c },
                      f = F.clone(l.globals.initialConfig.yaxis);
                    l.config.chart.zoom.autoScaleYaxis &&
                      (f = new Rt(this.ctx).autoScaleY(this.ctx, f, {
                        xaxis: c,
                      })),
                      l.config.chart.group || (d.yaxis = f),
                      (this.w.globals.zoomed = !0),
                      this.ctx.updateHelpers._updateOptions(
                        d,
                        !1,
                        this.w.config.chart.animations.dynamicAnimation.enabled
                      ),
                      this.zoomCallback(c, f);
                  }
                } else this.handleZoomReset();
              },
            },
            {
              key: "zoomCallback",
              value: function (i, s) {
                typeof this.ev.zoomed == "function" &&
                  this.ev.zoomed(this.ctx, { xaxis: i, yaxis: s });
              },
            },
            {
              key: "getBeforeZoomRange",
              value: function (i, s) {
                var l = null;
                return (
                  typeof this.ev.beforeZoom == "function" &&
                    (l = this.ev.beforeZoom(this, { xaxis: i, yaxis: s })),
                  l
                );
              },
            },
            {
              key: "toggleMenu",
              value: function () {
                var i = this;
                window.setTimeout(function () {
                  i.elMenu.classList.contains("apexcharts-menu-open")
                    ? i.elMenu.classList.remove("apexcharts-menu-open")
                    : i.elMenu.classList.add("apexcharts-menu-open");
                }, 0);
              },
            },
            {
              key: "handleDownload",
              value: function (i) {
                var s = this.w,
                  l = new Zt(this.ctx);
                switch (i) {
                  case "svg":
                    l.exportToSVG(this.ctx);
                    break;
                  case "png":
                    l.exportToPng(this.ctx);
                    break;
                  case "csv":
                    l.exportToCSV({
                      series: s.config.series,
                      columnDelimiter:
                        s.config.chart.toolbar.export.csv.columnDelimiter,
                    });
                }
              },
            },
            {
              key: "handleZoomReset",
              value: function (i) {
                this.ctx.getSyncedCharts().forEach(function (s) {
                  var l = s.w;
                  if (
                    ((l.globals.lastXAxis.min =
                      l.globals.initialConfig.xaxis.min),
                    (l.globals.lastXAxis.max =
                      l.globals.initialConfig.xaxis.max),
                    s.updateHelpers.revertDefaultAxisMinMax(),
                    typeof l.config.chart.events.beforeResetZoom == "function")
                  ) {
                    var c = l.config.chart.events.beforeResetZoom(s, l);
                    c && s.updateHelpers.revertDefaultAxisMinMax(c);
                  }
                  typeof l.config.chart.events.zoomed == "function" &&
                    s.ctx.toolbar.zoomCallback({
                      min: l.config.xaxis.min,
                      max: l.config.xaxis.max,
                    }),
                    (l.globals.zoomed = !1);
                  var h = s.ctx.series.emptyCollapsedSeries(
                    F.clone(l.globals.initialSeries)
                  );
                  s.updateHelpers._updateSeries(
                    h,
                    l.config.chart.animations.dynamicAnimation.enabled
                  );
                });
              },
            },
            {
              key: "destroy",
              value: function () {
                (this.elZoom = null),
                  (this.elZoomIn = null),
                  (this.elZoomOut = null),
                  (this.elPan = null),
                  (this.elSelection = null),
                  (this.elZoomReset = null),
                  (this.elMenuIcon = null);
              },
            },
          ]),
          U
        );
      })(),
      $r = (function (U) {
        E(s, _r);
        var i = ae(s);
        function s(l) {
          var c;
          return (
            o(this, s),
            ((c = i.call(this, l)).ctx = l),
            (c.w = l.w),
            (c.dragged = !1),
            (c.graphics = new C(c.ctx)),
            (c.eventList = [
              "mousedown",
              "mouseleave",
              "mousemove",
              "touchstart",
              "touchmove",
              "mouseup",
              "touchend",
            ]),
            (c.clientX = 0),
            (c.clientY = 0),
            (c.startX = 0),
            (c.endX = 0),
            (c.dragX = 0),
            (c.startY = 0),
            (c.endY = 0),
            (c.dragY = 0),
            (c.moveDirection = "none"),
            c
          );
        }
        return (
          g(s, [
            {
              key: "init",
              value: function (l) {
                var c = this,
                  h = l.xyRatios,
                  d = this.w,
                  f = this;
                (this.xyRatios = h),
                  (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                  (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                  (this.gridRect =
                    d.globals.dom.baseEl.querySelector(".apexcharts-grid")),
                  this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                  this.selectionRect.node.classList.add(
                    "apexcharts-selection-rect"
                  ),
                  d.globals.dom.elGraphical.add(this.zoomRect),
                  d.globals.dom.elGraphical.add(this.selectionRect),
                  d.config.chart.selection.type === "x"
                    ? (this.slDraggableRect = this.selectionRect
                        .draggable({
                          minX: 0,
                          minY: 0,
                          maxX: d.globals.gridWidth,
                          maxY: d.globals.gridHeight,
                        })
                        .on(
                          "dragmove",
                          this.selectionDragging.bind(this, "dragging")
                        ))
                    : d.config.chart.selection.type === "y"
                    ? (this.slDraggableRect = this.selectionRect
                        .draggable({ minX: 0, maxX: d.globals.gridWidth })
                        .on(
                          "dragmove",
                          this.selectionDragging.bind(this, "dragging")
                        ))
                    : (this.slDraggableRect = this.selectionRect
                        .draggable()
                        .on(
                          "dragmove",
                          this.selectionDragging.bind(this, "dragging")
                        )),
                  this.preselectedSelection(),
                  (this.hoverArea = d.globals.dom.baseEl.querySelector(
                    "".concat(d.globals.chartClass, " .apexcharts-svg")
                  )),
                  this.hoverArea.classList.add("apexcharts-zoomable"),
                  this.eventList.forEach(function (p) {
                    c.hoverArea.addEventListener(
                      p,
                      f.svgMouseEvents.bind(f, h),
                      { capture: !1, passive: !0 }
                    );
                  });
              },
            },
            {
              key: "destroy",
              value: function () {
                this.slDraggableRect &&
                  (this.slDraggableRect.draggable(!1),
                  this.slDraggableRect.off(),
                  this.selectionRect.off()),
                  (this.selectionRect = null),
                  (this.zoomRect = null),
                  (this.gridRect = null);
              },
            },
            {
              key: "svgMouseEvents",
              value: function (l, c) {
                var h = this.w,
                  d = this,
                  f = this.ctx.toolbar,
                  p = h.globals.zoomEnabled
                    ? h.config.chart.zoom.type
                    : h.config.chart.selection.type,
                  v = h.config.chart.toolbar.autoSelected;
                if (
                  (c.shiftKey
                    ? ((this.shiftWasPressed = !0),
                      f.enableZoomPanFromToolbar(v === "pan" ? "zoom" : "pan"))
                    : this.shiftWasPressed &&
                      (f.enableZoomPanFromToolbar(v),
                      (this.shiftWasPressed = !1)),
                  c.target)
                ) {
                  var b,
                    _ = c.target.classList;
                  if (
                    (c.target.parentNode &&
                      c.target.parentNode !== null &&
                      (b = c.target.parentNode.classList),
                    !(
                      _.contains("apexcharts-selection-rect") ||
                      _.contains("apexcharts-legend-marker") ||
                      _.contains("apexcharts-legend-text") ||
                      (b && b.contains("apexcharts-toolbar"))
                    ))
                  ) {
                    if (
                      ((d.clientX =
                        c.type === "touchmove" || c.type === "touchstart"
                          ? c.touches[0].clientX
                          : c.type === "touchend"
                          ? c.changedTouches[0].clientX
                          : c.clientX),
                      (d.clientY =
                        c.type === "touchmove" || c.type === "touchstart"
                          ? c.touches[0].clientY
                          : c.type === "touchend"
                          ? c.changedTouches[0].clientY
                          : c.clientY),
                      c.type === "mousedown" && c.which === 1)
                    ) {
                      var S = d.gridRect.getBoundingClientRect();
                      (d.startX = d.clientX - S.left),
                        (d.startY = d.clientY - S.top),
                        (d.dragged = !1),
                        (d.w.globals.mousedown = !0);
                    }
                    if (
                      (((c.type === "mousemove" && c.which === 1) ||
                        c.type === "touchmove") &&
                        ((d.dragged = !0),
                        h.globals.panEnabled
                          ? ((h.globals.selection = null),
                            d.w.globals.mousedown &&
                              d.panDragging({
                                context: d,
                                zoomtype: p,
                                xyRatios: l,
                              }))
                          : ((d.w.globals.mousedown && h.globals.zoomEnabled) ||
                              (d.w.globals.mousedown &&
                                h.globals.selectionEnabled)) &&
                            (d.selection = d.selectionDrawing({
                              context: d,
                              zoomtype: p,
                            }))),
                      c.type === "mouseup" ||
                        c.type === "touchend" ||
                        c.type === "mouseleave")
                    ) {
                      var T = d.gridRect.getBoundingClientRect();
                      d.w.globals.mousedown &&
                        ((d.endX = d.clientX - T.left),
                        (d.endY = d.clientY - T.top),
                        (d.dragX = Math.abs(d.endX - d.startX)),
                        (d.dragY = Math.abs(d.endY - d.startY)),
                        (h.globals.zoomEnabled || h.globals.selectionEnabled) &&
                          d.selectionDrawn({ context: d, zoomtype: p }),
                        h.globals.panEnabled &&
                          h.config.xaxis.convertedCatToNumeric &&
                          d.delayedPanScrolled()),
                        h.globals.zoomEnabled &&
                          d.hideSelectionRect(this.selectionRect),
                        (d.dragged = !1),
                        (d.w.globals.mousedown = !1);
                    }
                    this.makeSelectionRectDraggable();
                  }
                }
              },
            },
            {
              key: "makeSelectionRectDraggable",
              value: function () {
                var l = this.w;
                if (this.selectionRect) {
                  var c = this.selectionRect.node.getBoundingClientRect();
                  c.width > 0 &&
                    c.height > 0 &&
                    this.slDraggableRect
                      .selectize({
                        points: "l, r",
                        pointSize: 8,
                        pointType: "rect",
                      })
                      .resize({
                        constraint: {
                          minX: 0,
                          minY: 0,
                          maxX: l.globals.gridWidth,
                          maxY: l.globals.gridHeight,
                        },
                      })
                      .on(
                        "resizing",
                        this.selectionDragging.bind(this, "resizing")
                      );
                }
              },
            },
            {
              key: "preselectedSelection",
              value: function () {
                var l = this.w,
                  c = this.xyRatios;
                if (!l.globals.zoomEnabled) {
                  if (
                    l.globals.selection !== void 0 &&
                    l.globals.selection !== null
                  )
                    this.drawSelectionRect(l.globals.selection);
                  else if (
                    l.config.chart.selection.xaxis.min !== void 0 &&
                    l.config.chart.selection.xaxis.max !== void 0
                  ) {
                    var h =
                        (l.config.chart.selection.xaxis.min - l.globals.minX) /
                        c.xRatio,
                      d =
                        l.globals.gridWidth -
                        (l.globals.maxX - l.config.chart.selection.xaxis.max) /
                          c.xRatio -
                        h;
                    l.globals.isRangeBar &&
                      ((h =
                        (l.config.chart.selection.xaxis.min -
                          l.globals.yAxisScale[0].niceMin) /
                        c.invertedYRatio),
                      (d =
                        (l.config.chart.selection.xaxis.max -
                          l.config.chart.selection.xaxis.min) /
                        c.invertedYRatio));
                    var f = {
                      x: h,
                      y: 0,
                      width: d,
                      height: l.globals.gridHeight,
                      translateX: 0,
                      translateY: 0,
                      selectionEnabled: !0,
                    };
                    this.drawSelectionRect(f),
                      this.makeSelectionRectDraggable(),
                      typeof l.config.chart.events.selection == "function" &&
                        l.config.chart.events.selection(this.ctx, {
                          xaxis: {
                            min: l.config.chart.selection.xaxis.min,
                            max: l.config.chart.selection.xaxis.max,
                          },
                          yaxis: {},
                        });
                  }
                }
              },
            },
            {
              key: "drawSelectionRect",
              value: function (l) {
                var c = l.x,
                  h = l.y,
                  d = l.width,
                  f = l.height,
                  p = l.translateX,
                  v = p === void 0 ? 0 : p,
                  b = l.translateY,
                  _ = b === void 0 ? 0 : b,
                  S = this.w,
                  T = this.zoomRect,
                  O = this.selectionRect;
                if (this.dragged || S.globals.selection !== null) {
                  var D = { transform: "translate(" + v + ", " + _ + ")" };
                  S.globals.zoomEnabled &&
                    this.dragged &&
                    (d < 0 && (d = 1),
                    T.attr({
                      x: c,
                      y: h,
                      width: d,
                      height: f,
                      fill: S.config.chart.zoom.zoomedArea.fill.color,
                      "fill-opacity":
                        S.config.chart.zoom.zoomedArea.fill.opacity,
                      stroke: S.config.chart.zoom.zoomedArea.stroke.color,
                      "stroke-width":
                        S.config.chart.zoom.zoomedArea.stroke.width,
                      "stroke-opacity":
                        S.config.chart.zoom.zoomedArea.stroke.opacity,
                    }),
                    C.setAttrs(T.node, D)),
                    S.globals.selectionEnabled &&
                      (O.attr({
                        x: c,
                        y: h,
                        width: d > 0 ? d : 0,
                        height: f > 0 ? f : 0,
                        fill: S.config.chart.selection.fill.color,
                        "fill-opacity": S.config.chart.selection.fill.opacity,
                        stroke: S.config.chart.selection.stroke.color,
                        "stroke-width": S.config.chart.selection.stroke.width,
                        "stroke-dasharray":
                          S.config.chart.selection.stroke.dashArray,
                        "stroke-opacity":
                          S.config.chart.selection.stroke.opacity,
                      }),
                      C.setAttrs(O.node, D));
                }
              },
            },
            {
              key: "hideSelectionRect",
              value: function (l) {
                l && l.attr({ x: 0, y: 0, width: 0, height: 0 });
              },
            },
            {
              key: "selectionDrawing",
              value: function (l) {
                var c = l.context,
                  h = l.zoomtype,
                  d = this.w,
                  f = c,
                  p = this.gridRect.getBoundingClientRect(),
                  v = f.startX - 1,
                  b = f.startY,
                  _ = !1,
                  S = !1,
                  T = f.clientX - p.left - v,
                  O = f.clientY - p.top - b,
                  D = {};
                return (
                  Math.abs(T + v) > d.globals.gridWidth
                    ? (T = d.globals.gridWidth - v)
                    : f.clientX - p.left < 0 && (T = v),
                  v > f.clientX - p.left && ((_ = !0), (T = Math.abs(T))),
                  b > f.clientY - p.top && ((S = !0), (O = Math.abs(O))),
                  (D =
                    h === "x"
                      ? {
                          x: _ ? v - T : v,
                          y: 0,
                          width: T,
                          height: d.globals.gridHeight,
                        }
                      : h === "y"
                      ? {
                          x: 0,
                          y: S ? b - O : b,
                          width: d.globals.gridWidth,
                          height: O,
                        }
                      : {
                          x: _ ? v - T : v,
                          y: S ? b - O : b,
                          width: T,
                          height: O,
                        }),
                  f.drawSelectionRect(D),
                  f.selectionDragging("resizing"),
                  D
                );
              },
            },
            {
              key: "selectionDragging",
              value: function (l, c) {
                var h = this,
                  d = this.w,
                  f = this.xyRatios,
                  p = this.selectionRect,
                  v = 0;
                l === "resizing" && (v = 30);
                var b = function (S) {
                    return parseFloat(p.node.getAttribute(S));
                  },
                  _ = {
                    x: b("x"),
                    y: b("y"),
                    width: b("width"),
                    height: b("height"),
                  };
                (d.globals.selection = _),
                  typeof d.config.chart.events.selection == "function" &&
                    d.globals.selectionEnabled &&
                    (clearTimeout(this.w.globals.selectionResizeTimer),
                    (this.w.globals.selectionResizeTimer = window.setTimeout(
                      function () {
                        var S,
                          T,
                          O,
                          D,
                          V = h.gridRect.getBoundingClientRect(),
                          G = p.node.getBoundingClientRect();
                        d.globals.isRangeBar
                          ? ((S =
                              d.globals.yAxisScale[0].niceMin +
                              (G.left - V.left) * f.invertedYRatio),
                            (T =
                              d.globals.yAxisScale[0].niceMin +
                              (G.right - V.left) * f.invertedYRatio),
                            (O = 0),
                            (D = 1))
                          : ((S =
                              d.globals.xAxisScale.niceMin +
                              (G.left - V.left) * f.xRatio),
                            (T =
                              d.globals.xAxisScale.niceMin +
                              (G.right - V.left) * f.xRatio),
                            (O =
                              d.globals.yAxisScale[0].niceMin +
                              (V.bottom - G.bottom) * f.yRatio[0]),
                            (D =
                              d.globals.yAxisScale[0].niceMax -
                              (G.top - V.top) * f.yRatio[0]));
                        var Q = {
                          xaxis: { min: S, max: T },
                          yaxis: { min: O, max: D },
                        };
                        d.config.chart.events.selection(h.ctx, Q),
                          d.config.chart.brush.enabled &&
                            d.config.chart.events.brushScrolled !== void 0 &&
                            d.config.chart.events.brushScrolled(h.ctx, Q);
                      },
                      v
                    )));
              },
            },
            {
              key: "selectionDrawn",
              value: function (l) {
                var c = l.context,
                  h = l.zoomtype,
                  d = this.w,
                  f = c,
                  p = this.xyRatios,
                  v = this.ctx.toolbar;
                if (f.startX > f.endX) {
                  var b = f.startX;
                  (f.startX = f.endX), (f.endX = b);
                }
                if (f.startY > f.endY) {
                  var _ = f.startY;
                  (f.startY = f.endY), (f.endY = _);
                }
                var S = void 0,
                  T = void 0;
                d.globals.isRangeBar
                  ? ((S =
                      d.globals.yAxisScale[0].niceMin +
                      f.startX * p.invertedYRatio),
                    (T =
                      d.globals.yAxisScale[0].niceMin +
                      f.endX * p.invertedYRatio))
                  : ((S = d.globals.xAxisScale.niceMin + f.startX * p.xRatio),
                    (T = d.globals.xAxisScale.niceMin + f.endX * p.xRatio));
                var O = [],
                  D = [];
                if (
                  (d.config.yaxis.forEach(function (K, ee) {
                    O.push(
                      d.globals.yAxisScale[ee].niceMax - p.yRatio[ee] * f.startY
                    ),
                      D.push(
                        d.globals.yAxisScale[ee].niceMax - p.yRatio[ee] * f.endY
                      );
                  }),
                  f.dragged && (f.dragX > 10 || f.dragY > 10) && S !== T)
                ) {
                  if (d.globals.zoomEnabled) {
                    var V = F.clone(d.globals.initialConfig.yaxis),
                      G = F.clone(d.globals.initialConfig.xaxis);
                    if (
                      ((d.globals.zoomed = !0),
                      d.config.xaxis.convertedCatToNumeric &&
                        ((S = Math.floor(S)),
                        (T = Math.floor(T)),
                        S < 1 && ((S = 1), (T = d.globals.dataPoints)),
                        T - S < 2 && (T = S + 1)),
                      (h !== "xy" && h !== "x") || (G = { min: S, max: T }),
                      (h !== "xy" && h !== "y") ||
                        V.forEach(function (K, ee) {
                          (V[ee].min = D[ee]), (V[ee].max = O[ee]);
                        }),
                      d.config.chart.zoom.autoScaleYaxis)
                    ) {
                      var Q = new Rt(f.ctx);
                      V = Q.autoScaleY(f.ctx, V, { xaxis: G });
                    }
                    if (v) {
                      var m = v.getBeforeZoomRange(G, V);
                      m &&
                        ((G = m.xaxis ? m.xaxis : G),
                        (V = m.yaxis ? m.yaxis : V));
                    }
                    var k = { xaxis: G };
                    d.config.chart.group || (k.yaxis = V),
                      f.ctx.updateHelpers._updateOptions(
                        k,
                        !1,
                        f.w.config.chart.animations.dynamicAnimation.enabled
                      ),
                      typeof d.config.chart.events.zoomed == "function" &&
                        v.zoomCallback(G, V);
                  } else if (d.globals.selectionEnabled) {
                    var N,
                      X = null;
                    (N = { min: S, max: T }),
                      (h !== "xy" && h !== "y") ||
                        (X = F.clone(d.config.yaxis)).forEach(function (K, ee) {
                          (X[ee].min = D[ee]), (X[ee].max = O[ee]);
                        }),
                      (d.globals.selection = f.selection),
                      typeof d.config.chart.events.selection == "function" &&
                        d.config.chart.events.selection(f.ctx, {
                          xaxis: N,
                          yaxis: X,
                        });
                  }
                }
              },
            },
            {
              key: "panDragging",
              value: function (l) {
                var c = l.context,
                  h = this.w,
                  d = c;
                if (h.globals.lastClientPosition.x !== void 0) {
                  var f = h.globals.lastClientPosition.x - d.clientX,
                    p = h.globals.lastClientPosition.y - d.clientY;
                  Math.abs(f) > Math.abs(p) && f > 0
                    ? (this.moveDirection = "left")
                    : Math.abs(f) > Math.abs(p) && f < 0
                    ? (this.moveDirection = "right")
                    : Math.abs(p) > Math.abs(f) && p > 0
                    ? (this.moveDirection = "up")
                    : Math.abs(p) > Math.abs(f) &&
                      p < 0 &&
                      (this.moveDirection = "down");
                }
                h.globals.lastClientPosition = { x: d.clientX, y: d.clientY };
                var v = h.globals.isRangeBar ? h.globals.minY : h.globals.minX,
                  b = h.globals.isRangeBar ? h.globals.maxY : h.globals.maxX;
                h.config.xaxis.convertedCatToNumeric || d.panScrolled(v, b);
              },
            },
            {
              key: "delayedPanScrolled",
              value: function () {
                var l = this.w,
                  c = l.globals.minX,
                  h = l.globals.maxX,
                  d = (l.globals.maxX - l.globals.minX) / 2;
                this.moveDirection === "left"
                  ? ((c = l.globals.minX + d), (h = l.globals.maxX + d))
                  : this.moveDirection === "right" &&
                    ((c = l.globals.minX - d), (h = l.globals.maxX - d)),
                  (c = Math.floor(c)),
                  (h = Math.floor(h)),
                  this.updateScrolledChart({ xaxis: { min: c, max: h } }, c, h);
              },
            },
            {
              key: "panScrolled",
              value: function (l, c) {
                var h = this.w,
                  d = this.xyRatios,
                  f = F.clone(h.globals.initialConfig.yaxis),
                  p = d.xRatio,
                  v = h.globals.minX,
                  b = h.globals.maxX;
                h.globals.isRangeBar &&
                  ((p = d.invertedYRatio),
                  (v = h.globals.minY),
                  (b = h.globals.maxY)),
                  this.moveDirection === "left"
                    ? ((l = v + (h.globals.gridWidth / 15) * p),
                      (c = b + (h.globals.gridWidth / 15) * p))
                    : this.moveDirection === "right" &&
                      ((l = v - (h.globals.gridWidth / 15) * p),
                      (c = b - (h.globals.gridWidth / 15) * p)),
                  h.globals.isRangeBar ||
                    ((l < h.globals.initialMinX || c > h.globals.initialMaxX) &&
                      ((l = v), (c = b)));
                var _ = { min: l, max: c };
                h.config.chart.zoom.autoScaleYaxis &&
                  (f = new Rt(this.ctx).autoScaleY(this.ctx, f, { xaxis: _ }));
                var S = { xaxis: { min: l, max: c } };
                h.config.chart.group || (S.yaxis = f),
                  this.updateScrolledChart(S, l, c);
              },
            },
            {
              key: "updateScrolledChart",
              value: function (l, c, h) {
                var d = this.w;
                this.ctx.updateHelpers._updateOptions(l, !1, !1),
                  typeof d.config.chart.events.scrolled == "function" &&
                    d.config.chart.events.scrolled(this.ctx, {
                      xaxis: { min: c, max: h },
                    });
              },
            },
          ]),
          s
        );
      })(),
      ui = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.ttCtx = i), (this.ctx = i.ctx);
        }
        return (
          g(U, [
            {
              key: "getNearestValues",
              value: function (i) {
                var s = i.hoverArea,
                  l = i.elGrid,
                  c = i.clientX,
                  h = i.clientY,
                  d = this.w,
                  f = l.getBoundingClientRect(),
                  p = f.width,
                  v = f.height,
                  b = p / (d.globals.dataPoints - 1),
                  _ = v / d.globals.dataPoints,
                  S = this.hasBars();
                (!d.globals.comboCharts && !S) ||
                  d.config.xaxis.convertedCatToNumeric ||
                  (b = p / d.globals.dataPoints);
                var T = c - f.left - d.globals.barPadForNumericAxis,
                  O = h - f.top;
                T < 0 || O < 0 || T > p || O > v
                  ? (s.classList.remove("hovering-zoom"),
                    s.classList.remove("hovering-pan"))
                  : d.globals.zoomEnabled
                  ? (s.classList.remove("hovering-pan"),
                    s.classList.add("hovering-zoom"))
                  : d.globals.panEnabled &&
                    (s.classList.remove("hovering-zoom"),
                    s.classList.add("hovering-pan"));
                var D = Math.round(T / b),
                  V = Math.floor(O / _);
                S &&
                  !d.config.xaxis.convertedCatToNumeric &&
                  ((D = Math.ceil(T / b)), (D -= 1));
                var G = null,
                  Q = null,
                  m = d.globals.seriesXvalues.map(function (ee) {
                    return ee.filter(function (fe) {
                      return F.isNumber(fe);
                    });
                  }),
                  k = d.globals.seriesYvalues.map(function (ee) {
                    return ee.filter(function (fe) {
                      return F.isNumber(fe);
                    });
                  });
                if (d.globals.isXNumeric) {
                  var N = this.ttCtx.getElGrid().getBoundingClientRect(),
                    X = T * (N.width / p),
                    K = O * (N.height / v);
                  (G = (Q = this.closestInMultiArray(X, K, m, k)).index),
                    (D = Q.j),
                    G !== null &&
                      ((m = d.globals.seriesXvalues[G]),
                      (D = (Q = this.closestInArray(X, m)).index));
                }
                return (
                  (d.globals.capturedSeriesIndex = G === null ? -1 : G),
                  (!D || D < 1) && (D = 0),
                  d.globals.isBarHorizontal
                    ? (d.globals.capturedDataPointIndex = V)
                    : (d.globals.capturedDataPointIndex = D),
                  {
                    capturedSeries: G,
                    j: d.globals.isBarHorizontal ? V : D,
                    hoverX: T,
                    hoverY: O,
                  }
                );
              },
            },
            {
              key: "closestInMultiArray",
              value: function (i, s, l, c) {
                var h = this.w,
                  d = 0,
                  f = null,
                  p = -1;
                h.globals.series.length > 1
                  ? (d = this.getFirstActiveXArray(l))
                  : (f = 0);
                var v = l[d][0],
                  b = Math.abs(i - v);
                if (
                  (l.forEach(function (T) {
                    T.forEach(function (O, D) {
                      var V = Math.abs(i - O);
                      V <= b && ((b = V), (p = D));
                    });
                  }),
                  p !== -1)
                ) {
                  var _ = c[d][p],
                    S = Math.abs(s - _);
                  (f = d),
                    c.forEach(function (T, O) {
                      var D = Math.abs(s - T[p]);
                      D <= S && ((S = D), (f = O));
                    });
                }
                return { index: f, j: p };
              },
            },
            {
              key: "getFirstActiveXArray",
              value: function (i) {
                for (
                  var s = this.w,
                    l = 0,
                    c = i.map(function (d, f) {
                      return d.length > 0 ? f : -1;
                    }),
                    h = 0;
                  h < c.length;
                  h++
                )
                  if (
                    c[h] !== -1 &&
                    s.globals.collapsedSeriesIndices.indexOf(h) === -1 &&
                    s.globals.ancillaryCollapsedSeriesIndices.indexOf(h) === -1
                  ) {
                    l = c[h];
                    break;
                  }
                return l;
              },
            },
            {
              key: "closestInArray",
              value: function (i, s) {
                for (
                  var l = s[0], c = null, h = Math.abs(i - l), d = 0;
                  d < s.length;
                  d++
                ) {
                  var f = Math.abs(i - s[d]);
                  f < h && ((h = f), (c = d));
                }
                return { index: c };
              },
            },
            {
              key: "isXoverlap",
              value: function (i) {
                var s = [],
                  l = this.w.globals.seriesX.filter(function (h) {
                    return h[0] !== void 0;
                  });
                if (l.length > 0)
                  for (var c = 0; c < l.length - 1; c++)
                    l[c][i] !== void 0 &&
                      l[c + 1][i] !== void 0 &&
                      l[c][i] !== l[c + 1][i] &&
                      s.push("unEqual");
                return s.length === 0;
              },
            },
            {
              key: "isInitialSeriesSameLen",
              value: function () {
                for (
                  var i = !0, s = this.w.globals.initialSeries, l = 0;
                  l < s.length - 1;
                  l++
                )
                  if (s[l].data.length !== s[l + 1].data.length) {
                    i = !1;
                    break;
                  }
                return i;
              },
            },
            {
              key: "getBarsHeight",
              value: function (i) {
                return le(i).reduce(function (s, l) {
                  return s + l.getBBox().height;
                }, 0);
              },
            },
            {
              key: "getElMarkers",
              value: function (i) {
                return typeof i == "number"
                  ? this.w.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series[data\\:realIndex='".concat(
                        i,
                        "'] .apexcharts-series-markers-wrap > *"
                      )
                    )
                  : this.w.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series-markers-wrap > *"
                    );
              },
            },
            {
              key: "getAllMarkers",
              value: function () {
                var i = this.w.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-series-markers-wrap"
                );
                (i = le(i)).sort(function (l, c) {
                  var h = Number(l.getAttribute("data:realIndex")),
                    d = Number(c.getAttribute("data:realIndex"));
                  return d < h ? 1 : d > h ? -1 : 0;
                });
                var s = [];
                return (
                  i.forEach(function (l) {
                    s.push(l.querySelector(".apexcharts-marker"));
                  }),
                  s
                );
              },
            },
            {
              key: "hasMarkers",
              value: function (i) {
                return this.getElMarkers(i).length > 0;
              },
            },
            {
              key: "getElBars",
              value: function () {
                return this.w.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series"
                );
              },
            },
            {
              key: "hasBars",
              value: function () {
                return this.getElBars().length > 0;
              },
            },
            {
              key: "getHoverMarkerSize",
              value: function (i) {
                var s = this.w,
                  l = s.config.markers.hover.size;
                return (
                  l === void 0 &&
                    (l =
                      s.globals.markers.size[i] +
                      s.config.markers.hover.sizeOffset),
                  l
                );
              },
            },
            {
              key: "toggleAllTooltipSeriesGroups",
              value: function (i) {
                var s = this.w,
                  l = this.ttCtx;
                l.allTooltipSeriesGroups.length === 0 &&
                  (l.allTooltipSeriesGroups =
                    s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-tooltip-series-group"
                    ));
                for (var c = l.allTooltipSeriesGroups, h = 0; h < c.length; h++)
                  i === "enable"
                    ? (c[h].classList.add("apexcharts-active"),
                      (c[h].style.display = s.config.tooltip.items.display))
                    : (c[h].classList.remove("apexcharts-active"),
                      (c[h].style.display = "none"));
              },
            },
          ]),
          U
        );
      })(),
      mr = (function () {
        function U(i) {
          o(this, U),
            (this.w = i.w),
            (this.ctx = i.ctx),
            (this.ttCtx = i),
            (this.tooltipUtil = new ui(i));
        }
        return (
          g(U, [
            {
              key: "drawSeriesTexts",
              value: function (i) {
                var s = i.shared,
                  l = s === void 0 || s,
                  c = i.ttItems,
                  h = i.i,
                  d = h === void 0 ? 0 : h,
                  f = i.j,
                  p = f === void 0 ? null : f,
                  v = i.y1,
                  b = i.y2,
                  _ = i.e,
                  S = this.w;
                S.config.tooltip.custom !== void 0
                  ? this.handleCustomTooltip({ i: d, j: p, y1: v, y2: b, w: S })
                  : this.toggleActiveInactiveSeries(l);
                var T = this.getValuesToPrint({ i: d, j: p });
                this.printLabels({
                  i: d,
                  j: p,
                  values: T,
                  ttItems: c,
                  shared: l,
                  e: _,
                });
                var O = this.ttCtx.getElTooltip();
                (this.ttCtx.tooltipRect.ttWidth =
                  O.getBoundingClientRect().width),
                  (this.ttCtx.tooltipRect.ttHeight =
                    O.getBoundingClientRect().height);
              },
            },
            {
              key: "printLabels",
              value: function (i) {
                var s,
                  l = this,
                  c = i.i,
                  h = i.j,
                  d = i.values,
                  f = i.ttItems,
                  p = i.shared,
                  v = i.e,
                  b = this.w,
                  _ = [],
                  S = function (N) {
                    return (
                      b.globals.seriesGoals[N] &&
                      b.globals.seriesGoals[N][h] &&
                      Array.isArray(b.globals.seriesGoals[N][h])
                    );
                  },
                  T = d.xVal,
                  O = d.zVal,
                  D = d.xAxisTTVal,
                  V = "",
                  G = b.globals.colors[c];
                h !== null &&
                  b.config.plotOptions.bar.distributed &&
                  (G = b.globals.colors[h]);
                for (
                  var Q = function (N, X) {
                      var K = l.getFormatters(c);
                      (V = l.getSeriesName({
                        fn: K.yLbTitleFormatter,
                        index: c,
                        seriesIndex: c,
                        j: h,
                      })),
                        b.config.chart.type === "treemap" &&
                          (V = K.yLbTitleFormatter(
                            String(b.config.series[c].data[h].x),
                            {
                              series: b.globals.series,
                              seriesIndex: c,
                              dataPointIndex: h,
                              w: b,
                            }
                          ));
                      var ee = b.config.tooltip.inverseOrder ? X : N;
                      if (b.globals.axisCharts) {
                        var fe = function (We) {
                          var ze, ut, St, zt;
                          return b.globals.isRangeData
                            ? K.yLbFormatter(
                                (ze = b.globals.seriesRangeStart) === null ||
                                  ze === void 0 ||
                                  (ut = ze[We]) === null ||
                                  ut === void 0
                                  ? void 0
                                  : ut[h],
                                {
                                  series: b.globals.seriesRangeStart,
                                  seriesIndex: We,
                                  dataPointIndex: h,
                                  w: b,
                                }
                              ) +
                                " - " +
                                K.yLbFormatter(
                                  (St = b.globals.seriesRangeEnd) === null ||
                                    St === void 0 ||
                                    (zt = St[We]) === null ||
                                    zt === void 0
                                    ? void 0
                                    : zt[h],
                                  {
                                    series: b.globals.seriesRangeEnd,
                                    seriesIndex: We,
                                    dataPointIndex: h,
                                    w: b,
                                  }
                                )
                            : K.yLbFormatter(b.globals.series[We][h], {
                                series: b.globals.series,
                                seriesIndex: We,
                                dataPointIndex: h,
                                w: b,
                              });
                        };
                        if (p)
                          (K = l.getFormatters(ee)),
                            (V = l.getSeriesName({
                              fn: K.yLbTitleFormatter,
                              index: ee,
                              seriesIndex: c,
                              j: h,
                            })),
                            (G = b.globals.colors[ee]),
                            (s = fe(ee)),
                            S(ee) &&
                              (_ = b.globals.seriesGoals[ee][h].map(function (
                                We
                              ) {
                                return {
                                  attrs: We,
                                  val: K.yLbFormatter(We.value, {
                                    seriesIndex: ee,
                                    dataPointIndex: h,
                                    w: b,
                                  }),
                                };
                              }));
                        else {
                          var ge,
                            Pe =
                              v == null ||
                              (ge = v.target) === null ||
                              ge === void 0
                                ? void 0
                                : ge.getAttribute("fill");
                          Pe &&
                            (G =
                              Pe.indexOf("url") !== -1
                                ? document
                                    .querySelector(Pe.substr(4).slice(0, -1))
                                    .childNodes[0].getAttribute("stroke")
                                : Pe),
                            (s = fe(c)),
                            S(c) &&
                              Array.isArray(b.globals.seriesGoals[c][h]) &&
                              (_ = b.globals.seriesGoals[c][h].map(function (
                                We
                              ) {
                                return {
                                  attrs: We,
                                  val: K.yLbFormatter(We.value, {
                                    seriesIndex: c,
                                    dataPointIndex: h,
                                    w: b,
                                  }),
                                };
                              }));
                        }
                      }
                      h === null &&
                        (s = K.yLbFormatter(
                          b.globals.series[c],
                          r(r({}, b), {}, { seriesIndex: c, dataPointIndex: c })
                        )),
                        l.DOMHandling({
                          i: c,
                          t: ee,
                          j: h,
                          ttItems: f,
                          values: {
                            val: s,
                            goalVals: _,
                            xVal: T,
                            xAxisTTVal: D,
                            zVal: O,
                          },
                          seriesName: V,
                          shared: p,
                          pColor: G,
                        });
                    },
                    m = 0,
                    k = b.globals.series.length - 1;
                  m < b.globals.series.length;
                  m++, k--
                )
                  Q(m, k);
              },
            },
            {
              key: "getFormatters",
              value: function (i) {
                var s,
                  l = this.w,
                  c = l.globals.yLabelFormatters[i];
                return (
                  l.globals.ttVal !== void 0
                    ? Array.isArray(l.globals.ttVal)
                      ? ((c =
                          l.globals.ttVal[i] && l.globals.ttVal[i].formatter),
                        (s =
                          l.globals.ttVal[i] &&
                          l.globals.ttVal[i].title &&
                          l.globals.ttVal[i].title.formatter))
                      : ((c = l.globals.ttVal.formatter),
                        typeof l.globals.ttVal.title.formatter == "function" &&
                          (s = l.globals.ttVal.title.formatter))
                    : (s = l.config.tooltip.y.title.formatter),
                  typeof c != "function" &&
                    (c = l.globals.yLabelFormatters[0]
                      ? l.globals.yLabelFormatters[0]
                      : function (h) {
                          return h;
                        }),
                  typeof s != "function" &&
                    (s = function (h) {
                      return h;
                    }),
                  { yLbFormatter: c, yLbTitleFormatter: s }
                );
              },
            },
            {
              key: "getSeriesName",
              value: function (i) {
                var s = i.fn,
                  l = i.index,
                  c = i.seriesIndex,
                  h = i.j,
                  d = this.w;
                return s(String(d.globals.seriesNames[l]), {
                  series: d.globals.series,
                  seriesIndex: c,
                  dataPointIndex: h,
                  w: d,
                });
              },
            },
            {
              key: "DOMHandling",
              value: function (i) {
                i.i;
                var s = i.t,
                  l = i.j,
                  c = i.ttItems,
                  h = i.values,
                  d = i.seriesName,
                  f = i.shared,
                  p = i.pColor,
                  v = this.w,
                  b = this.ttCtx,
                  _ = h.val,
                  S = h.goalVals,
                  T = h.xVal,
                  O = h.xAxisTTVal,
                  D = h.zVal,
                  V = null;
                (V = c[s].children),
                  v.config.tooltip.fillSeriesColor &&
                    ((c[s].style.backgroundColor = p),
                    (V[0].style.display = "none")),
                  b.showTooltipTitle &&
                    (b.tooltipTitle === null &&
                      (b.tooltipTitle = v.globals.dom.baseEl.querySelector(
                        ".apexcharts-tooltip-title"
                      )),
                    (b.tooltipTitle.innerHTML = T)),
                  b.isXAxisTooltipEnabled &&
                    (b.xaxisTooltipText.innerHTML = O !== "" ? O : T);
                var G = c[s].querySelector(".apexcharts-tooltip-text-y-label");
                G && (G.innerHTML = d || "");
                var Q = c[s].querySelector(".apexcharts-tooltip-text-y-value");
                Q && (Q.innerHTML = _ !== void 0 ? _ : ""),
                  V[0] &&
                    V[0].classList.contains("apexcharts-tooltip-marker") &&
                    (v.config.tooltip.marker.fillColors &&
                      Array.isArray(v.config.tooltip.marker.fillColors) &&
                      (p = v.config.tooltip.marker.fillColors[s]),
                    (V[0].style.backgroundColor = p)),
                  v.config.tooltip.marker.show || (V[0].style.display = "none");
                var m = c[s].querySelector(
                    ".apexcharts-tooltip-text-goals-label"
                  ),
                  k = c[s].querySelector(
                    ".apexcharts-tooltip-text-goals-value"
                  );
                if (S.length && v.globals.seriesGoals[s]) {
                  var N = function () {
                    var ee = "<div >",
                      fe = "<div>";
                    S.forEach(function (ge, Pe) {
                      (ee +=
                        ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                          .concat(
                            ge.attrs.strokeColor,
                            '; height: 3px; border-radius: 0; top: 5px;"></span> '
                          )
                          .concat(ge.attrs.name, "</div>")),
                        (fe += "<div>".concat(ge.val, "</div>"));
                    }),
                      (m.innerHTML = ee + "</div>"),
                      (k.innerHTML = fe + "</div>");
                  };
                  f
                    ? v.globals.seriesGoals[s][l] &&
                      Array.isArray(v.globals.seriesGoals[s][l])
                      ? N()
                      : ((m.innerHTML = ""), (k.innerHTML = ""))
                    : N();
                } else (m.innerHTML = ""), (k.innerHTML = "");
                if (
                  (D !== null &&
                    ((c[s].querySelector(
                      ".apexcharts-tooltip-text-z-label"
                    ).innerHTML = v.config.tooltip.z.title),
                    (c[s].querySelector(
                      ".apexcharts-tooltip-text-z-value"
                    ).innerHTML = D !== void 0 ? D : "")),
                  f && V[0])
                ) {
                  if (v.config.tooltip.hideEmptySeries) {
                    var X = c[s].querySelector(".apexcharts-tooltip-marker"),
                      K = c[s].querySelector(".apexcharts-tooltip-text");
                    parseFloat(_) == 0
                      ? ((X.style.display = "none"), (K.style.display = "none"))
                      : ((X.style.display = "block"),
                        (K.style.display = "block"));
                  }
                  _ == null ||
                  v.globals.ancillaryCollapsedSeriesIndices.indexOf(s) > -1 ||
                  v.globals.collapsedSeriesIndices.indexOf(s) > -1
                    ? (V[0].parentNode.style.display = "none")
                    : (V[0].parentNode.style.display =
                        v.config.tooltip.items.display);
                }
              },
            },
            {
              key: "toggleActiveInactiveSeries",
              value: function (i) {
                var s = this.w;
                if (i) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
                else {
                  this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                  var l = s.globals.dom.baseEl.querySelector(
                    ".apexcharts-tooltip-series-group"
                  );
                  l &&
                    (l.classList.add("apexcharts-active"),
                    (l.style.display = s.config.tooltip.items.display));
                }
              },
            },
            {
              key: "getValuesToPrint",
              value: function (i) {
                var s = i.i,
                  l = i.j,
                  c = this.w,
                  h = this.ctx.series.filteredSeriesX(),
                  d = "",
                  f = "",
                  p = null,
                  v = null,
                  b = {
                    series: c.globals.series,
                    seriesIndex: s,
                    dataPointIndex: l,
                    w: c,
                  },
                  _ = c.globals.ttZFormatter;
                l === null
                  ? (v = c.globals.series[s])
                  : c.globals.isXNumeric && c.config.chart.type !== "treemap"
                  ? ((d = h[s][l]),
                    h[s].length === 0 &&
                      (d = h[this.tooltipUtil.getFirstActiveXArray(h)][l]))
                  : (d =
                      c.globals.labels[l] !== void 0
                        ? c.globals.labels[l]
                        : "");
                var S = d;
                return (
                  c.globals.isXNumeric && c.config.xaxis.type === "datetime"
                    ? (d = new ht(this.ctx).xLabelFormat(
                        c.globals.ttKeyFormatter,
                        S,
                        S,
                        {
                          i: void 0,
                          dateFormatter: new It(this.ctx).formatDate,
                          w: this.w,
                        }
                      ))
                    : (d = c.globals.isBarHorizontal
                        ? c.globals.yLabelFormatters[0](S, b)
                        : c.globals.xLabelFormatter(S, b)),
                  c.config.tooltip.x.formatter !== void 0 &&
                    (d = c.globals.ttKeyFormatter(S, b)),
                  c.globals.seriesZ.length > 0 &&
                    c.globals.seriesZ[s].length > 0 &&
                    (p = _(c.globals.seriesZ[s][l], c)),
                  (f =
                    typeof c.config.xaxis.tooltip.formatter == "function"
                      ? c.globals.xaxisTooltipFormatter(S, b)
                      : d),
                  {
                    val: Array.isArray(v) ? v.join(" ") : v,
                    xVal: Array.isArray(d) ? d.join(" ") : d,
                    xAxisTTVal: Array.isArray(f) ? f.join(" ") : f,
                    zVal: p,
                  }
                );
              },
            },
            {
              key: "handleCustomTooltip",
              value: function (i) {
                var s = i.i,
                  l = i.j,
                  c = i.y1,
                  h = i.y2,
                  d = i.w,
                  f = this.ttCtx.getElTooltip(),
                  p = d.config.tooltip.custom;
                Array.isArray(p) && p[s] && (p = p[s]),
                  (f.innerHTML = p({
                    ctx: this.ctx,
                    series: d.globals.series,
                    seriesIndex: s,
                    dataPointIndex: l,
                    y1: c,
                    y2: h,
                    w: d,
                  }));
              },
            },
          ]),
          U
        );
      })(),
      Vn = (function () {
        function U(i) {
          o(this, U), (this.ttCtx = i), (this.ctx = i.ctx), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "moveXCrosshairs",
              value: function (i) {
                var s =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : null,
                  l = this.ttCtx,
                  c = this.w,
                  h = l.getElXCrosshairs(),
                  d = i - l.xcrosshairsWidth / 2,
                  f = c.globals.labels.slice().length;
                if (
                  (s !== null && (d = (c.globals.gridWidth / f) * s),
                  h === null ||
                    c.globals.isBarHorizontal ||
                    (h.setAttribute("x", d),
                    h.setAttribute("x1", d),
                    h.setAttribute("x2", d),
                    h.setAttribute("y2", c.globals.gridHeight),
                    h.classList.add("apexcharts-active")),
                  d < 0 && (d = 0),
                  d > c.globals.gridWidth && (d = c.globals.gridWidth),
                  l.isXAxisTooltipEnabled)
                ) {
                  var p = d;
                  (c.config.xaxis.crosshairs.width !== "tickWidth" &&
                    c.config.xaxis.crosshairs.width !== "barWidth") ||
                    (p = d + l.xcrosshairsWidth / 2),
                    this.moveXAxisTooltip(p);
                }
              },
            },
            {
              key: "moveYCrosshairs",
              value: function (i) {
                var s = this.ttCtx;
                s.ycrosshairs !== null &&
                  C.setAttrs(s.ycrosshairs, { y1: i, y2: i }),
                  s.ycrosshairsHidden !== null &&
                    C.setAttrs(s.ycrosshairsHidden, { y1: i, y2: i });
              },
            },
            {
              key: "moveXAxisTooltip",
              value: function (i) {
                var s = this.w,
                  l = this.ttCtx;
                if (l.xaxisTooltip !== null && l.xcrosshairsWidth !== 0) {
                  l.xaxisTooltip.classList.add("apexcharts-active");
                  var c =
                    l.xaxisOffY +
                    s.config.xaxis.tooltip.offsetY +
                    s.globals.translateY +
                    1 +
                    s.config.xaxis.offsetY;
                  if (
                    ((i -= l.xaxisTooltip.getBoundingClientRect().width / 2),
                    !isNaN(i))
                  ) {
                    i += s.globals.translateX;
                    var h;
                    (h = new C(this.ctx).getTextRects(
                      l.xaxisTooltipText.innerHTML
                    )),
                      (l.xaxisTooltipText.style.minWidth = h.width + "px"),
                      (l.xaxisTooltip.style.left = i + "px"),
                      (l.xaxisTooltip.style.top = c + "px");
                  }
                }
              },
            },
            {
              key: "moveYAxisTooltip",
              value: function (i) {
                var s = this.w,
                  l = this.ttCtx;
                l.yaxisTTEls === null &&
                  (l.yaxisTTEls = s.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-yaxistooltip"
                  ));
                var c = parseInt(l.ycrosshairsHidden.getAttribute("y1"), 10),
                  h = s.globals.translateY + c,
                  d = l.yaxisTTEls[i].getBoundingClientRect().height,
                  f = s.globals.translateYAxisX[i] - 2;
                s.config.yaxis[i].opposite && (f -= 26),
                  (h -= d / 2),
                  s.globals.ignoreYAxisIndexes.indexOf(i) === -1
                    ? (l.yaxisTTEls[i].classList.add("apexcharts-active"),
                      (l.yaxisTTEls[i].style.top = h + "px"),
                      (l.yaxisTTEls[i].style.left =
                        f + s.config.yaxis[i].tooltip.offsetX + "px"))
                    : l.yaxisTTEls[i].classList.remove("apexcharts-active");
              },
            },
            {
              key: "moveTooltip",
              value: function (i, s) {
                var l =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  c = this.w,
                  h = this.ttCtx,
                  d = h.getElTooltip(),
                  f = h.tooltipRect,
                  p = l !== null ? parseFloat(l) : 1,
                  v = parseFloat(i) + p + 5,
                  b = parseFloat(s) + p / 2;
                if (
                  (v > c.globals.gridWidth / 2 && (v = v - f.ttWidth - p - 10),
                  v > c.globals.gridWidth - f.ttWidth - 10 &&
                    (v = c.globals.gridWidth - f.ttWidth),
                  v < -20 && (v = -20),
                  c.config.tooltip.followCursor)
                ) {
                  var _ = h.getElGrid().getBoundingClientRect();
                  (v = h.e.clientX - _.left) > c.globals.gridWidth / 2 &&
                    (v -= h.tooltipRect.ttWidth),
                    (b = h.e.clientY + c.globals.translateY - _.top) >
                      c.globals.gridHeight / 2 && (b -= h.tooltipRect.ttHeight);
                } else
                  c.globals.isBarHorizontal ||
                    (f.ttHeight / 2 + b > c.globals.gridHeight &&
                      (b =
                        c.globals.gridHeight -
                        f.ttHeight +
                        c.globals.translateY));
                isNaN(v) ||
                  ((v += c.globals.translateX),
                  (d.style.left = v + "px"),
                  (d.style.top = b + "px"));
              },
            },
            {
              key: "moveMarkers",
              value: function (i, s) {
                var l = this.w,
                  c = this.ttCtx;
                if (l.globals.markers.size[i] > 0)
                  for (
                    var h = l.globals.dom.baseEl.querySelectorAll(
                        " .apexcharts-series[data\\:realIndex='".concat(
                          i,
                          "'] .apexcharts-marker"
                        )
                      ),
                      d = 0;
                    d < h.length;
                    d++
                  )
                    parseInt(h[d].getAttribute("rel"), 10) === s &&
                      (c.marker.resetPointsSize(),
                      c.marker.enlargeCurrentPoint(s, h[d]));
                else
                  c.marker.resetPointsSize(),
                    this.moveDynamicPointOnHover(s, i);
              },
            },
            {
              key: "moveDynamicPointOnHover",
              value: function (i, s) {
                var l,
                  c,
                  h = this.w,
                  d = this.ttCtx,
                  f = h.globals.pointsArray,
                  p = d.tooltipUtil.getHoverMarkerSize(s),
                  v = h.config.series[s].type;
                if (
                  !v ||
                  (v !== "column" && v !== "candlestick" && v !== "boxPlot")
                ) {
                  (l = f[s][i][0]), (c = f[s][i][1] ? f[s][i][1] : 0);
                  var b = h.globals.dom.baseEl.querySelector(
                    ".apexcharts-series[data\\:realIndex='".concat(
                      s,
                      "'] .apexcharts-series-markers circle"
                    )
                  );
                  b &&
                    c < h.globals.gridHeight &&
                    c > 0 &&
                    (b.setAttribute("r", p),
                    b.setAttribute("cx", l),
                    b.setAttribute("cy", c)),
                    this.moveXCrosshairs(l),
                    d.fixedTooltip || this.moveTooltip(l, c, p);
                }
              },
            },
            {
              key: "moveDynamicPointsOnHover",
              value: function (i) {
                var s,
                  l = this.ttCtx,
                  c = l.w,
                  h = 0,
                  d = 0,
                  f = c.globals.pointsArray;
                s = new de(this.ctx).getActiveConfigSeriesIndex("asc", [
                  "line",
                  "area",
                  "scatter",
                  "bubble",
                ]);
                var p = l.tooltipUtil.getHoverMarkerSize(s);
                f[s] && ((h = f[s][i][0]), (d = f[s][i][1]));
                var v = l.tooltipUtil.getAllMarkers();
                if (v !== null)
                  for (var b = 0; b < c.globals.series.length; b++) {
                    var _ = f[b];
                    if (
                      (c.globals.comboCharts &&
                        _ === void 0 &&
                        v.splice(b, 0, null),
                      _ && _.length)
                    ) {
                      var S = f[b][i][1],
                        T = void 0;
                      if (
                        (v[b].setAttribute("cx", h),
                        c.config.chart.type === "rangeArea" &&
                          !c.globals.comboCharts)
                      ) {
                        var O = i + c.globals.series[b].length;
                        (T = f[b][O][1]), (S -= Math.abs(S - T) / 2);
                      }
                      S !== null &&
                      !isNaN(S) &&
                      S < c.globals.gridHeight + p &&
                      S + p > 0
                        ? (v[b] && v[b].setAttribute("r", p),
                          v[b] && v[b].setAttribute("cy", S))
                        : v[b] && v[b].setAttribute("r", 0);
                    }
                  }
                this.moveXCrosshairs(h),
                  l.fixedTooltip ||
                    this.moveTooltip(h, d || c.globals.gridHeight, p);
              },
            },
            {
              key: "moveStickyTooltipOverBars",
              value: function (i, s) {
                var l = this.w,
                  c = this.ttCtx,
                  h = l.globals.columnSeries
                    ? l.globals.columnSeries.length
                    : l.globals.series.length,
                  d =
                    h >= 2 && h % 2 == 0
                      ? Math.floor(h / 2)
                      : Math.floor(h / 2) + 1;
                l.globals.isBarHorizontal &&
                  (d = new de(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
                var f = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-series .apexcharts-series[rel='"
                    .concat(d, "'] path[j='")
                    .concat(
                      i,
                      "'], .apexcharts-candlestick-series .apexcharts-series[rel='"
                    )
                    .concat(d, "'] path[j='")
                    .concat(
                      i,
                      "'], .apexcharts-boxPlot-series .apexcharts-series[rel='"
                    )
                    .concat(d, "'] path[j='")
                    .concat(
                      i,
                      "'], .apexcharts-rangebar-series .apexcharts-series[rel='"
                    )
                    .concat(d, "'] path[j='")
                    .concat(i, "']")
                );
                f ||
                  typeof s != "number" ||
                  (f = l.globals.dom.baseEl.querySelector(
                    ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                      .concat(s, "'] path[j='")
                      .concat(
                        i,
                        `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`
                      )
                      .concat(s, "'] path[j='")
                      .concat(
                        i,
                        `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`
                      )
                      .concat(s, "'] path[j='")
                      .concat(
                        i,
                        `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`
                      )
                      .concat(s, "'] path[j='")
                      .concat(i, "']")
                  ));
                var p = f ? parseFloat(f.getAttribute("cx")) : 0,
                  v = f ? parseFloat(f.getAttribute("cy")) : 0,
                  b = f ? parseFloat(f.getAttribute("barWidth")) : 0,
                  _ = c.getElGrid().getBoundingClientRect(),
                  S =
                    f &&
                    (f.classList.contains("apexcharts-candlestick-area") ||
                      f.classList.contains("apexcharts-boxPlot-area"));
                l.globals.isXNumeric
                  ? (f && !S && (p -= h % 2 != 0 ? b / 2 : 0),
                    f && S && l.globals.comboCharts && (p -= b / 2))
                  : l.globals.isBarHorizontal ||
                    ((p =
                      c.xAxisTicksPositions[i - 1] +
                      c.dataPointsDividedWidth / 2),
                    isNaN(p) &&
                      (p =
                        c.xAxisTicksPositions[i] -
                        c.dataPointsDividedWidth / 2)),
                  l.globals.isBarHorizontal
                    ? (v -= c.tooltipRect.ttHeight)
                    : l.config.tooltip.followCursor
                    ? (v = c.e.clientY - _.top - c.tooltipRect.ttHeight / 2)
                    : v + c.tooltipRect.ttHeight + 15 > l.globals.gridHeight &&
                      (v = l.globals.gridHeight),
                  l.globals.isBarHorizontal || this.moveXCrosshairs(p),
                  c.fixedTooltip ||
                    this.moveTooltip(p, v || l.globals.gridHeight);
              },
            },
          ]),
          U
        );
      })(),
      An = (function () {
        function U(i) {
          o(this, U),
            (this.w = i.w),
            (this.ttCtx = i),
            (this.ctx = i.ctx),
            (this.tooltipPosition = new Vn(i));
        }
        return (
          g(U, [
            {
              key: "drawDynamicPoints",
              value: function () {
                var i = this.w,
                  s = new C(this.ctx),
                  l = new $e(this.ctx),
                  c =
                    i.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                (c = le(c)),
                  i.config.chart.stacked &&
                    c.sort(function (_, S) {
                      return (
                        parseFloat(_.getAttribute("data:realIndex")) -
                        parseFloat(S.getAttribute("data:realIndex"))
                      );
                    });
                for (var h = 0; h < c.length; h++) {
                  var d = c[h].querySelector(".apexcharts-series-markers-wrap");
                  if (d !== null) {
                    var f = void 0,
                      p = "apexcharts-marker w".concat(
                        (Math.random() + 1).toString(36).substring(4)
                      );
                    (i.config.chart.type !== "line" &&
                      i.config.chart.type !== "area") ||
                      i.globals.comboCharts ||
                      i.config.tooltip.intersect ||
                      (p += " no-pointer-events");
                    var v = l.getMarkerConfig({
                      cssClass: p,
                      seriesIndex: Number(d.getAttribute("data:realIndex")),
                    });
                    (f = s.drawMarker(0, 0, v)).node.setAttribute(
                      "default-marker-size",
                      0
                    );
                    var b = document.createElementNS(i.globals.SVGNS, "g");
                    b.classList.add("apexcharts-series-markers"),
                      b.appendChild(f.node),
                      d.appendChild(b);
                  }
                }
              },
            },
            {
              key: "enlargeCurrentPoint",
              value: function (i, s) {
                var l =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  c =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : null,
                  h = this.w;
                h.config.chart.type !== "bubble" && this.newPointSize(i, s);
                var d = s.getAttribute("cx"),
                  f = s.getAttribute("cy");
                if (
                  (l !== null && c !== null && ((d = l), (f = c)),
                  this.tooltipPosition.moveXCrosshairs(d),
                  !this.fixedTooltip)
                ) {
                  if (h.config.chart.type === "radar") {
                    var p = this.ttCtx.getElGrid().getBoundingClientRect();
                    d = this.ttCtx.e.clientX - p.left;
                  }
                  this.tooltipPosition.moveTooltip(
                    d,
                    f,
                    h.config.markers.hover.size
                  );
                }
              },
            },
            {
              key: "enlargePoints",
              value: function (i) {
                for (
                  var s = this.w,
                    l = this,
                    c = this.ttCtx,
                    h = i,
                    d = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                    ),
                    f = s.config.markers.hover.size,
                    p = 0;
                  p < d.length;
                  p++
                ) {
                  var v = d[p].getAttribute("rel"),
                    b = d[p].getAttribute("index");
                  if (
                    (f === void 0 &&
                      (f =
                        s.globals.markers.size[b] +
                        s.config.markers.hover.sizeOffset),
                    h === parseInt(v, 10))
                  ) {
                    l.newPointSize(h, d[p]);
                    var _ = d[p].getAttribute("cx"),
                      S = d[p].getAttribute("cy");
                    l.tooltipPosition.moveXCrosshairs(_),
                      c.fixedTooltip || l.tooltipPosition.moveTooltip(_, S, f);
                  } else l.oldPointSize(d[p]);
                }
              },
            },
            {
              key: "newPointSize",
              value: function (i, s) {
                var l = this.w,
                  c = l.config.markers.hover.size,
                  h =
                    i === 0 ? s.parentNode.firstChild : s.parentNode.lastChild;
                if (h.getAttribute("default-marker-size") !== "0") {
                  var d = parseInt(h.getAttribute("index"), 10);
                  c === void 0 &&
                    (c =
                      l.globals.markers.size[d] +
                      l.config.markers.hover.sizeOffset),
                    c < 0 && (c = 0),
                    h.setAttribute("r", c);
                }
              },
            },
            {
              key: "oldPointSize",
              value: function (i) {
                var s = parseFloat(i.getAttribute("default-marker-size"));
                i.setAttribute("r", s);
              },
            },
            {
              key: "resetPointsSize",
              value: function () {
                for (
                  var i = this.w.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                    ),
                    s = 0;
                  s < i.length;
                  s++
                ) {
                  var l = parseFloat(i[s].getAttribute("default-marker-size"));
                  F.isNumber(l) && l >= 0
                    ? i[s].setAttribute("r", l)
                    : i[s].setAttribute("r", 0);
                }
              },
            },
          ]),
          U
        );
      })(),
      hr = (function () {
        function U(i) {
          o(this, U), (this.w = i.w);
          var s = this.w;
          (this.ttCtx = i),
            (this.isVerticalGroupedRangeBar =
              !s.globals.isBarHorizontal &&
              s.config.chart.type === "rangeBar" &&
              s.config.plotOptions.bar.rangeBarGroupRows);
        }
        return (
          g(U, [
            {
              key: "getAttr",
              value: function (i, s) {
                return parseFloat(i.target.getAttribute(s));
              },
            },
            {
              key: "handleHeatTreeTooltip",
              value: function (i) {
                var s = i.e,
                  l = i.opt,
                  c = i.x,
                  h = i.y,
                  d = i.type,
                  f = this.ttCtx,
                  p = this.w;
                if (
                  s.target.classList.contains("apexcharts-".concat(d, "-rect"))
                ) {
                  var v = this.getAttr(s, "i"),
                    b = this.getAttr(s, "j"),
                    _ = this.getAttr(s, "cx"),
                    S = this.getAttr(s, "cy"),
                    T = this.getAttr(s, "width"),
                    O = this.getAttr(s, "height");
                  if (
                    (f.tooltipLabels.drawSeriesTexts({
                      ttItems: l.ttItems,
                      i: v,
                      j: b,
                      shared: !1,
                      e: s,
                    }),
                    (p.globals.capturedSeriesIndex = v),
                    (p.globals.capturedDataPointIndex = b),
                    (c = _ + f.tooltipRect.ttWidth / 2 + T),
                    (h = S + f.tooltipRect.ttHeight / 2 - O / 2),
                    f.tooltipPosition.moveXCrosshairs(_ + T / 2),
                    c > p.globals.gridWidth / 2 &&
                      (c = _ - f.tooltipRect.ttWidth / 2 + T),
                    f.w.config.tooltip.followCursor)
                  ) {
                    var D = p.globals.dom.elWrap.getBoundingClientRect();
                    (c =
                      p.globals.clientX -
                      D.left -
                      (c > p.globals.gridWidth / 2
                        ? f.tooltipRect.ttWidth
                        : 0)),
                      (h =
                        p.globals.clientY -
                        D.top -
                        (h > p.globals.gridHeight / 2
                          ? f.tooltipRect.ttHeight
                          : 0));
                  }
                }
                return { x: c, y: h };
              },
            },
            {
              key: "handleMarkerTooltip",
              value: function (i) {
                var s,
                  l,
                  c = i.e,
                  h = i.opt,
                  d = i.x,
                  f = i.y,
                  p = this.w,
                  v = this.ttCtx;
                if (c.target.classList.contains("apexcharts-marker")) {
                  var b = parseInt(h.paths.getAttribute("cx"), 10),
                    _ = parseInt(h.paths.getAttribute("cy"), 10),
                    S = parseFloat(h.paths.getAttribute("val"));
                  if (
                    ((l = parseInt(h.paths.getAttribute("rel"), 10)),
                    (s =
                      parseInt(
                        h.paths.parentNode.parentNode.parentNode.getAttribute(
                          "rel"
                        ),
                        10
                      ) - 1),
                    v.intersect)
                  ) {
                    var T = F.findAncestor(h.paths, "apexcharts-series");
                    T && (s = parseInt(T.getAttribute("data:realIndex"), 10));
                  }
                  if (
                    (v.tooltipLabels.drawSeriesTexts({
                      ttItems: h.ttItems,
                      i: s,
                      j: l,
                      shared: !v.showOnIntersect && p.config.tooltip.shared,
                      e: c,
                    }),
                    c.type === "mouseup" && v.markerClick(c, s, l),
                    (p.globals.capturedSeriesIndex = s),
                    (p.globals.capturedDataPointIndex = l),
                    (d = b),
                    (f =
                      _ + p.globals.translateY - 1.4 * v.tooltipRect.ttHeight),
                    v.w.config.tooltip.followCursor)
                  ) {
                    var O = v.getElGrid().getBoundingClientRect();
                    f = v.e.clientY + p.globals.translateY - O.top;
                  }
                  S < 0 && (f = _),
                    v.marker.enlargeCurrentPoint(l, h.paths, d, f);
                }
                return { x: d, y: f };
              },
            },
            {
              key: "handleBarTooltip",
              value: function (i) {
                var s,
                  l,
                  c = i.e,
                  h = i.opt,
                  d = this.w,
                  f = this.ttCtx,
                  p = f.getElTooltip(),
                  v = 0,
                  b = 0,
                  _ = 0,
                  S = this.getBarTooltipXY({ e: c, opt: h });
                s = S.i;
                var T = S.barHeight,
                  O = S.j;
                (d.globals.capturedSeriesIndex = s),
                  (d.globals.capturedDataPointIndex = O),
                  (d.globals.isBarHorizontal && f.tooltipUtil.hasBars()) ||
                  !d.config.tooltip.shared
                    ? ((b = S.x),
                      (_ = S.y),
                      (l = Array.isArray(d.config.stroke.width)
                        ? d.config.stroke.width[s]
                        : d.config.stroke.width),
                      (v = b))
                    : d.globals.comboCharts ||
                      d.config.tooltip.shared ||
                      (v /= 2),
                  isNaN(_) &&
                    (_ = d.globals.svgHeight - f.tooltipRect.ttHeight);
                var D = parseInt(
                    h.paths.parentNode.getAttribute("data:realIndex"),
                    10
                  ),
                  V = d.globals.isMultipleYAxis
                    ? d.config.yaxis[D] && d.config.yaxis[D].reversed
                    : d.config.yaxis[0].reversed;
                if (
                  (b + f.tooltipRect.ttWidth > d.globals.gridWidth && !V
                    ? (b -= f.tooltipRect.ttWidth)
                    : b < 0 && (b = 0),
                  f.w.config.tooltip.followCursor)
                ) {
                  var G = f.getElGrid().getBoundingClientRect();
                  _ = f.e.clientY - G.top;
                }
                f.tooltip === null &&
                  (f.tooltip = d.globals.dom.baseEl.querySelector(
                    ".apexcharts-tooltip"
                  )),
                  d.config.tooltip.shared ||
                    (d.globals.comboBarCount > 0
                      ? f.tooltipPosition.moveXCrosshairs(v + l / 2)
                      : f.tooltipPosition.moveXCrosshairs(v)),
                  !f.fixedTooltip &&
                    (!d.config.tooltip.shared ||
                      (d.globals.isBarHorizontal && f.tooltipUtil.hasBars())) &&
                    (V && (b -= f.tooltipRect.ttWidth) < 0 && (b = 0),
                    !V ||
                      (d.globals.isBarHorizontal && f.tooltipUtil.hasBars()) ||
                      (_ = _ + T - 2 * (d.globals.series[s][O] < 0 ? T : 0)),
                    (_ = _ + d.globals.translateY - f.tooltipRect.ttHeight / 2),
                    (p.style.left = b + d.globals.translateX + "px"),
                    (p.style.top = _ + "px"));
              },
            },
            {
              key: "getBarTooltipXY",
              value: function (i) {
                var s = this,
                  l = i.e,
                  c = i.opt,
                  h = this.w,
                  d = null,
                  f = this.ttCtx,
                  p = 0,
                  v = 0,
                  b = 0,
                  _ = 0,
                  S = 0,
                  T = l.target.classList;
                if (
                  T.contains("apexcharts-bar-area") ||
                  T.contains("apexcharts-candlestick-area") ||
                  T.contains("apexcharts-boxPlot-area") ||
                  T.contains("apexcharts-rangebar-area")
                ) {
                  var O = l.target,
                    D = O.getBoundingClientRect(),
                    V = c.elGrid.getBoundingClientRect(),
                    G = D.height;
                  S = D.height;
                  var Q = D.width,
                    m = parseInt(O.getAttribute("cx"), 10),
                    k = parseInt(O.getAttribute("cy"), 10);
                  _ = parseFloat(O.getAttribute("barWidth"));
                  var N =
                    l.type === "touchmove" ? l.touches[0].clientX : l.clientX;
                  (d = parseInt(O.getAttribute("j"), 10)),
                    (p = parseInt(O.parentNode.getAttribute("rel"), 10) - 1);
                  var X = O.getAttribute("data-range-y1"),
                    K = O.getAttribute("data-range-y2");
                  h.globals.comboCharts &&
                    (p = parseInt(
                      O.parentNode.getAttribute("data:realIndex"),
                      10
                    ));
                  var ee = function (ge) {
                      return h.globals.isXNumeric
                        ? m - Q / 2
                        : s.isVerticalGroupedRangeBar
                        ? m + Q / 2
                        : m - f.dataPointsDividedWidth + Q / 2;
                    },
                    fe = function () {
                      return (
                        k -
                        f.dataPointsDividedHeight +
                        G / 2 -
                        f.tooltipRect.ttHeight / 2
                      );
                    };
                  f.tooltipLabels.drawSeriesTexts({
                    ttItems: c.ttItems,
                    i: p,
                    j: d,
                    y1: X ? parseInt(X, 10) : null,
                    y2: K ? parseInt(K, 10) : null,
                    shared: !f.showOnIntersect && h.config.tooltip.shared,
                    e: l,
                  }),
                    h.config.tooltip.followCursor
                      ? h.globals.isBarHorizontal
                        ? ((v = N - V.left + 15), (b = fe()))
                        : ((v = ee()),
                          (b =
                            l.clientY -
                            V.top -
                            f.tooltipRect.ttHeight / 2 -
                            15))
                      : h.globals.isBarHorizontal
                      ? ((v = m) < f.xyRatios.baseLineInvertedY &&
                          (v = m - f.tooltipRect.ttWidth),
                        (b = fe()))
                      : ((v = ee()), (b = k));
                }
                return { x: v, y: b, barHeight: S, barWidth: _, i: p, j: d };
              },
            },
          ]),
          U
        );
      })(),
      gs = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.ttCtx = i);
        }
        return (
          g(U, [
            {
              key: "drawXaxisTooltip",
              value: function () {
                var i = this.w,
                  s = this.ttCtx,
                  l = i.config.xaxis.position === "bottom";
                s.xaxisOffY = l
                  ? i.globals.gridHeight + 1
                  : -i.globals.xAxisHeight -
                    i.config.xaxis.axisTicks.height +
                    3;
                var c = l
                    ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom"
                    : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                  h = i.globals.dom.elWrap;
                s.isXAxisTooltipEnabled &&
                  i.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxistooltip"
                  ) === null &&
                  ((s.xaxisTooltip = document.createElement("div")),
                  s.xaxisTooltip.setAttribute(
                    "class",
                    c + " apexcharts-theme-" + i.config.tooltip.theme
                  ),
                  h.appendChild(s.xaxisTooltip),
                  (s.xaxisTooltipText = document.createElement("div")),
                  s.xaxisTooltipText.classList.add(
                    "apexcharts-xaxistooltip-text"
                  ),
                  (s.xaxisTooltipText.style.fontFamily =
                    i.config.xaxis.tooltip.style.fontFamily ||
                    i.config.chart.fontFamily),
                  (s.xaxisTooltipText.style.fontSize =
                    i.config.xaxis.tooltip.style.fontSize),
                  s.xaxisTooltip.appendChild(s.xaxisTooltipText));
              },
            },
            {
              key: "drawYaxisTooltip",
              value: function () {
                for (
                  var i = this.w,
                    s = this.ttCtx,
                    l = function (h) {
                      var d =
                        i.config.yaxis[h].opposite ||
                        i.config.yaxis[h].crosshairs.opposite;
                      s.yaxisOffX = d ? i.globals.gridWidth + 1 : 1;
                      var f =
                        "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                          h,
                          d
                            ? " apexcharts-yaxistooltip-right"
                            : " apexcharts-yaxistooltip-left"
                        );
                      i.globals.yAxisSameScaleIndices.map(function (v, b) {
                        v.map(function (_, S) {
                          S === h &&
                            (f += i.config.yaxis[S].show
                              ? " "
                              : " apexcharts-yaxistooltip-hidden");
                        });
                      });
                      var p = i.globals.dom.elWrap;
                      i.globals.dom.baseEl.querySelector(
                        ".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                          h
                        )
                      ) === null &&
                        ((s.yaxisTooltip = document.createElement("div")),
                        s.yaxisTooltip.setAttribute(
                          "class",
                          f + " apexcharts-theme-" + i.config.tooltip.theme
                        ),
                        p.appendChild(s.yaxisTooltip),
                        h === 0 && (s.yaxisTooltipText = []),
                        (s.yaxisTooltipText[h] = document.createElement("div")),
                        s.yaxisTooltipText[h].classList.add(
                          "apexcharts-yaxistooltip-text"
                        ),
                        s.yaxisTooltip.appendChild(s.yaxisTooltipText[h]));
                    },
                    c = 0;
                  c < i.config.yaxis.length;
                  c++
                )
                  l(c);
              },
            },
            {
              key: "setXCrosshairWidth",
              value: function () {
                var i = this.w,
                  s = this.ttCtx,
                  l = s.getElXCrosshairs();
                if (
                  ((s.xcrosshairsWidth = parseInt(
                    i.config.xaxis.crosshairs.width,
                    10
                  )),
                  i.globals.comboCharts)
                ) {
                  var c = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-bar-area"
                  );
                  if (
                    c !== null &&
                    i.config.xaxis.crosshairs.width === "barWidth"
                  ) {
                    var h = parseFloat(c.getAttribute("barWidth"));
                    s.xcrosshairsWidth = h;
                  } else if (i.config.xaxis.crosshairs.width === "tickWidth") {
                    var d = i.globals.labels.length;
                    s.xcrosshairsWidth = i.globals.gridWidth / d;
                  }
                } else if (i.config.xaxis.crosshairs.width === "tickWidth") {
                  var f = i.globals.labels.length;
                  s.xcrosshairsWidth = i.globals.gridWidth / f;
                } else if (i.config.xaxis.crosshairs.width === "barWidth") {
                  var p = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-bar-area"
                  );
                  if (p !== null) {
                    var v = parseFloat(p.getAttribute("barWidth"));
                    s.xcrosshairsWidth = v;
                  } else s.xcrosshairsWidth = 1;
                }
                i.globals.isBarHorizontal && (s.xcrosshairsWidth = 0),
                  l !== null &&
                    s.xcrosshairsWidth > 0 &&
                    l.setAttribute("width", s.xcrosshairsWidth);
              },
            },
            {
              key: "handleYCrosshair",
              value: function () {
                var i = this.w,
                  s = this.ttCtx;
                (s.ycrosshairs = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-ycrosshairs"
                )),
                  (s.ycrosshairsHidden = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-ycrosshairs-hidden"
                  ));
              },
            },
            {
              key: "drawYaxisTooltipText",
              value: function (i, s, l) {
                var c = this.ttCtx,
                  h = this.w,
                  d = h.globals.yLabelFormatters[i];
                if (c.yaxisTooltips[i]) {
                  var f = c.getElGrid().getBoundingClientRect(),
                    p = (s - f.top) * l.yRatio[i],
                    v = h.globals.maxYArr[i] - h.globals.minYArr[i],
                    b = h.globals.minYArr[i] + (v - p);
                  c.tooltipPosition.moveYCrosshairs(s - f.top),
                    (c.yaxisTooltipText[i].innerHTML = d(b)),
                    c.tooltipPosition.moveYAxisTooltip(i);
                }
              },
            },
          ]),
          U
        );
      })(),
      wi = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
          var s = this.w;
          (this.tConfig = s.config.tooltip),
            (this.tooltipUtil = new ui(this)),
            (this.tooltipLabels = new mr(this)),
            (this.tooltipPosition = new Vn(this)),
            (this.marker = new An(this)),
            (this.intersect = new hr(this)),
            (this.axesTooltip = new gs(this)),
            (this.showOnIntersect = this.tConfig.intersect),
            (this.showTooltipTitle = this.tConfig.x.show),
            (this.fixedTooltip = this.tConfig.fixed.enabled),
            (this.xaxisTooltip = null),
            (this.yaxisTTEls = null),
            (this.isBarShared =
              !s.globals.isBarHorizontal && this.tConfig.shared),
            (this.lastHoverTime = Date.now());
        }
        return (
          g(U, [
            {
              key: "getElTooltip",
              value: function (i) {
                return (
                  i || (i = this),
                  i.w.globals.dom.baseEl
                    ? i.w.globals.dom.baseEl.querySelector(
                        ".apexcharts-tooltip"
                      )
                    : null
                );
              },
            },
            {
              key: "getElXCrosshairs",
              value: function () {
                return this.w.globals.dom.baseEl.querySelector(
                  ".apexcharts-xcrosshairs"
                );
              },
            },
            {
              key: "getElGrid",
              value: function () {
                return this.w.globals.dom.baseEl.querySelector(
                  ".apexcharts-grid"
                );
              },
            },
            {
              key: "drawTooltip",
              value: function (i) {
                var s = this.w;
                (this.xyRatios = i),
                  (this.isXAxisTooltipEnabled =
                    s.config.xaxis.tooltip.enabled && s.globals.axisCharts),
                  (this.yaxisTooltips = s.config.yaxis.map(function (d, f) {
                    return !!(
                      d.show &&
                      d.tooltip.enabled &&
                      s.globals.axisCharts
                    );
                  })),
                  (this.allTooltipSeriesGroups = []),
                  s.globals.axisCharts || (this.showTooltipTitle = !1);
                var l = document.createElement("div");
                if (
                  (l.classList.add("apexcharts-tooltip"),
                  s.config.tooltip.cssClass &&
                    l.classList.add(s.config.tooltip.cssClass),
                  l.classList.add(
                    "apexcharts-theme-".concat(this.tConfig.theme)
                  ),
                  s.globals.dom.elWrap.appendChild(l),
                  s.globals.axisCharts)
                ) {
                  this.axesTooltip.drawXaxisTooltip(),
                    this.axesTooltip.drawYaxisTooltip(),
                    this.axesTooltip.setXCrosshairWidth(),
                    this.axesTooltip.handleYCrosshair();
                  var c = new Wt(this.ctx);
                  this.xAxisTicksPositions = c.getXAxisTicksPositions();
                }
                if (
                  ((!s.globals.comboCharts &&
                    !this.tConfig.intersect &&
                    s.config.chart.type !== "rangeBar") ||
                    this.tConfig.shared ||
                    (this.showOnIntersect = !0),
                  (s.config.markers.size !== 0 &&
                    s.globals.markers.largestSize !== 0) ||
                    this.marker.drawDynamicPoints(this),
                  s.globals.collapsedSeries.length !== s.globals.series.length)
                ) {
                  (this.dataPointsDividedHeight =
                    s.globals.gridHeight / s.globals.dataPoints),
                    (this.dataPointsDividedWidth =
                      s.globals.gridWidth / s.globals.dataPoints),
                    this.showTooltipTitle &&
                      ((this.tooltipTitle = document.createElement("div")),
                      this.tooltipTitle.classList.add(
                        "apexcharts-tooltip-title"
                      ),
                      (this.tooltipTitle.style.fontFamily =
                        this.tConfig.style.fontFamily ||
                        s.config.chart.fontFamily),
                      (this.tooltipTitle.style.fontSize =
                        this.tConfig.style.fontSize),
                      l.appendChild(this.tooltipTitle));
                  var h = s.globals.series.length;
                  (s.globals.xyCharts || s.globals.comboCharts) &&
                    this.tConfig.shared &&
                    (h = this.showOnIntersect ? 1 : s.globals.series.length),
                    (this.legendLabels = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-legend-text"
                    )),
                    (this.ttItems = this.createTTElements(h)),
                    this.addSVGEvents();
                }
              },
            },
            {
              key: "createTTElements",
              value: function (i) {
                for (
                  var s = this,
                    l = this.w,
                    c = [],
                    h = this.getElTooltip(),
                    d = function (p) {
                      var v = document.createElement("div");
                      v.classList.add("apexcharts-tooltip-series-group"),
                        (v.style.order = l.config.tooltip.inverseOrder
                          ? i - p
                          : p + 1),
                        s.tConfig.shared &&
                          s.tConfig.enabledOnSeries &&
                          Array.isArray(s.tConfig.enabledOnSeries) &&
                          s.tConfig.enabledOnSeries.indexOf(p) < 0 &&
                          v.classList.add(
                            "apexcharts-tooltip-series-group-hidden"
                          );
                      var b = document.createElement("span");
                      b.classList.add("apexcharts-tooltip-marker"),
                        (b.style.backgroundColor = l.globals.colors[p]),
                        v.appendChild(b);
                      var _ = document.createElement("div");
                      _.classList.add("apexcharts-tooltip-text"),
                        (_.style.fontFamily =
                          s.tConfig.style.fontFamily ||
                          l.config.chart.fontFamily),
                        (_.style.fontSize = s.tConfig.style.fontSize),
                        ["y", "goals", "z"].forEach(function (S) {
                          var T = document.createElement("div");
                          T.classList.add(
                            "apexcharts-tooltip-".concat(S, "-group")
                          );
                          var O = document.createElement("span");
                          O.classList.add(
                            "apexcharts-tooltip-text-".concat(S, "-label")
                          ),
                            T.appendChild(O);
                          var D = document.createElement("span");
                          D.classList.add(
                            "apexcharts-tooltip-text-".concat(S, "-value")
                          ),
                            T.appendChild(D),
                            _.appendChild(T);
                        }),
                        v.appendChild(_),
                        h.appendChild(v),
                        c.push(v);
                    },
                    f = 0;
                  f < i;
                  f++
                )
                  d(f);
                return c;
              },
            },
            {
              key: "addSVGEvents",
              value: function () {
                var i = this.w,
                  s = i.config.chart.type,
                  l = this.getElTooltip(),
                  c = !(
                    s !== "bar" &&
                    s !== "candlestick" &&
                    s !== "boxPlot" &&
                    s !== "rangeBar"
                  ),
                  h =
                    s === "area" ||
                    s === "line" ||
                    s === "scatter" ||
                    s === "bubble" ||
                    s === "radar",
                  d = i.globals.dom.Paper.node,
                  f = this.getElGrid();
                f && (this.seriesBound = f.getBoundingClientRect());
                var p,
                  v = [],
                  b = [],
                  _ = {
                    hoverArea: d,
                    elGrid: f,
                    tooltipEl: l,
                    tooltipY: v,
                    tooltipX: b,
                    ttItems: this.ttItems,
                  };
                if (
                  i.globals.axisCharts &&
                  (h
                    ? (p = i.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"
                      ))
                    : c
                    ? (p = i.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area"
                      ))
                    : (s !== "heatmap" && s !== "treemap") ||
                      (p = i.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap"
                      )),
                  p && p.length)
                )
                  for (var S = 0; S < p.length; S++)
                    v.push(p[S].getAttribute("cy")),
                      b.push(p[S].getAttribute("cx"));
                if (
                  (i.globals.xyCharts && !this.showOnIntersect) ||
                  (i.globals.comboCharts && !this.showOnIntersect) ||
                  (c && this.tooltipUtil.hasBars() && this.tConfig.shared)
                )
                  this.addPathsEventListeners([d], _);
                else if (
                  (c && !i.globals.comboCharts) ||
                  (h && this.showOnIntersect)
                )
                  this.addDatapointEventsListeners(_);
                else if (
                  !i.globals.axisCharts ||
                  s === "heatmap" ||
                  s === "treemap"
                ) {
                  var T =
                    i.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                  this.addPathsEventListeners(T, _);
                }
                if (this.showOnIntersect) {
                  var O = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker"
                  );
                  O.length > 0 && this.addPathsEventListeners(O, _),
                    this.tooltipUtil.hasBars() &&
                      !this.tConfig.shared &&
                      this.addDatapointEventsListeners(_);
                }
              },
            },
            {
              key: "drawFixedTooltipRect",
              value: function () {
                var i = this.w,
                  s = this.getElTooltip(),
                  l = s.getBoundingClientRect(),
                  c = l.width + 10,
                  h = l.height + 10,
                  d = this.tConfig.fixed.offsetX,
                  f = this.tConfig.fixed.offsetY,
                  p = this.tConfig.fixed.position.toLowerCase();
                return (
                  p.indexOf("right") > -1 &&
                    (d = d + i.globals.svgWidth - c + 10),
                  p.indexOf("bottom") > -1 &&
                    (f = f + i.globals.svgHeight - h - 10),
                  (s.style.left = d + "px"),
                  (s.style.top = f + "px"),
                  { x: d, y: f, ttWidth: c, ttHeight: h }
                );
              },
            },
            {
              key: "addDatapointEventsListeners",
              value: function (i) {
                var s = this.w.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area"
                );
                this.addPathsEventListeners(s, i);
              },
            },
            {
              key: "addPathsEventListeners",
              value: function (i, s) {
                for (
                  var l = this,
                    c = function (d) {
                      var f = {
                        paths: i[d],
                        tooltipEl: s.tooltipEl,
                        tooltipY: s.tooltipY,
                        tooltipX: s.tooltipX,
                        elGrid: s.elGrid,
                        hoverArea: s.hoverArea,
                        ttItems: s.ttItems,
                      };
                      [
                        "mousemove",
                        "mouseup",
                        "touchmove",
                        "mouseout",
                        "touchend",
                      ].map(function (p) {
                        return i[d].addEventListener(
                          p,
                          l.onSeriesHover.bind(l, f),
                          { capture: !1, passive: !0 }
                        );
                      });
                    },
                    h = 0;
                  h < i.length;
                  h++
                )
                  c(h);
              },
            },
            {
              key: "onSeriesHover",
              value: function (i, s) {
                var l = this,
                  c = Date.now() - this.lastHoverTime;
                c >= 100
                  ? this.seriesHover(i, s)
                  : (clearTimeout(this.seriesHoverTimeout),
                    (this.seriesHoverTimeout = setTimeout(function () {
                      l.seriesHover(i, s);
                    }, 100 - c)));
              },
            },
            {
              key: "seriesHover",
              value: function (i, s) {
                var l = this;
                this.lastHoverTime = Date.now();
                var c = [],
                  h = this.w;
                h.config.chart.group && (c = this.ctx.getGroupedCharts()),
                  (h.globals.axisCharts &&
                    ((h.globals.minX === -1 / 0 && h.globals.maxX === 1 / 0) ||
                      h.globals.dataPoints === 0)) ||
                    (c.length
                      ? c.forEach(function (d) {
                          var f = l.getElTooltip(d),
                            p = {
                              paths: i.paths,
                              tooltipEl: f,
                              tooltipY: i.tooltipY,
                              tooltipX: i.tooltipX,
                              elGrid: i.elGrid,
                              hoverArea: i.hoverArea,
                              ttItems: d.w.globals.tooltip.ttItems,
                            };
                          d.w.globals.minX === l.w.globals.minX &&
                            d.w.globals.maxX === l.w.globals.maxX &&
                            d.w.globals.tooltip.seriesHoverByContext({
                              chartCtx: d,
                              ttCtx: d.w.globals.tooltip,
                              opt: p,
                              e: s,
                            });
                        })
                      : this.seriesHoverByContext({
                          chartCtx: this.ctx,
                          ttCtx: this.w.globals.tooltip,
                          opt: i,
                          e: s,
                        }));
              },
            },
            {
              key: "seriesHoverByContext",
              value: function (i) {
                var s = i.chartCtx,
                  l = i.ttCtx,
                  c = i.opt,
                  h = i.e,
                  d = s.w,
                  f = this.getElTooltip();
                f &&
                  ((l.tooltipRect = {
                    x: 0,
                    y: 0,
                    ttWidth: f.getBoundingClientRect().width,
                    ttHeight: f.getBoundingClientRect().height,
                  }),
                  (l.e = h),
                  l.tooltipUtil.hasBars() &&
                    !d.globals.comboCharts &&
                    !l.isBarShared &&
                    this.tConfig.onDatasetHover.highlightDataSeries &&
                    new de(s).toggleSeriesOnHover(h, h.target.parentNode),
                  l.fixedTooltip && l.drawFixedTooltipRect(),
                  d.globals.axisCharts
                    ? l.axisChartsTooltips({
                        e: h,
                        opt: c,
                        tooltipRect: l.tooltipRect,
                      })
                    : l.nonAxisChartsTooltips({
                        e: h,
                        opt: c,
                        tooltipRect: l.tooltipRect,
                      }));
              },
            },
            {
              key: "axisChartsTooltips",
              value: function (i) {
                var s,
                  l,
                  c = i.e,
                  h = i.opt,
                  d = this.w,
                  f = h.elGrid.getBoundingClientRect(),
                  p = c.type === "touchmove" ? c.touches[0].clientX : c.clientX,
                  v = c.type === "touchmove" ? c.touches[0].clientY : c.clientY;
                if (
                  ((this.clientY = v),
                  (this.clientX = p),
                  (d.globals.capturedSeriesIndex = -1),
                  (d.globals.capturedDataPointIndex = -1),
                  v < f.top || v > f.top + f.height)
                )
                  this.handleMouseOut(h);
                else {
                  if (
                    Array.isArray(this.tConfig.enabledOnSeries) &&
                    !d.config.tooltip.shared
                  ) {
                    var b = parseInt(h.paths.getAttribute("index"), 10);
                    if (this.tConfig.enabledOnSeries.indexOf(b) < 0)
                      return void this.handleMouseOut(h);
                  }
                  var _ = this.getElTooltip(),
                    S = this.getElXCrosshairs(),
                    T =
                      d.globals.xyCharts ||
                      (d.config.chart.type === "bar" &&
                        !d.globals.isBarHorizontal &&
                        this.tooltipUtil.hasBars() &&
                        this.tConfig.shared) ||
                      (d.globals.comboCharts && this.tooltipUtil.hasBars());
                  if (
                    c.type === "mousemove" ||
                    c.type === "touchmove" ||
                    c.type === "mouseup"
                  ) {
                    if (
                      d.globals.collapsedSeries.length +
                        d.globals.ancillaryCollapsedSeries.length ===
                      d.globals.series.length
                    )
                      return;
                    S !== null && S.classList.add("apexcharts-active");
                    var O = this.yaxisTooltips.filter(function (G) {
                      return G === !0;
                    });
                    if (
                      (this.ycrosshairs !== null &&
                        O.length &&
                        this.ycrosshairs.classList.add("apexcharts-active"),
                      T && !this.showOnIntersect)
                    )
                      this.handleStickyTooltip(c, p, v, h);
                    else if (
                      d.config.chart.type === "heatmap" ||
                      d.config.chart.type === "treemap"
                    ) {
                      var D = this.intersect.handleHeatTreeTooltip({
                        e: c,
                        opt: h,
                        x: s,
                        y: l,
                        type: d.config.chart.type,
                      });
                      (s = D.x),
                        (l = D.y),
                        (_.style.left = s + "px"),
                        (_.style.top = l + "px");
                    } else
                      this.tooltipUtil.hasBars() &&
                        this.intersect.handleBarTooltip({ e: c, opt: h }),
                        this.tooltipUtil.hasMarkers() &&
                          this.intersect.handleMarkerTooltip({
                            e: c,
                            opt: h,
                            x: s,
                            y: l,
                          });
                    if (this.yaxisTooltips.length)
                      for (var V = 0; V < d.config.yaxis.length; V++)
                        this.axesTooltip.drawYaxisTooltipText(
                          V,
                          v,
                          this.xyRatios
                        );
                    h.tooltipEl.classList.add("apexcharts-active");
                  } else
                    (c.type !== "mouseout" && c.type !== "touchend") ||
                      this.handleMouseOut(h);
                }
              },
            },
            {
              key: "nonAxisChartsTooltips",
              value: function (i) {
                var s = i.e,
                  l = i.opt,
                  c = i.tooltipRect,
                  h = this.w,
                  d = l.paths.getAttribute("rel"),
                  f = this.getElTooltip(),
                  p = h.globals.dom.elWrap.getBoundingClientRect();
                if (s.type === "mousemove" || s.type === "touchmove") {
                  f.classList.add("apexcharts-active"),
                    this.tooltipLabels.drawSeriesTexts({
                      ttItems: l.ttItems,
                      i: parseInt(d, 10) - 1,
                      shared: !1,
                    });
                  var v = h.globals.clientX - p.left - c.ttWidth / 2,
                    b = h.globals.clientY - p.top - c.ttHeight - 10;
                  if (
                    ((f.style.left = v + "px"),
                    (f.style.top = b + "px"),
                    h.config.legend.tooltipHoverFormatter)
                  ) {
                    var _ = d - 1,
                      S = (0, h.config.legend.tooltipHoverFormatter)(
                        this.legendLabels[_].getAttribute("data:default-text"),
                        { seriesIndex: _, dataPointIndex: _, w: h }
                      );
                    this.legendLabels[_].innerHTML = S;
                  }
                } else
                  (s.type !== "mouseout" && s.type !== "touchend") ||
                    (f.classList.remove("apexcharts-active"),
                    h.config.legend.tooltipHoverFormatter &&
                      this.legendLabels.forEach(function (T) {
                        var O = T.getAttribute("data:default-text");
                        T.innerHTML = decodeURIComponent(O);
                      }));
              },
            },
            {
              key: "handleStickyTooltip",
              value: function (i, s, l, c) {
                var h = this.w,
                  d = this.tooltipUtil.getNearestValues({
                    context: this,
                    hoverArea: c.hoverArea,
                    elGrid: c.elGrid,
                    clientX: s,
                    clientY: l,
                  }),
                  f = d.j,
                  p = d.capturedSeries;
                h.globals.collapsedSeriesIndices.includes(p) && (p = null);
                var v = c.elGrid.getBoundingClientRect();
                if (d.hoverX < 0 || d.hoverX > v.width) this.handleMouseOut(c);
                else if (p !== null)
                  this.handleStickyCapturedSeries(i, p, c, f);
                else if (
                  this.tooltipUtil.isXoverlap(f) ||
                  h.globals.isBarHorizontal
                ) {
                  var b = h.globals.series.findIndex(function (_, S) {
                    return !h.globals.collapsedSeriesIndices.includes(S);
                  });
                  this.create(i, this, b, f, c.ttItems);
                }
              },
            },
            {
              key: "handleStickyCapturedSeries",
              value: function (i, s, l, c) {
                var h = this.w;
                if (!this.tConfig.shared && h.globals.series[s][c] === null)
                  return void this.handleMouseOut(l);
                if (h.globals.series[s][c] !== void 0)
                  this.tConfig.shared &&
                  this.tooltipUtil.isXoverlap(c) &&
                  this.tooltipUtil.isInitialSeriesSameLen()
                    ? this.create(i, this, s, c, l.ttItems)
                    : this.create(i, this, s, c, l.ttItems, !1);
                else if (this.tooltipUtil.isXoverlap(c)) {
                  var d = h.globals.series.findIndex(function (f, p) {
                    return !h.globals.collapsedSeriesIndices.includes(p);
                  });
                  this.create(i, this, d, c, l.ttItems);
                }
              },
            },
            {
              key: "deactivateHoverFilter",
              value: function () {
                for (
                  var i = this.w,
                    s = new C(this.ctx),
                    l = i.globals.dom.Paper.select(".apexcharts-bar-area"),
                    c = 0;
                  c < l.length;
                  c++
                )
                  s.pathMouseLeave(l[c]);
              },
            },
            {
              key: "handleMouseOut",
              value: function (i) {
                var s = this.w,
                  l = this.getElXCrosshairs();
                if (
                  (i.tooltipEl.classList.remove("apexcharts-active"),
                  this.deactivateHoverFilter(),
                  s.config.chart.type !== "bubble" &&
                    this.marker.resetPointsSize(),
                  l !== null && l.classList.remove("apexcharts-active"),
                  this.ycrosshairs !== null &&
                    this.ycrosshairs.classList.remove("apexcharts-active"),
                  this.isXAxisTooltipEnabled &&
                    this.xaxisTooltip.classList.remove("apexcharts-active"),
                  this.yaxisTooltips.length)
                ) {
                  this.yaxisTTEls === null &&
                    (this.yaxisTTEls = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxistooltip"
                    ));
                  for (var c = 0; c < this.yaxisTTEls.length; c++)
                    this.yaxisTTEls[c].classList.remove("apexcharts-active");
                }
                s.config.legend.tooltipHoverFormatter &&
                  this.legendLabels.forEach(function (h) {
                    var d = h.getAttribute("data:default-text");
                    h.innerHTML = decodeURIComponent(d);
                  });
              },
            },
            {
              key: "markerClick",
              value: function (i, s, l) {
                var c = this.w;
                typeof c.config.chart.events.markerClick == "function" &&
                  c.config.chart.events.markerClick(i, this.ctx, {
                    seriesIndex: s,
                    dataPointIndex: l,
                    w: c,
                  }),
                  this.ctx.events.fireEvent("markerClick", [
                    i,
                    this.ctx,
                    { seriesIndex: s, dataPointIndex: l, w: c },
                  ]);
              },
            },
            {
              key: "create",
              value: function (i, s, l, c, h) {
                var d,
                  f,
                  p,
                  v,
                  b,
                  _,
                  S,
                  T,
                  O,
                  D,
                  V,
                  G,
                  Q,
                  m,
                  k,
                  N,
                  X =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : null,
                  K = this.w,
                  ee = s;
                i.type === "mouseup" && this.markerClick(i, l, c),
                  X === null && (X = this.tConfig.shared);
                var fe = this.tooltipUtil.hasMarkers(l),
                  ge = this.tooltipUtil.getElBars();
                if (K.config.legend.tooltipHoverFormatter) {
                  var Pe = K.config.legend.tooltipHoverFormatter,
                    We = Array.from(this.legendLabels);
                  We.forEach(function (Sr) {
                    var Br = Sr.getAttribute("data:default-text");
                    Sr.innerHTML = decodeURIComponent(Br);
                  });
                  for (var ze = 0; ze < We.length; ze++) {
                    var ut = We[ze],
                      St = parseInt(ut.getAttribute("i"), 10),
                      zt = decodeURIComponent(
                        ut.getAttribute("data:default-text")
                      ),
                      Ot = Pe(zt, {
                        seriesIndex: X ? St : l,
                        dataPointIndex: c,
                        w: K,
                      });
                    if (X)
                      ut.innerHTML =
                        K.globals.collapsedSeriesIndices.indexOf(St) < 0
                          ? Ot
                          : zt;
                    else if (((ut.innerHTML = St === l ? Ot : zt), l === St))
                      break;
                  }
                }
                var dn = r(
                  r(
                    { ttItems: h, i: l, j: c },
                    ((d = K.globals.seriesRange) === null ||
                    d === void 0 ||
                    (f = d[l]) === null ||
                    f === void 0 ||
                    (p = f[c]) === null ||
                    p === void 0 ||
                    (v = p.y[0]) === null ||
                    v === void 0
                      ? void 0
                      : v.y1) !== void 0 && {
                      y1:
                        (b = K.globals.seriesRange) === null ||
                        b === void 0 ||
                        (_ = b[l]) === null ||
                        _ === void 0 ||
                        (S = _[c]) === null ||
                        S === void 0 ||
                        (T = S.y[0]) === null ||
                        T === void 0
                          ? void 0
                          : T.y1,
                    }
                  ),
                  ((O = K.globals.seriesRange) === null ||
                  O === void 0 ||
                  (D = O[l]) === null ||
                  D === void 0 ||
                  (V = D[c]) === null ||
                  V === void 0 ||
                  (G = V.y[0]) === null ||
                  G === void 0
                    ? void 0
                    : G.y2) !== void 0 && {
                    y2:
                      (Q = K.globals.seriesRange) === null ||
                      Q === void 0 ||
                      (m = Q[l]) === null ||
                      m === void 0 ||
                      (k = m[c]) === null ||
                      k === void 0 ||
                      (N = k.y[0]) === null ||
                      N === void 0
                        ? void 0
                        : N.y2,
                  }
                );
                if (X) {
                  if (
                    (ee.tooltipLabels.drawSeriesTexts(
                      r(
                        r({}, dn),
                        {},
                        { shared: !this.showOnIntersect && this.tConfig.shared }
                      )
                    ),
                    fe)
                  )
                    K.globals.markers.largestSize > 0
                      ? ee.marker.enlargePoints(c)
                      : ee.tooltipPosition.moveDynamicPointsOnHover(c);
                  else if (
                    this.tooltipUtil.hasBars() &&
                    ((this.barSeriesHeight =
                      this.tooltipUtil.getBarsHeight(ge)),
                    this.barSeriesHeight > 0)
                  ) {
                    var Ln = new C(this.ctx),
                      wn = K.globals.dom.Paper.select(
                        ".apexcharts-bar-area[j='".concat(c, "']")
                      );
                    this.deactivateHoverFilter(),
                      this.tooltipPosition.moveStickyTooltipOverBars(c, l);
                    for (var On = 0; On < wn.length; On++)
                      Ln.pathMouseEnter(wn[On]);
                  }
                } else
                  ee.tooltipLabels.drawSeriesTexts(r({ shared: !1 }, dn)),
                    this.tooltipUtil.hasBars() &&
                      ee.tooltipPosition.moveStickyTooltipOverBars(c, l),
                    fe && ee.tooltipPosition.moveMarkers(l, c);
              },
            },
          ]),
          U
        );
      })(),
      ji = (function () {
        function U(i) {
          o(this, U),
            (this.w = i.w),
            (this.barCtx = i),
            (this.totalFormatter =
              this.w.config.plotOptions.bar.dataLabels.total.formatter),
            this.totalFormatter ||
              (this.totalFormatter = this.w.config.dataLabels.formatter);
        }
        return (
          g(U, [
            {
              key: "handleBarDataLabels",
              value: function (i) {
                var s = i.x,
                  l = i.y,
                  c = i.y1,
                  h = i.y2,
                  d = i.i,
                  f = i.j,
                  p = i.realIndex,
                  v = i.groupIndex,
                  b = i.series,
                  _ = i.barHeight,
                  S = i.barWidth,
                  T = i.barXPosition,
                  O = i.barYPosition,
                  D = i.visibleSeries,
                  V = i.renderedPath,
                  G = this.w,
                  Q = new C(this.barCtx.ctx),
                  m = Array.isArray(this.barCtx.strokeWidth)
                    ? this.barCtx.strokeWidth[p]
                    : this.barCtx.strokeWidth,
                  k = s + parseFloat(S * D),
                  N = l + parseFloat(_ * D);
                G.globals.isXNumeric &&
                  !G.globals.isBarHorizontal &&
                  ((k = s + parseFloat(S * (D + 1))),
                  (N = l + parseFloat(_ * (D + 1)) - m));
                var X,
                  K = null,
                  ee = s,
                  fe = l,
                  ge = {},
                  Pe = G.config.dataLabels,
                  We = this.barCtx.barOptions.dataLabels,
                  ze = this.barCtx.barOptions.dataLabels.total;
                O !== void 0 && this.barCtx.isRangeBar && ((N = O), (fe = O)),
                  T !== void 0 &&
                    this.barCtx.isVerticalGroupedRangeBar &&
                    ((k = T), (ee = T));
                var ut = Pe.offsetX,
                  St = Pe.offsetY,
                  zt = { width: 0, height: 0 };
                if (G.config.dataLabels.enabled) {
                  var Ot = this.barCtx.series[d][f];
                  zt = Q.getTextRects(
                    G.globals.yLabelFormatters[0](Ot),
                    parseFloat(Pe.style.fontSize)
                  );
                }
                var dn = {
                  x: s,
                  y: l,
                  i: d,
                  j: f,
                  realIndex: p,
                  groupIndex: v || -1,
                  renderedPath: V,
                  bcx: k,
                  bcy: N,
                  barHeight: _,
                  barWidth: S,
                  textRects: zt,
                  strokeWidth: m,
                  dataLabelsX: ee,
                  dataLabelsY: fe,
                  dataLabelsConfig: Pe,
                  barDataLabelsConfig: We,
                  barTotalDataLabelsConfig: ze,
                  offX: ut,
                  offY: St,
                };
                return (
                  (ge = this.barCtx.isHorizontal
                    ? this.calculateBarsDataLabelsPosition(dn)
                    : this.calculateColumnsDataLabelsPosition(dn)),
                  V.attr({
                    cy: ge.bcy,
                    cx: ge.bcx,
                    j: f,
                    val: b[d][f],
                    barHeight: _,
                    barWidth: S,
                  }),
                  (X = this.drawCalculatedDataLabels({
                    x: ge.dataLabelsX,
                    y: ge.dataLabelsY,
                    val: this.barCtx.isRangeBar ? [c, h] : b[d][f],
                    i: p,
                    j: f,
                    barWidth: S,
                    barHeight: _,
                    textRects: zt,
                    dataLabelsConfig: Pe,
                  })),
                  G.config.chart.stacked &&
                    ze.enabled &&
                    (K = this.drawTotalDataLabels({
                      x: ge.totalDataLabelsX,
                      y: ge.totalDataLabelsY,
                      barWidth: S,
                      barHeight: _,
                      realIndex: p,
                      textAnchor: ge.totalDataLabelsAnchor,
                      val: this.getStackedTotalDataLabel({
                        realIndex: p,
                        j: f,
                      }),
                      dataLabelsConfig: Pe,
                      barTotalDataLabelsConfig: ze,
                    })),
                  { dataLabels: X, totalDataLabels: K }
                );
              },
            },
            {
              key: "getStackedTotalDataLabel",
              value: function (i) {
                var s = i.realIndex,
                  l = i.j,
                  c = this.w,
                  h = this.barCtx.stackedSeriesTotals[l];
                return (
                  this.totalFormatter &&
                    (h = this.totalFormatter(
                      h,
                      r(
                        r({}, c),
                        {},
                        { seriesIndex: s, dataPointIndex: l, w: c }
                      )
                    )),
                  h
                );
              },
            },
            {
              key: "calculateColumnsDataLabelsPosition",
              value: function (i) {
                var s,
                  l,
                  c = this.w,
                  h = i.i,
                  d = i.j,
                  f = i.realIndex,
                  p = i.groupIndex,
                  v = i.y,
                  b = i.bcx,
                  _ = i.barWidth,
                  S = i.barHeight,
                  T = i.textRects,
                  O = i.dataLabelsX,
                  D = i.dataLabelsY,
                  V = i.dataLabelsConfig,
                  G = i.barDataLabelsConfig,
                  Q = i.barTotalDataLabelsConfig,
                  m = i.strokeWidth,
                  k = i.offX,
                  N = i.offY;
                S = Math.abs(S);
                var X =
                    c.config.plotOptions.bar.dataLabels.orientation ===
                    "vertical",
                  K = this.barCtx.barHelpers.getZeroValueEncounters({
                    i: h,
                    j: d,
                  }).zeroEncounters;
                b = b - m / 2 + (p !== -1 ? p * _ : 0);
                var ee = c.globals.gridWidth / c.globals.dataPoints;
                this.barCtx.isVerticalGroupedRangeBar
                  ? (O += _ / 2)
                  : ((O = c.globals.isXNumeric
                      ? b - _ / 2 + k
                      : b - ee + _ / 2 + k),
                    K > 0 &&
                      c.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                      (O -= _ * K)),
                  X && (O = O + T.height / 2 - m / 2 - 2);
                var fe = this.barCtx.series[h][d] < 0,
                  ge = v;
                switch (
                  (this.barCtx.isReversed &&
                    ((ge = v - S + (fe ? 2 * S : 0)), (v -= S)),
                  G.position)
                ) {
                  case "center":
                    D = X
                      ? fe
                        ? ge - S / 2 + N
                        : ge + S / 2 - N
                      : fe
                      ? ge - S / 2 + T.height / 2 + N
                      : ge + S / 2 + T.height / 2 - N;
                    break;
                  case "bottom":
                    D = X
                      ? fe
                        ? ge - S + N
                        : ge + S - N
                      : fe
                      ? ge - S + T.height + m + N
                      : ge + S - T.height / 2 + m - N;
                    break;
                  case "top":
                    D = X
                      ? fe
                        ? ge + N
                        : ge - N
                      : fe
                      ? ge - T.height / 2 - N
                      : ge + T.height + N;
                }
                if (this.barCtx.lastActiveBarSerieIndex === f && Q.enabled) {
                  var Pe = new C(this.barCtx.ctx).getTextRects(
                    this.getStackedTotalDataLabel({ realIndex: f, j: d }),
                    V.fontSize
                  );
                  (s = fe
                    ? ge - Pe.height / 2 - N - Q.offsetY + 18
                    : ge + Pe.height + N + Q.offsetY - 18),
                    (l = O + Q.offsetX);
                }
                return (
                  c.config.chart.stacked ||
                    (D < 0
                      ? (D = 0 + m)
                      : D + T.height / 3 > c.globals.gridHeight &&
                        (D = c.globals.gridHeight - m)),
                  {
                    bcx: b,
                    bcy: v,
                    dataLabelsX: O,
                    dataLabelsY: D,
                    totalDataLabelsX: l,
                    totalDataLabelsY: s,
                    totalDataLabelsAnchor: "middle",
                  }
                );
              },
            },
            {
              key: "calculateBarsDataLabelsPosition",
              value: function (i) {
                var s = this.w,
                  l = i.x,
                  c = i.i,
                  h = i.j,
                  d = i.realIndex,
                  f = i.groupIndex,
                  p = i.bcy,
                  v = i.barHeight,
                  b = i.barWidth,
                  _ = i.textRects,
                  S = i.dataLabelsX,
                  T = i.strokeWidth,
                  O = i.dataLabelsConfig,
                  D = i.barDataLabelsConfig,
                  V = i.barTotalDataLabelsConfig,
                  G = i.offX,
                  Q = i.offY,
                  m = s.globals.gridHeight / s.globals.dataPoints;
                b = Math.abs(b);
                var k,
                  N,
                  X =
                    (p += f !== -1 ? f * v : 0) -
                    (this.barCtx.isRangeBar ? 0 : m) +
                    v / 2 +
                    _.height / 2 +
                    Q -
                    3,
                  K = "start",
                  ee = this.barCtx.series[c][h] < 0,
                  fe = l;
                switch (
                  (this.barCtx.isReversed &&
                    ((fe = l + b - (ee ? 2 * b : 0)),
                    (l = s.globals.gridWidth - b)),
                  D.position)
                ) {
                  case "center":
                    S = ee
                      ? fe + b / 2 - G
                      : Math.max(_.width / 2, fe - b / 2) + G;
                    break;
                  case "bottom":
                    S = ee
                      ? fe + b - T - Math.round(_.width / 2) - G
                      : fe - b + T + Math.round(_.width / 2) + G;
                    break;
                  case "top":
                    S = ee
                      ? fe - T + Math.round(_.width / 2) - G
                      : fe - T - Math.round(_.width / 2) + G;
                }
                if (this.barCtx.lastActiveBarSerieIndex === d && V.enabled) {
                  var ge = new C(this.barCtx.ctx).getTextRects(
                    this.getStackedTotalDataLabel({ realIndex: d, j: h }),
                    O.fontSize
                  );
                  ee
                    ? ((k =
                        fe - T + Math.round(ge.width / 2) - G - V.offsetX - 15),
                      (K = "end"))
                    : (k =
                        fe - T - Math.round(ge.width / 2) + G + V.offsetX + 15),
                    (N = X + V.offsetY);
                }
                return (
                  s.config.chart.stacked ||
                    (S < 0
                      ? (S = S + _.width + T)
                      : S + _.width / 2 > s.globals.gridWidth &&
                        (S = s.globals.gridWidth - _.width - T)),
                  {
                    bcx: l,
                    bcy: p,
                    dataLabelsX: S,
                    dataLabelsY: X,
                    totalDataLabelsX: k,
                    totalDataLabelsY: N,
                    totalDataLabelsAnchor: K,
                  }
                );
              },
            },
            {
              key: "drawCalculatedDataLabels",
              value: function (i) {
                var s = i.x,
                  l = i.y,
                  c = i.val,
                  h = i.i,
                  d = i.j,
                  f = i.textRects,
                  p = i.barHeight,
                  v = i.barWidth,
                  b = i.dataLabelsConfig,
                  _ = this.w,
                  S = "rotate(0)";
                _.config.plotOptions.bar.dataLabels.orientation ===
                  "vertical" &&
                  (S = "rotate(-90, ".concat(s, ", ").concat(l, ")"));
                var T = new ct(this.barCtx.ctx),
                  O = new C(this.barCtx.ctx),
                  D = b.formatter,
                  V = null,
                  G = _.globals.collapsedSeriesIndices.indexOf(h) > -1;
                if (b.enabled && !G) {
                  V = O.group({
                    class: "apexcharts-data-labels",
                    transform: S,
                  });
                  var Q = "";
                  c !== void 0 &&
                    (Q = D(
                      c,
                      r(
                        r({}, _),
                        {},
                        { seriesIndex: h, dataPointIndex: d, w: _ }
                      )
                    )),
                    !c &&
                      _.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                      (Q = "");
                  var m = _.globals.series[h][d] < 0,
                    k = _.config.plotOptions.bar.dataLabels.position;
                  _.config.plotOptions.bar.dataLabels.orientation ===
                    "vertical" &&
                    (k === "top" && (b.textAnchor = m ? "end" : "start"),
                    k === "center" && (b.textAnchor = "middle"),
                    k === "bottom" && (b.textAnchor = m ? "end" : "start")),
                    this.barCtx.isRangeBar &&
                      this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                      v <
                        O.getTextRects(Q, parseFloat(b.style.fontSize)).width &&
                      (Q = ""),
                    _.config.chart.stacked &&
                      this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                      (this.barCtx.isHorizontal
                        ? f.width / 1.6 > Math.abs(v) && (Q = "")
                        : f.height / 1.6 > Math.abs(p) && (Q = ""));
                  var N = r({}, b);
                  this.barCtx.isHorizontal &&
                    c < 0 &&
                    (b.textAnchor === "start"
                      ? (N.textAnchor = "end")
                      : b.textAnchor === "end" && (N.textAnchor = "start")),
                    T.plotDataLabelsText({
                      x: s,
                      y: l,
                      text: Q,
                      i: h,
                      j: d,
                      parent: V,
                      dataLabelsConfig: N,
                      alwaysDrawDataLabel: !0,
                      offsetCorrection: !0,
                    });
                }
                return V;
              },
            },
            {
              key: "drawTotalDataLabels",
              value: function (i) {
                var s,
                  l = i.x,
                  c = i.y,
                  h = i.val,
                  d = i.barWidth,
                  f = i.barHeight,
                  p = i.realIndex,
                  v = i.textAnchor,
                  b = i.barTotalDataLabelsConfig,
                  _ = this.w,
                  S = new C(this.barCtx.ctx);
                return (
                  b.enabled &&
                    l !== void 0 &&
                    c !== void 0 &&
                    this.barCtx.lastActiveBarSerieIndex === p &&
                    (s = S.drawText({
                      x:
                        l -
                        (!_.globals.isBarHorizontal &&
                        _.globals.seriesGroups.length
                          ? d / _.globals.seriesGroups.length
                          : 0),
                      y:
                        c -
                        (_.globals.isBarHorizontal &&
                        _.globals.seriesGroups.length
                          ? f / _.globals.seriesGroups.length
                          : 0),
                      foreColor: b.style.color,
                      text: h,
                      textAnchor: v,
                      fontFamily: b.style.fontFamily,
                      fontSize: b.style.fontSize,
                      fontWeight: b.style.fontWeight,
                    })),
                  s
                );
              },
            },
          ]),
          U
        );
      })(),
      Os = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.barCtx = i);
        }
        return (
          g(U, [
            {
              key: "initVariables",
              value: function (i) {
                var s = this.w;
                (this.barCtx.series = i),
                  (this.barCtx.totalItems = 0),
                  (this.barCtx.seriesLen = 0),
                  (this.barCtx.visibleI = -1),
                  (this.barCtx.visibleItems = 1);
                for (var l = 0; l < i.length; l++)
                  if (
                    (i[l].length > 0 &&
                      ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                      (this.barCtx.totalItems += i[l].length)),
                    s.globals.isXNumeric)
                  )
                    for (var c = 0; c < i[l].length; c++)
                      s.globals.seriesX[l][c] > s.globals.minX &&
                        s.globals.seriesX[l][c] < s.globals.maxX &&
                        this.barCtx.visibleItems++;
                  else this.barCtx.visibleItems = s.globals.dataPoints;
                this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                  (this.barCtx.zeroSerieses = []),
                  s.globals.comboCharts || this.checkZeroSeries({ series: i });
              },
            },
            {
              key: "initialPositions",
              value: function () {
                var i,
                  s,
                  l,
                  c,
                  h,
                  d,
                  f,
                  p,
                  v = this.w,
                  b = v.globals.dataPoints;
                this.barCtx.isRangeBar && (b = v.globals.labels.length);
                var _ = this.barCtx.seriesLen;
                if (
                  (v.config.plotOptions.bar.rangeBarGroupRows && (_ = 1),
                  this.barCtx.isHorizontal)
                )
                  (h = (l = v.globals.gridHeight / b) / _),
                    v.globals.isXNumeric &&
                      (h =
                        (l = v.globals.gridHeight / this.barCtx.totalItems) /
                        this.barCtx.seriesLen),
                    (h =
                      (h * parseInt(this.barCtx.barOptions.barHeight, 10)) /
                      100),
                    String(this.barCtx.barOptions.barHeight).indexOf("%") ===
                      -1 &&
                      (h = parseInt(this.barCtx.barOptions.barHeight, 10)),
                    (p =
                      this.barCtx.baseLineInvertedY +
                      v.globals.padHorizontal +
                      (this.barCtx.isReversed ? v.globals.gridWidth : 0) -
                      (this.barCtx.isReversed
                        ? 2 * this.barCtx.baseLineInvertedY
                        : 0)),
                    this.barCtx.isFunnel && (p = v.globals.gridWidth / 2),
                    (s = (l - h * this.barCtx.seriesLen) / 2);
                else {
                  if (
                    ((c = v.globals.gridWidth / this.barCtx.visibleItems),
                    v.config.xaxis.convertedCatToNumeric &&
                      (c = v.globals.gridWidth / v.globals.dataPoints),
                    (d =
                      ((c / _) *
                        parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                      100),
                    v.globals.isXNumeric)
                  ) {
                    var S = this.barCtx.xRatio;
                    v.config.xaxis.convertedCatToNumeric &&
                      (S = this.barCtx.initialXRatio),
                      v.globals.minXDiff &&
                        v.globals.minXDiff !== 0.5 &&
                        v.globals.minXDiff / S > 0 &&
                        (c = v.globals.minXDiff / S),
                      (d =
                        ((c / _) *
                          parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                        100) < 1 && (d = 1);
                  }
                  String(this.barCtx.barOptions.columnWidth).indexOf("%") ===
                    -1 &&
                    (d = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                    (f =
                      v.globals.gridHeight -
                      this.barCtx.baseLineY[this.barCtx.yaxisIndex] -
                      (this.barCtx.isReversed ? v.globals.gridHeight : 0) +
                      (this.barCtx.isReversed
                        ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex]
                        : 0)),
                    (i =
                      v.globals.padHorizontal +
                      (c - d * this.barCtx.seriesLen) / 2);
                }
                return {
                  x: i,
                  y: s,
                  yDivision: l,
                  xDivision: c,
                  barHeight: h,
                  barWidth: d,
                  zeroH: f,
                  zeroW: p,
                };
              },
            },
            {
              key: "initializeStackedPrevVars",
              value: function (i) {
                var s = i.w;
                s.globals.hasSeriesGroups
                  ? s.globals.seriesGroups.forEach(function (l) {
                      i[l] || (i[l] = {}),
                        (i[l].prevY = []),
                        (i[l].prevX = []),
                        (i[l].prevYF = []),
                        (i[l].prevXF = []),
                        (i[l].prevYVal = []),
                        (i[l].prevXVal = []);
                    })
                  : ((i.prevY = []),
                    (i.prevX = []),
                    (i.prevYF = []),
                    (i.prevXF = []),
                    (i.prevYVal = []),
                    (i.prevXVal = []));
              },
            },
            {
              key: "initializeStackedXYVars",
              value: function (i) {
                var s = i.w;
                s.globals.hasSeriesGroups
                  ? s.globals.seriesGroups.forEach(function (l) {
                      i[l] || (i[l] = {}),
                        (i[l].xArrj = []),
                        (i[l].xArrjF = []),
                        (i[l].xArrjVal = []),
                        (i[l].yArrj = []),
                        (i[l].yArrjF = []),
                        (i[l].yArrjVal = []);
                    })
                  : ((i.xArrj = []),
                    (i.xArrjF = []),
                    (i.xArrjVal = []),
                    (i.yArrj = []),
                    (i.yArrjF = []),
                    (i.yArrjVal = []));
              },
            },
            {
              key: "getPathFillColor",
              value: function (i, s, l, c) {
                var h,
                  d,
                  f,
                  p,
                  v = this.w,
                  b = new Re(this.barCtx.ctx),
                  _ = null,
                  S = this.barCtx.barOptions.distributed ? l : s;
                return (
                  this.barCtx.barOptions.colors.ranges.length > 0 &&
                    this.barCtx.barOptions.colors.ranges.map(function (T) {
                      i[s][l] >= T.from && i[s][l] <= T.to && (_ = T.color);
                    }),
                  v.config.series[s].data[l] &&
                    v.config.series[s].data[l].fillColor &&
                    (_ = v.config.series[s].data[l].fillColor),
                  b.fillPath({
                    seriesNumber: this.barCtx.barOptions.distributed ? S : c,
                    dataPointIndex: l,
                    color: _,
                    value: i[s][l],
                    fillConfig:
                      (h = v.config.series[s].data[l]) === null || h === void 0
                        ? void 0
                        : h.fill,
                    fillType:
                      (d = v.config.series[s].data[l]) !== null &&
                      d !== void 0 &&
                      (f = d.fill) !== null &&
                      f !== void 0 &&
                      f.type
                        ? (p = v.config.series[s].data[l]) === null ||
                          p === void 0
                          ? void 0
                          : p.fill.type
                        : Array.isArray(v.config.fill.type)
                        ? v.config.fill.type[s]
                        : v.config.fill.type,
                  })
                );
              },
            },
            {
              key: "getStrokeWidth",
              value: function (i, s, l) {
                var c = 0,
                  h = this.w;
                return (
                  this.barCtx.series[i][s]
                    ? (this.barCtx.isNullValue = !1)
                    : (this.barCtx.isNullValue = !0),
                  h.config.stroke.show &&
                    (this.barCtx.isNullValue ||
                      (c = Array.isArray(this.barCtx.strokeWidth)
                        ? this.barCtx.strokeWidth[l]
                        : this.barCtx.strokeWidth)),
                  c
                );
              },
            },
            {
              key: "shouldApplyRadius",
              value: function (i) {
                var s = this.w,
                  l = !1;
                return (
                  s.config.plotOptions.bar.borderRadius > 0 &&
                    (s.config.chart.stacked &&
                    s.config.plotOptions.bar.borderRadiusWhenStacked === "last"
                      ? this.barCtx.lastActiveBarSerieIndex === i && (l = !0)
                      : (l = !0)),
                  l
                );
              },
            },
            {
              key: "barBackground",
              value: function (i) {
                var s = i.j,
                  l = i.i,
                  c = i.x1,
                  h = i.x2,
                  d = i.y1,
                  f = i.y2,
                  p = i.elSeries,
                  v = this.w,
                  b = new C(this.barCtx.ctx),
                  _ = new de(this.barCtx.ctx).getActiveConfigSeriesIndex();
                if (
                  this.barCtx.barOptions.colors.backgroundBarColors.length >
                    0 &&
                  _ === l
                ) {
                  s >=
                    this.barCtx.barOptions.colors.backgroundBarColors.length &&
                    (s %=
                      this.barCtx.barOptions.colors.backgroundBarColors.length);
                  var S = this.barCtx.barOptions.colors.backgroundBarColors[s],
                    T = b.drawRect(
                      c !== void 0 ? c : 0,
                      d !== void 0 ? d : 0,
                      h !== void 0 ? h : v.globals.gridWidth,
                      f !== void 0 ? f : v.globals.gridHeight,
                      this.barCtx.barOptions.colors.backgroundBarRadius,
                      S,
                      this.barCtx.barOptions.colors.backgroundBarOpacity
                    );
                  p.add(T), T.node.classList.add("apexcharts-backgroundBar");
                }
              },
            },
            {
              key: "getColumnPaths",
              value: function (i) {
                var s,
                  l = i.barWidth,
                  c = i.barXPosition,
                  h = i.y1,
                  d = i.y2,
                  f = i.strokeWidth,
                  p = i.seriesGroup,
                  v = i.realIndex,
                  b = i.i,
                  _ = i.j,
                  S = i.w,
                  T = new C(this.barCtx.ctx);
                (f = Array.isArray(f) ? f[v] : f) || (f = 0);
                var O = l,
                  D = c;
                (s = S.config.series[v].data[_]) !== null &&
                  s !== void 0 &&
                  s.columnWidthOffset &&
                  ((D = c - S.config.series[v].data[_].columnWidthOffset / 2),
                  (O = l + S.config.series[v].data[_].columnWidthOffset));
                var V = D,
                  G = D + O;
                (h += 0.001), (d += 0.001);
                var Q = T.move(V, h),
                  m = T.move(V, h),
                  k = T.line(G - f, h);
                if (
                  (S.globals.previousPaths.length > 0 &&
                    (m = this.barCtx.getPreviousPath(v, _, !1)),
                  (Q =
                    Q +
                    T.line(V, d) +
                    T.line(G - f, d) +
                    T.line(G - f, h) +
                    (S.config.plotOptions.bar.borderRadiusApplication ===
                    "around"
                      ? " Z"
                      : " z")),
                  (m =
                    m +
                    T.line(V, h) +
                    k +
                    k +
                    k +
                    k +
                    k +
                    T.line(V, h) +
                    (S.config.plotOptions.bar.borderRadiusApplication ===
                    "around"
                      ? " Z"
                      : " z")),
                  this.shouldApplyRadius(v) &&
                    (Q = T.roundPathCorners(
                      Q,
                      S.config.plotOptions.bar.borderRadius
                    )),
                  S.config.chart.stacked)
                ) {
                  var N = this.barCtx;
                  S.globals.hasSeriesGroups && p && (N = this.barCtx[p]),
                    N.yArrj.push(d),
                    N.yArrjF.push(Math.abs(h - d)),
                    N.yArrjVal.push(this.barCtx.series[b][_]);
                }
                return { pathTo: Q, pathFrom: m };
              },
            },
            {
              key: "getBarpaths",
              value: function (i) {
                var s,
                  l = i.barYPosition,
                  c = i.barHeight,
                  h = i.x1,
                  d = i.x2,
                  f = i.strokeWidth,
                  p = i.seriesGroup,
                  v = i.realIndex,
                  b = i.i,
                  _ = i.j,
                  S = i.w,
                  T = new C(this.barCtx.ctx);
                (f = Array.isArray(f) ? f[v] : f) || (f = 0);
                var O = l,
                  D = c;
                (s = S.config.series[v].data[_]) !== null &&
                  s !== void 0 &&
                  s.barHeightOffset &&
                  ((O = l - S.config.series[v].data[_].barHeightOffset / 2),
                  (D = c + S.config.series[v].data[_].barHeightOffset));
                var V = O,
                  G = O + D;
                (h += 0.001), (d += 0.001);
                var Q = T.move(h, V),
                  m = T.move(h, V);
                S.globals.previousPaths.length > 0 &&
                  (m = this.barCtx.getPreviousPath(v, _, !1));
                var k = T.line(h, G - f);
                if (
                  ((Q =
                    Q +
                    T.line(d, V) +
                    T.line(d, G - f) +
                    k +
                    (S.config.plotOptions.bar.borderRadiusApplication ===
                    "around"
                      ? " Z"
                      : " z")),
                  (m =
                    m +
                    T.line(h, V) +
                    k +
                    k +
                    k +
                    k +
                    k +
                    T.line(h, V) +
                    (S.config.plotOptions.bar.borderRadiusApplication ===
                    "around"
                      ? " Z"
                      : " z")),
                  this.shouldApplyRadius(v) &&
                    (Q = T.roundPathCorners(
                      Q,
                      S.config.plotOptions.bar.borderRadius
                    )),
                  S.config.chart.stacked)
                ) {
                  var N = this.barCtx;
                  S.globals.hasSeriesGroups && p && (N = this.barCtx[p]),
                    N.xArrj.push(d),
                    N.xArrjF.push(Math.abs(h - d)),
                    N.xArrjVal.push(this.barCtx.series[b][_]);
                }
                return { pathTo: Q, pathFrom: m };
              },
            },
            {
              key: "checkZeroSeries",
              value: function (i) {
                for (var s = i.series, l = this.w, c = 0; c < s.length; c++) {
                  for (
                    var h = 0, d = 0;
                    d < s[l.globals.maxValsInArrayIndex].length;
                    d++
                  )
                    h += s[c][d];
                  h === 0 && this.barCtx.zeroSerieses.push(c);
                }
              },
            },
            {
              key: "getXForValue",
              value: function (i, s) {
                var l =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2]
                    ? s
                    : null;
                return (
                  i != null &&
                    (l =
                      s +
                      i / this.barCtx.invertedYRatio -
                      2 *
                        (this.barCtx.isReversed
                          ? i / this.barCtx.invertedYRatio
                          : 0)),
                  l
                );
              },
            },
            {
              key: "getYForValue",
              value: function (i, s) {
                var l =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2]
                    ? s
                    : null;
                return (
                  i != null &&
                    (l =
                      s -
                      i / this.barCtx.yRatio[this.barCtx.yaxisIndex] +
                      2 *
                        (this.barCtx.isReversed
                          ? i / this.barCtx.yRatio[this.barCtx.yaxisIndex]
                          : 0)),
                  l
                );
              },
            },
            {
              key: "getGoalValues",
              value: function (i, s, l, c, h) {
                var d = this,
                  f = this.w,
                  p = [],
                  v = function (S, T) {
                    var O;
                    p.push(
                      (x(
                        (O = {}),
                        i,
                        i === "x"
                          ? d.getXForValue(S, s, !1)
                          : d.getYForValue(S, l, !1)
                      ),
                      x(O, "attrs", T),
                      O)
                    );
                  };
                if (
                  (f.globals.seriesGoals[c] &&
                    f.globals.seriesGoals[c][h] &&
                    Array.isArray(f.globals.seriesGoals[c][h]) &&
                    f.globals.seriesGoals[c][h].forEach(function (S) {
                      v(S.value, S);
                    }),
                  this.barCtx.barOptions.isDumbbell &&
                    f.globals.seriesRange.length)
                ) {
                  var b = this.barCtx.barOptions.dumbbellColors
                      ? this.barCtx.barOptions.dumbbellColors
                      : f.globals.colors,
                    _ = {
                      strokeHeight: i === "x" ? 0 : f.globals.markers.size[c],
                      strokeWidth: i === "x" ? f.globals.markers.size[c] : 0,
                      strokeDashArray: 0,
                      strokeLineCap: "round",
                      strokeColor: Array.isArray(b[c]) ? b[c][0] : b[c],
                    };
                  v(f.globals.seriesRangeStart[c][h], _),
                    v(
                      f.globals.seriesRangeEnd[c][h],
                      r(
                        r({}, _),
                        {},
                        { strokeColor: Array.isArray(b[c]) ? b[c][1] : b[c] }
                      )
                    );
                }
                return p;
              },
            },
            {
              key: "drawGoalLine",
              value: function (i) {
                var s = i.barXPosition,
                  l = i.barYPosition,
                  c = i.goalX,
                  h = i.goalY,
                  d = i.barWidth,
                  f = i.barHeight,
                  p = new C(this.barCtx.ctx),
                  v = p.group({ className: "apexcharts-bar-goals-groups" });
                v.node.classList.add("apexcharts-element-hidden"),
                  this.barCtx.w.globals.delayedElements.push({ el: v.node }),
                  v.attr(
                    "clip-path",
                    "url(#gridRectMarkerMask".concat(
                      this.barCtx.w.globals.cuid,
                      ")"
                    )
                  );
                var b = null;
                return (
                  this.barCtx.isHorizontal
                    ? Array.isArray(c) &&
                      c.forEach(function (_) {
                        var S =
                            _.attrs.strokeHeight !== void 0
                              ? _.attrs.strokeHeight
                              : f / 2,
                          T = l + S + f / 2;
                        (b = p.drawLine(
                          _.x,
                          T - 2 * S,
                          _.x,
                          T,
                          _.attrs.strokeColor ? _.attrs.strokeColor : void 0,
                          _.attrs.strokeDashArray,
                          _.attrs.strokeWidth ? _.attrs.strokeWidth : 2,
                          _.attrs.strokeLineCap
                        )),
                          v.add(b);
                      })
                    : Array.isArray(h) &&
                      h.forEach(function (_) {
                        var S =
                            _.attrs.strokeWidth !== void 0
                              ? _.attrs.strokeWidth
                              : d / 2,
                          T = s + S + d / 2;
                        (b = p.drawLine(
                          T - 2 * S,
                          _.y,
                          T,
                          _.y,
                          _.attrs.strokeColor ? _.attrs.strokeColor : void 0,
                          _.attrs.strokeDashArray,
                          _.attrs.strokeHeight ? _.attrs.strokeHeight : 2,
                          _.attrs.strokeLineCap
                        )),
                          v.add(b);
                      }),
                  v
                );
              },
            },
            {
              key: "drawBarShadow",
              value: function (i) {
                var s = i.prevPaths,
                  l = i.currPaths,
                  c = i.color,
                  h = this.w,
                  d = s.x,
                  f = s.x1,
                  p = s.barYPosition,
                  v = l.x,
                  b = l.x1,
                  _ = l.barYPosition,
                  S = p + l.barHeight,
                  T = new C(this.barCtx.ctx),
                  O = new F(),
                  D =
                    T.move(f, S) +
                    T.line(d, S) +
                    T.line(v, _) +
                    T.line(b, _) +
                    T.line(f, S) +
                    (h.config.plotOptions.bar.borderRadiusApplication ===
                    "around"
                      ? " Z"
                      : " z");
                return T.drawPath({
                  d: D,
                  fill: O.shadeColor(0.5, F.rgb2hex(c)),
                  stroke: "none",
                  strokeWidth: 0,
                  fillOpacity: 1,
                  classes: "apexcharts-bar-shadows",
                });
              },
            },
            {
              key: "getZeroValueEncounters",
              value: function (i) {
                var s = i.i,
                  l = i.j,
                  c = this.w,
                  h = 0,
                  d = 0;
                return (
                  c.globals.seriesPercent.forEach(function (f, p) {
                    f[l] && h++, p < s && f[l] === 0 && d++;
                  }),
                  { nonZeroColumns: h, zeroEncounters: d }
                );
              },
            },
          ]),
          U
        );
      })(),
      Ns = (function () {
        function U(i, s) {
          o(this, U), (this.ctx = i), (this.w = i.w);
          var l = this.w;
          (this.barOptions = l.config.plotOptions.bar),
            (this.isHorizontal = this.barOptions.horizontal),
            (this.strokeWidth = l.config.stroke.width),
            (this.isNullValue = !1),
            (this.isRangeBar =
              l.globals.seriesRange.length && this.isHorizontal),
            (this.isVerticalGroupedRangeBar =
              !l.globals.isBarHorizontal &&
              l.globals.seriesRange.length &&
              l.config.plotOptions.bar.rangeBarGroupRows),
            (this.isFunnel = this.barOptions.isFunnel),
            (this.xyRatios = s),
            this.xyRatios !== null &&
              ((this.xRatio = s.xRatio),
              (this.initialXRatio = s.initialXRatio),
              (this.yRatio = s.yRatio),
              (this.invertedXRatio = s.invertedXRatio),
              (this.invertedYRatio = s.invertedYRatio),
              (this.baseLineY = s.baseLineY),
              (this.baseLineInvertedY = s.baseLineInvertedY)),
            (this.yaxisIndex = 0),
            (this.seriesLen = 0),
            (this.pathArr = []);
          var c = new de(this.ctx);
          this.lastActiveBarSerieIndex = c.getActiveConfigSeriesIndex("desc", [
            "bar",
            "column",
          ]);
          var h = c.getBarSeriesIndices(),
            d = new ke(this.ctx);
          (this.stackedSeriesTotals = d.getStackedSeriesTotals(
            this.w.config.series
              .map(function (f, p) {
                return h.indexOf(p) === -1 ? p : -1;
              })
              .filter(function (f) {
                return f !== -1;
              })
          )),
            (this.barHelpers = new Os(this));
        }
        return (
          g(U, [
            {
              key: "draw",
              value: function (i, s) {
                var l = this.w,
                  c = new C(this.ctx),
                  h = new ke(this.ctx, l);
                (i = h.getLogSeries(i)),
                  (this.series = i),
                  (this.yRatio = h.getLogYRatios(this.yRatio)),
                  this.barHelpers.initVariables(i);
                var d = c.group({
                  class: "apexcharts-bar-series apexcharts-plot-series",
                });
                l.config.dataLabels.enabled &&
                  this.totalItems > this.barOptions.dataLabels.maxItems &&
                  console.warn(
                    "WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts"
                  );
                for (var f = 0, p = 0; f < i.length; f++, p++) {
                  var v,
                    b,
                    _,
                    S,
                    T = void 0,
                    O = void 0,
                    D = [],
                    V = [],
                    G = l.globals.comboCharts ? s[f] : f,
                    Q = c.group({
                      class: "apexcharts-series",
                      rel: f + 1,
                      seriesName: F.escapeString(l.globals.seriesNames[G]),
                      "data:realIndex": G,
                    });
                  this.ctx.series.addCollapsedClassToSeries(Q, G),
                    i[f].length > 0 && (this.visibleI = this.visibleI + 1);
                  var m = 0,
                    k = 0;
                  this.yRatio.length > 1 && (this.yaxisIndex = G),
                    (this.isReversed =
                      l.config.yaxis[this.yaxisIndex] &&
                      l.config.yaxis[this.yaxisIndex].reversed);
                  var N = this.barHelpers.initialPositions();
                  (O = N.y),
                    (m = N.barHeight),
                    (b = N.yDivision),
                    (S = N.zeroW),
                    (T = N.x),
                    (k = N.barWidth),
                    (v = N.xDivision),
                    (_ = N.zeroH),
                    this.horizontal || V.push(T + k / 2);
                  var X = c.group({
                    class: "apexcharts-datalabels",
                    "data:realIndex": G,
                  });
                  l.globals.delayedElements.push({ el: X.node }),
                    X.node.classList.add("apexcharts-element-hidden");
                  var K = c.group({ class: "apexcharts-bar-goals-markers" }),
                    ee = c.group({ class: "apexcharts-bar-shadows" });
                  l.globals.delayedElements.push({ el: ee.node }),
                    ee.node.classList.add("apexcharts-element-hidden");
                  for (var fe = 0; fe < l.globals.dataPoints; fe++) {
                    var ge = this.barHelpers.getStrokeWidth(f, fe, G),
                      Pe = null,
                      We = {
                        indexes: { i: f, j: fe, realIndex: G, bc: p },
                        x: T,
                        y: O,
                        strokeWidth: ge,
                        elSeries: Q,
                      };
                    this.isHorizontal
                      ? ((Pe = this.drawBarPaths(
                          r(
                            r({}, We),
                            {},
                            { barHeight: m, zeroW: S, yDivision: b }
                          )
                        )),
                        (k = this.series[f][fe] / this.invertedYRatio))
                      : ((Pe = this.drawColumnPaths(
                          r(
                            r({}, We),
                            {},
                            { xDivision: v, barWidth: k, zeroH: _ }
                          )
                        )),
                        (m =
                          this.series[f][fe] / this.yRatio[this.yaxisIndex]));
                    var ze = this.barHelpers.getPathFillColor(i, f, fe, G);
                    if (
                      this.isFunnel &&
                      this.barOptions.isFunnel3d &&
                      this.pathArr.length &&
                      fe > 0
                    ) {
                      var ut = this.barHelpers.drawBarShadow({
                        color:
                          typeof ze == "string" &&
                          (ze == null ? void 0 : ze.indexOf("url")) === -1
                            ? ze
                            : F.hexToRgba(l.globals.colors[f]),
                        prevPaths: this.pathArr[this.pathArr.length - 1],
                        currPaths: Pe,
                      });
                      ut && ee.add(ut);
                    }
                    this.pathArr.push(Pe);
                    var St = this.barHelpers.drawGoalLine({
                      barXPosition: Pe.barXPosition,
                      barYPosition: Pe.barYPosition,
                      goalX: Pe.goalX,
                      goalY: Pe.goalY,
                      barHeight: m,
                      barWidth: k,
                    });
                    St && K.add(St),
                      (O = Pe.y),
                      (T = Pe.x),
                      fe > 0 && V.push(T + k / 2),
                      D.push(O),
                      this.renderSeries({
                        realIndex: G,
                        pathFill: ze,
                        j: fe,
                        i: f,
                        pathFrom: Pe.pathFrom,
                        pathTo: Pe.pathTo,
                        strokeWidth: ge,
                        elSeries: Q,
                        x: T,
                        y: O,
                        series: i,
                        barHeight: Pe.barHeight ? Pe.barHeight : m,
                        barWidth: Pe.barWidth ? Pe.barWidth : k,
                        elDataLabelsWrap: X,
                        elGoalsMarkers: K,
                        elBarShadows: ee,
                        visibleSeries: this.visibleI,
                        type: "bar",
                      });
                  }
                  (l.globals.seriesXvalues[G] = V),
                    (l.globals.seriesYvalues[G] = D),
                    d.add(Q);
                }
                return d;
              },
            },
            {
              key: "renderSeries",
              value: function (i) {
                var s = i.realIndex,
                  l = i.pathFill,
                  c = i.lineFill,
                  h = i.j,
                  d = i.i,
                  f = i.groupIndex,
                  p = i.pathFrom,
                  v = i.pathTo,
                  b = i.strokeWidth,
                  _ = i.elSeries,
                  S = i.x,
                  T = i.y,
                  O = i.y1,
                  D = i.y2,
                  V = i.series,
                  G = i.barHeight,
                  Q = i.barWidth,
                  m = i.barXPosition,
                  k = i.barYPosition,
                  N = i.elDataLabelsWrap,
                  X = i.elGoalsMarkers,
                  K = i.elBarShadows,
                  ee = i.visibleSeries,
                  fe = i.type,
                  ge = this.w,
                  Pe = new C(this.ctx);
                c ||
                  (c = this.barOptions.distributed
                    ? ge.globals.stroke.colors[h]
                    : ge.globals.stroke.colors[s]),
                  ge.config.series[d].data[h] &&
                    ge.config.series[d].data[h].strokeColor &&
                    (c = ge.config.series[d].data[h].strokeColor),
                  this.isNullValue && (l = "none");
                var We =
                    ((h / ge.config.chart.animations.animateGradually.delay) *
                      (ge.config.chart.animations.speed /
                        ge.globals.dataPoints)) /
                    2.4,
                  ze = Pe.renderPaths({
                    i: d,
                    j: h,
                    realIndex: s,
                    pathFrom: p,
                    pathTo: v,
                    stroke: c,
                    strokeWidth: b,
                    strokeLineCap: ge.config.stroke.lineCap,
                    fill: l,
                    animationDelay: We,
                    initialSpeed: ge.config.chart.animations.speed,
                    dataChangeSpeed:
                      ge.config.chart.animations.dynamicAnimation.speed,
                    className: "apexcharts-".concat(fe, "-area"),
                  });
                ze.attr(
                  "clip-path",
                  "url(#gridRectMask".concat(ge.globals.cuid, ")")
                );
                var ut = ge.config.forecastDataPoints;
                ut.count > 0 &&
                  h >= ge.globals.dataPoints - ut.count &&
                  (ze.node.setAttribute("stroke-dasharray", ut.dashArray),
                  ze.node.setAttribute("stroke-width", ut.strokeWidth),
                  ze.node.setAttribute("fill-opacity", ut.fillOpacity)),
                  O !== void 0 &&
                    D !== void 0 &&
                    (ze.attr("data-range-y1", O), ze.attr("data-range-y2", D)),
                  new ye(this.ctx).setSelectionFilter(ze, s, h),
                  _.add(ze);
                var St = new ji(this).handleBarDataLabels({
                  x: S,
                  y: T,
                  y1: O,
                  y2: D,
                  i: d,
                  j: h,
                  series: V,
                  realIndex: s,
                  groupIndex: f,
                  barHeight: G,
                  barWidth: Q,
                  barXPosition: m,
                  barYPosition: k,
                  renderedPath: ze,
                  visibleSeries: ee,
                });
                return (
                  St.dataLabels !== null && N.add(St.dataLabels),
                  St.totalDataLabels && N.add(St.totalDataLabels),
                  _.add(N),
                  X && _.add(X),
                  K && _.add(K),
                  _
                );
              },
            },
            {
              key: "drawBarPaths",
              value: function (i) {
                var s,
                  l = i.indexes,
                  c = i.barHeight,
                  h = i.strokeWidth,
                  d = i.zeroW,
                  f = i.x,
                  p = i.y,
                  v = i.yDivision,
                  b = i.elSeries,
                  _ = this.w,
                  S = l.i,
                  T = l.j;
                if (_.globals.isXNumeric)
                  s =
                    (p =
                      (_.globals.seriesX[S][T] - _.globals.minX) /
                        this.invertedXRatio -
                      c) +
                    c * this.visibleI;
                else if (_.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                  var O = 0,
                    D = 0;
                  _.globals.seriesPercent.forEach(function (G, Q) {
                    G[T] && O++, Q < S && G[T] === 0 && D++;
                  }),
                    O > 0 && (c = (this.seriesLen * c) / O),
                    (s = p + c * this.visibleI),
                    (s -= c * D);
                } else s = p + c * this.visibleI;
                this.isFunnel &&
                  (d -=
                    (this.barHelpers.getXForValue(this.series[S][T], d) - d) /
                    2),
                  (f = this.barHelpers.getXForValue(this.series[S][T], d));
                var V = this.barHelpers.getBarpaths({
                  barYPosition: s,
                  barHeight: c,
                  x1: d,
                  x2: f,
                  strokeWidth: h,
                  series: this.series,
                  realIndex: l.realIndex,
                  i: S,
                  j: T,
                  w: _,
                });
                return (
                  _.globals.isXNumeric || (p += v),
                  this.barHelpers.barBackground({
                    j: T,
                    i: S,
                    y1: s - c * this.visibleI,
                    y2: c * this.seriesLen,
                    elSeries: b,
                  }),
                  {
                    pathTo: V.pathTo,
                    pathFrom: V.pathFrom,
                    x1: d,
                    x: f,
                    y: p,
                    goalX: this.barHelpers.getGoalValues("x", d, null, S, T),
                    barYPosition: s,
                    barHeight: c,
                  }
                );
              },
            },
            {
              key: "drawColumnPaths",
              value: function (i) {
                var s,
                  l = i.indexes,
                  c = i.x,
                  h = i.y,
                  d = i.xDivision,
                  f = i.barWidth,
                  p = i.zeroH,
                  v = i.strokeWidth,
                  b = i.elSeries,
                  _ = this.w,
                  S = l.realIndex,
                  T = l.i,
                  O = l.j,
                  D = l.bc;
                if (_.globals.isXNumeric) {
                  var V = this.getBarXForNumericXAxis({
                    x: c,
                    j: O,
                    realIndex: S,
                    barWidth: f,
                  });
                  (c = V.x), (s = V.barXPosition);
                } else if (_.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                  var G = this.barHelpers.getZeroValueEncounters({
                      i: T,
                      j: O,
                    }),
                    Q = G.nonZeroColumns,
                    m = G.zeroEncounters;
                  Q > 0 && (f = (this.seriesLen * f) / Q),
                    (s = c + f * this.visibleI),
                    (s -= f * m);
                } else s = c + f * this.visibleI;
                h = this.barHelpers.getYForValue(this.series[T][O], p);
                var k = this.barHelpers.getColumnPaths({
                  barXPosition: s,
                  barWidth: f,
                  y1: p,
                  y2: h,
                  strokeWidth: v,
                  series: this.series,
                  realIndex: l.realIndex,
                  i: T,
                  j: O,
                  w: _,
                });
                return (
                  _.globals.isXNumeric || (c += d),
                  this.barHelpers.barBackground({
                    bc: D,
                    j: O,
                    i: T,
                    x1: s - v / 2 - f * this.visibleI,
                    x2: f * this.seriesLen + v / 2,
                    elSeries: b,
                  }),
                  {
                    pathTo: k.pathTo,
                    pathFrom: k.pathFrom,
                    x: c,
                    y: h,
                    goalY: this.barHelpers.getGoalValues("y", null, p, T, O),
                    barXPosition: s,
                    barWidth: f,
                  }
                );
              },
            },
            {
              key: "getBarXForNumericXAxis",
              value: function (i) {
                var s = i.x,
                  l = i.barWidth,
                  c = i.realIndex,
                  h = i.j,
                  d = this.w,
                  f = c;
                return (
                  d.globals.seriesX[c].length ||
                    (f = d.globals.maxValsInArrayIndex),
                  d.globals.seriesX[f][h] &&
                    (s =
                      (d.globals.seriesX[f][h] - d.globals.minX) / this.xRatio -
                      (l * this.seriesLen) / 2),
                  { barXPosition: s + l * this.visibleI, x: s }
                );
              },
            },
            {
              key: "getPreviousPath",
              value: function (i, s) {
                for (
                  var l, c = this.w, h = 0;
                  h < c.globals.previousPaths.length;
                  h++
                ) {
                  var d = c.globals.previousPaths[h];
                  d.paths &&
                    d.paths.length > 0 &&
                    parseInt(d.realIndex, 10) === parseInt(i, 10) &&
                    c.globals.previousPaths[h].paths[s] !== void 0 &&
                    (l = c.globals.previousPaths[h].paths[s].d);
                }
                return l;
              },
            },
          ]),
          U
        );
      })(),
      Na = (function (U) {
        E(s, Ns);
        var i = ae(s);
        function s() {
          return o(this, s), i.apply(this, arguments);
        }
        return (
          g(s, [
            {
              key: "draw",
              value: function (l, c) {
                var h = this,
                  d = this.w;
                (this.graphics = new C(this.ctx)),
                  (this.bar = new Ns(this.ctx, this.xyRatios));
                var f = new ke(this.ctx, d);
                (l = f.getLogSeries(l)),
                  (this.yRatio = f.getLogYRatios(this.yRatio)),
                  this.barHelpers.initVariables(l),
                  d.config.chart.stackType === "100%" &&
                    (l = d.globals.seriesPercent.slice()),
                  (this.series = l),
                  this.barHelpers.initializeStackedPrevVars(this);
                for (
                  var p = this.graphics.group({
                      class: "apexcharts-bar-series apexcharts-plot-series",
                    }),
                    v = 0,
                    b = 0,
                    _ = function (O, D) {
                      var V = void 0,
                        G = void 0,
                        Q = void 0,
                        m = void 0,
                        k = -1;
                      (h.groupCtx = h),
                        d.globals.seriesGroups.forEach(function (wn, On) {
                          wn.indexOf(d.config.series[O].name) > -1 && (k = On);
                        }),
                        k !== -1 && (h.groupCtx = h[d.globals.seriesGroups[k]]);
                      var N = [],
                        X = [],
                        K = d.globals.comboCharts ? c[O] : O;
                      h.yRatio.length > 1 && (h.yaxisIndex = K),
                        (h.isReversed =
                          d.config.yaxis[h.yaxisIndex] &&
                          d.config.yaxis[h.yaxisIndex].reversed);
                      var ee = h.graphics.group({
                        class: "apexcharts-series",
                        seriesName: F.escapeString(d.globals.seriesNames[K]),
                        rel: O + 1,
                        "data:realIndex": K,
                      });
                      h.ctx.series.addCollapsedClassToSeries(ee, K);
                      var fe = h.graphics.group({
                          class: "apexcharts-datalabels",
                          "data:realIndex": K,
                        }),
                        ge = h.graphics.group({
                          class: "apexcharts-bar-goals-markers",
                        }),
                        Pe = 0,
                        We = 0,
                        ze = h.initialPositions(v, b, V, G, Q, m);
                      (b = ze.y),
                        (Pe = ze.barHeight),
                        (G = ze.yDivision),
                        (m = ze.zeroW),
                        (v = ze.x),
                        (We = ze.barWidth),
                        (V = ze.xDivision),
                        (Q = ze.zeroH),
                        h.barHelpers.initializeStackedXYVars(h),
                        h.groupCtx.prevY.length === 1 &&
                          h.groupCtx.prevY[0].every(function (wn) {
                            return isNaN(wn);
                          }) &&
                          ((h.groupCtx.prevY[0] = h.groupCtx.prevY[0].map(
                            function (wn) {
                              return Q;
                            }
                          )),
                          (h.groupCtx.prevYF[0] = h.groupCtx.prevYF[0].map(
                            function (wn) {
                              return 0;
                            }
                          )));
                      for (var ut = 0; ut < d.globals.dataPoints; ut++) {
                        var St = h.barHelpers.getStrokeWidth(O, ut, K),
                          zt = {
                            indexes: { i: O, j: ut, realIndex: K, bc: D },
                            strokeWidth: St,
                            x: v,
                            y: b,
                            elSeries: ee,
                            groupIndex: k,
                            seriesGroup: d.globals.seriesGroups[k],
                          },
                          Ot = null;
                        h.isHorizontal
                          ? ((Ot = h.drawStackedBarPaths(
                              r(
                                r({}, zt),
                                {},
                                { zeroW: m, barHeight: Pe, yDivision: G }
                              )
                            )),
                            (We = h.series[O][ut] / h.invertedYRatio))
                          : ((Ot = h.drawStackedColumnPaths(
                              r(
                                r({}, zt),
                                {},
                                { xDivision: V, barWidth: We, zeroH: Q }
                              )
                            )),
                            (Pe = h.series[O][ut] / h.yRatio[h.yaxisIndex]));
                        var dn = h.barHelpers.drawGoalLine({
                          barXPosition: Ot.barXPosition,
                          barYPosition: Ot.barYPosition,
                          goalX: Ot.goalX,
                          goalY: Ot.goalY,
                          barHeight: Pe,
                          barWidth: We,
                        });
                        dn && ge.add(dn),
                          (b = Ot.y),
                          (v = Ot.x),
                          N.push(v),
                          X.push(b);
                        var Ln = h.barHelpers.getPathFillColor(l, O, ut, K);
                        ee = h.renderSeries({
                          realIndex: K,
                          pathFill: Ln,
                          j: ut,
                          i: O,
                          groupIndex: k,
                          pathFrom: Ot.pathFrom,
                          pathTo: Ot.pathTo,
                          strokeWidth: St,
                          elSeries: ee,
                          x: v,
                          y: b,
                          series: l,
                          barHeight: Pe,
                          barWidth: We,
                          elDataLabelsWrap: fe,
                          elGoalsMarkers: ge,
                          type: "bar",
                          visibleSeries: 0,
                        });
                      }
                      (d.globals.seriesXvalues[K] = N),
                        (d.globals.seriesYvalues[K] = X),
                        h.groupCtx.prevY.push(h.groupCtx.yArrj),
                        h.groupCtx.prevYF.push(h.groupCtx.yArrjF),
                        h.groupCtx.prevYVal.push(h.groupCtx.yArrjVal),
                        h.groupCtx.prevX.push(h.groupCtx.xArrj),
                        h.groupCtx.prevXF.push(h.groupCtx.xArrjF),
                        h.groupCtx.prevXVal.push(h.groupCtx.xArrjVal),
                        p.add(ee);
                    },
                    S = 0,
                    T = 0;
                  S < l.length;
                  S++, T++
                )
                  _(S, T);
                return p;
              },
            },
            {
              key: "initialPositions",
              value: function (l, c, h, d, f, p) {
                var v,
                  b,
                  _,
                  S,
                  T = this.w;
                return (
                  this.isHorizontal
                    ? ((_ =
                        ((_ = d = T.globals.gridHeight / T.globals.dataPoints) *
                          parseInt(T.config.plotOptions.bar.barHeight, 10)) /
                        100),
                      String(T.config.plotOptions.bar.barHeight).indexOf(
                        "%"
                      ) === -1 &&
                        (_ = parseInt(T.config.plotOptions.bar.barHeight, 10)),
                      (p =
                        this.baseLineInvertedY +
                        T.globals.padHorizontal +
                        (this.isReversed ? T.globals.gridWidth : 0) -
                        (this.isReversed ? 2 * this.baseLineInvertedY : 0)),
                      (c = (d - _) / 2))
                    : ((S = h = T.globals.gridWidth / T.globals.dataPoints),
                      (S =
                        T.globals.isXNumeric && T.globals.dataPoints > 1
                          ? ((h = T.globals.minXDiff / this.xRatio) *
                              parseInt(this.barOptions.columnWidth, 10)) /
                            100
                          : (S *
                              parseInt(
                                T.config.plotOptions.bar.columnWidth,
                                10
                              )) /
                            100),
                      String(T.config.plotOptions.bar.columnWidth).indexOf(
                        "%"
                      ) === -1 &&
                        (S = parseInt(
                          T.config.plotOptions.bar.columnWidth,
                          10
                        )),
                      (f =
                        T.globals.gridHeight -
                        this.baseLineY[this.yaxisIndex] -
                        (this.isReversed ? T.globals.gridHeight : 0) +
                        (this.isReversed
                          ? 2 * this.baseLineY[this.yaxisIndex]
                          : 0)),
                      (l = T.globals.padHorizontal + (h - S) / 2)),
                  {
                    x: l,
                    y: c,
                    yDivision: d,
                    xDivision: h,
                    barHeight:
                      (v = T.globals.seriesGroups) !== null &&
                      v !== void 0 &&
                      v.length
                        ? _ / T.globals.seriesGroups.length
                        : _,
                    barWidth:
                      (b = T.globals.seriesGroups) !== null &&
                      b !== void 0 &&
                      b.length
                        ? S / T.globals.seriesGroups.length
                        : S,
                    zeroH: f,
                    zeroW: p,
                  }
                );
              },
            },
            {
              key: "drawStackedBarPaths",
              value: function (l) {
                for (
                  var c,
                    h = l.indexes,
                    d = l.barHeight,
                    f = l.strokeWidth,
                    p = l.zeroW,
                    v = l.x,
                    b = l.y,
                    _ = l.groupIndex,
                    S = l.seriesGroup,
                    T = l.yDivision,
                    O = l.elSeries,
                    D = this.w,
                    V = b + (_ !== -1 ? _ * d : 0),
                    G = h.i,
                    Q = h.j,
                    m = 0,
                    k = 0;
                  k < this.groupCtx.prevXF.length;
                  k++
                )
                  m += this.groupCtx.prevXF[k][Q];
                var N = G;
                if ((S && (N = S.indexOf(D.config.series[G].name)), N > 0)) {
                  var X = p;
                  this.groupCtx.prevXVal[N - 1][Q] < 0
                    ? (X =
                        this.series[G][Q] >= 0
                          ? this.groupCtx.prevX[N - 1][Q] +
                            m -
                            2 * (this.isReversed ? m : 0)
                          : this.groupCtx.prevX[N - 1][Q])
                    : this.groupCtx.prevXVal[N - 1][Q] >= 0 &&
                      (X =
                        this.series[G][Q] >= 0
                          ? this.groupCtx.prevX[N - 1][Q]
                          : this.groupCtx.prevX[N - 1][Q] -
                            m +
                            2 * (this.isReversed ? m : 0)),
                    (c = X);
                } else c = p;
                v =
                  this.series[G][Q] === null
                    ? c
                    : c +
                      this.series[G][Q] / this.invertedYRatio -
                      2 *
                        (this.isReversed
                          ? this.series[G][Q] / this.invertedYRatio
                          : 0);
                var K = this.barHelpers.getBarpaths({
                  barYPosition: V,
                  barHeight: d,
                  x1: c,
                  x2: v,
                  strokeWidth: f,
                  series: this.series,
                  realIndex: h.realIndex,
                  seriesGroup: S,
                  i: G,
                  j: Q,
                  w: D,
                });
                return (
                  this.barHelpers.barBackground({
                    j: Q,
                    i: G,
                    y1: V,
                    y2: d,
                    elSeries: O,
                  }),
                  (b += T),
                  {
                    pathTo: K.pathTo,
                    pathFrom: K.pathFrom,
                    goalX: this.barHelpers.getGoalValues("x", p, null, G, Q),
                    barYPosition: V,
                    x: v,
                    y: b,
                  }
                );
              },
            },
            {
              key: "drawStackedColumnPaths",
              value: function (l) {
                var c = l.indexes,
                  h = l.x,
                  d = l.y,
                  f = l.xDivision,
                  p = l.barWidth,
                  v = l.zeroH,
                  b = l.groupIndex,
                  _ = l.seriesGroup,
                  S = l.elSeries,
                  T = this.w,
                  O = c.i,
                  D = c.j,
                  V = c.bc;
                if (T.globals.isXNumeric) {
                  var G = T.globals.seriesX[O][D];
                  G || (G = 0),
                    (h = (G - T.globals.minX) / this.xRatio - p / 2),
                    T.globals.seriesGroups.length &&
                      (h =
                        (G - T.globals.minX) / this.xRatio -
                        (p / 2) * T.globals.seriesGroups.length);
                }
                for (
                  var Q, m = h + (b !== -1 ? b * p : 0), k = 0, N = 0;
                  N < this.groupCtx.prevYF.length;
                  N++
                )
                  k += isNaN(this.groupCtx.prevYF[N][D])
                    ? 0
                    : this.groupCtx.prevYF[N][D];
                var X = O;
                if (
                  (_ && (X = _.indexOf(T.config.series[O].name)),
                  (X > 0 && !T.globals.isXNumeric) ||
                    (X > 0 &&
                      T.globals.isXNumeric &&
                      T.globals.seriesX[O - 1][D] === T.globals.seriesX[O][D]))
                ) {
                  var K,
                    ee,
                    fe,
                    ge = Math.min(this.yRatio.length + 1, O + 1);
                  if (
                    this.groupCtx.prevY[X - 1] !== void 0 &&
                    this.groupCtx.prevY[X - 1].length
                  )
                    for (var Pe = 1; Pe < ge; Pe++) {
                      var We;
                      if (
                        !isNaN(
                          (We = this.groupCtx.prevY[X - Pe]) === null ||
                            We === void 0
                            ? void 0
                            : We[D]
                        )
                      ) {
                        fe = this.groupCtx.prevY[X - Pe][D];
                        break;
                      }
                    }
                  for (var ze = 1; ze < ge; ze++) {
                    var ut, St;
                    if (
                      ((ut = this.groupCtx.prevYVal[X - ze]) === null ||
                      ut === void 0
                        ? void 0
                        : ut[D]) < 0
                    ) {
                      ee =
                        this.series[O][D] >= 0
                          ? fe - k + 2 * (this.isReversed ? k : 0)
                          : fe;
                      break;
                    }
                    if (
                      ((St = this.groupCtx.prevYVal[X - ze]) === null ||
                      St === void 0
                        ? void 0
                        : St[D]) >= 0
                    ) {
                      ee =
                        this.series[O][D] >= 0
                          ? fe
                          : fe + k - 2 * (this.isReversed ? k : 0);
                      break;
                    }
                  }
                  ee === void 0 && (ee = T.globals.gridHeight),
                    (Q =
                      (K = this.groupCtx.prevYF[0]) !== null &&
                      K !== void 0 &&
                      K.every(function (Ot) {
                        return Ot === 0;
                      }) &&
                      this.groupCtx.prevYF.slice(1, X).every(function (Ot) {
                        return Ot.every(function (dn) {
                          return isNaN(dn);
                        });
                      })
                        ? v
                        : ee);
                } else Q = v;
                d = this.series[O][D]
                  ? Q -
                    this.series[O][D] / this.yRatio[this.yaxisIndex] +
                    2 *
                      (this.isReversed
                        ? this.series[O][D] / this.yRatio[this.yaxisIndex]
                        : 0)
                  : Q;
                var zt = this.barHelpers.getColumnPaths({
                  barXPosition: m,
                  barWidth: p,
                  y1: Q,
                  y2: d,
                  yRatio: this.yRatio[this.yaxisIndex],
                  strokeWidth: this.strokeWidth,
                  series: this.series,
                  seriesGroup: _,
                  realIndex: c.realIndex,
                  i: O,
                  j: D,
                  w: T,
                });
                return (
                  this.barHelpers.barBackground({
                    bc: V,
                    j: D,
                    i: O,
                    x1: m,
                    x2: p,
                    elSeries: S,
                  }),
                  (h += f),
                  {
                    pathTo: zt.pathTo,
                    pathFrom: zt.pathFrom,
                    goalY: this.barHelpers.getGoalValues("y", null, v, O, D),
                    barXPosition: m,
                    x: T.globals.isXNumeric ? h - f : h,
                    y: d,
                  }
                );
              },
            },
          ]),
          s
        );
      })(),
      es = (function (U) {
        E(s, Ns);
        var i = ae(s);
        function s() {
          return o(this, s), i.apply(this, arguments);
        }
        return (
          g(s, [
            {
              key: "draw",
              value: function (l, c, h) {
                var d = this,
                  f = this.w,
                  p = new C(this.ctx),
                  v = f.globals.comboCharts ? c : f.config.chart.type,
                  b = new Re(this.ctx);
                (this.candlestickOptions =
                  this.w.config.plotOptions.candlestick),
                  (this.boxOptions = this.w.config.plotOptions.boxPlot),
                  (this.isHorizontal = f.config.plotOptions.bar.horizontal);
                var _ = new ke(this.ctx, f);
                (l = _.getLogSeries(l)),
                  (this.series = l),
                  (this.yRatio = _.getLogYRatios(this.yRatio)),
                  this.barHelpers.initVariables(l);
                for (
                  var S = p.group({
                      class: "apexcharts-".concat(
                        v,
                        "-series apexcharts-plot-series"
                      ),
                    }),
                    T = function (D) {
                      d.isBoxPlot =
                        f.config.chart.type === "boxPlot" ||
                        f.config.series[D].type === "boxPlot";
                      var V,
                        G,
                        Q,
                        m,
                        k = void 0,
                        N = void 0,
                        X = [],
                        K = [],
                        ee = f.globals.comboCharts ? h[D] : D,
                        fe = p.group({
                          class: "apexcharts-series",
                          seriesName: F.escapeString(f.globals.seriesNames[ee]),
                          rel: D + 1,
                          "data:realIndex": ee,
                        });
                      d.ctx.series.addCollapsedClassToSeries(fe, ee),
                        l[D].length > 0 && (d.visibleI = d.visibleI + 1);
                      var ge, Pe;
                      d.yRatio.length > 1 && (d.yaxisIndex = ee);
                      var We = d.barHelpers.initialPositions();
                      (N = We.y),
                        (ge = We.barHeight),
                        (G = We.yDivision),
                        (m = We.zeroW),
                        (k = We.x),
                        (Pe = We.barWidth),
                        (V = We.xDivision),
                        (Q = We.zeroH),
                        K.push(k + Pe / 2);
                      for (
                        var ze = p.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": ee,
                          }),
                          ut = function (zt) {
                            var Ot = d.barHelpers.getStrokeWidth(D, zt, ee),
                              dn = null,
                              Ln = {
                                indexes: { i: D, j: zt, realIndex: ee },
                                x: k,
                                y: N,
                                strokeWidth: Ot,
                                elSeries: fe,
                              };
                            (dn = d.isHorizontal
                              ? d.drawHorizontalBoxPaths(
                                  r(
                                    r({}, Ln),
                                    {},
                                    { yDivision: G, barHeight: ge, zeroW: m }
                                  )
                                )
                              : d.drawVerticalBoxPaths(
                                  r(
                                    r({}, Ln),
                                    {},
                                    { xDivision: V, barWidth: Pe, zeroH: Q }
                                  )
                                )),
                              (N = dn.y),
                              (k = dn.x),
                              zt > 0 && K.push(k + Pe / 2),
                              X.push(N),
                              dn.pathTo.forEach(function (wn, On) {
                                var Sr =
                                    !d.isBoxPlot &&
                                    d.candlestickOptions.wick.useFillColor
                                      ? dn.color[On]
                                      : f.globals.stroke.colors[D],
                                  Br = b.fillPath({
                                    seriesNumber: ee,
                                    dataPointIndex: zt,
                                    color: dn.color[On],
                                    value: l[D][zt],
                                  });
                                d.renderSeries({
                                  realIndex: ee,
                                  pathFill: Br,
                                  lineFill: Sr,
                                  j: zt,
                                  i: D,
                                  pathFrom: dn.pathFrom,
                                  pathTo: wn,
                                  strokeWidth: Ot,
                                  elSeries: fe,
                                  x: k,
                                  y: N,
                                  series: l,
                                  barHeight: ge,
                                  barWidth: Pe,
                                  elDataLabelsWrap: ze,
                                  visibleSeries: d.visibleI,
                                  type: f.config.chart.type,
                                });
                              });
                          },
                          St = 0;
                        St < f.globals.dataPoints;
                        St++
                      )
                        ut(St);
                      (f.globals.seriesXvalues[ee] = K),
                        (f.globals.seriesYvalues[ee] = X),
                        S.add(fe);
                    },
                    O = 0;
                  O < l.length;
                  O++
                )
                  T(O);
                return S;
              },
            },
            {
              key: "drawVerticalBoxPaths",
              value: function (l) {
                var c = l.indexes,
                  h = l.x;
                l.y;
                var d = l.xDivision,
                  f = l.barWidth,
                  p = l.zeroH,
                  v = l.strokeWidth,
                  b = this.w,
                  _ = new C(this.ctx),
                  S = c.i,
                  T = c.j,
                  O = !0,
                  D = b.config.plotOptions.candlestick.colors.upward,
                  V = b.config.plotOptions.candlestick.colors.downward,
                  G = "";
                this.isBoxPlot &&
                  (G = [
                    this.boxOptions.colors.lower,
                    this.boxOptions.colors.upper,
                  ]);
                var Q = this.yRatio[this.yaxisIndex],
                  m = c.realIndex,
                  k = this.getOHLCValue(m, T),
                  N = p,
                  X = p;
                k.o > k.c && (O = !1);
                var K = Math.min(k.o, k.c),
                  ee = Math.max(k.o, k.c),
                  fe = k.m;
                b.globals.isXNumeric &&
                  (h =
                    (b.globals.seriesX[m][T] - b.globals.minX) / this.xRatio -
                    f / 2);
                var ge = h + f * this.visibleI;
                this.series[S][T] === void 0 || this.series[S][T] === null
                  ? ((K = p), (ee = p))
                  : ((K = p - K / Q),
                    (ee = p - ee / Q),
                    (N = p - k.h / Q),
                    (X = p - k.l / Q),
                    (fe = p - k.m / Q));
                var Pe = _.move(ge, p),
                  We = _.move(ge + f / 2, K);
                return (
                  b.globals.previousPaths.length > 0 &&
                    (We = this.getPreviousPath(m, T, !0)),
                  (Pe = this.isBoxPlot
                    ? [
                        _.move(ge, K) +
                          _.line(ge + f / 2, K) +
                          _.line(ge + f / 2, N) +
                          _.line(ge + f / 4, N) +
                          _.line(ge + f - f / 4, N) +
                          _.line(ge + f / 2, N) +
                          _.line(ge + f / 2, K) +
                          _.line(ge + f, K) +
                          _.line(ge + f, fe) +
                          _.line(ge, fe) +
                          _.line(ge, K + v / 2),
                        _.move(ge, fe) +
                          _.line(ge + f, fe) +
                          _.line(ge + f, ee) +
                          _.line(ge + f / 2, ee) +
                          _.line(ge + f / 2, X) +
                          _.line(ge + f - f / 4, X) +
                          _.line(ge + f / 4, X) +
                          _.line(ge + f / 2, X) +
                          _.line(ge + f / 2, ee) +
                          _.line(ge, ee) +
                          _.line(ge, fe) +
                          "z",
                      ]
                    : [
                        _.move(ge, ee) +
                          _.line(ge + f / 2, ee) +
                          _.line(ge + f / 2, N) +
                          _.line(ge + f / 2, ee) +
                          _.line(ge + f, ee) +
                          _.line(ge + f, K) +
                          _.line(ge + f / 2, K) +
                          _.line(ge + f / 2, X) +
                          _.line(ge + f / 2, K) +
                          _.line(ge, K) +
                          _.line(ge, ee - v / 2),
                      ]),
                  (We += _.move(ge, K)),
                  b.globals.isXNumeric || (h += d),
                  {
                    pathTo: Pe,
                    pathFrom: We,
                    x: h,
                    y: ee,
                    barXPosition: ge,
                    color: this.isBoxPlot ? G : O ? [D] : [V],
                  }
                );
              },
            },
            {
              key: "drawHorizontalBoxPaths",
              value: function (l) {
                var c = l.indexes;
                l.x;
                var h = l.y,
                  d = l.yDivision,
                  f = l.barHeight,
                  p = l.zeroW,
                  v = l.strokeWidth,
                  b = this.w,
                  _ = new C(this.ctx),
                  S = c.i,
                  T = c.j,
                  O = this.boxOptions.colors.lower;
                this.isBoxPlot &&
                  (O = [
                    this.boxOptions.colors.lower,
                    this.boxOptions.colors.upper,
                  ]);
                var D = this.invertedYRatio,
                  V = c.realIndex,
                  G = this.getOHLCValue(V, T),
                  Q = p,
                  m = p,
                  k = Math.min(G.o, G.c),
                  N = Math.max(G.o, G.c),
                  X = G.m;
                b.globals.isXNumeric &&
                  (h =
                    (b.globals.seriesX[V][T] - b.globals.minX) /
                      this.invertedXRatio -
                    f / 2);
                var K = h + f * this.visibleI;
                this.series[S][T] === void 0 || this.series[S][T] === null
                  ? ((k = p), (N = p))
                  : ((k = p + k / D),
                    (N = p + N / D),
                    (Q = p + G.h / D),
                    (m = p + G.l / D),
                    (X = p + G.m / D));
                var ee = _.move(p, K),
                  fe = _.move(k, K + f / 2);
                return (
                  b.globals.previousPaths.length > 0 &&
                    (fe = this.getPreviousPath(V, T, !0)),
                  (ee = [
                    _.move(k, K) +
                      _.line(k, K + f / 2) +
                      _.line(Q, K + f / 2) +
                      _.line(Q, K + f / 2 - f / 4) +
                      _.line(Q, K + f / 2 + f / 4) +
                      _.line(Q, K + f / 2) +
                      _.line(k, K + f / 2) +
                      _.line(k, K + f) +
                      _.line(X, K + f) +
                      _.line(X, K) +
                      _.line(k + v / 2, K),
                    _.move(X, K) +
                      _.line(X, K + f) +
                      _.line(N, K + f) +
                      _.line(N, K + f / 2) +
                      _.line(m, K + f / 2) +
                      _.line(m, K + f - f / 4) +
                      _.line(m, K + f / 4) +
                      _.line(m, K + f / 2) +
                      _.line(N, K + f / 2) +
                      _.line(N, K) +
                      _.line(X, K) +
                      "z",
                  ]),
                  (fe += _.move(k, K)),
                  b.globals.isXNumeric || (h += d),
                  {
                    pathTo: ee,
                    pathFrom: fe,
                    x: N,
                    y: h,
                    barYPosition: K,
                    color: O,
                  }
                );
              },
            },
            {
              key: "getOHLCValue",
              value: function (l, c) {
                var h = this.w;
                return {
                  o: this.isBoxPlot
                    ? h.globals.seriesCandleH[l][c]
                    : h.globals.seriesCandleO[l][c],
                  h: this.isBoxPlot
                    ? h.globals.seriesCandleO[l][c]
                    : h.globals.seriesCandleH[l][c],
                  m: h.globals.seriesCandleM[l][c],
                  l: this.isBoxPlot
                    ? h.globals.seriesCandleC[l][c]
                    : h.globals.seriesCandleL[l][c],
                  c: this.isBoxPlot
                    ? h.globals.seriesCandleL[l][c]
                    : h.globals.seriesCandleC[l][c],
                };
              },
            },
          ]),
          s
        );
      })(),
      ts = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "checkColorRange",
              value: function () {
                var i = this.w,
                  s = !1,
                  l = i.config.plotOptions[i.config.chart.type];
                return (
                  l.colorScale.ranges.length > 0 &&
                    l.colorScale.ranges.map(function (c, h) {
                      c.from <= 0 && (s = !0);
                    }),
                  s
                );
              },
            },
            {
              key: "getShadeColor",
              value: function (i, s, l, c) {
                var h = this.w,
                  d = 1,
                  f = h.config.plotOptions[i].shadeIntensity,
                  p = this.determineColor(i, s, l);
                h.globals.hasNegs || c
                  ? (d = h.config.plotOptions[i].reverseNegativeShade
                      ? p.percent < 0
                        ? (p.percent / 100) * (1.25 * f)
                        : (1 - p.percent / 100) * (1.25 * f)
                      : p.percent <= 0
                      ? 1 - (1 + p.percent / 100) * f
                      : (1 - p.percent / 100) * f)
                  : ((d = 1 - p.percent / 100),
                    i === "treemap" &&
                      (d = (1 - p.percent / 100) * (1.25 * f)));
                var v = p.color,
                  b = new F();
                return (
                  h.config.plotOptions[i].enableShades &&
                    (v =
                      this.w.config.theme.mode === "dark"
                        ? F.hexToRgba(
                            b.shadeColor(-1 * d, p.color),
                            h.config.fill.opacity
                          )
                        : F.hexToRgba(
                            b.shadeColor(d, p.color),
                            h.config.fill.opacity
                          )),
                  { color: v, colorProps: p }
                );
              },
            },
            {
              key: "determineColor",
              value: function (i, s, l) {
                var c = this.w,
                  h = c.globals.series[s][l],
                  d = c.config.plotOptions[i],
                  f = d.colorScale.inverse ? l : s;
                d.distributed && c.config.chart.type === "treemap" && (f = l);
                var p = c.globals.colors[f],
                  v = null,
                  b = Math.min.apply(Math, le(c.globals.series[s])),
                  _ = Math.max.apply(Math, le(c.globals.series[s]));
                d.distributed ||
                  i !== "heatmap" ||
                  ((b = c.globals.minY), (_ = c.globals.maxY)),
                  d.colorScale.min !== void 0 &&
                    ((b =
                      d.colorScale.min < c.globals.minY
                        ? d.colorScale.min
                        : c.globals.minY),
                    (_ =
                      d.colorScale.max > c.globals.maxY
                        ? d.colorScale.max
                        : c.globals.maxY));
                var S = Math.abs(_) + Math.abs(b),
                  T = (100 * h) / (S === 0 ? S - 1e-6 : S);
                return (
                  d.colorScale.ranges.length > 0 &&
                    d.colorScale.ranges.map(function (O, D) {
                      if (h >= O.from && h <= O.to) {
                        (p = O.color),
                          (v = O.foreColor ? O.foreColor : null),
                          (b = O.from),
                          (_ = O.to);
                        var V = Math.abs(_) + Math.abs(b);
                        T = (100 * h) / (V === 0 ? V - 1e-6 : V);
                      }
                    }),
                  { color: p, foreColor: v, percent: T }
                );
              },
            },
            {
              key: "calculateDataLabels",
              value: function (i) {
                var s = i.text,
                  l = i.x,
                  c = i.y,
                  h = i.i,
                  d = i.j,
                  f = i.colorProps,
                  p = i.fontSize,
                  v = this.w.config.dataLabels,
                  b = new C(this.ctx),
                  _ = new ct(this.ctx),
                  S = null;
                if (v.enabled) {
                  S = b.group({ class: "apexcharts-data-labels" });
                  var T = v.offsetX,
                    O = v.offsetY,
                    D = l + T,
                    V = c + parseFloat(v.style.fontSize) / 3 + O;
                  _.plotDataLabelsText({
                    x: D,
                    y: V,
                    text: s,
                    i: h,
                    j: d,
                    color: f.foreColor,
                    parent: S,
                    fontSize: p,
                    dataLabelsConfig: v,
                  });
                }
                return S;
              },
            },
            {
              key: "addListeners",
              value: function (i) {
                var s = new C(this.ctx);
                i.node.addEventListener(
                  "mouseenter",
                  s.pathMouseEnter.bind(this, i)
                ),
                  i.node.addEventListener(
                    "mouseleave",
                    s.pathMouseLeave.bind(this, i)
                  ),
                  i.node.addEventListener(
                    "mousedown",
                    s.pathMouseDown.bind(this, i)
                  );
              },
            },
          ]),
          U
        );
      })(),
      ms = (function () {
        function U(i, s) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.xRatio = s.xRatio),
            (this.yRatio = s.yRatio),
            (this.dynamicAnim =
              this.w.config.chart.animations.dynamicAnimation),
            (this.helpers = new ts(i)),
            (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
            (this.strokeWidth = this.w.config.stroke.show
              ? this.w.config.stroke.width
              : 0);
        }
        return (
          g(U, [
            {
              key: "draw",
              value: function (i) {
                var s = this.w,
                  l = new C(this.ctx),
                  c = l.group({ class: "apexcharts-heatmap" });
                c.attr(
                  "clip-path",
                  "url(#gridRectMask".concat(s.globals.cuid, ")")
                );
                var h = s.globals.gridWidth / s.globals.dataPoints,
                  d = s.globals.gridHeight / s.globals.series.length,
                  f = 0,
                  p = !1;
                this.negRange = this.helpers.checkColorRange();
                var v = i.slice();
                s.config.yaxis[0].reversed && ((p = !0), v.reverse());
                for (
                  var b = p ? 0 : v.length - 1;
                  p ? b < v.length : b >= 0;
                  p ? b++ : b--
                ) {
                  var _ = l.group({
                    class: "apexcharts-series apexcharts-heatmap-series",
                    seriesName: F.escapeString(s.globals.seriesNames[b]),
                    rel: b + 1,
                    "data:realIndex": b,
                  });
                  if (
                    (this.ctx.series.addCollapsedClassToSeries(_, b),
                    s.config.chart.dropShadow.enabled)
                  ) {
                    var S = s.config.chart.dropShadow;
                    new ye(this.ctx).dropShadow(_, S, b);
                  }
                  for (
                    var T = 0,
                      O = s.config.plotOptions.heatmap.shadeIntensity,
                      D = 0;
                    D < v[b].length;
                    D++
                  ) {
                    var V = this.helpers.getShadeColor(
                        s.config.chart.type,
                        b,
                        D,
                        this.negRange
                      ),
                      G = V.color,
                      Q = V.colorProps;
                    s.config.fill.type === "image" &&
                      (G = new Re(this.ctx).fillPath({
                        seriesNumber: b,
                        dataPointIndex: D,
                        opacity: s.globals.hasNegs
                          ? Q.percent < 0
                            ? 1 - (1 + Q.percent / 100)
                            : O + Q.percent / 100
                          : Q.percent / 100,
                        patternID: F.randomId(),
                        width: s.config.fill.image.width
                          ? s.config.fill.image.width
                          : h,
                        height: s.config.fill.image.height
                          ? s.config.fill.image.height
                          : d,
                      }));
                    var m = this.rectRadius,
                      k = l.drawRect(T, f, h, d, m);
                    if (
                      (k.attr({ cx: T, cy: f }),
                      k.node.classList.add("apexcharts-heatmap-rect"),
                      _.add(k),
                      k.attr({
                        fill: G,
                        i: b,
                        index: b,
                        j: D,
                        val: i[b][D],
                        "stroke-width": this.strokeWidth,
                        stroke: s.config.plotOptions.heatmap
                          .useFillColorAsStroke
                          ? G
                          : s.globals.stroke.colors[0],
                        color: G,
                      }),
                      this.helpers.addListeners(k),
                      s.config.chart.animations.enabled &&
                        !s.globals.dataChanged)
                    ) {
                      var N = 1;
                      s.globals.resized ||
                        (N = s.config.chart.animations.speed),
                        this.animateHeatMap(k, T, f, h, d, N);
                    }
                    if (s.globals.dataChanged) {
                      var X = 1;
                      if (this.dynamicAnim.enabled && s.globals.shouldAnimate) {
                        X = this.dynamicAnim.speed;
                        var K =
                          s.globals.previousPaths[b] &&
                          s.globals.previousPaths[b][D] &&
                          s.globals.previousPaths[b][D].color;
                        K || (K = "rgba(255, 255, 255, 0)"),
                          this.animateHeatColor(
                            k,
                            F.isColorHex(K) ? K : F.rgb2hex(K),
                            F.isColorHex(G) ? G : F.rgb2hex(G),
                            X
                          );
                      }
                    }
                    var ee = (0, s.config.dataLabels.formatter)(
                        s.globals.series[b][D],
                        {
                          value: s.globals.series[b][D],
                          seriesIndex: b,
                          dataPointIndex: D,
                          w: s,
                        }
                      ),
                      fe = this.helpers.calculateDataLabels({
                        text: ee,
                        x: T + h / 2,
                        y: f + d / 2,
                        i: b,
                        j: D,
                        colorProps: Q,
                        series: v,
                      });
                    fe !== null && _.add(fe), (T += h);
                  }
                  (f += d), c.add(_);
                }
                var ge = s.globals.yAxisScale[0].result.slice();
                return (
                  s.config.yaxis[0].reversed ? ge.unshift("") : ge.push(""),
                  (s.globals.yAxisScale[0].result = ge),
                  c
                );
              },
            },
            {
              key: "animateHeatMap",
              value: function (i, s, l, c, h, d) {
                var f = new ce(this.ctx);
                f.animateRect(
                  i,
                  { x: s + c / 2, y: l + h / 2, width: 0, height: 0 },
                  { x: s, y: l, width: c, height: h },
                  d,
                  function () {
                    f.animationCompleted(i);
                  }
                );
              },
            },
            {
              key: "animateHeatColor",
              value: function (i, s, l, c) {
                i.attr({ fill: s }).animate(c).attr({ fill: l });
              },
            },
          ]),
          U
        );
      })(),
      La = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "drawYAxisTexts",
              value: function (i, s, l, c) {
                var h = this.w,
                  d = h.config.yaxis[0],
                  f = h.globals.yLabelFormatters[0];
                return new C(this.ctx).drawText({
                  x: i + d.labels.offsetX,
                  y: s + d.labels.offsetY,
                  text: f(c, l),
                  textAnchor: "middle",
                  fontSize: d.labels.style.fontSize,
                  fontFamily: d.labels.style.fontFamily,
                  foreColor: Array.isArray(d.labels.style.colors)
                    ? d.labels.style.colors[l]
                    : d.labels.style.colors,
                });
              },
            },
          ]),
          U
        );
      })(),
      ua = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
          var s = this.w;
          (this.chartType = this.w.config.chart.type),
            (this.initialAnim = this.w.config.chart.animations.enabled),
            (this.dynamicAnim =
              this.initialAnim &&
              this.w.config.chart.animations.dynamicAnimation.enabled),
            (this.animBeginArr = [0]),
            (this.animDur = 0),
            (this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels),
            (this.lineColorArr =
              s.globals.stroke.colors !== void 0
                ? s.globals.stroke.colors
                : s.globals.colors),
            (this.defaultSize = Math.min(
              s.globals.gridWidth,
              s.globals.gridHeight
            )),
            (this.centerY = this.defaultSize / 2),
            (this.centerX = s.globals.gridWidth / 2),
            s.config.chart.type === "radialBar"
              ? (this.fullAngle = 360)
              : (this.fullAngle = Math.abs(
                  s.config.plotOptions.pie.endAngle -
                    s.config.plotOptions.pie.startAngle
                )),
            (this.initialAngle =
              s.config.plotOptions.pie.startAngle % this.fullAngle),
            (s.globals.radialSize =
              this.defaultSize / 2.05 -
              s.config.stroke.width -
              (s.config.chart.sparkline.enabled
                ? 0
                : s.config.chart.dropShadow.blur)),
            (this.donutSize =
              (s.globals.radialSize *
                parseInt(s.config.plotOptions.pie.donut.size, 10)) /
              100),
            (this.maxY = 0),
            (this.sliceLabels = []),
            (this.sliceSizes = []),
            (this.prevSectorAngleArr = []);
        }
        return (
          g(U, [
            {
              key: "draw",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = new C(this.ctx);
                if (
                  ((this.ret = c.group({ class: "apexcharts-pie" })),
                  l.globals.noData)
                )
                  return this.ret;
                for (var h = 0, d = 0; d < i.length; d++)
                  h += F.negToZero(i[d]);
                var f = [],
                  p = c.group();
                h === 0 && (h = 1e-5),
                  i.forEach(function (K) {
                    s.maxY = Math.max(s.maxY, K);
                  }),
                  l.config.yaxis[0].max && (this.maxY = l.config.yaxis[0].max),
                  l.config.grid.position === "back" &&
                    this.chartType === "polarArea" &&
                    this.drawPolarElements(this.ret);
                for (var v = 0; v < i.length; v++) {
                  var b = (this.fullAngle * F.negToZero(i[v])) / h;
                  f.push(b),
                    this.chartType === "polarArea"
                      ? ((f[v] = this.fullAngle / i.length),
                        this.sliceSizes.push(
                          (l.globals.radialSize * i[v]) / this.maxY
                        ))
                      : this.sliceSizes.push(l.globals.radialSize);
                }
                if (l.globals.dataChanged) {
                  for (
                    var _, S = 0, T = 0;
                    T < l.globals.previousPaths.length;
                    T++
                  )
                    S += F.negToZero(l.globals.previousPaths[T]);
                  for (var O = 0; O < l.globals.previousPaths.length; O++)
                    (_ =
                      (this.fullAngle *
                        F.negToZero(l.globals.previousPaths[O])) /
                      S),
                      this.prevSectorAngleArr.push(_);
                }
                this.donutSize < 0 && (this.donutSize = 0);
                var D = l.config.plotOptions.pie.customScale,
                  V = l.globals.gridWidth / 2,
                  G = l.globals.gridHeight / 2,
                  Q = V - (l.globals.gridWidth / 2) * D,
                  m = G - (l.globals.gridHeight / 2) * D;
                if (this.chartType === "donut") {
                  var k = c.drawCircle(this.donutSize);
                  k.attr({
                    cx: this.centerX,
                    cy: this.centerY,
                    fill: l.config.plotOptions.pie.donut.background
                      ? l.config.plotOptions.pie.donut.background
                      : "transparent",
                  }),
                    p.add(k);
                }
                var N = this.drawArcs(f, i);
                if (
                  (this.sliceLabels.forEach(function (K) {
                    N.add(K);
                  }),
                  p.attr({
                    transform: "translate("
                      .concat(Q, ", ")
                      .concat(m, ") scale(")
                      .concat(D, ")"),
                  }),
                  p.add(N),
                  this.ret.add(p),
                  this.donutDataLabels.show)
                ) {
                  var X = this.renderInnerDataLabels(this.donutDataLabels, {
                    hollowSize: this.donutSize,
                    centerX: this.centerX,
                    centerY: this.centerY,
                    opacity: this.donutDataLabels.show,
                    translateX: Q,
                    translateY: m,
                  });
                  this.ret.add(X);
                }
                return (
                  l.config.grid.position === "front" &&
                    this.chartType === "polarArea" &&
                    this.drawPolarElements(this.ret),
                  this.ret
                );
              },
            },
            {
              key: "drawArcs",
              value: function (i, s) {
                var l = this.w,
                  c = new ye(this.ctx),
                  h = new C(this.ctx),
                  d = new Re(this.ctx),
                  f = h.group({ class: "apexcharts-slices" }),
                  p = this.initialAngle,
                  v = this.initialAngle,
                  b = this.initialAngle,
                  _ = this.initialAngle;
                this.strokeWidth = l.config.stroke.show
                  ? l.config.stroke.width
                  : 0;
                for (var S = 0; S < i.length; S++) {
                  var T = h.group({
                    class: "apexcharts-series apexcharts-pie-series",
                    seriesName: F.escapeString(l.globals.seriesNames[S]),
                    rel: S + 1,
                    "data:realIndex": S,
                  });
                  f.add(T),
                    (v = _),
                    (b = (p = b) + i[S]),
                    (_ = v + this.prevSectorAngleArr[S]);
                  var O = b < p ? this.fullAngle + b - p : b - p,
                    D = d.fillPath({
                      seriesNumber: S,
                      size: this.sliceSizes[S],
                      value: s[S],
                    }),
                    V = this.getChangedPath(v, _),
                    G = h.drawPath({
                      d: V,
                      stroke: Array.isArray(this.lineColorArr)
                        ? this.lineColorArr[S]
                        : this.lineColorArr,
                      strokeWidth: 0,
                      fill: D,
                      fillOpacity: l.config.fill.opacity,
                      classes: "apexcharts-pie-area apexcharts-"
                        .concat(this.chartType.toLowerCase(), "-slice-")
                        .concat(S),
                    });
                  if (
                    (G.attr({ index: 0, j: S }),
                    c.setSelectionFilter(G, 0, S),
                    l.config.chart.dropShadow.enabled)
                  ) {
                    var Q = l.config.chart.dropShadow;
                    c.dropShadow(G, Q, S);
                  }
                  this.addListeners(G, this.donutDataLabels),
                    C.setAttrs(G.node, {
                      "data:angle": O,
                      "data:startAngle": p,
                      "data:strokeWidth": this.strokeWidth,
                      "data:value": s[S],
                    });
                  var m = { x: 0, y: 0 };
                  this.chartType === "pie" || this.chartType === "polarArea"
                    ? (m = F.polarToCartesian(
                        this.centerX,
                        this.centerY,
                        l.globals.radialSize / 1.25 +
                          l.config.plotOptions.pie.dataLabels.offset,
                        (p + O / 2) % this.fullAngle
                      ))
                    : this.chartType === "donut" &&
                      (m = F.polarToCartesian(
                        this.centerX,
                        this.centerY,
                        (l.globals.radialSize + this.donutSize) / 2 +
                          l.config.plotOptions.pie.dataLabels.offset,
                        (p + O / 2) % this.fullAngle
                      )),
                    T.add(G);
                  var k = 0;
                  if (
                    (!this.initialAnim ||
                    l.globals.resized ||
                    l.globals.dataChanged
                      ? this.animBeginArr.push(0)
                      : ((k =
                          (O / this.fullAngle) *
                          l.config.chart.animations.speed) === 0 && (k = 1),
                        (this.animDur = k + this.animDur),
                        this.animBeginArr.push(this.animDur)),
                    this.dynamicAnim && l.globals.dataChanged
                      ? this.animatePaths(G, {
                          size: this.sliceSizes[S],
                          endAngle: b,
                          startAngle: p,
                          prevStartAngle: v,
                          prevEndAngle: _,
                          animateStartingPos: !0,
                          i: S,
                          animBeginArr: this.animBeginArr,
                          shouldSetPrevPaths: !0,
                          dur: l.config.chart.animations.dynamicAnimation.speed,
                        })
                      : this.animatePaths(G, {
                          size: this.sliceSizes[S],
                          endAngle: b,
                          startAngle: p,
                          i: S,
                          totalItems: i.length - 1,
                          animBeginArr: this.animBeginArr,
                          dur: k,
                        }),
                    l.config.plotOptions.pie.expandOnClick &&
                      this.chartType !== "polarArea" &&
                      G.click(this.pieClicked.bind(this, S)),
                    l.globals.selectedDataPoints[0] !== void 0 &&
                      l.globals.selectedDataPoints[0].indexOf(S) > -1 &&
                      this.pieClicked(S),
                    l.config.dataLabels.enabled)
                  ) {
                    var N = m.x,
                      X = m.y,
                      K = (100 * O) / this.fullAngle + "%";
                    if (
                      O !== 0 &&
                      l.config.plotOptions.pie.dataLabels.minAngleToShowLabel <
                        i[S]
                    ) {
                      var ee = l.config.dataLabels.formatter;
                      ee !== void 0 &&
                        (K = ee(l.globals.seriesPercent[S][0], {
                          seriesIndex: S,
                          w: l,
                        }));
                      var fe = l.globals.dataLabels.style.colors[S],
                        ge = h.group({ class: "apexcharts-datalabels" }),
                        Pe = h.drawText({
                          x: N,
                          y: X,
                          text: K,
                          textAnchor: "middle",
                          fontSize: l.config.dataLabels.style.fontSize,
                          fontFamily: l.config.dataLabels.style.fontFamily,
                          fontWeight: l.config.dataLabels.style.fontWeight,
                          foreColor: fe,
                        });
                      if (
                        (ge.add(Pe), l.config.dataLabels.dropShadow.enabled)
                      ) {
                        var We = l.config.dataLabels.dropShadow;
                        c.dropShadow(Pe, We);
                      }
                      Pe.node.classList.add("apexcharts-pie-label"),
                        l.config.chart.animations.animate &&
                          l.globals.resized === !1 &&
                          (Pe.node.classList.add("apexcharts-pie-label-delay"),
                          (Pe.node.style.animationDelay =
                            l.config.chart.animations.speed / 940 + "s")),
                        this.sliceLabels.push(ge);
                    }
                  }
                }
                return f;
              },
            },
            {
              key: "addListeners",
              value: function (i, s) {
                var l = new C(this.ctx);
                i.node.addEventListener(
                  "mouseenter",
                  l.pathMouseEnter.bind(this, i)
                ),
                  i.node.addEventListener(
                    "mouseleave",
                    l.pathMouseLeave.bind(this, i)
                  ),
                  i.node.addEventListener(
                    "mouseleave",
                    this.revertDataLabelsInner.bind(this, i.node, s)
                  ),
                  i.node.addEventListener(
                    "mousedown",
                    l.pathMouseDown.bind(this, i)
                  ),
                  this.donutDataLabels.total.showAlways ||
                    (i.node.addEventListener(
                      "mouseenter",
                      this.printDataLabelsInner.bind(this, i.node, s)
                    ),
                    i.node.addEventListener(
                      "mousedown",
                      this.printDataLabelsInner.bind(this, i.node, s)
                    ));
              },
            },
            {
              key: "animatePaths",
              value: function (i, s) {
                var l = this.w,
                  c =
                    s.endAngle < s.startAngle
                      ? this.fullAngle + s.endAngle - s.startAngle
                      : s.endAngle - s.startAngle,
                  h = c,
                  d = s.startAngle,
                  f = s.startAngle;
                s.prevStartAngle !== void 0 &&
                  s.prevEndAngle !== void 0 &&
                  ((d = s.prevEndAngle),
                  (h =
                    s.prevEndAngle < s.prevStartAngle
                      ? this.fullAngle + s.prevEndAngle - s.prevStartAngle
                      : s.prevEndAngle - s.prevStartAngle)),
                  s.i === l.config.series.length - 1 &&
                    (c + f > this.fullAngle
                      ? (s.endAngle = s.endAngle - (c + f))
                      : c + f < this.fullAngle &&
                        (s.endAngle = s.endAngle + (this.fullAngle - (c + f)))),
                  c === this.fullAngle && (c = this.fullAngle - 0.01),
                  this.animateArc(i, d, f, c, h, s);
              },
            },
            {
              key: "animateArc",
              value: function (i, s, l, c, h, d) {
                var f,
                  p = this,
                  v = this.w,
                  b = new ce(this.ctx),
                  _ = d.size;
                (isNaN(s) || isNaN(h)) && ((s = l), (h = c), (d.dur = 0));
                var S = c,
                  T = l,
                  O = s < l ? this.fullAngle + s - l : s - l;
                v.globals.dataChanged &&
                  d.shouldSetPrevPaths &&
                  d.prevEndAngle &&
                  ((f = p.getPiePath({
                    me: p,
                    startAngle: d.prevStartAngle,
                    angle:
                      d.prevEndAngle < d.prevStartAngle
                        ? this.fullAngle + d.prevEndAngle - d.prevStartAngle
                        : d.prevEndAngle - d.prevStartAngle,
                    size: _,
                  })),
                  i.attr({ d: f })),
                  d.dur !== 0
                    ? i
                        .animate(d.dur, v.globals.easing, d.animBeginArr[d.i])
                        .afterAll(function () {
                          (p.chartType !== "pie" &&
                            p.chartType !== "donut" &&
                            p.chartType !== "polarArea") ||
                            this.animate(
                              v.config.chart.animations.dynamicAnimation.speed
                            ).attr({ "stroke-width": p.strokeWidth }),
                            d.i === v.config.series.length - 1 &&
                              b.animationCompleted(i);
                        })
                        .during(function (D) {
                          (S = O + (c - O) * D),
                            d.animateStartingPos &&
                              ((S = h + (c - h) * D),
                              (T = s - h + (l - (s - h)) * D)),
                            (f = p.getPiePath({
                              me: p,
                              startAngle: T,
                              angle: S,
                              size: _,
                            })),
                            i.node.setAttribute("data:pathOrig", f),
                            i.attr({ d: f });
                        })
                    : ((f = p.getPiePath({
                        me: p,
                        startAngle: T,
                        angle: c,
                        size: _,
                      })),
                      d.isTrack || (v.globals.animationEnded = !0),
                      i.node.setAttribute("data:pathOrig", f),
                      i.attr({ d: f, "stroke-width": p.strokeWidth }));
              },
            },
            {
              key: "pieClicked",
              value: function (i) {
                var s,
                  l = this.w,
                  c = this,
                  h =
                    c.sliceSizes[i] +
                    (l.config.plotOptions.pie.expandOnClick ? 4 : 0),
                  d = l.globals.dom.Paper.select(
                    ".apexcharts-"
                      .concat(c.chartType.toLowerCase(), "-slice-")
                      .concat(i)
                  ).members[0];
                if (d.attr("data:pieClicked") !== "true") {
                  var f = l.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-pie-area"
                  );
                  Array.prototype.forEach.call(f, function (_) {
                    _.setAttribute("data:pieClicked", "false");
                    var S = _.getAttribute("data:pathOrig");
                    S && _.setAttribute("d", S);
                  }),
                    d.attr("data:pieClicked", "true");
                  var p = parseInt(d.attr("data:startAngle"), 10),
                    v = parseInt(d.attr("data:angle"), 10);
                  (s = c.getPiePath({
                    me: c,
                    startAngle: p,
                    angle: v,
                    size: h,
                  })),
                    v !== 360 && d.plot(s);
                } else {
                  d.attr({ "data:pieClicked": "false" }),
                    this.revertDataLabelsInner(d.node, this.donutDataLabels);
                  var b = d.attr("data:pathOrig");
                  d.attr({ d: b });
                }
              },
            },
            {
              key: "getChangedPath",
              value: function (i, s) {
                var l = "";
                return (
                  this.dynamicAnim &&
                    this.w.globals.dataChanged &&
                    (l = this.getPiePath({
                      me: this,
                      startAngle: i,
                      angle: s - i,
                      size: this.size,
                    })),
                  l
                );
              },
            },
            {
              key: "getPiePath",
              value: function (i) {
                var s,
                  l = i.me,
                  c = i.startAngle,
                  h = i.angle,
                  d = i.size,
                  f = new C(this.ctx),
                  p = c,
                  v = (Math.PI * (p - 90)) / 180,
                  b = h + c;
                Math.ceil(b) >=
                  this.fullAngle +
                    (this.w.config.plotOptions.pie.startAngle %
                      this.fullAngle) &&
                  (b =
                    this.fullAngle +
                    (this.w.config.plotOptions.pie.startAngle %
                      this.fullAngle) -
                    0.01),
                  Math.ceil(b) > this.fullAngle && (b -= this.fullAngle);
                var _ = (Math.PI * (b - 90)) / 180,
                  S = l.centerX + d * Math.cos(v),
                  T = l.centerY + d * Math.sin(v),
                  O = l.centerX + d * Math.cos(_),
                  D = l.centerY + d * Math.sin(_),
                  V = F.polarToCartesian(l.centerX, l.centerY, l.donutSize, b),
                  G = F.polarToCartesian(l.centerX, l.centerY, l.donutSize, p),
                  Q = h > 180 ? 1 : 0,
                  m = ["M", S, T, "A", d, d, 0, Q, 1, O, D];
                return (
                  (s =
                    l.chartType === "donut"
                      ? []
                          .concat(m, [
                            "L",
                            V.x,
                            V.y,
                            "A",
                            l.donutSize,
                            l.donutSize,
                            0,
                            Q,
                            0,
                            G.x,
                            G.y,
                            "L",
                            S,
                            T,
                            "z",
                          ])
                          .join(" ")
                      : l.chartType === "pie" || l.chartType === "polarArea"
                      ? []
                          .concat(m, ["L", l.centerX, l.centerY, "L", S, T])
                          .join(" ")
                      : [].concat(m).join(" ")),
                  f.roundPathCorners(s, 2 * this.strokeWidth)
                );
              },
            },
            {
              key: "drawPolarElements",
              value: function (i) {
                var s = this.w,
                  l = new Rt(this.ctx),
                  c = new C(this.ctx),
                  h = new La(this.ctx),
                  d = c.group(),
                  f = c.group(),
                  p = l.niceScale(
                    0,
                    Math.ceil(this.maxY),
                    s.config.yaxis[0].tickAmount,
                    0,
                    !0
                  ),
                  v = p.result.reverse(),
                  b = p.result.length;
                this.maxY = p.niceMax;
                for (
                  var _ = s.globals.radialSize, S = _ / (b - 1), T = 0;
                  T < b - 1;
                  T++
                ) {
                  var O = c.drawCircle(_);
                  if (
                    (O.attr({
                      cx: this.centerX,
                      cy: this.centerY,
                      fill: "none",
                      "stroke-width":
                        s.config.plotOptions.polarArea.rings.strokeWidth,
                      stroke: s.config.plotOptions.polarArea.rings.strokeColor,
                    }),
                    s.config.yaxis[0].show)
                  ) {
                    var D = h.drawYAxisTexts(
                      this.centerX,
                      this.centerY -
                        _ +
                        parseInt(s.config.yaxis[0].labels.style.fontSize, 10) /
                          2,
                      T,
                      v[T]
                    );
                    f.add(D);
                  }
                  d.add(O), (_ -= S);
                }
                this.drawSpokes(i), i.add(d), i.add(f);
              },
            },
            {
              key: "renderInnerDataLabels",
              value: function (i, s) {
                var l = this.w,
                  c = new C(this.ctx),
                  h = c.group({
                    class: "apexcharts-datalabels-group",
                    transform: "translate("
                      .concat(s.translateX ? s.translateX : 0, ", ")
                      .concat(s.translateY ? s.translateY : 0, ") scale(")
                      .concat(l.config.plotOptions.pie.customScale, ")"),
                  }),
                  d = i.total.show;
                h.node.style.opacity = s.opacity;
                var f,
                  p,
                  v = s.centerX,
                  b = s.centerY;
                f =
                  i.name.color === void 0 ? l.globals.colors[0] : i.name.color;
                var _ = i.name.fontSize,
                  S = i.name.fontFamily,
                  T = i.name.fontWeight;
                p =
                  i.value.color === void 0
                    ? l.config.chart.foreColor
                    : i.value.color;
                var O = i.value.formatter,
                  D = "",
                  V = "";
                if (
                  (d
                    ? ((f = i.total.color),
                      (_ = i.total.fontSize),
                      (S = i.total.fontFamily),
                      (T = i.total.fontWeight),
                      (V = i.total.label),
                      (D = i.total.formatter(l)))
                    : l.globals.series.length === 1 &&
                      ((D = O(l.globals.series[0], l)),
                      (V = l.globals.seriesNames[0])),
                  V && (V = i.name.formatter(V, i.total.show, l)),
                  i.name.show)
                ) {
                  var G = c.drawText({
                    x: v,
                    y: b + parseFloat(i.name.offsetY),
                    text: V,
                    textAnchor: "middle",
                    foreColor: f,
                    fontSize: _,
                    fontWeight: T,
                    fontFamily: S,
                  });
                  G.node.classList.add("apexcharts-datalabel-label"), h.add(G);
                }
                if (i.value.show) {
                  var Q = i.name.show
                      ? parseFloat(i.value.offsetY) + 16
                      : i.value.offsetY,
                    m = c.drawText({
                      x: v,
                      y: b + Q,
                      text: D,
                      textAnchor: "middle",
                      foreColor: p,
                      fontWeight: i.value.fontWeight,
                      fontSize: i.value.fontSize,
                      fontFamily: i.value.fontFamily,
                    });
                  m.node.classList.add("apexcharts-datalabel-value"), h.add(m);
                }
                return h;
              },
            },
            {
              key: "printInnerLabels",
              value: function (i, s, l, c) {
                var h,
                  d = this.w;
                c
                  ? (h =
                      i.name.color === void 0
                        ? d.globals.colors[
                            parseInt(c.parentNode.getAttribute("rel"), 10) - 1
                          ]
                        : i.name.color)
                  : d.globals.series.length > 1 &&
                    i.total.show &&
                    (h = i.total.color);
                var f = d.globals.dom.baseEl.querySelector(
                    ".apexcharts-datalabel-label"
                  ),
                  p = d.globals.dom.baseEl.querySelector(
                    ".apexcharts-datalabel-value"
                  );
                (l = (0, i.value.formatter)(l, d)),
                  c ||
                    typeof i.total.formatter != "function" ||
                    (l = i.total.formatter(d));
                var v = s === i.total.label;
                (s = i.name.formatter(s, v, d)),
                  f !== null && (f.textContent = s),
                  p !== null && (p.textContent = l),
                  f !== null && (f.style.fill = h);
              },
            },
            {
              key: "printDataLabelsInner",
              value: function (i, s) {
                var l = this.w,
                  c = i.getAttribute("data:value"),
                  h =
                    l.globals.seriesNames[
                      parseInt(i.parentNode.getAttribute("rel"), 10) - 1
                    ];
                l.globals.series.length > 1 &&
                  this.printInnerLabels(s, h, c, i);
                var d = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabels-group"
                );
                d !== null && (d.style.opacity = 1);
              },
            },
            {
              key: "drawSpokes",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = new C(this.ctx),
                  h = l.config.plotOptions.polarArea.spokes;
                if (h.strokeWidth !== 0) {
                  for (
                    var d = [], f = 360 / l.globals.series.length, p = 0;
                    p < l.globals.series.length;
                    p++
                  )
                    d.push(
                      F.polarToCartesian(
                        this.centerX,
                        this.centerY,
                        l.globals.radialSize,
                        l.config.plotOptions.pie.startAngle + f * p
                      )
                    );
                  d.forEach(function (v, b) {
                    var _ = c.drawLine(
                      v.x,
                      v.y,
                      s.centerX,
                      s.centerY,
                      Array.isArray(h.connectorColors)
                        ? h.connectorColors[b]
                        : h.connectorColors
                    );
                    i.add(_);
                  });
                }
              },
            },
            {
              key: "revertDataLabelsInner",
              value: function (i, s, l) {
                var c = this,
                  h = this.w,
                  d = h.globals.dom.baseEl.querySelector(
                    ".apexcharts-datalabels-group"
                  ),
                  f = !1,
                  p = h.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-pie-area"
                  ),
                  v = function (S) {
                    var T = S.makeSliceOut,
                      O = S.printLabel;
                    Array.prototype.forEach.call(p, function (D) {
                      D.getAttribute("data:pieClicked") === "true" &&
                        (T && (f = !0), O && c.printDataLabelsInner(D, s));
                    });
                  };
                if (
                  (v({ makeSliceOut: !0, printLabel: !1 }),
                  s.total.show && h.globals.series.length > 1)
                )
                  f && !s.total.showAlways
                    ? v({ makeSliceOut: !1, printLabel: !0 })
                    : this.printInnerLabels(
                        s,
                        s.total.label,
                        s.total.formatter(h)
                      );
                else if ((v({ makeSliceOut: !1, printLabel: !0 }), !f))
                  if (
                    h.globals.selectedDataPoints.length &&
                    h.globals.series.length > 1
                  )
                    if (h.globals.selectedDataPoints[0].length > 0) {
                      var b = h.globals.selectedDataPoints[0],
                        _ = h.globals.dom.baseEl.querySelector(
                          ".apexcharts-"
                            .concat(this.chartType.toLowerCase(), "-slice-")
                            .concat(b)
                        );
                      this.printDataLabelsInner(_, s);
                    } else
                      d &&
                        h.globals.selectedDataPoints.length &&
                        h.globals.selectedDataPoints[0].length === 0 &&
                        (d.style.opacity = 0);
                  else
                    d && h.globals.series.length > 1 && (d.style.opacity = 0);
              },
            },
          ]),
          U
        );
      })(),
      ns = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.chartType = this.w.config.chart.type),
            (this.initialAnim = this.w.config.chart.animations.enabled),
            (this.dynamicAnim =
              this.initialAnim &&
              this.w.config.chart.animations.dynamicAnimation.enabled),
            (this.animDur = 0);
          var s = this.w;
          (this.graphics = new C(this.ctx)),
            (this.lineColorArr =
              s.globals.stroke.colors !== void 0
                ? s.globals.stroke.colors
                : s.globals.colors),
            (this.defaultSize =
              s.globals.svgHeight < s.globals.svgWidth
                ? s.globals.gridHeight + 1.5 * s.globals.goldenPadding
                : s.globals.gridWidth),
            (this.isLog = s.config.yaxis[0].logarithmic),
            (this.coreUtils = new ke(this.ctx)),
            (this.maxValue = this.isLog
              ? this.coreUtils.getLogVal(s.globals.maxY, 0)
              : s.globals.maxY),
            (this.minValue = this.isLog
              ? this.coreUtils.getLogVal(this.w.globals.minY, 0)
              : s.globals.minY),
            (this.polygons = s.config.plotOptions.radar.polygons),
            (this.strokeWidth = s.config.stroke.show
              ? s.config.stroke.width
              : 0),
            (this.size =
              this.defaultSize / 2.1 -
              this.strokeWidth -
              s.config.chart.dropShadow.blur),
            s.config.xaxis.labels.show &&
              (this.size = this.size - s.globals.xAxisLabelsWidth / 1.75),
            s.config.plotOptions.radar.size !== void 0 &&
              (this.size = s.config.plotOptions.radar.size),
            (this.dataRadiusOfPercent = []),
            (this.dataRadius = []),
            (this.angleArr = []),
            (this.yaxisLabelsTextsPos = []);
        }
        return (
          g(U, [
            {
              key: "draw",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = new Re(this.ctx),
                  h = [],
                  d = new ct(this.ctx);
                i.length &&
                  (this.dataPointsLen =
                    i[l.globals.maxValsInArrayIndex].length),
                  (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
                var f = l.globals.gridWidth / 2,
                  p = l.globals.gridHeight / 2,
                  v = f + l.config.plotOptions.radar.offsetX,
                  b = p + l.config.plotOptions.radar.offsetY,
                  _ = this.graphics.group({
                    class: "apexcharts-radar-series apexcharts-plot-series",
                    transform: "translate("
                      .concat(v || 0, ", ")
                      .concat(b || 0, ")"),
                  }),
                  S = [],
                  T = null,
                  O = null;
                if (
                  ((this.yaxisLabels = this.graphics.group({
                    class: "apexcharts-yaxis",
                  })),
                  i.forEach(function (V, G) {
                    var Q = V.length === l.globals.dataPoints,
                      m = s.graphics
                        .group()
                        .attr({
                          class: "apexcharts-series",
                          "data:longestSeries": Q,
                          seriesName: F.escapeString(l.globals.seriesNames[G]),
                          rel: G + 1,
                          "data:realIndex": G,
                        });
                    (s.dataRadiusOfPercent[G] = []),
                      (s.dataRadius[G] = []),
                      (s.angleArr[G] = []),
                      V.forEach(function (ze, ut) {
                        var St = Math.abs(s.maxValue - s.minValue);
                        (ze += Math.abs(s.minValue)),
                          s.isLog && (ze = s.coreUtils.getLogVal(ze, 0)),
                          (s.dataRadiusOfPercent[G][ut] = ze / St),
                          (s.dataRadius[G][ut] =
                            s.dataRadiusOfPercent[G][ut] * s.size),
                          (s.angleArr[G][ut] = ut * s.disAngle);
                      }),
                      (S = s.getDataPointsPos(s.dataRadius[G], s.angleArr[G]));
                    var k = s.createPaths(S, { x: 0, y: 0 });
                    (T = s.graphics.group({
                      class:
                        "apexcharts-series-markers-wrap apexcharts-element-hidden",
                    })),
                      (O = s.graphics.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": G,
                      })),
                      l.globals.delayedElements.push({ el: T.node, index: G });
                    var N = {
                        i: G,
                        realIndex: G,
                        animationDelay: G,
                        initialSpeed: l.config.chart.animations.speed,
                        dataChangeSpeed:
                          l.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-radar",
                        shouldClipToGrid: !1,
                        bindEventsOnPaths: !1,
                        stroke: l.globals.stroke.colors[G],
                        strokeLineCap: l.config.stroke.lineCap,
                      },
                      X = null;
                    l.globals.previousPaths.length > 0 &&
                      (X = s.getPreviousPath(G));
                    for (var K = 0; K < k.linePathsTo.length; K++) {
                      var ee = s.graphics.renderPaths(
                        r(
                          r({}, N),
                          {},
                          {
                            pathFrom: X === null ? k.linePathsFrom[K] : X,
                            pathTo: k.linePathsTo[K],
                            strokeWidth: Array.isArray(s.strokeWidth)
                              ? s.strokeWidth[G]
                              : s.strokeWidth,
                            fill: "none",
                            drawShadow: !1,
                          }
                        )
                      );
                      m.add(ee);
                      var fe = c.fillPath({ seriesNumber: G }),
                        ge = s.graphics.renderPaths(
                          r(
                            r({}, N),
                            {},
                            {
                              pathFrom: X === null ? k.areaPathsFrom[K] : X,
                              pathTo: k.areaPathsTo[K],
                              strokeWidth: 0,
                              fill: fe,
                              drawShadow: !1,
                            }
                          )
                        );
                      if (l.config.chart.dropShadow.enabled) {
                        var Pe = new ye(s.ctx),
                          We = l.config.chart.dropShadow;
                        Pe.dropShadow(
                          ge,
                          Object.assign({}, We, { noUserSpaceOnUse: !0 }),
                          G
                        );
                      }
                      m.add(ge);
                    }
                    V.forEach(function (ze, ut) {
                      var St = new $e(s.ctx).getMarkerConfig({
                          cssClass: "apexcharts-marker",
                          seriesIndex: G,
                          dataPointIndex: ut,
                        }),
                        zt = s.graphics.drawMarker(S[ut].x, S[ut].y, St);
                      zt.attr("rel", ut),
                        zt.attr("j", ut),
                        zt.attr("index", G),
                        zt.node.setAttribute("default-marker-size", St.pSize);
                      var Ot = s.graphics.group({
                        class: "apexcharts-series-markers",
                      });
                      Ot && Ot.add(zt), T.add(Ot), m.add(T);
                      var dn = l.config.dataLabels;
                      if (dn.enabled) {
                        var Ln = dn.formatter(l.globals.series[G][ut], {
                          seriesIndex: G,
                          dataPointIndex: ut,
                          w: l,
                        });
                        d.plotDataLabelsText({
                          x: S[ut].x,
                          y: S[ut].y,
                          text: Ln,
                          textAnchor: "middle",
                          i: G,
                          j: G,
                          parent: O,
                          offsetCorrection: !1,
                          dataLabelsConfig: r({}, dn),
                        });
                      }
                      m.add(O);
                    }),
                      h.push(m);
                  }),
                  this.drawPolygons({ parent: _ }),
                  l.config.xaxis.labels.show)
                ) {
                  var D = this.drawXAxisTexts();
                  _.add(D);
                }
                return (
                  h.forEach(function (V) {
                    _.add(V);
                  }),
                  _.add(this.yaxisLabels),
                  _
                );
              },
            },
            {
              key: "drawPolygons",
              value: function (i) {
                for (
                  var s = this,
                    l = this.w,
                    c = i.parent,
                    h = new La(this.ctx),
                    d = l.globals.yAxisScale[0].result.reverse(),
                    f = d.length,
                    p = [],
                    v = this.size / (f - 1),
                    b = 0;
                  b < f;
                  b++
                )
                  p[b] = v * b;
                p.reverse();
                var _ = [],
                  S = [];
                p.forEach(function (T, O) {
                  var D = F.getPolygonPos(T, s.dataPointsLen),
                    V = "";
                  D.forEach(function (G, Q) {
                    if (O === 0) {
                      var m = s.graphics.drawLine(
                        G.x,
                        G.y,
                        0,
                        0,
                        Array.isArray(s.polygons.connectorColors)
                          ? s.polygons.connectorColors[Q]
                          : s.polygons.connectorColors
                      );
                      S.push(m);
                    }
                    Q === 0 && s.yaxisLabelsTextsPos.push({ x: G.x, y: G.y }),
                      (V += G.x + "," + G.y + " ");
                  }),
                    _.push(V);
                }),
                  _.forEach(function (T, O) {
                    var D = s.polygons.strokeColors,
                      V = s.polygons.strokeWidth,
                      G = s.graphics.drawPolygon(
                        T,
                        Array.isArray(D) ? D[O] : D,
                        Array.isArray(V) ? V[O] : V,
                        l.globals.radarPolygons.fill.colors[O]
                      );
                    c.add(G);
                  }),
                  S.forEach(function (T) {
                    c.add(T);
                  }),
                  l.config.yaxis[0].show &&
                    this.yaxisLabelsTextsPos.forEach(function (T, O) {
                      var D = h.drawYAxisTexts(T.x, T.y, O, d[O]);
                      s.yaxisLabels.add(D);
                    });
              },
            },
            {
              key: "drawXAxisTexts",
              value: function () {
                var i = this,
                  s = this.w,
                  l = s.config.xaxis.labels,
                  c = this.graphics.group({ class: "apexcharts-xaxis" }),
                  h = F.getPolygonPos(this.size, this.dataPointsLen);
                return (
                  s.globals.labels.forEach(function (d, f) {
                    var p = s.config.xaxis.labels.formatter,
                      v = new ct(i.ctx);
                    if (h[f]) {
                      var b = i.getTextPos(h[f], i.size),
                        _ = p(d, { seriesIndex: -1, dataPointIndex: f, w: s });
                      v.plotDataLabelsText({
                        x: b.newX,
                        y: b.newY,
                        text: _,
                        textAnchor: b.textAnchor,
                        i: f,
                        j: f,
                        parent: c,
                        color:
                          Array.isArray(l.style.colors) && l.style.colors[f]
                            ? l.style.colors[f]
                            : "#a8a8a8",
                        dataLabelsConfig: r(
                          {
                            textAnchor: b.textAnchor,
                            dropShadow: { enabled: !1 },
                          },
                          l
                        ),
                        offsetCorrection: !1,
                      });
                    }
                  }),
                  c
                );
              },
            },
            {
              key: "createPaths",
              value: function (i, s) {
                var l = this,
                  c = [],
                  h = [],
                  d = [],
                  f = [];
                if (i.length) {
                  (h = [this.graphics.move(s.x, s.y)]),
                    (f = [this.graphics.move(s.x, s.y)]);
                  var p = this.graphics.move(i[0].x, i[0].y),
                    v = this.graphics.move(i[0].x, i[0].y);
                  i.forEach(function (b, _) {
                    (p += l.graphics.line(b.x, b.y)),
                      (v += l.graphics.line(b.x, b.y)),
                      _ === i.length - 1 && ((p += "Z"), (v += "Z"));
                  }),
                    c.push(p),
                    d.push(v);
                }
                return {
                  linePathsFrom: h,
                  linePathsTo: c,
                  areaPathsFrom: f,
                  areaPathsTo: d,
                };
              },
            },
            {
              key: "getTextPos",
              value: function (i, s) {
                var l = "middle",
                  c = i.x,
                  h = i.y;
                return (
                  Math.abs(i.x) >= 10
                    ? i.x > 0
                      ? ((l = "start"), (c += 10))
                      : i.x < 0 && ((l = "end"), (c -= 10))
                    : (l = "middle"),
                  Math.abs(i.y) >= s - 10 &&
                    (i.y < 0 ? (h -= 10) : i.y > 0 && (h += 10)),
                  { textAnchor: l, newX: c, newY: h }
                );
              },
            },
            {
              key: "getPreviousPath",
              value: function (i) {
                for (
                  var s = this.w, l = null, c = 0;
                  c < s.globals.previousPaths.length;
                  c++
                ) {
                  var h = s.globals.previousPaths[c];
                  h.paths.length > 0 &&
                    parseInt(h.realIndex, 10) === parseInt(i, 10) &&
                    s.globals.previousPaths[c].paths[0] !== void 0 &&
                    (l = s.globals.previousPaths[c].paths[0].d);
                }
                return l;
              },
            },
            {
              key: "getDataPointsPos",
              value: function (i, s) {
                var l =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : this.dataPointsLen;
                (i = i || []), (s = s || []);
                for (var c = [], h = 0; h < l; h++) {
                  var d = {};
                  (d.x = i[h] * Math.sin(s[h])),
                    (d.y = -i[h] * Math.cos(s[h])),
                    c.push(d);
                }
                return c;
              },
            },
          ]),
          U
        );
      })(),
      Jo = (function (U) {
        E(s, ua);
        var i = ae(s);
        function s(l) {
          var c;
          o(this, s),
            ((c = i.call(this, l)).ctx = l),
            (c.w = l.w),
            (c.animBeginArr = [0]),
            (c.animDur = 0);
          var h = c.w;
          return (
            (c.startAngle = h.config.plotOptions.radialBar.startAngle),
            (c.endAngle = h.config.plotOptions.radialBar.endAngle),
            (c.totalAngle = Math.abs(
              h.config.plotOptions.radialBar.endAngle -
                h.config.plotOptions.radialBar.startAngle
            )),
            (c.trackStartAngle =
              h.config.plotOptions.radialBar.track.startAngle),
            (c.trackEndAngle = h.config.plotOptions.radialBar.track.endAngle),
            (c.barLabels = c.w.config.plotOptions.radialBar.barLabels),
            (c.donutDataLabels = c.w.config.plotOptions.radialBar.dataLabels),
            (c.radialDataLabels = c.donutDataLabels),
            c.trackStartAngle || (c.trackStartAngle = c.startAngle),
            c.trackEndAngle || (c.trackEndAngle = c.endAngle),
            c.endAngle === 360 && (c.endAngle = 359.99),
            (c.margin = parseInt(
              h.config.plotOptions.radialBar.track.margin,
              10
            )),
            (c.onBarLabelClick = c.onBarLabelClick.bind(B(c))),
            c
          );
        }
        return (
          g(s, [
            {
              key: "draw",
              value: function (l) {
                var c = this.w,
                  h = new C(this.ctx),
                  d = h.group({ class: "apexcharts-radialbar" });
                if (c.globals.noData) return d;
                var f = h.group(),
                  p = this.defaultSize / 2,
                  v = c.globals.gridWidth / 2,
                  b = this.defaultSize / 2.05;
                c.config.chart.sparkline.enabled ||
                  (b =
                    b - c.config.stroke.width - c.config.chart.dropShadow.blur);
                var _ = c.globals.fill.colors;
                if (c.config.plotOptions.radialBar.track.show) {
                  var S = this.drawTracks({
                    size: b,
                    centerX: v,
                    centerY: p,
                    colorArr: _,
                    series: l,
                  });
                  f.add(S);
                }
                var T = this.drawArcs({
                    size: b,
                    centerX: v,
                    centerY: p,
                    colorArr: _,
                    series: l,
                  }),
                  O = 360;
                c.config.plotOptions.radialBar.startAngle < 0 &&
                  (O = this.totalAngle);
                var D = (360 - O) / 360;
                if (
                  ((c.globals.radialSize = b - b * D),
                  this.radialDataLabels.value.show)
                ) {
                  var V = Math.max(
                    this.radialDataLabels.value.offsetY,
                    this.radialDataLabels.name.offsetY
                  );
                  c.globals.radialSize += V * D;
                }
                return (
                  f.add(T.g),
                  c.config.plotOptions.radialBar.hollow.position === "front" &&
                    (T.g.add(T.elHollow),
                    T.dataLabels && T.g.add(T.dataLabels)),
                  d.add(f),
                  d
                );
              },
            },
            {
              key: "drawTracks",
              value: function (l) {
                var c = this.w,
                  h = new C(this.ctx),
                  d = h.group({ class: "apexcharts-tracks" }),
                  f = new ye(this.ctx),
                  p = new Re(this.ctx),
                  v = this.getStrokeWidth(l);
                l.size = l.size - v / 2;
                for (var b = 0; b < l.series.length; b++) {
                  var _ = h.group({
                    class: "apexcharts-radialbar-track apexcharts-track",
                  });
                  d.add(_),
                    _.attr({ rel: b + 1 }),
                    (l.size = l.size - v - this.margin);
                  var S = c.config.plotOptions.radialBar.track,
                    T = p.fillPath({
                      seriesNumber: 0,
                      size: l.size,
                      fillColors: Array.isArray(S.background)
                        ? S.background[b]
                        : S.background,
                      solid: !0,
                    }),
                    O = this.trackStartAngle,
                    D = this.trackEndAngle;
                  Math.abs(D) + Math.abs(O) >= 360 &&
                    (D = 360 - Math.abs(this.startAngle) - 0.1);
                  var V = h.drawPath({
                    d: "",
                    stroke: T,
                    strokeWidth: (v * parseInt(S.strokeWidth, 10)) / 100,
                    fill: "none",
                    strokeOpacity: S.opacity,
                    classes: "apexcharts-radialbar-area",
                  });
                  if (S.dropShadow.enabled) {
                    var G = S.dropShadow;
                    f.dropShadow(V, G);
                  }
                  _.add(V),
                    V.attr("id", "apexcharts-radialbarTrack-" + b),
                    this.animatePaths(V, {
                      centerX: l.centerX,
                      centerY: l.centerY,
                      endAngle: D,
                      startAngle: O,
                      size: l.size,
                      i: b,
                      totalItems: 2,
                      animBeginArr: 0,
                      dur: 0,
                      isTrack: !0,
                      easing: c.globals.easing,
                    });
                }
                return d;
              },
            },
            {
              key: "drawArcs",
              value: function (l) {
                var c = this.w,
                  h = new C(this.ctx),
                  d = new Re(this.ctx),
                  f = new ye(this.ctx),
                  p = h.group(),
                  v = this.getStrokeWidth(l);
                l.size = l.size - v / 2;
                var b = c.config.plotOptions.radialBar.hollow.background,
                  _ =
                    l.size -
                    v * l.series.length -
                    this.margin * l.series.length -
                    (v *
                      parseInt(
                        c.config.plotOptions.radialBar.track.strokeWidth,
                        10
                      )) /
                      100 /
                      2,
                  S = _ - c.config.plotOptions.radialBar.hollow.margin;
                c.config.plotOptions.radialBar.hollow.image !== void 0 &&
                  (b = this.drawHollowImage(l, p, _, b));
                var T = this.drawHollow({
                  size: S,
                  centerX: l.centerX,
                  centerY: l.centerY,
                  fill: b || "transparent",
                });
                if (c.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                  var O = c.config.plotOptions.radialBar.hollow.dropShadow;
                  f.dropShadow(T, O);
                }
                var D = 1;
                !this.radialDataLabels.total.show &&
                  c.globals.series.length > 1 &&
                  (D = 0);
                var V = null;
                this.radialDataLabels.show &&
                  (V = this.renderInnerDataLabels(this.radialDataLabels, {
                    hollowSize: _,
                    centerX: l.centerX,
                    centerY: l.centerY,
                    opacity: D,
                  })),
                  c.config.plotOptions.radialBar.hollow.position === "back" &&
                    (p.add(T), V && p.add(V));
                var G = !1;
                c.config.plotOptions.radialBar.inverseOrder && (G = !0);
                for (
                  var Q = G ? l.series.length - 1 : 0;
                  G ? Q >= 0 : Q < l.series.length;
                  G ? Q-- : Q++
                ) {
                  var m = h.group({
                    class: "apexcharts-series apexcharts-radial-series",
                    seriesName: F.escapeString(c.globals.seriesNames[Q]),
                  });
                  p.add(m),
                    m.attr({ rel: Q + 1, "data:realIndex": Q }),
                    this.ctx.series.addCollapsedClassToSeries(m, Q),
                    (l.size = l.size - v - this.margin);
                  var k = d.fillPath({
                      seriesNumber: Q,
                      size: l.size,
                      value: l.series[Q],
                    }),
                    N = this.startAngle,
                    X = void 0,
                    K =
                      F.negToZero(l.series[Q] > 100 ? 100 : l.series[Q]) / 100,
                    ee = Math.round(this.totalAngle * K) + this.startAngle,
                    fe = void 0;
                  c.globals.dataChanged &&
                    ((X = this.startAngle),
                    (fe =
                      Math.round(
                        (this.totalAngle *
                          F.negToZero(c.globals.previousPaths[Q])) /
                          100
                      ) + X)),
                    Math.abs(ee) + Math.abs(N) >= 360 && (ee -= 0.01),
                    Math.abs(fe) + Math.abs(X) >= 360 && (fe -= 0.01);
                  var ge = ee - N,
                    Pe = Array.isArray(c.config.stroke.dashArray)
                      ? c.config.stroke.dashArray[Q]
                      : c.config.stroke.dashArray,
                    We = h.drawPath({
                      d: "",
                      stroke: k,
                      strokeWidth: v,
                      fill: "none",
                      fillOpacity: c.config.fill.opacity,
                      classes:
                        "apexcharts-radialbar-area apexcharts-radialbar-slice-" +
                        Q,
                      strokeDashArray: Pe,
                    });
                  if (
                    (C.setAttrs(We.node, {
                      "data:angle": ge,
                      "data:value": l.series[Q],
                    }),
                    c.config.chart.dropShadow.enabled)
                  ) {
                    var ze = c.config.chart.dropShadow;
                    f.dropShadow(We, ze, Q);
                  }
                  if (
                    (f.setSelectionFilter(We, 0, Q),
                    this.addListeners(We, this.radialDataLabels),
                    m.add(We),
                    We.attr({ index: 0, j: Q }),
                    this.barLabels.enabled)
                  ) {
                    var ut = F.polarToCartesian(
                        l.centerX,
                        l.centerY,
                        l.size,
                        N
                      ),
                      St = this.barLabels.formatter(c.globals.seriesNames[Q], {
                        seriesIndex: Q,
                        w: c,
                      }),
                      zt = ["apexcharts-radialbar-label"];
                    this.barLabels.onClick || zt.push("apexcharts-no-click");
                    var Ot = this.barLabels.useSeriesColors
                      ? c.globals.colors[Q]
                      : c.config.chart.foreColor;
                    Ot || (Ot = c.config.chart.foreColor);
                    var dn = ut.x - this.barLabels.margin,
                      Ln = ut.y,
                      wn = h.drawText({
                        x: dn,
                        y: Ln,
                        text: St,
                        textAnchor: "end",
                        dominantBaseline: "middle",
                        fontFamily: this.barLabels.fontFamily,
                        fontWeight: this.barLabels.fontWeight,
                        fontSize: this.barLabels.fontSize,
                        foreColor: Ot,
                        cssClass: zt.join(" "),
                      });
                    wn.on("click", this.onBarLabelClick),
                      wn.attr({ rel: Q + 1 }),
                      N !== 0 &&
                        wn.attr({
                          "transform-origin": "".concat(dn, " ").concat(Ln),
                          transform: "rotate(".concat(N, " 0 0)"),
                        }),
                      m.add(wn);
                  }
                  var On = 0;
                  !this.initialAnim ||
                    c.globals.resized ||
                    c.globals.dataChanged ||
                    (On = c.config.chart.animations.speed),
                    c.globals.dataChanged &&
                      (On = c.config.chart.animations.dynamicAnimation.speed),
                    (this.animDur =
                      On / (1.2 * l.series.length) + this.animDur),
                    this.animBeginArr.push(this.animDur),
                    this.animatePaths(We, {
                      centerX: l.centerX,
                      centerY: l.centerY,
                      endAngle: ee,
                      startAngle: N,
                      prevEndAngle: fe,
                      prevStartAngle: X,
                      size: l.size,
                      i: Q,
                      totalItems: 2,
                      animBeginArr: this.animBeginArr,
                      dur: On,
                      shouldSetPrevPaths: !0,
                      easing: c.globals.easing,
                    });
                }
                return { g: p, elHollow: T, dataLabels: V };
              },
            },
            {
              key: "drawHollow",
              value: function (l) {
                var c = new C(this.ctx).drawCircle(2 * l.size);
                return (
                  c.attr({
                    class: "apexcharts-radialbar-hollow",
                    cx: l.centerX,
                    cy: l.centerY,
                    r: l.size,
                    fill: l.fill,
                  }),
                  c
                );
              },
            },
            {
              key: "drawHollowImage",
              value: function (l, c, h, d) {
                var f = this.w,
                  p = new Re(this.ctx),
                  v = F.randomId(),
                  b = f.config.plotOptions.radialBar.hollow.image;
                if (f.config.plotOptions.radialBar.hollow.imageClipped)
                  p.clippedImgArea({
                    width: h,
                    height: h,
                    image: b,
                    patternID: "pattern".concat(f.globals.cuid).concat(v),
                  }),
                    (d = "url(#pattern".concat(f.globals.cuid).concat(v, ")"));
                else {
                  var _ = f.config.plotOptions.radialBar.hollow.imageWidth,
                    S = f.config.plotOptions.radialBar.hollow.imageHeight;
                  if (_ === void 0 && S === void 0) {
                    var T = f.globals.dom.Paper.image(b).loaded(function (D) {
                      this.move(
                        l.centerX -
                          D.width / 2 +
                          f.config.plotOptions.radialBar.hollow.imageOffsetX,
                        l.centerY -
                          D.height / 2 +
                          f.config.plotOptions.radialBar.hollow.imageOffsetY
                      );
                    });
                    c.add(T);
                  } else {
                    var O = f.globals.dom.Paper.image(b).loaded(function (D) {
                      this.move(
                        l.centerX -
                          _ / 2 +
                          f.config.plotOptions.radialBar.hollow.imageOffsetX,
                        l.centerY -
                          S / 2 +
                          f.config.plotOptions.radialBar.hollow.imageOffsetY
                      ),
                        this.size(_, S);
                    });
                    c.add(O);
                  }
                }
                return d;
              },
            },
            {
              key: "getStrokeWidth",
              value: function (l) {
                var c = this.w;
                return (
                  (l.size *
                    (100 -
                      parseInt(
                        c.config.plotOptions.radialBar.hollow.size,
                        10
                      ))) /
                    100 /
                    (l.series.length + 1) -
                  this.margin
                );
              },
            },
            {
              key: "onBarLabelClick",
              value: function (l) {
                var c = parseInt(l.target.getAttribute("rel"), 10) - 1,
                  h = this.barLabels.onClick,
                  d = this.w;
                h && h(d.globals.seriesNames[c], { w: d, seriesIndex: c });
              },
            },
          ]),
          s
        );
      })(),
      el = (function (U) {
        E(s, Ns);
        var i = ae(s);
        function s() {
          return o(this, s), i.apply(this, arguments);
        }
        return (
          g(s, [
            {
              key: "draw",
              value: function (l, c) {
                var h = this.w,
                  d = new C(this.ctx);
                (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                  (this.series = l),
                  (this.seriesRangeStart = h.globals.seriesRangeStart),
                  (this.seriesRangeEnd = h.globals.seriesRangeEnd),
                  this.barHelpers.initVariables(l);
                for (
                  var f = d.group({
                      class:
                        "apexcharts-rangebar-series apexcharts-plot-series",
                    }),
                    p = 0;
                  p < l.length;
                  p++
                ) {
                  var v,
                    b,
                    _,
                    S,
                    T = void 0,
                    O = void 0,
                    D = h.globals.comboCharts ? c[p] : p,
                    V = d.group({
                      class: "apexcharts-series",
                      seriesName: F.escapeString(h.globals.seriesNames[D]),
                      rel: p + 1,
                      "data:realIndex": D,
                    });
                  this.ctx.series.addCollapsedClassToSeries(V, D),
                    l[p].length > 0 && (this.visibleI = this.visibleI + 1);
                  var G = 0,
                    Q = 0;
                  this.yRatio.length > 1 && (this.yaxisIndex = D);
                  var m = this.barHelpers.initialPositions();
                  (O = m.y),
                    (S = m.zeroW),
                    (T = m.x),
                    (Q = m.barWidth),
                    (G = m.barHeight),
                    (v = m.xDivision),
                    (b = m.yDivision),
                    (_ = m.zeroH);
                  for (
                    var k = d.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": D,
                      }),
                      N = d.group({
                        class: "apexcharts-rangebar-goals-markers",
                      }),
                      X = 0;
                    X < h.globals.dataPoints;
                    X++
                  ) {
                    var K,
                      ee = this.barHelpers.getStrokeWidth(p, X, D),
                      fe = this.seriesRangeStart[p][X],
                      ge = this.seriesRangeEnd[p][X],
                      Pe = null,
                      We = null,
                      ze = null,
                      ut = { x: T, y: O, strokeWidth: ee, elSeries: V },
                      St = this.seriesLen;
                    if (
                      (h.config.plotOptions.bar.rangeBarGroupRows && (St = 1),
                      h.config.series[p].data[X] === void 0)
                    )
                      break;
                    if (this.isHorizontal) {
                      ze = O + G * this.visibleI;
                      var zt = (b - G * St) / 2;
                      if (h.config.series[p].data[X].x) {
                        var Ot = this.detectOverlappingBars({
                          i: p,
                          j: X,
                          barYPosition: ze,
                          srty: zt,
                          barHeight: G,
                          yDivision: b,
                          initPositions: m,
                        });
                        (G = Ot.barHeight), (ze = Ot.barYPosition);
                      }
                      Q = (Pe = this.drawRangeBarPaths(
                        r(
                          {
                            indexes: { i: p, j: X, realIndex: D },
                            barHeight: G,
                            barYPosition: ze,
                            zeroW: S,
                            yDivision: b,
                            y1: fe,
                            y2: ge,
                          },
                          ut
                        )
                      )).barWidth;
                    } else {
                      h.globals.isXNumeric &&
                        (T =
                          (h.globals.seriesX[p][X] - h.globals.minX) /
                            this.xRatio -
                          Q / 2),
                        (We = T + Q * this.visibleI);
                      var dn = (v - Q * St) / 2;
                      if (h.config.series[p].data[X].x) {
                        var Ln = this.detectOverlappingBars({
                          i: p,
                          j: X,
                          barXPosition: We,
                          srtx: dn,
                          barWidth: Q,
                          xDivision: v,
                          initPositions: m,
                        });
                        (Q = Ln.barWidth), (We = Ln.barXPosition);
                      }
                      G = (Pe = this.drawRangeColumnPaths(
                        r(
                          {
                            indexes: { i: p, j: X, realIndex: D },
                            barWidth: Q,
                            barXPosition: We,
                            zeroH: _,
                            xDivision: v,
                          },
                          ut
                        )
                      )).barHeight;
                    }
                    var wn = this.barHelpers.drawGoalLine({
                      barXPosition: Pe.barXPosition,
                      barYPosition: ze,
                      goalX: Pe.goalX,
                      goalY: Pe.goalY,
                      barHeight: G,
                      barWidth: Q,
                    });
                    wn && N.add(wn), (O = Pe.y), (T = Pe.x);
                    var On = this.barHelpers.getPathFillColor(l, p, X, D),
                      Sr = h.globals.stroke.colors[D];
                    this.renderSeries(
                      (x(
                        (K = {
                          realIndex: D,
                          pathFill: On,
                          lineFill: Sr,
                          j: X,
                          i: p,
                          x: T,
                          y: O,
                          y1: fe,
                          y2: ge,
                          pathFrom: Pe.pathFrom,
                          pathTo: Pe.pathTo,
                          strokeWidth: ee,
                          elSeries: V,
                          series: l,
                          barHeight: G,
                          barWidth: Q,
                          barXPosition: We,
                          barYPosition: ze,
                        }),
                        "barWidth",
                        Q
                      ),
                      x(K, "elDataLabelsWrap", k),
                      x(K, "elGoalsMarkers", N),
                      x(K, "visibleSeries", this.visibleI),
                      x(K, "type", "rangebar"),
                      K)
                    );
                  }
                  f.add(V);
                }
                return f;
              },
            },
            {
              key: "detectOverlappingBars",
              value: function (l) {
                var c = l.i,
                  h = l.j,
                  d = l.barYPosition,
                  f = l.barXPosition,
                  p = l.srty,
                  v = l.srtx,
                  b = l.barHeight,
                  _ = l.barWidth,
                  S = l.yDivision,
                  T = l.xDivision,
                  O = l.initPositions,
                  D = this.w,
                  V = [],
                  G = D.config.series[c].data[h].rangeName,
                  Q = D.config.series[c].data[h].x,
                  m = Array.isArray(Q) ? Q.join(" ") : Q,
                  k = D.globals.labels
                    .map(function (X) {
                      return Array.isArray(X) ? X.join(" ") : X;
                    })
                    .indexOf(m),
                  N = D.globals.seriesRange[c].findIndex(function (X) {
                    return X.x === m && X.overlaps.length > 0;
                  });
                return (
                  this.isHorizontal
                    ? ((d = D.config.plotOptions.bar.rangeBarGroupRows
                        ? p + S * k
                        : p + b * this.visibleI + S * k),
                      N > -1 &&
                        !D.config.plotOptions.bar.rangeBarOverlap &&
                        (V = D.globals.seriesRange[c][N].overlaps).indexOf(G) >
                          -1 &&
                        (d =
                          (b = O.barHeight / V.length) * this.visibleI +
                          (S *
                            (100 - parseInt(this.barOptions.barHeight, 10))) /
                            100 /
                            2 +
                          b * (this.visibleI + V.indexOf(G)) +
                          S * k))
                    : (k > -1 &&
                        (f = D.config.plotOptions.bar.rangeBarGroupRows
                          ? v + T * k
                          : v + _ * this.visibleI + T * k),
                      N > -1 &&
                        !D.config.plotOptions.bar.rangeBarOverlap &&
                        (V = D.globals.seriesRange[c][N].overlaps).indexOf(G) >
                          -1 &&
                        (f =
                          (_ = O.barWidth / V.length) * this.visibleI +
                          (T * (100 - parseInt(this.barOptions.barWidth, 10))) /
                            100 /
                            2 +
                          _ * (this.visibleI + V.indexOf(G)) +
                          T * k)),
                  {
                    barYPosition: d,
                    barXPosition: f,
                    barHeight: b,
                    barWidth: _,
                  }
                );
              },
            },
            {
              key: "drawRangeColumnPaths",
              value: function (l) {
                var c = l.indexes,
                  h = l.x,
                  d = l.xDivision,
                  f = l.barWidth,
                  p = l.barXPosition,
                  v = l.zeroH,
                  b = this.w,
                  _ = c.i,
                  S = c.j,
                  T = this.yRatio[this.yaxisIndex],
                  O = c.realIndex,
                  D = this.getRangeValue(O, S),
                  V = Math.min(D.start, D.end),
                  G = Math.max(D.start, D.end);
                this.series[_][S] === void 0 || this.series[_][S] === null
                  ? (V = v)
                  : ((V = v - V / T), (G = v - G / T));
                var Q = Math.abs(G - V),
                  m = this.barHelpers.getColumnPaths({
                    barXPosition: p,
                    barWidth: f,
                    y1: V,
                    y2: G,
                    strokeWidth: this.strokeWidth,
                    series: this.seriesRangeEnd,
                    realIndex: c.realIndex,
                    i: O,
                    j: S,
                    w: b,
                  });
                if (b.globals.isXNumeric) {
                  var k = this.getBarXForNumericXAxis({
                    x: h,
                    j: S,
                    realIndex: O,
                    barWidth: f,
                  });
                  (h = k.x), (p = k.barXPosition);
                } else h += d;
                return {
                  pathTo: m.pathTo,
                  pathFrom: m.pathFrom,
                  barHeight: Q,
                  x: h,
                  y: G,
                  goalY: this.barHelpers.getGoalValues("y", null, v, _, S),
                  barXPosition: p,
                };
              },
            },
            {
              key: "drawRangeBarPaths",
              value: function (l) {
                var c = l.indexes,
                  h = l.y,
                  d = l.y1,
                  f = l.y2,
                  p = l.yDivision,
                  v = l.barHeight,
                  b = l.barYPosition,
                  _ = l.zeroW,
                  S = this.w,
                  T = _ + d / this.invertedYRatio,
                  O = _ + f / this.invertedYRatio,
                  D = Math.abs(O - T),
                  V = this.barHelpers.getBarpaths({
                    barYPosition: b,
                    barHeight: v,
                    x1: T,
                    x2: O,
                    strokeWidth: this.strokeWidth,
                    series: this.seriesRangeEnd,
                    i: c.realIndex,
                    realIndex: c.realIndex,
                    j: c.j,
                    w: S,
                  });
                return (
                  S.globals.isXNumeric || (h += p),
                  {
                    pathTo: V.pathTo,
                    pathFrom: V.pathFrom,
                    barWidth: D,
                    x: O,
                    goalX: this.barHelpers.getGoalValues(
                      "x",
                      _,
                      null,
                      c.realIndex,
                      c.j
                    ),
                    y: h,
                  }
                );
              },
            },
            {
              key: "getRangeValue",
              value: function (l, c) {
                var h = this.w;
                return {
                  start: h.globals.seriesRangeStart[l][c],
                  end: h.globals.seriesRangeEnd[l][c],
                };
              },
            },
          ]),
          s
        );
      })(),
      tl = (function () {
        function U(i) {
          o(this, U), (this.w = i.w), (this.lineCtx = i);
        }
        return (
          g(U, [
            {
              key: "sameValueSeriesFix",
              value: function (i, s) {
                var l = this.w;
                if (
                  (l.config.fill.type === "gradient" ||
                    l.config.fill.type[i] === "gradient") &&
                  new ke(this.lineCtx.ctx, l).seriesHaveSameValues(i)
                ) {
                  var c = s[i].slice();
                  (c[c.length - 1] = c[c.length - 1] + 1e-6), (s[i] = c);
                }
                return s;
              },
            },
            {
              key: "calculatePoints",
              value: function (i) {
                var s = i.series,
                  l = i.realIndex,
                  c = i.x,
                  h = i.y,
                  d = i.i,
                  f = i.j,
                  p = i.prevY,
                  v = this.w,
                  b = [],
                  _ = [];
                if (f === 0) {
                  var S =
                    this.lineCtx.categoryAxisCorrection +
                    v.config.markers.offsetX;
                  v.globals.isXNumeric &&
                    (S =
                      (v.globals.seriesX[l][0] - v.globals.minX) /
                        this.lineCtx.xRatio +
                      v.config.markers.offsetX),
                    b.push(S),
                    _.push(
                      F.isNumber(s[d][0]) ? p + v.config.markers.offsetY : null
                    ),
                    b.push(c + v.config.markers.offsetX),
                    _.push(
                      F.isNumber(s[d][f + 1])
                        ? h + v.config.markers.offsetY
                        : null
                    );
                } else
                  b.push(c + v.config.markers.offsetX),
                    _.push(
                      F.isNumber(s[d][f + 1])
                        ? h + v.config.markers.offsetY
                        : null
                    );
                return { x: b, y: _ };
              },
            },
            {
              key: "checkPreviousPaths",
              value: function (i) {
                for (
                  var s = i.pathFromLine,
                    l = i.pathFromArea,
                    c = i.realIndex,
                    h = this.w,
                    d = 0;
                  d < h.globals.previousPaths.length;
                  d++
                ) {
                  var f = h.globals.previousPaths[d];
                  (f.type === "line" || f.type === "area") &&
                    f.paths.length > 0 &&
                    parseInt(f.realIndex, 10) === parseInt(c, 10) &&
                    (f.type === "line"
                      ? ((this.lineCtx.appendPathFrom = !1),
                        (s = h.globals.previousPaths[d].paths[0].d))
                      : f.type === "area" &&
                        ((this.lineCtx.appendPathFrom = !1),
                        (l = h.globals.previousPaths[d].paths[0].d),
                        h.config.stroke.show &&
                          h.globals.previousPaths[d].paths[1] &&
                          (s = h.globals.previousPaths[d].paths[1].d)));
                }
                return { pathFromLine: s, pathFromArea: l };
              },
            },
            {
              key: "determineFirstPrevY",
              value: function (i) {
                var s,
                  l,
                  c = i.i,
                  h = i.series,
                  d = i.prevY,
                  f = i.lineYPosition,
                  p = this.w,
                  v =
                    (p.config.chart.stacked && !p.globals.comboCharts) ||
                    (p.config.chart.stacked &&
                      p.globals.comboCharts &&
                      (!this.w.config.chart.stackOnlyBar ||
                        ((s = this.w.config.series[c]) === null || s === void 0
                          ? void 0
                          : s.type) === "bar"));
                if (
                  ((l = h[c]) === null || l === void 0 ? void 0 : l[0]) !==
                  void 0
                )
                  d =
                    (f =
                      v && c > 0
                        ? this.lineCtx.prevSeriesY[c - 1][0]
                        : this.lineCtx.zeroY) -
                    h[c][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +
                    2 *
                      (this.lineCtx.isReversed
                        ? h[c][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex]
                        : 0);
                else if (v && c > 0 && h[c][0] === void 0) {
                  for (var b = c - 1; b >= 0; b--)
                    if (h[b][0] !== null && h[b][0] !== void 0) {
                      d = f = this.lineCtx.prevSeriesY[b][0];
                      break;
                    }
                }
                return { prevY: d, lineYPosition: f };
              },
            },
          ]),
          U
        );
      })(),
      nl = function (U) {
        for (
          var i,
            s,
            l,
            c,
            h = (function (b) {
              for (
                var _ = [],
                  S = b[0],
                  T = b[1],
                  O = (_[0] = _i(S, T)),
                  D = 1,
                  V = b.length - 1;
                D < V;
                D++
              )
                (S = T), (T = b[D + 1]), (_[D] = 0.5 * (O + (O = _i(S, T))));
              return (_[D] = O), _;
            })(U),
            d = U.length - 1,
            f = [],
            p = 0;
          p < d;
          p++
        )
          (l = _i(U[p], U[p + 1])),
            Math.abs(l) < 1e-6
              ? (h[p] = h[p + 1] = 0)
              : (c = (i = h[p] / l) * i + (s = h[p + 1] / l) * s) > 9 &&
                ((c = (3 * l) / Math.sqrt(c)),
                (h[p] = c * i),
                (h[p + 1] = c * s));
        for (var v = 0; v <= d; v++)
          (c =
            (U[Math.min(d, v + 1)][0] - U[Math.max(0, v - 1)][0]) /
            (6 * (1 + h[v] * h[v]))),
            f.push([c || 0, h[v] * c || 0]);
        return f;
      },
      Ls = function (U, i) {
        for (var s = "", l = 0; l < U.length; l++) {
          var c = U[l],
            h = U[l - 1],
            d = c.length,
            f = h == null ? void 0 : h.length;
          l > 1 && Math.abs(c[d - 2] - h[f - 2]) < i / 25
            ? (s += "L".concat(c[2], ", ").concat(c[3]))
            : d > 4
            ? ((s += "C".concat(c[0], ", ").concat(c[1])),
              (s += ", ".concat(c[2], ", ").concat(c[3])),
              (s += ", ".concat(c[4], ", ").concat(c[5])))
            : d > 2 &&
              ((s += "S".concat(c[0], ", ").concat(c[1])),
              (s += ", ".concat(c[2], ", ").concat(c[3])));
        }
        return s;
      },
      go = function (U) {
        var i = nl(U),
          s = U[1],
          l = U[0],
          c = [],
          h = i[1],
          d = i[0];
        c.push(l, [
          l[0] + d[0],
          l[1] + d[1],
          s[0] - h[0],
          s[1] - h[1],
          s[0],
          s[1],
        ]);
        for (var f = 2, p = i.length; f < p; f++) {
          var v = U[f],
            b = i[f];
          c.push([v[0] - b[0], v[1] - b[1], v[0], v[1]]);
        }
        return c;
      };
    function _i(U, i) {
      return (i[1] - U[1]) / (i[0] - U[0]);
    }
    var qs = (function () {
      function U(i, s, l) {
        o(this, U),
          (this.ctx = i),
          (this.w = i.w),
          (this.xyRatios = s),
          (this.pointsChart =
            !(
              this.w.config.chart.type !== "bubble" &&
              this.w.config.chart.type !== "scatter"
            ) || l),
          (this.scatter = new Fe(this.ctx)),
          (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
          (this.lineHelpers = new tl(this)),
          (this.markers = new $e(this.ctx)),
          (this.prevSeriesY = []),
          (this.categoryAxisCorrection = 0),
          (this.yaxisIndex = 0);
      }
      return (
        g(U, [
          {
            key: "draw",
            value: function (i, s, l, c) {
              var h,
                d = this.w,
                f = new C(this.ctx),
                p = d.globals.comboCharts ? s : d.config.chart.type,
                v = f.group({
                  class: "apexcharts-".concat(
                    p,
                    "-series apexcharts-plot-series"
                  ),
                }),
                b = new ke(this.ctx, d);
              (this.yRatio = this.xyRatios.yRatio),
                (this.zRatio = this.xyRatios.zRatio),
                (this.xRatio = this.xyRatios.xRatio),
                (this.baseLineY = this.xyRatios.baseLineY),
                (i = b.getLogSeries(i)),
                (this.yRatio = b.getLogYRatios(this.yRatio));
              for (var _ = [], S = 0; S < i.length; S++) {
                i = this.lineHelpers.sameValueSeriesFix(S, i);
                var T = d.globals.comboCharts ? l[S] : S;
                this._initSerieVariables(i, S, T);
                var O = [],
                  D = [],
                  V = [],
                  G = d.globals.padHorizontal + this.categoryAxisCorrection;
                this.ctx.series.addCollapsedClassToSeries(this.elSeries, T),
                  d.globals.isXNumeric &&
                    d.globals.seriesX.length > 0 &&
                    (G =
                      (d.globals.seriesX[T][0] - d.globals.minX) / this.xRatio),
                  V.push(G);
                var Q = G,
                  m = this.zeroY,
                  k = this.zeroY;
                (m = this.lineHelpers.determineFirstPrevY({
                  i: S,
                  series: i,
                  prevY: m,
                  lineYPosition: 0,
                }).prevY),
                  d.config.stroke.curve === "smooth" && i[S][0] === null
                    ? O.push(null)
                    : O.push(m),
                  p === "rangeArea" &&
                    ((k = this.lineHelpers.determineFirstPrevY({
                      i: S,
                      series: c,
                      prevY: k,
                      lineYPosition: 0,
                    }).prevY),
                    D.push(k));
                var N = {
                    type: p,
                    series: i,
                    realIndex: T,
                    i: S,
                    x: G,
                    y: 1,
                    pathsFrom: this._calculatePathsFrom({
                      type: p,
                      series: i,
                      i: S,
                      realIndex: T,
                      prevX: Q,
                      prevY: m,
                      prevY2: k,
                    }),
                    linePaths: [],
                    areaPaths: [],
                    seriesIndex: l,
                    lineYPosition: 0,
                    xArrj: V,
                    yArrj: O,
                    y2Arrj: D,
                    seriesRangeEnd: c,
                  },
                  X = this._iterateOverDataPoints(
                    r(
                      r({}, N),
                      {},
                      {
                        iterations:
                          p === "rangeArea" ? i[S].length - 1 : void 0,
                        isRangeStart: !0,
                      }
                    )
                  );
                if (p === "rangeArea") {
                  var K = this._calculatePathsFrom({
                      series: c,
                      i: S,
                      realIndex: T,
                      prevX: Q,
                      prevY: k,
                    }),
                    ee = this._iterateOverDataPoints(
                      r(
                        r({}, N),
                        {},
                        {
                          series: c,
                          pathsFrom: K,
                          iterations: c[S].length - 1,
                          isRangeStart: !1,
                        }
                      )
                    );
                  (X.linePaths[0] = ee.linePath + X.linePath),
                    (X.pathFromLine = ee.pathFromLine + X.pathFromLine);
                }
                this._handlePaths({ type: p, realIndex: T, i: S, paths: X }),
                  this.elSeries.add(this.elPointsMain),
                  this.elSeries.add(this.elDataLabelsWrap),
                  _.push(this.elSeries);
              }
              if (
                (((h = d.config.series[0]) === null || h === void 0
                  ? void 0
                  : h.zIndex) !== void 0 &&
                  _.sort(function (Pe, We) {
                    return (
                      Number(Pe.node.getAttribute("zIndex")) -
                      Number(We.node.getAttribute("zIndex"))
                    );
                  }),
                d.config.chart.stacked)
              )
                for (var fe = _.length; fe > 0; fe--) v.add(_[fe - 1]);
              else for (var ge = 0; ge < _.length; ge++) v.add(_[ge]);
              return v;
            },
          },
          {
            key: "_initSerieVariables",
            value: function (i, s, l) {
              var c = this.w,
                h = new C(this.ctx);
              (this.xDivision =
                c.globals.gridWidth /
                (c.globals.dataPoints -
                  (c.config.xaxis.tickPlacement === "on" ? 1 : 0))),
                (this.strokeWidth = Array.isArray(c.config.stroke.width)
                  ? c.config.stroke.width[l]
                  : c.config.stroke.width),
                this.yRatio.length > 1 && (this.yaxisIndex = l),
                (this.isReversed =
                  c.config.yaxis[this.yaxisIndex] &&
                  c.config.yaxis[this.yaxisIndex].reversed),
                (this.zeroY =
                  c.globals.gridHeight -
                  this.baseLineY[this.yaxisIndex] -
                  (this.isReversed ? c.globals.gridHeight : 0) +
                  (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0)),
                (this.areaBottomY = this.zeroY),
                (this.zeroY > c.globals.gridHeight ||
                  c.config.plotOptions.area.fillTo === "end") &&
                  (this.areaBottomY = c.globals.gridHeight),
                (this.categoryAxisCorrection = this.xDivision / 2),
                (this.elSeries = h.group({
                  class: "apexcharts-series",
                  zIndex:
                    c.config.series[l].zIndex !== void 0
                      ? c.config.series[l].zIndex
                      : l,
                  seriesName: F.escapeString(c.globals.seriesNames[l]),
                })),
                (this.elPointsMain = h.group({
                  class: "apexcharts-series-markers-wrap",
                  "data:realIndex": l,
                })),
                (this.elDataLabelsWrap = h.group({
                  class: "apexcharts-datalabels",
                  "data:realIndex": l,
                }));
              var d = i[s].length === c.globals.dataPoints;
              this.elSeries.attr({
                "data:longestSeries": d,
                rel: s + 1,
                "data:realIndex": l,
              }),
                (this.appendPathFrom = !0);
            },
          },
          {
            key: "_calculatePathsFrom",
            value: function (i) {
              var s,
                l,
                c,
                h,
                d = i.type,
                f = i.series,
                p = i.i,
                v = i.realIndex,
                b = i.prevX,
                _ = i.prevY,
                S = i.prevY2,
                T = this.w,
                O = new C(this.ctx);
              if (f[p][0] === null) {
                for (var D = 0; D < f[p].length; D++)
                  if (f[p][D] !== null) {
                    (b = this.xDivision * D),
                      (_ = this.zeroY - f[p][D] / this.yRatio[this.yaxisIndex]),
                      (s = O.move(b, _)),
                      (l = O.move(b, this.areaBottomY));
                    break;
                  }
              } else
                (s = O.move(b, _)),
                  d === "rangeArea" && (s = O.move(b, S) + O.line(b, _)),
                  (l = O.move(b, this.areaBottomY) + O.line(b, _));
              if (
                ((c = O.move(-1, this.zeroY) + O.line(-1, this.zeroY)),
                (h = O.move(-1, this.zeroY) + O.line(-1, this.zeroY)),
                T.globals.previousPaths.length > 0)
              ) {
                var V = this.lineHelpers.checkPreviousPaths({
                  pathFromLine: c,
                  pathFromArea: h,
                  realIndex: v,
                });
                (c = V.pathFromLine), (h = V.pathFromArea);
              }
              return {
                prevX: b,
                prevY: _,
                linePath: s,
                areaPath: l,
                pathFromLine: c,
                pathFromArea: h,
              };
            },
          },
          {
            key: "_handlePaths",
            value: function (i) {
              var s = i.type,
                l = i.realIndex,
                c = i.i,
                h = i.paths,
                d = this.w,
                f = new C(this.ctx),
                p = new Re(this.ctx);
              this.prevSeriesY.push(h.yArrj),
                (d.globals.seriesXvalues[l] = h.xArrj),
                (d.globals.seriesYvalues[l] = h.yArrj);
              var v = d.config.forecastDataPoints;
              if (v.count > 0 && s !== "rangeArea") {
                var b =
                    d.globals.seriesXvalues[l][
                      d.globals.seriesXvalues[l].length - v.count - 1
                    ],
                  _ = f.drawRect(
                    b,
                    0,
                    d.globals.gridWidth,
                    d.globals.gridHeight,
                    0
                  );
                d.globals.dom.elForecastMask.appendChild(_.node);
                var S = f.drawRect(0, 0, b, d.globals.gridHeight, 0);
                d.globals.dom.elNonForecastMask.appendChild(S.node);
              }
              this.pointsChart ||
                d.globals.delayedElements.push({
                  el: this.elPointsMain.node,
                  index: l,
                });
              var T = {
                i: c,
                realIndex: l,
                animationDelay: c,
                initialSpeed: d.config.chart.animations.speed,
                dataChangeSpeed:
                  d.config.chart.animations.dynamicAnimation.speed,
                className: "apexcharts-".concat(s),
              };
              if (s === "area")
                for (
                  var O = p.fillPath({ seriesNumber: l }), D = 0;
                  D < h.areaPaths.length;
                  D++
                ) {
                  var V = f.renderPaths(
                    r(
                      r({}, T),
                      {},
                      {
                        pathFrom: h.pathFromArea,
                        pathTo: h.areaPaths[D],
                        stroke: "none",
                        strokeWidth: 0,
                        strokeLineCap: null,
                        fill: O,
                      }
                    )
                  );
                  this.elSeries.add(V);
                }
              if (d.config.stroke.show && !this.pointsChart) {
                var G = null;
                if (s === "line") G = p.fillPath({ seriesNumber: l, i: c });
                else if (d.config.stroke.fill.type === "solid")
                  G = d.globals.stroke.colors[l];
                else {
                  var Q = d.config.fill;
                  (d.config.fill = d.config.stroke.fill),
                    (G = p.fillPath({ seriesNumber: l, i: c })),
                    (d.config.fill = Q);
                }
                for (var m = 0; m < h.linePaths.length; m++) {
                  var k = G;
                  s === "rangeArea" && (k = p.fillPath({ seriesNumber: l }));
                  var N = r(
                      r({}, T),
                      {},
                      {
                        pathFrom: h.pathFromLine,
                        pathTo: h.linePaths[m],
                        stroke: G,
                        strokeWidth: this.strokeWidth,
                        strokeLineCap: d.config.stroke.lineCap,
                        fill: s === "rangeArea" ? k : "none",
                      }
                    ),
                    X = f.renderPaths(N);
                  if (
                    (this.elSeries.add(X),
                    X.attr("fill-rule", "evenodd"),
                    v.count > 0 && s !== "rangeArea")
                  ) {
                    var K = f.renderPaths(N);
                    K.node.setAttribute("stroke-dasharray", v.dashArray),
                      v.strokeWidth &&
                        K.node.setAttribute("stroke-width", v.strokeWidth),
                      this.elSeries.add(K),
                      K.attr(
                        "clip-path",
                        "url(#forecastMask".concat(d.globals.cuid, ")")
                      ),
                      X.attr(
                        "clip-path",
                        "url(#nonForecastMask".concat(d.globals.cuid, ")")
                      );
                  }
                }
              }
            },
          },
          {
            key: "_iterateOverDataPoints",
            value: function (i) {
              var s,
                l = this,
                c = i.type,
                h = i.series,
                d = i.iterations,
                f = i.realIndex,
                p = i.i,
                v = i.x,
                b = i.y,
                _ = i.pathsFrom,
                S = i.linePaths,
                T = i.areaPaths,
                O = i.seriesIndex,
                D = i.lineYPosition,
                V = i.xArrj,
                G = i.yArrj,
                Q = i.y2Arrj,
                m = i.isRangeStart,
                k = i.seriesRangeEnd,
                N = this.w,
                X = new C(this.ctx),
                K = this.yRatio,
                ee = _.prevY,
                fe = _.linePath,
                ge = _.areaPath,
                Pe = _.pathFromLine,
                We = _.pathFromArea,
                ze = F.isNumber(N.globals.minYArr[f])
                  ? N.globals.minYArr[f]
                  : N.globals.minY;
              d ||
                (d =
                  N.globals.dataPoints > 1
                    ? N.globals.dataPoints - 1
                    : N.globals.dataPoints);
              for (
                var ut = function (Sr, Br) {
                    return (
                      Br -
                      Sr / K[l.yaxisIndex] +
                      2 * (l.isReversed ? Sr / K[l.yaxisIndex] : 0)
                    );
                  },
                  St = b,
                  zt =
                    (N.config.chart.stacked && !N.globals.comboCharts) ||
                    (N.config.chart.stacked &&
                      N.globals.comboCharts &&
                      (!this.w.config.chart.stackOnlyBar ||
                        ((s = this.w.config.series[f]) === null || s === void 0
                          ? void 0
                          : s.type) === "bar")),
                  Ot = 0;
                Ot < d;
                Ot++
              ) {
                var dn = h[p][Ot + 1] === void 0 || h[p][Ot + 1] === null;
                if (N.globals.isXNumeric) {
                  var Ln = N.globals.seriesX[f][Ot + 1];
                  N.globals.seriesX[f][Ot + 1] === void 0 &&
                    (Ln = N.globals.seriesX[f][d - 1]),
                    (v = (Ln - N.globals.minX) / this.xRatio);
                } else v += this.xDivision;
                zt
                  ? p > 0 &&
                    N.globals.collapsedSeries.length <
                      N.config.series.length - 1
                    ? (D =
                        this.prevSeriesY[
                          (function (Sr) {
                            for (
                              var Br = Sr, ys = 0;
                              ys < N.globals.series.length;
                              ys++
                            )
                              if (
                                N.globals.collapsedSeriesIndices.indexOf(Sr) >
                                -1
                              ) {
                                Br--;
                                break;
                              }
                            return Br >= 0 ? Br : 0;
                          })(p - 1)
                        ][Ot + 1])
                    : (D = this.zeroY)
                  : (D = this.zeroY),
                  dn
                    ? (b = ut(ze, D))
                    : ((b = ut(h[p][Ot + 1], D)),
                      c === "rangeArea" && (St = ut(k[p][Ot + 1], D))),
                  V.push(v),
                  dn && N.config.stroke.curve === "smooth"
                    ? G.push(null)
                    : G.push(b),
                  Q.push(St);
                var wn = this.lineHelpers.calculatePoints({
                    series: h,
                    x: v,
                    y: b,
                    realIndex: f,
                    i: p,
                    j: Ot,
                    prevY: ee,
                  }),
                  On = this._createPaths({
                    type: c,
                    series: h,
                    i: p,
                    realIndex: f,
                    j: Ot,
                    x: v,
                    y: b,
                    y2: St,
                    xArrj: V,
                    yArrj: G,
                    y2Arrj: Q,
                    linePath: fe,
                    areaPath: ge,
                    linePaths: S,
                    areaPaths: T,
                    seriesIndex: O,
                    isRangeStart: m,
                  });
                (T = On.areaPaths),
                  (S = On.linePaths),
                  (ge = On.areaPath),
                  (fe = On.linePath),
                  !this.appendPathFrom ||
                    (N.config.stroke.curve === "smooth" && c === "rangeArea") ||
                    ((Pe += X.line(v, this.zeroY)),
                    (We += X.line(v, this.zeroY))),
                  this.handleNullDataPoints(h, wn, p, Ot, f),
                  this._handleMarkersAndLabels({
                    type: c,
                    pointsPos: wn,
                    i: p,
                    j: Ot,
                    realIndex: f,
                    isRangeStart: m,
                  });
              }
              return {
                yArrj: G,
                xArrj: V,
                pathFromArea: We,
                areaPaths: T,
                pathFromLine: Pe,
                linePaths: S,
                linePath: fe,
                areaPath: ge,
              };
            },
          },
          {
            key: "_handleMarkersAndLabels",
            value: function (i) {
              var s = i.type,
                l = i.pointsPos,
                c = i.isRangeStart,
                h = i.i,
                d = i.j,
                f = i.realIndex,
                p = this.w,
                v = new ct(this.ctx);
              if (this.pointsChart)
                this.scatter.draw(this.elSeries, d, {
                  realIndex: f,
                  pointsPos: l,
                  zRatio: this.zRatio,
                  elParent: this.elPointsMain,
                });
              else {
                p.globals.series[h].length > 1 &&
                  this.elPointsMain.node.classList.add(
                    "apexcharts-element-hidden"
                  );
                var b = this.markers.plotChartMarkers(l, f, d + 1);
                b !== null && this.elPointsMain.add(b);
              }
              var _ = v.drawDataLabel({
                type: s,
                isRangeStart: c,
                pos: l,
                i: f,
                j: d + 1,
              });
              _ !== null && this.elDataLabelsWrap.add(_);
            },
          },
          {
            key: "_createPaths",
            value: function (i) {
              var s = i.type,
                l = i.series,
                c = i.i,
                h = i.realIndex,
                d = i.j,
                f = i.x,
                p = i.y,
                v = i.xArrj,
                b = i.yArrj,
                _ = i.y2,
                S = i.y2Arrj,
                T = i.linePath,
                O = i.areaPath,
                D = i.linePaths,
                V = i.areaPaths,
                G = i.seriesIndex,
                Q = i.isRangeStart,
                m = this.w,
                k = new C(this.ctx),
                N = m.config.stroke.curve,
                X = this.areaBottomY;
              if (
                (Array.isArray(m.config.stroke.curve) &&
                  (N = Array.isArray(G)
                    ? m.config.stroke.curve[G[c]]
                    : m.config.stroke.curve[c]),
                s === "rangeArea" &&
                  (m.globals.hasNullValues ||
                    m.config.forecastDataPoints.count > 0) &&
                  N === "smooth" &&
                  (N = "straight"),
                N === "smooth")
              ) {
                var K =
                    s === "rangeArea"
                      ? v.length === m.globals.dataPoints
                      : d === l[c].length - 2,
                  ee = v
                    .map(function (St, zt) {
                      return [v[zt], b[zt]];
                    })
                    .filter(function (St) {
                      return St[1] !== null;
                    });
                if (K && ee.length > 1) {
                  var fe = go(ee);
                  if (
                    ((T += Ls(fe, m.globals.gridWidth)),
                    l[c][0] === null
                      ? (O = T)
                      : (O += Ls(fe, m.globals.gridWidth)),
                    s === "rangeArea" && Q)
                  ) {
                    T += k.line(v[v.length - 1], S[S.length - 1]);
                    var ge = v.slice().reverse(),
                      Pe = S.slice().reverse(),
                      We = ge.map(function (St, zt) {
                        return [ge[zt], Pe[zt]];
                      }),
                      ze = go(We);
                    O = T += Ls(ze, m.globals.gridWidth);
                  } else
                    O +=
                      k.line(ee[ee.length - 1][0], X) +
                      k.line(ee[0][0], X) +
                      k.move(ee[0][0], ee[0][1]) +
                      "z";
                  D.push(T), V.push(O);
                }
              } else {
                if (l[c][d + 1] === null) {
                  T += k.move(f, p);
                  var ut = m.globals.isXNumeric
                    ? (m.globals.seriesX[h][d] - m.globals.minX) / this.xRatio
                    : f - this.xDivision;
                  O = O + k.line(ut, X) + k.move(f, p) + "z";
                }
                l[c][d] === null && ((T += k.move(f, p)), (O += k.move(f, X))),
                  N === "stepline"
                    ? ((T = T + k.line(f, null, "H") + k.line(null, p, "V")),
                      (O = O + k.line(f, null, "H") + k.line(null, p, "V")))
                    : N === "straight" &&
                      ((T += k.line(f, p)), (O += k.line(f, p))),
                  d === l[c].length - 2 &&
                    ((O = O + k.line(f, X) + k.move(f, p) + "z"),
                    s === "rangeArea" && Q
                      ? (T = T + k.line(f, _) + k.move(f, _) + "z")
                      : (D.push(T), V.push(O)));
              }
              return { linePaths: D, areaPaths: V, linePath: T, areaPath: O };
            },
          },
          {
            key: "handleNullDataPoints",
            value: function (i, s, l, c, h) {
              var d = this.w;
              if (
                (i[l][c] === null && d.config.markers.showNullDataPoints) ||
                i[l].length === 1
              ) {
                var f = this.markers.plotChartMarkers(
                  s,
                  h,
                  c + 1,
                  this.strokeWidth - d.config.markers.strokeWidth / 2,
                  !0
                );
                f !== null && this.elPointsMain.add(f);
              }
            },
          },
        ]),
        U
      );
    })();
    (window.TreemapSquared = {}),
      (window.TreemapSquared.generate = (function () {
        function U(f, p, v, b) {
          (this.xoffset = f),
            (this.yoffset = p),
            (this.height = b),
            (this.width = v),
            (this.shortestEdge = function () {
              return Math.min(this.height, this.width);
            }),
            (this.getCoordinates = function (_) {
              var S,
                T = [],
                O = this.xoffset,
                D = this.yoffset,
                V = h(_) / this.height,
                G = h(_) / this.width;
              if (this.width >= this.height)
                for (S = 0; S < _.length; S++)
                  T.push([O, D, O + V, D + _[S] / V]), (D += _[S] / V);
              else
                for (S = 0; S < _.length; S++)
                  T.push([O, D, O + _[S] / G, D + G]), (O += _[S] / G);
              return T;
            }),
            (this.cutArea = function (_) {
              var S;
              if (this.width >= this.height) {
                var T = _ / this.height,
                  O = this.width - T;
                S = new U(this.xoffset + T, this.yoffset, O, this.height);
              } else {
                var D = _ / this.width,
                  V = this.height - D;
                S = new U(this.xoffset, this.yoffset + D, this.width, V);
              }
              return S;
            });
        }
        function i(f, p, v, b, _) {
          (b = b === void 0 ? 0 : b), (_ = _ === void 0 ? 0 : _);
          var S = s(
            (function (T, O) {
              var D,
                V = [],
                G = O / h(T);
              for (D = 0; D < T.length; D++) V[D] = T[D] * G;
              return V;
            })(f, p * v),
            [],
            new U(b, _, p, v),
            []
          );
          return (function (T) {
            var O,
              D,
              V = [];
            for (O = 0; O < T.length; O++)
              for (D = 0; D < T[O].length; D++) V.push(T[O][D]);
            return V;
          })(S);
        }
        function s(f, p, v, b) {
          var _, S, T;
          if (f.length !== 0)
            return (
              (_ = v.shortestEdge()),
              (function (O, D, V) {
                var G;
                if (O.length === 0) return !0;
                (G = O.slice()).push(D);
                var Q = l(O, V),
                  m = l(G, V);
                return Q >= m;
              })(p, (S = f[0]), _)
                ? (p.push(S), s(f.slice(1), p, v, b))
                : ((T = v.cutArea(h(p), b)),
                  b.push(v.getCoordinates(p)),
                  s(f, [], T, b)),
              b
            );
          b.push(v.getCoordinates(p));
        }
        function l(f, p) {
          var v = Math.min.apply(Math, f),
            b = Math.max.apply(Math, f),
            _ = h(f);
          return Math.max(
            (Math.pow(p, 2) * b) / Math.pow(_, 2),
            Math.pow(_, 2) / (Math.pow(p, 2) * v)
          );
        }
        function c(f) {
          return f && f.constructor === Array;
        }
        function h(f) {
          var p,
            v = 0;
          for (p = 0; p < f.length; p++) v += f[p];
          return v;
        }
        function d(f) {
          var p,
            v = 0;
          if (c(f[0])) for (p = 0; p < f.length; p++) v += d(f[p]);
          else v = h(f);
          return v;
        }
        return function f(p, v, b, _, S) {
          (_ = _ === void 0 ? 0 : _), (S = S === void 0 ? 0 : S);
          var T,
            O,
            D = [],
            V = [];
          if (c(p[0])) {
            for (O = 0; O < p.length; O++) D[O] = d(p[O]);
            for (T = i(D, v, b, _, S), O = 0; O < p.length; O++)
              V.push(
                f(p[O], T[O][2] - T[O][0], T[O][3] - T[O][1], T[O][0], T[O][1])
              );
          } else V = i(p, v, b, _, S);
          return V;
        };
      })());
    var er,
      ar,
      Fi = (function () {
        function U(i, s) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.strokeWidth = this.w.config.stroke.width),
            (this.helpers = new ts(i)),
            (this.dynamicAnim =
              this.w.config.chart.animations.dynamicAnimation),
            (this.labels = []);
        }
        return (
          g(U, [
            {
              key: "draw",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = new C(this.ctx),
                  h = new Re(this.ctx),
                  d = c.group({ class: "apexcharts-treemap" });
                if (l.globals.noData) return d;
                var f = [];
                return (
                  i.forEach(function (p) {
                    var v = p.map(function (b) {
                      return Math.abs(b);
                    });
                    f.push(v);
                  }),
                  (this.negRange = this.helpers.checkColorRange()),
                  l.config.series.forEach(function (p, v) {
                    p.data.forEach(function (b) {
                      Array.isArray(s.labels[v]) || (s.labels[v] = []),
                        s.labels[v].push(b.x);
                    });
                  }),
                  window.TreemapSquared.generate(
                    f,
                    l.globals.gridWidth,
                    l.globals.gridHeight
                  ).forEach(function (p, v) {
                    var b = c.group({
                      class: "apexcharts-series apexcharts-treemap-series",
                      seriesName: F.escapeString(l.globals.seriesNames[v]),
                      rel: v + 1,
                      "data:realIndex": v,
                    });
                    if (l.config.chart.dropShadow.enabled) {
                      var _ = l.config.chart.dropShadow;
                      new ye(s.ctx).dropShadow(d, _, v);
                    }
                    var S = c.group({ class: "apexcharts-data-labels" });
                    p.forEach(function (T, O) {
                      var D = T[0],
                        V = T[1],
                        G = T[2],
                        Q = T[3],
                        m = c.drawRect(
                          D,
                          V,
                          G - D,
                          Q - V,
                          0,
                          "#fff",
                          1,
                          s.strokeWidth,
                          l.config.plotOptions.treemap.useFillColorAsStroke
                            ? N
                            : l.globals.stroke.colors[v]
                        );
                      m.attr({
                        cx: D,
                        cy: V,
                        index: v,
                        i: v,
                        j: O,
                        width: G - D,
                        height: Q - V,
                      });
                      var k = s.helpers.getShadeColor(
                          l.config.chart.type,
                          v,
                          O,
                          s.negRange
                        ),
                        N = k.color;
                      l.config.series[v].data[O] !== void 0 &&
                        l.config.series[v].data[O].fillColor &&
                        (N = l.config.series[v].data[O].fillColor);
                      var X = h.fillPath({
                        color: N,
                        seriesNumber: v,
                        dataPointIndex: O,
                      });
                      m.node.classList.add("apexcharts-treemap-rect"),
                        m.attr({ fill: X }),
                        s.helpers.addListeners(m);
                      var K = {
                          x: D + (G - D) / 2,
                          y: V + (Q - V) / 2,
                          width: 0,
                          height: 0,
                        },
                        ee = { x: D, y: V, width: G - D, height: Q - V };
                      if (
                        l.config.chart.animations.enabled &&
                        !l.globals.dataChanged
                      ) {
                        var fe = 1;
                        l.globals.resized ||
                          (fe = l.config.chart.animations.speed),
                          s.animateTreemap(m, K, ee, fe);
                      }
                      if (l.globals.dataChanged) {
                        var ge = 1;
                        s.dynamicAnim.enabled &&
                          l.globals.shouldAnimate &&
                          ((ge = s.dynamicAnim.speed),
                          l.globals.previousPaths[v] &&
                            l.globals.previousPaths[v][O] &&
                            l.globals.previousPaths[v][O].rect &&
                            (K = l.globals.previousPaths[v][O].rect),
                          s.animateTreemap(m, K, ee, ge));
                      }
                      var Pe = s.getFontSize(T),
                        We = l.config.dataLabels.formatter(s.labels[v][O], {
                          value: l.globals.series[v][O],
                          seriesIndex: v,
                          dataPointIndex: O,
                          w: l,
                        });
                      l.config.plotOptions.treemap.dataLabels.format ===
                        "truncate" &&
                        ((Pe = parseInt(
                          l.config.dataLabels.style.fontSize,
                          10
                        )),
                        (We = s.truncateLabels(We, Pe, D, V, G, Q)));
                      var ze = s.helpers.calculateDataLabels({
                        text: We,
                        x: (D + G) / 2,
                        y: (V + Q) / 2 + s.strokeWidth / 2 + Pe / 3,
                        i: v,
                        j: O,
                        colorProps: k,
                        fontSize: Pe,
                        series: i,
                      });
                      l.config.dataLabels.enabled &&
                        ze &&
                        s.rotateToFitLabel(ze, Pe, We, D, V, G, Q),
                        b.add(m),
                        ze !== null && b.add(ze);
                    }),
                      b.add(S),
                      d.add(b);
                  }),
                  d
                );
              },
            },
            {
              key: "getFontSize",
              value: function (i) {
                var s = this.w,
                  l,
                  c,
                  h,
                  d,
                  f =
                    (function p(v) {
                      var b,
                        _ = 0;
                      if (Array.isArray(v[0]))
                        for (b = 0; b < v.length; b++) _ += p(v[b]);
                      else for (b = 0; b < v.length; b++) _ += v[b].length;
                      return _;
                    })(this.labels) /
                    (function p(v) {
                      var b,
                        _ = 0;
                      if (Array.isArray(v[0]))
                        for (b = 0; b < v.length; b++) _ += p(v[b]);
                      else for (b = 0; b < v.length; b++) _ += 1;
                      return _;
                    })(this.labels);
                return (
                  (l = i[2] - i[0]),
                  (c = i[3] - i[1]),
                  (h = l * c),
                  (d = Math.pow(h, 0.5)),
                  Math.min(
                    d / f,
                    parseInt(s.config.dataLabels.style.fontSize, 10)
                  )
                );
              },
            },
            {
              key: "rotateToFitLabel",
              value: function (i, s, l, c, h, d, f) {
                var p = new C(this.ctx),
                  v = p.getTextRects(l, s);
                if (
                  v.width + this.w.config.stroke.width + 5 > d - c &&
                  v.width <= f - h
                ) {
                  var b = p.rotateAroundCenter(i.node);
                  i.node.setAttribute(
                    "transform",
                    "rotate(-90 "
                      .concat(b.x, " ")
                      .concat(b.y, ") translate(")
                      .concat(v.height / 3, ")")
                  );
                }
              },
            },
            {
              key: "truncateLabels",
              value: function (i, s, l, c, h, d) {
                var f = new C(this.ctx),
                  p =
                    f.getTextRects(i, s).width +
                      this.w.config.stroke.width +
                      5 >
                      h - l && d - c > h - l
                      ? d - c
                      : h - l,
                  v = f.getTextBasedOnMaxWidth({
                    text: i,
                    maxWidth: p,
                    fontSize: s,
                  });
                return i.length !== v.length && p / s < 5 ? "" : v;
              },
            },
            {
              key: "animateTreemap",
              value: function (i, s, l, c) {
                var h = new ce(this.ctx);
                h.animateRect(
                  i,
                  { x: s.x, y: s.y, width: s.width, height: s.height },
                  { x: l.x, y: l.y, width: l.width, height: l.height },
                  c,
                  function () {
                    h.animationCompleted(i);
                  }
                );
              },
            },
          ]),
          U
        );
      })(),
      Pr = 86400,
      Da = (function () {
        function U(i) {
          o(this, U),
            (this.ctx = i),
            (this.w = i.w),
            (this.timeScaleArray = []),
            (this.utc = this.w.config.xaxis.labels.datetimeUTC);
        }
        return (
          g(U, [
            {
              key: "calculateTimeScaleTicks",
              value: function (i, s) {
                var l = this,
                  c = this.w;
                if (c.globals.allSeriesCollapsed)
                  return (
                    (c.globals.labels = []),
                    (c.globals.timescaleLabels = []),
                    []
                  );
                var h = new It(this.ctx),
                  d = (s - i) / 864e5;
                this.determineInterval(d),
                  (c.globals.disableZoomIn = !1),
                  (c.globals.disableZoomOut = !1),
                  d < 0.00011574074074074075
                    ? (c.globals.disableZoomIn = !0)
                    : d > 5e4 && (c.globals.disableZoomOut = !0);
                var f = h.getTimeUnitsfromTimestamp(i, s, this.utc),
                  p = c.globals.gridWidth / d,
                  v = p / 24,
                  b = v / 60,
                  _ = b / 60,
                  S = Math.floor(24 * d),
                  T = Math.floor(1440 * d),
                  O = Math.floor(d * Pr),
                  D = Math.floor(d),
                  V = Math.floor(d / 30),
                  G = Math.floor(d / 365),
                  Q = {
                    minMillisecond: f.minMillisecond,
                    minSecond: f.minSecond,
                    minMinute: f.minMinute,
                    minHour: f.minHour,
                    minDate: f.minDate,
                    minMonth: f.minMonth,
                    minYear: f.minYear,
                  },
                  m = {
                    firstVal: Q,
                    currentMillisecond: Q.minMillisecond,
                    currentSecond: Q.minSecond,
                    currentMinute: Q.minMinute,
                    currentHour: Q.minHour,
                    currentMonthDate: Q.minDate,
                    currentDate: Q.minDate,
                    currentMonth: Q.minMonth,
                    currentYear: Q.minYear,
                    daysWidthOnXAxis: p,
                    hoursWidthOnXAxis: v,
                    minutesWidthOnXAxis: b,
                    secondsWidthOnXAxis: _,
                    numberOfSeconds: O,
                    numberOfMinutes: T,
                    numberOfHours: S,
                    numberOfDays: D,
                    numberOfMonths: V,
                    numberOfYears: G,
                  };
                switch (this.tickInterval) {
                  case "years":
                    this.generateYearScale(m);
                    break;
                  case "months":
                  case "half_year":
                    this.generateMonthScale(m);
                    break;
                  case "months_days":
                  case "months_fortnight":
                  case "days":
                  case "week_days":
                    this.generateDayScale(m);
                    break;
                  case "hours":
                    this.generateHourScale(m);
                    break;
                  case "minutes_fives":
                  case "minutes":
                    this.generateMinuteScale(m);
                    break;
                  case "seconds_tens":
                  case "seconds_fives":
                  case "seconds":
                    this.generateSecondScale(m);
                }
                var k = this.timeScaleArray.map(function (N) {
                  var X = {
                    position: N.position,
                    unit: N.unit,
                    year: N.year,
                    day: N.day ? N.day : 1,
                    hour: N.hour ? N.hour : 0,
                    month: N.month + 1,
                  };
                  return N.unit === "month"
                    ? r(r({}, X), {}, { day: 1, value: N.value + 1 })
                    : N.unit === "day" || N.unit === "hour"
                    ? r(r({}, X), {}, { value: N.value })
                    : N.unit === "minute"
                    ? r(r({}, X), {}, { value: N.value, minute: N.value })
                    : N.unit === "second"
                    ? r(
                        r({}, X),
                        {},
                        { value: N.value, minute: N.minute, second: N.second }
                      )
                    : N;
                });
                return k.filter(function (N) {
                  var X = 1,
                    K = Math.ceil(c.globals.gridWidth / 120),
                    ee = N.value;
                  c.config.xaxis.tickAmount !== void 0 &&
                    (K = c.config.xaxis.tickAmount),
                    k.length > K && (X = Math.floor(k.length / K));
                  var fe = !1,
                    ge = !1;
                  switch (l.tickInterval) {
                    case "years":
                      N.unit === "year" && (fe = !0);
                      break;
                    case "half_year":
                      (X = 7), N.unit === "year" && (fe = !0);
                      break;
                    case "months":
                      (X = 1), N.unit === "year" && (fe = !0);
                      break;
                    case "months_fortnight":
                      (X = 15),
                        (N.unit !== "year" && N.unit !== "month") || (fe = !0),
                        ee === 30 && (ge = !0);
                      break;
                    case "months_days":
                      (X = 10),
                        N.unit === "month" && (fe = !0),
                        ee === 30 && (ge = !0);
                      break;
                    case "week_days":
                      (X = 8), N.unit === "month" && (fe = !0);
                      break;
                    case "days":
                      (X = 1), N.unit === "month" && (fe = !0);
                      break;
                    case "hours":
                      N.unit === "day" && (fe = !0);
                      break;
                    case "minutes_fives":
                    case "seconds_fives":
                      ee % 5 != 0 && (ge = !0);
                      break;
                    case "seconds_tens":
                      ee % 10 != 0 && (ge = !0);
                  }
                  if (
                    l.tickInterval === "hours" ||
                    l.tickInterval === "minutes_fives" ||
                    l.tickInterval === "seconds_tens" ||
                    l.tickInterval === "seconds_fives"
                  ) {
                    if (!ge) return !0;
                  } else if ((ee % X == 0 || fe) && !ge) return !0;
                });
              },
            },
            {
              key: "recalcDimensionsBasedOnFormat",
              value: function (i, s) {
                var l = this.w,
                  c = this.formatDates(i),
                  h = this.removeOverlappingTS(c);
                (l.globals.timescaleLabels = h.slice()),
                  new Dt(this.ctx).plotCoords();
              },
            },
            {
              key: "determineInterval",
              value: function (i) {
                var s = 24 * i,
                  l = 60 * s;
                switch (!0) {
                  case i / 365 > 5:
                    this.tickInterval = "years";
                    break;
                  case i > 800:
                    this.tickInterval = "half_year";
                    break;
                  case i > 180:
                    this.tickInterval = "months";
                    break;
                  case i > 90:
                    this.tickInterval = "months_fortnight";
                    break;
                  case i > 60:
                    this.tickInterval = "months_days";
                    break;
                  case i > 30:
                    this.tickInterval = "week_days";
                    break;
                  case i > 2:
                    this.tickInterval = "days";
                    break;
                  case s > 2.4:
                    this.tickInterval = "hours";
                    break;
                  case l > 15:
                    this.tickInterval = "minutes_fives";
                    break;
                  case l > 5:
                    this.tickInterval = "minutes";
                    break;
                  case l > 1:
                    this.tickInterval = "seconds_tens";
                    break;
                  case 60 * l > 20:
                    this.tickInterval = "seconds_fives";
                    break;
                  default:
                    this.tickInterval = "seconds";
                }
              },
            },
            {
              key: "generateYearScale",
              value: function (i) {
                var s = i.firstVal,
                  l = i.currentMonth,
                  c = i.currentYear,
                  h = i.daysWidthOnXAxis,
                  d = i.numberOfYears,
                  f = s.minYear,
                  p = 0,
                  v = new It(this.ctx),
                  b = "year";
                if (s.minDate > 1 || s.minMonth > 0) {
                  var _ = v.determineRemainingDaysOfYear(
                    s.minYear,
                    s.minMonth,
                    s.minDate
                  );
                  (p = (v.determineDaysOfYear(s.minYear) - _ + 1) * h),
                    (f = s.minYear + 1),
                    this.timeScaleArray.push({
                      position: p,
                      value: f,
                      unit: b,
                      year: f,
                      month: F.monthMod(l + 1),
                    });
                } else
                  s.minDate === 1 &&
                    s.minMonth === 0 &&
                    this.timeScaleArray.push({
                      position: p,
                      value: f,
                      unit: b,
                      year: c,
                      month: F.monthMod(l + 1),
                    });
                for (var S = f, T = p, O = 0; O < d; O++)
                  S++,
                    (T = v.determineDaysOfYear(S - 1) * h + T),
                    this.timeScaleArray.push({
                      position: T,
                      value: S,
                      unit: b,
                      year: S,
                      month: 1,
                    });
              },
            },
            {
              key: "generateMonthScale",
              value: function (i) {
                var s = i.firstVal,
                  l = i.currentMonthDate,
                  c = i.currentMonth,
                  h = i.currentYear,
                  d = i.daysWidthOnXAxis,
                  f = i.numberOfMonths,
                  p = c,
                  v = 0,
                  b = new It(this.ctx),
                  _ = "month",
                  S = 0;
                if (s.minDate > 1) {
                  (v = (b.determineDaysOfMonths(c + 1, s.minYear) - l + 1) * d),
                    (p = F.monthMod(c + 1));
                  var T = h + S,
                    O = F.monthMod(p),
                    D = p;
                  p === 0 && ((_ = "year"), (D = T), (O = 1), (T += S += 1)),
                    this.timeScaleArray.push({
                      position: v,
                      value: D,
                      unit: _,
                      year: T,
                      month: O,
                    });
                } else
                  this.timeScaleArray.push({
                    position: v,
                    value: p,
                    unit: _,
                    year: h,
                    month: F.monthMod(c),
                  });
                for (var V = p + 1, G = v, Q = 0, m = 1; Q < f; Q++, m++) {
                  (V = F.monthMod(V)) === 0
                    ? ((_ = "year"), (S += 1))
                    : (_ = "month");
                  var k = this._getYear(h, V, S);
                  G = b.determineDaysOfMonths(V, k) * d + G;
                  var N = V === 0 ? k : V;
                  this.timeScaleArray.push({
                    position: G,
                    value: N,
                    unit: _,
                    year: k,
                    month: V === 0 ? 1 : V,
                  }),
                    V++;
                }
              },
            },
            {
              key: "generateDayScale",
              value: function (i) {
                var s = i.firstVal,
                  l = i.currentMonth,
                  c = i.currentYear,
                  h = i.hoursWidthOnXAxis,
                  d = i.numberOfDays,
                  f = new It(this.ctx),
                  p = "day",
                  v = s.minDate + 1,
                  b = v,
                  _ = function (m, k, N) {
                    return (
                      m > f.determineDaysOfMonths(k + 1, N) &&
                        ((b = 1), (p = "month"), (T = k += 1)),
                      k
                    );
                  },
                  S = (24 - s.minHour) * h,
                  T = v,
                  O = _(b, l, c);
                s.minHour === 0 && s.minDate === 1
                  ? ((S = 0),
                    (T = F.monthMod(s.minMonth)),
                    (p = "month"),
                    (b = s.minDate))
                  : s.minDate !== 1 &&
                    s.minHour === 0 &&
                    s.minMinute === 0 &&
                    ((S = 0), (v = s.minDate), (T = v), (O = _((b = v), l, c))),
                  this.timeScaleArray.push({
                    position: S,
                    value: T,
                    unit: p,
                    year: this._getYear(c, O, 0),
                    month: F.monthMod(O),
                    day: b,
                  });
                for (var D = S, V = 0; V < d; V++) {
                  (p = "day"), (O = _((b += 1), O, this._getYear(c, O, 0)));
                  var G = this._getYear(c, O, 0);
                  D = 24 * h + D;
                  var Q = b === 1 ? F.monthMod(O) : b;
                  this.timeScaleArray.push({
                    position: D,
                    value: Q,
                    unit: p,
                    year: G,
                    month: F.monthMod(O),
                    day: Q,
                  });
                }
              },
            },
            {
              key: "generateHourScale",
              value: function (i) {
                var s = i.firstVal,
                  l = i.currentDate,
                  c = i.currentMonth,
                  h = i.currentYear,
                  d = i.minutesWidthOnXAxis,
                  f = i.numberOfHours,
                  p = new It(this.ctx),
                  v = "hour",
                  b = function (X, K) {
                    return (
                      X > p.determineDaysOfMonths(K + 1, h) &&
                        ((V = 1), (K += 1)),
                      { month: K, date: V }
                    );
                  },
                  _ = function (X, K) {
                    return X > p.determineDaysOfMonths(K + 1, h) ? (K += 1) : K;
                  },
                  S = 60 - (s.minMinute + s.minSecond / 60),
                  T = S * d,
                  O = s.minHour + 1,
                  D = O;
                S === 60 && ((T = 0), (D = (O = s.minHour) + 1));
                var V = l;
                D >= 24 && ((D = 0), (V += 1), (v = "day"));
                var G = b(V, c).month;
                (G = _(V, G)),
                  this.timeScaleArray.push({
                    position: T,
                    value: O,
                    unit: v,
                    day: V,
                    hour: D,
                    year: h,
                    month: F.monthMod(G),
                  }),
                  D++;
                for (var Q = T, m = 0; m < f; m++) {
                  (v = "hour"),
                    D >= 24 &&
                      ((D = 0),
                      (v = "day"),
                      (G = b((V += 1), G).month),
                      (G = _(V, G)));
                  var k = this._getYear(h, G, 0);
                  Q = 60 * d + Q;
                  var N = D === 0 ? V : D;
                  this.timeScaleArray.push({
                    position: Q,
                    value: N,
                    unit: v,
                    hour: D,
                    day: V,
                    year: k,
                    month: F.monthMod(G),
                  }),
                    D++;
                }
              },
            },
            {
              key: "generateMinuteScale",
              value: function (i) {
                for (
                  var s = i.currentMillisecond,
                    l = i.currentSecond,
                    c = i.currentMinute,
                    h = i.currentHour,
                    d = i.currentDate,
                    f = i.currentMonth,
                    p = i.currentYear,
                    v = i.minutesWidthOnXAxis,
                    b = i.secondsWidthOnXAxis,
                    _ = i.numberOfMinutes,
                    S = c + 1,
                    T = d,
                    O = f,
                    D = p,
                    V = h,
                    G = (60 - l - s / 1e3) * b,
                    Q = 0;
                  Q < _;
                  Q++
                )
                  S >= 60 && ((S = 0), (V += 1) === 24 && (V = 0)),
                    this.timeScaleArray.push({
                      position: G,
                      value: S,
                      unit: "minute",
                      hour: V,
                      minute: S,
                      day: T,
                      year: this._getYear(D, O, 0),
                      month: F.monthMod(O),
                    }),
                    (G += v),
                    S++;
              },
            },
            {
              key: "generateSecondScale",
              value: function (i) {
                for (
                  var s = i.currentMillisecond,
                    l = i.currentSecond,
                    c = i.currentMinute,
                    h = i.currentHour,
                    d = i.currentDate,
                    f = i.currentMonth,
                    p = i.currentYear,
                    v = i.secondsWidthOnXAxis,
                    b = i.numberOfSeconds,
                    _ = l + 1,
                    S = c,
                    T = d,
                    O = f,
                    D = p,
                    V = h,
                    G = ((1e3 - s) / 1e3) * v,
                    Q = 0;
                  Q < b;
                  Q++
                )
                  _ >= 60 &&
                    ((_ = 0), ++S >= 60 && ((S = 0), ++V === 24 && (V = 0))),
                    this.timeScaleArray.push({
                      position: G,
                      value: _,
                      unit: "second",
                      hour: V,
                      minute: S,
                      second: _,
                      day: T,
                      year: this._getYear(D, O, 0),
                      month: F.monthMod(O),
                    }),
                    (G += v),
                    _++;
              },
            },
            {
              key: "createRawDateString",
              value: function (i, s) {
                var l = i.year;
                return (
                  i.month === 0 && (i.month = 1),
                  (l += "-" + ("0" + i.month.toString()).slice(-2)),
                  i.unit === "day"
                    ? (l +=
                        i.unit === "day" ? "-" + ("0" + s).slice(-2) : "-01")
                    : (l += "-" + ("0" + (i.day ? i.day : "1")).slice(-2)),
                  i.unit === "hour"
                    ? (l +=
                        i.unit === "hour" ? "T" + ("0" + s).slice(-2) : "T00")
                    : (l += "T" + ("0" + (i.hour ? i.hour : "0")).slice(-2)),
                  i.unit === "minute"
                    ? (l += ":" + ("0" + s).slice(-2))
                    : (l +=
                        ":" + (i.minute ? ("0" + i.minute).slice(-2) : "00")),
                  i.unit === "second"
                    ? (l += ":" + ("0" + s).slice(-2))
                    : (l += ":00"),
                  this.utc && (l += ".000Z"),
                  l
                );
              },
            },
            {
              key: "formatDates",
              value: function (i) {
                var s = this,
                  l = this.w;
                return i.map(function (c) {
                  var h = c.value.toString(),
                    d = new It(s.ctx),
                    f = s.createRawDateString(c, h),
                    p = d.getDate(d.parseDate(f));
                  if (
                    (s.utc || (p = d.getDate(d.parseDateWithTimezone(f))),
                    l.config.xaxis.labels.format === void 0)
                  ) {
                    var v = "dd MMM",
                      b = l.config.xaxis.labels.datetimeFormatter;
                    c.unit === "year" && (v = b.year),
                      c.unit === "month" && (v = b.month),
                      c.unit === "day" && (v = b.day),
                      c.unit === "hour" && (v = b.hour),
                      c.unit === "minute" && (v = b.minute),
                      c.unit === "second" && (v = b.second),
                      (h = d.formatDate(p, v));
                  } else h = d.formatDate(p, l.config.xaxis.labels.format);
                  return {
                    dateString: f,
                    position: c.position,
                    value: h,
                    unit: c.unit,
                    year: c.year,
                    month: c.month,
                  };
                });
              },
            },
            {
              key: "removeOverlappingTS",
              value: function (i) {
                var s,
                  l = this,
                  c = new C(this.ctx),
                  h = !1;
                i.length > 0 &&
                  i[0].value &&
                  i.every(function (p) {
                    return p.value.length === i[0].value.length;
                  }) &&
                  ((h = !0), (s = c.getTextRects(i[0].value).width));
                var d = 0,
                  f = i.map(function (p, v) {
                    if (
                      v > 0 &&
                      l.w.config.xaxis.labels.hideOverlappingLabels
                    ) {
                      var b = h ? s : c.getTextRects(i[d].value).width,
                        _ = i[d].position;
                      return p.position > _ + b + 10 ? ((d = v), p) : null;
                    }
                    return p;
                  });
                return (f = f.filter(function (p) {
                  return p !== null;
                }));
              },
            },
            {
              key: "_getYear",
              value: function (i, s, l) {
                return i + Math.floor(s / 12) + l;
              },
            },
          ]),
          U
        );
      })(),
      vs = (function () {
        function U(i, s) {
          o(this, U), (this.ctx = s), (this.w = s.w), (this.el = i);
        }
        return (
          g(U, [
            {
              key: "setupElements",
              value: function () {
                var i = this.w.globals,
                  s = this.w.config,
                  l = s.chart.type;
                (i.axisCharts =
                  [
                    "line",
                    "area",
                    "bar",
                    "rangeBar",
                    "rangeArea",
                    "candlestick",
                    "boxPlot",
                    "scatter",
                    "bubble",
                    "radar",
                    "heatmap",
                    "treemap",
                  ].indexOf(l) > -1),
                  (i.xyCharts =
                    [
                      "line",
                      "area",
                      "bar",
                      "rangeBar",
                      "rangeArea",
                      "candlestick",
                      "boxPlot",
                      "scatter",
                      "bubble",
                    ].indexOf(l) > -1),
                  (i.isBarHorizontal =
                    (s.chart.type === "bar" ||
                      s.chart.type === "rangeBar" ||
                      s.chart.type === "boxPlot") &&
                    s.plotOptions.bar.horizontal),
                  (i.chartClass = ".apexcharts" + i.chartID),
                  (i.dom.baseEl = this.el),
                  (i.dom.elWrap = document.createElement("div")),
                  C.setAttrs(i.dom.elWrap, {
                    id: i.chartClass.substring(1),
                    class: "apexcharts-canvas " + i.chartClass.substring(1),
                  }),
                  this.el.appendChild(i.dom.elWrap),
                  (i.dom.Paper = new window.SVG.Doc(i.dom.elWrap)),
                  i.dom.Paper.attr({
                    class: "apexcharts-svg",
                    "xmlns:data": "ApexChartsNS",
                    transform: "translate("
                      .concat(s.chart.offsetX, ", ")
                      .concat(s.chart.offsetY, ")"),
                  }),
                  (i.dom.Paper.node.style.background =
                    s.theme.mode !== "dark" || s.chart.background
                      ? s.chart.background
                      : "rgba(0, 0, 0, 0.8)"),
                  this.setSVGDimensions(),
                  (i.dom.elLegendForeign = document.createElementNS(
                    i.SVGNS,
                    "foreignObject"
                  )),
                  C.setAttrs(i.dom.elLegendForeign, {
                    x: 0,
                    y: 0,
                    width: i.svgWidth,
                    height: i.svgHeight,
                  }),
                  (i.dom.elLegendWrap = document.createElement("div")),
                  i.dom.elLegendWrap.classList.add("apexcharts-legend"),
                  i.dom.elLegendWrap.setAttribute(
                    "xmlns",
                    "http://www.w3.org/1999/xhtml"
                  ),
                  i.dom.elLegendForeign.appendChild(i.dom.elLegendWrap),
                  i.dom.Paper.node.appendChild(i.dom.elLegendForeign),
                  (i.dom.elGraphical = i.dom.Paper.group().attr({
                    class: "apexcharts-inner apexcharts-graphical",
                  })),
                  (i.dom.elDefs = i.dom.Paper.defs()),
                  i.dom.Paper.add(i.dom.elGraphical),
                  i.dom.elGraphical.add(i.dom.elDefs);
              },
            },
            {
              key: "plotChartType",
              value: function (i, s) {
                var l = this.w,
                  c = l.config,
                  h = l.globals,
                  d = { series: [], i: [] },
                  f = { series: [], i: [] },
                  p = { series: [], i: [] },
                  v = { series: [], i: [] },
                  b = { series: [], i: [] },
                  _ = { series: [], i: [] },
                  S = { series: [], i: [] },
                  T = { series: [], i: [] },
                  O = { series: [], seriesRangeEnd: [], i: [] };
                h.series.map(function (K, ee) {
                  var fe = 0;
                  i[ee].type !== void 0
                    ? (i[ee].type === "column" || i[ee].type === "bar"
                        ? (h.series.length > 1 &&
                            c.plotOptions.bar.horizontal &&
                            console.warn(
                              "Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"
                            ),
                          b.series.push(K),
                          b.i.push(ee),
                          fe++,
                          (l.globals.columnSeries = b.series))
                        : i[ee].type === "area"
                        ? (f.series.push(K), f.i.push(ee), fe++)
                        : i[ee].type === "line"
                        ? (d.series.push(K), d.i.push(ee), fe++)
                        : i[ee].type === "scatter"
                        ? (p.series.push(K), p.i.push(ee))
                        : i[ee].type === "bubble"
                        ? (v.series.push(K), v.i.push(ee), fe++)
                        : i[ee].type === "candlestick"
                        ? (_.series.push(K), _.i.push(ee), fe++)
                        : i[ee].type === "boxPlot"
                        ? (S.series.push(K), S.i.push(ee), fe++)
                        : i[ee].type === "rangeBar"
                        ? (T.series.push(K), T.i.push(ee), fe++)
                        : i[ee].type === "rangeArea"
                        ? (O.series.push(h.seriesRangeStart[ee]),
                          O.seriesRangeEnd.push(h.seriesRangeEnd[ee]),
                          O.i.push(ee),
                          fe++)
                        : console.warn(
                            "You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"
                          ),
                      fe > 1 && (h.comboCharts = !0))
                    : (d.series.push(K), d.i.push(ee));
                });
                var D = new qs(this.ctx, s),
                  V = new es(this.ctx, s);
                this.ctx.pie = new ua(this.ctx);
                var G = new Jo(this.ctx);
                this.ctx.rangeBar = new el(this.ctx, s);
                var Q = new ns(this.ctx),
                  m = [];
                if (h.comboCharts) {
                  if (
                    (f.series.length > 0 &&
                      m.push(D.draw(f.series, "area", f.i)),
                    b.series.length > 0)
                  )
                    if (l.config.chart.stacked) {
                      var k = new Na(this.ctx, s);
                      m.push(k.draw(b.series, b.i));
                    } else
                      (this.ctx.bar = new Ns(this.ctx, s)),
                        m.push(this.ctx.bar.draw(b.series, b.i));
                  if (
                    (O.series.length > 0 &&
                      m.push(
                        D.draw(O.series, "rangeArea", O.i, O.seriesRangeEnd)
                      ),
                    d.series.length > 0 &&
                      m.push(D.draw(d.series, "line", d.i)),
                    _.series.length > 0 &&
                      m.push(V.draw(_.series, "candlestick", _.i)),
                    S.series.length > 0 &&
                      m.push(V.draw(S.series, "boxPlot", S.i)),
                    T.series.length > 0 &&
                      m.push(this.ctx.rangeBar.draw(T.series, T.i)),
                    p.series.length > 0)
                  ) {
                    var N = new qs(this.ctx, s, !0);
                    m.push(N.draw(p.series, "scatter", p.i));
                  }
                  if (v.series.length > 0) {
                    var X = new qs(this.ctx, s, !0);
                    m.push(X.draw(v.series, "bubble", v.i));
                  }
                } else
                  switch (c.chart.type) {
                    case "line":
                      m = D.draw(h.series, "line");
                      break;
                    case "area":
                      m = D.draw(h.series, "area");
                      break;
                    case "bar":
                      c.chart.stacked
                        ? (m = new Na(this.ctx, s).draw(h.series))
                        : ((this.ctx.bar = new Ns(this.ctx, s)),
                          (m = this.ctx.bar.draw(h.series)));
                      break;
                    case "candlestick":
                      m = new es(this.ctx, s).draw(h.series, "candlestick");
                      break;
                    case "boxPlot":
                      m = new es(this.ctx, s).draw(h.series, c.chart.type);
                      break;
                    case "rangeBar":
                      m = this.ctx.rangeBar.draw(h.series);
                      break;
                    case "rangeArea":
                      m = D.draw(
                        h.seriesRangeStart,
                        "rangeArea",
                        void 0,
                        h.seriesRangeEnd
                      );
                      break;
                    case "heatmap":
                      m = new ms(this.ctx, s).draw(h.series);
                      break;
                    case "treemap":
                      m = new Fi(this.ctx, s).draw(h.series);
                      break;
                    case "pie":
                    case "donut":
                    case "polarArea":
                      m = this.ctx.pie.draw(h.series);
                      break;
                    case "radialBar":
                      m = G.draw(h.series);
                      break;
                    case "radar":
                      m = Q.draw(h.series);
                      break;
                    default:
                      m = D.draw(h.series);
                  }
                return m;
              },
            },
            {
              key: "setSVGDimensions",
              value: function () {
                var i = this.w.globals,
                  s = this.w.config;
                (i.svgWidth = s.chart.width), (i.svgHeight = s.chart.height);
                var l = F.getDimensions(this.el),
                  c = s.chart.width
                    .toString()
                    .split(/[0-9]+/g)
                    .pop();
                c === "%"
                  ? F.isNumber(l[0]) &&
                    (l[0].width === 0 &&
                      (l = F.getDimensions(this.el.parentNode)),
                    (i.svgWidth = (l[0] * parseInt(s.chart.width, 10)) / 100))
                  : (c !== "px" && c !== "") ||
                    (i.svgWidth = parseInt(s.chart.width, 10));
                var h = s.chart.height
                  .toString()
                  .split(/[0-9]+/g)
                  .pop();
                if (i.svgHeight !== "auto" && i.svgHeight !== "")
                  if (h === "%") {
                    var d = F.getDimensions(this.el.parentNode);
                    i.svgHeight = (d[1] * parseInt(s.chart.height, 10)) / 100;
                  } else i.svgHeight = parseInt(s.chart.height, 10);
                else
                  i.axisCharts
                    ? (i.svgHeight = i.svgWidth / 1.61)
                    : (i.svgHeight = i.svgWidth / 1.2);
                if (
                  (i.svgWidth < 0 && (i.svgWidth = 0),
                  i.svgHeight < 0 && (i.svgHeight = 0),
                  C.setAttrs(i.dom.Paper.node, {
                    width: i.svgWidth,
                    height: i.svgHeight,
                  }),
                  h !== "%")
                ) {
                  var f = s.chart.sparkline.enabled
                    ? 0
                    : i.axisCharts
                    ? s.chart.parentHeightOffset
                    : 0;
                  i.dom.Paper.node.parentNode.parentNode.style.minHeight =
                    i.svgHeight + f + "px";
                }
                (i.dom.elWrap.style.width = i.svgWidth + "px"),
                  (i.dom.elWrap.style.height = i.svgHeight + "px");
              },
            },
            {
              key: "shiftGraphPosition",
              value: function () {
                var i = this.w.globals,
                  s = i.translateY,
                  l = {
                    transform: "translate(" + i.translateX + ", " + s + ")",
                  };
                C.setAttrs(i.dom.elGraphical.node, l);
              },
            },
            {
              key: "resizeNonAxisCharts",
              value: function () {
                var i = this.w,
                  s = i.globals,
                  l = 0,
                  c = i.config.chart.sparkline.enabled ? 1 : 15;
                (c += i.config.grid.padding.bottom),
                  (i.config.legend.position !== "top" &&
                    i.config.legend.position !== "bottom") ||
                    !i.config.legend.show ||
                    i.config.legend.floating ||
                    (l =
                      new fn(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
                var h = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-radialbar, .apexcharts-pie"
                  ),
                  d = 2.05 * i.globals.radialSize;
                if (
                  h &&
                  !i.config.chart.sparkline.enabled &&
                  i.config.plotOptions.radialBar.startAngle !== 0
                ) {
                  var f = F.getBoundingClientRect(h);
                  d = f.bottom;
                  var p = f.bottom - f.top;
                  d = Math.max(2.05 * i.globals.radialSize, p);
                }
                var v = d + s.translateY + l + c;
                s.dom.elLegendForeign &&
                  s.dom.elLegendForeign.setAttribute("height", v),
                  (i.config.chart.height &&
                    String(i.config.chart.height).indexOf("%") > 0) ||
                    ((s.dom.elWrap.style.height = v + "px"),
                    C.setAttrs(s.dom.Paper.node, { height: v }),
                    (s.dom.Paper.node.parentNode.parentNode.style.minHeight =
                      v + "px"));
              },
            },
            {
              key: "coreCalculations",
              value: function () {
                new sn(this.ctx).init();
              },
            },
            {
              key: "resetGlobals",
              value: function () {
                var i = this,
                  s = function () {
                    return i.w.config.series.map(function (h) {
                      return [];
                    });
                  },
                  l = new Oe(),
                  c = this.w.globals;
                l.initGlobalVars(c),
                  (c.seriesXvalues = s()),
                  (c.seriesYvalues = s());
              },
            },
            {
              key: "isMultipleY",
              value: function () {
                if (
                  this.w.config.yaxis.constructor === Array &&
                  this.w.config.yaxis.length > 1
                )
                  return (this.w.globals.isMultipleYAxis = !0), !0;
              },
            },
            {
              key: "xySettings",
              value: function () {
                var i = null,
                  s = this.w;
                if (s.globals.axisCharts) {
                  if (
                    (s.config.xaxis.crosshairs.position === "back" &&
                      new Rn(this.ctx).drawXCrosshairs(),
                    s.config.yaxis[0].crosshairs.position === "back" &&
                      new Rn(this.ctx).drawYCrosshairs(),
                    s.config.xaxis.type === "datetime" &&
                      s.config.xaxis.labels.formatter === void 0)
                  ) {
                    this.ctx.timeScale = new Da(this.ctx);
                    var l = [];
                    isFinite(s.globals.minX) &&
                    isFinite(s.globals.maxX) &&
                    !s.globals.isBarHorizontal
                      ? (l = this.ctx.timeScale.calculateTimeScaleTicks(
                          s.globals.minX,
                          s.globals.maxX
                        ))
                      : s.globals.isBarHorizontal &&
                        (l = this.ctx.timeScale.calculateTimeScaleTicks(
                          s.globals.minY,
                          s.globals.maxY
                        )),
                      this.ctx.timeScale.recalcDimensionsBasedOnFormat(l);
                  }
                  i = new ke(this.ctx).getCalculatedRatios();
                }
                return i;
              },
            },
            {
              key: "updateSourceChart",
              value: function (i) {
                (this.ctx.w.globals.selection = void 0),
                  this.ctx.updateHelpers._updateOptions(
                    {
                      chart: {
                        selection: {
                          xaxis: {
                            min: i.w.globals.minX,
                            max: i.w.globals.maxX,
                          },
                        },
                      },
                    },
                    !1,
                    !1
                  );
              },
            },
            {
              key: "setupBrushHandler",
              value: function () {
                var i = this,
                  s = this.w;
                if (
                  s.config.chart.brush.enabled &&
                  typeof s.config.chart.events.selection != "function"
                ) {
                  var l = Array.isArray(s.config.chart.brush.targets) || [
                    s.config.chart.brush.target,
                  ];
                  l.forEach(function (c) {
                    var h = ApexCharts.getChartByID(c);
                    (h.w.globals.brushSource = i.ctx),
                      typeof h.w.config.chart.events.zoomed != "function" &&
                        (h.w.config.chart.events.zoomed = function () {
                          i.updateSourceChart(h);
                        }),
                      typeof h.w.config.chart.events.scrolled != "function" &&
                        (h.w.config.chart.events.scrolled = function () {
                          i.updateSourceChart(h);
                        });
                  }),
                    (s.config.chart.events.selection = function (c, h) {
                      l.forEach(function (d) {
                        var f = ApexCharts.getChartByID(d),
                          p = F.clone(s.config.yaxis);
                        if (
                          s.config.chart.brush.autoScaleYaxis &&
                          f.w.globals.series.length === 1
                        ) {
                          var v = new Rt(f);
                          p = v.autoScaleY(f, p, h);
                        }
                        var b = f.w.config.yaxis.reduce(function (_, S, T) {
                          return [].concat(le(_), [
                            r(
                              r({}, f.w.config.yaxis[T]),
                              {},
                              { min: p[0].min, max: p[0].max }
                            ),
                          ]);
                        }, []);
                        f.ctx.updateHelpers._updateOptions(
                          {
                            xaxis: { min: h.xaxis.min, max: h.xaxis.max },
                            yaxis: b,
                          },
                          !1,
                          !1,
                          !1,
                          !1
                        );
                      });
                    });
                }
              },
            },
          ]),
          U
        );
      })(),
      Hn = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "_updateOptions",
              value: function (i) {
                var s = this,
                  l =
                    arguments.length > 1 &&
                    arguments[1] !== void 0 &&
                    arguments[1],
                  c =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  h =
                    !(arguments.length > 3 && arguments[3] !== void 0) ||
                    arguments[3],
                  d =
                    arguments.length > 4 &&
                    arguments[4] !== void 0 &&
                    arguments[4];
                return new Promise(function (f) {
                  var p = [s.ctx];
                  h && (p = s.ctx.getSyncedCharts()),
                    s.ctx.w.globals.isExecCalled &&
                      ((p = [s.ctx]), (s.ctx.w.globals.isExecCalled = !1)),
                    p.forEach(function (v, b) {
                      var _ = v.w;
                      if (
                        ((_.globals.shouldAnimate = c),
                        l ||
                          ((_.globals.resized = !0),
                          (_.globals.dataChanged = !0),
                          c && v.series.getPreviousPaths()),
                        i &&
                          a(i) === "object" &&
                          ((v.config = new Xe(i)),
                          (i = ke.extendArrayProps(v.config, i, _)),
                          v.w.globals.chartID !== s.ctx.w.globals.chartID &&
                            delete i.series,
                          (_.config = F.extend(_.config, i)),
                          d &&
                            ((_.globals.lastXAxis = i.xaxis
                              ? F.clone(i.xaxis)
                              : []),
                            (_.globals.lastYAxis = i.yaxis
                              ? F.clone(i.yaxis)
                              : []),
                            (_.globals.initialConfig = F.extend({}, _.config)),
                            (_.globals.initialSeries = F.clone(
                              _.config.series
                            )),
                            i.series)))
                      ) {
                        for (
                          var S = 0;
                          S < _.globals.collapsedSeriesIndices.length;
                          S++
                        ) {
                          var T =
                            _.config.series[
                              _.globals.collapsedSeriesIndices[S]
                            ];
                          _.globals.collapsedSeries[S].data = _.globals
                            .axisCharts
                            ? T.data.slice()
                            : T;
                        }
                        for (
                          var O = 0;
                          O < _.globals.ancillaryCollapsedSeriesIndices.length;
                          O++
                        ) {
                          var D =
                            _.config.series[
                              _.globals.ancillaryCollapsedSeriesIndices[O]
                            ];
                          _.globals.ancillaryCollapsedSeries[O].data = _.globals
                            .axisCharts
                            ? D.data.slice()
                            : D;
                        }
                        v.series.emptyCollapsedSeries(_.config.series);
                      }
                      return v.update(i).then(function () {
                        b === p.length - 1 && f(v);
                      });
                    });
                });
              },
            },
            {
              key: "_updateSeries",
              value: function (i, s) {
                var l = this,
                  c =
                    arguments.length > 2 &&
                    arguments[2] !== void 0 &&
                    arguments[2];
                return new Promise(function (h) {
                  var d,
                    f = l.w;
                  return (
                    (f.globals.shouldAnimate = s),
                    (f.globals.dataChanged = !0),
                    s && l.ctx.series.getPreviousPaths(),
                    f.globals.axisCharts
                      ? ((d = i.map(function (p, v) {
                          return l._extendSeries(p, v);
                        })).length === 0 && (d = [{ data: [] }]),
                        (f.config.series = d))
                      : (f.config.series = i.slice()),
                    c &&
                      ((f.globals.initialConfig.series = F.clone(
                        f.config.series
                      )),
                      (f.globals.initialSeries = F.clone(f.config.series))),
                    l.ctx.update().then(function () {
                      h(l.ctx);
                    })
                  );
                });
              },
            },
            {
              key: "_extendSeries",
              value: function (i, s) {
                var l = this.w,
                  c = l.config.series[s];
                return r(
                  r({}, l.config.series[s]),
                  {},
                  {
                    name: i.name ? i.name : c == null ? void 0 : c.name,
                    color: i.color ? i.color : c == null ? void 0 : c.color,
                    type: i.type ? i.type : c == null ? void 0 : c.type,
                    group: i.group ? i.group : c == null ? void 0 : c.group,
                    data: i.data ? i.data : c == null ? void 0 : c.data,
                    zIndex: i.zIndex !== void 0 ? i.zIndex : s,
                  }
                );
              },
            },
            {
              key: "toggleDataPointSelection",
              value: function (i, s) {
                var l = this.w,
                  c = null,
                  h = ".apexcharts-series[data\\:realIndex='".concat(i, "']");
                return (
                  l.globals.axisCharts
                    ? (c = l.globals.dom.Paper.select(
                        ""
                          .concat(h, " path[j='")
                          .concat(s, "'], ")
                          .concat(h, " circle[j='")
                          .concat(s, "'], ")
                          .concat(h, " rect[j='")
                          .concat(s, "']")
                      ).members[0])
                    : s === void 0 &&
                      ((c = l.globals.dom.Paper.select(
                        "".concat(h, " path[j='").concat(i, "']")
                      ).members[0]),
                      (l.config.chart.type !== "pie" &&
                        l.config.chart.type !== "polarArea" &&
                        l.config.chart.type !== "donut") ||
                        this.ctx.pie.pieClicked(i)),
                  c
                    ? (new C(this.ctx).pathMouseDown(c, null),
                      c.node ? c.node : null)
                    : (console.warn(
                        "toggleDataPointSelection: Element not found"
                      ),
                      null)
                );
              },
            },
            {
              key: "forceXAxisUpdate",
              value: function (i) {
                var s = this.w;
                if (
                  (["min", "max"].forEach(function (c) {
                    i.xaxis[c] !== void 0 &&
                      ((s.config.xaxis[c] = i.xaxis[c]),
                      (s.globals.lastXAxis[c] = i.xaxis[c]));
                  }),
                  i.xaxis.categories &&
                    i.xaxis.categories.length &&
                    (s.config.xaxis.categories = i.xaxis.categories),
                  s.config.xaxis.convertedCatToNumeric)
                ) {
                  var l = new we(i);
                  i = l.convertCatToNumericXaxis(i, this.ctx);
                }
                return i;
              },
            },
            {
              key: "forceYAxisUpdate",
              value: function (i) {
                return (
                  i.chart &&
                    i.chart.stacked &&
                    i.chart.stackType === "100%" &&
                    (Array.isArray(i.yaxis)
                      ? i.yaxis.forEach(function (s, l) {
                          (i.yaxis[l].min = 0), (i.yaxis[l].max = 100);
                        })
                      : ((i.yaxis.min = 0), (i.yaxis.max = 100))),
                  i
                );
              },
            },
            {
              key: "revertDefaultAxisMinMax",
              value: function (i) {
                var s = this,
                  l = this.w,
                  c = l.globals.lastXAxis,
                  h = l.globals.lastYAxis;
                i && i.xaxis && (c = i.xaxis),
                  i && i.yaxis && (h = i.yaxis),
                  (l.config.xaxis.min = c.min),
                  (l.config.xaxis.max = c.max);
                var d = function (f) {
                  h[f] !== void 0 &&
                    ((l.config.yaxis[f].min = h[f].min),
                    (l.config.yaxis[f].max = h[f].max));
                };
                l.config.yaxis.map(function (f, p) {
                  l.globals.zoomed || h[p] !== void 0
                    ? d(p)
                    : s.ctx.opts.yaxis[p] !== void 0 &&
                      ((f.min = s.ctx.opts.yaxis[p].min),
                      (f.max = s.ctx.opts.yaxis[p].max));
                });
              },
            },
          ]),
          U
        );
      })();
    (er = typeof window < "u" ? window : void 0),
      (ar = function (U, i) {
        var s = ((this !== void 0 ? this : U).SVG = function (m) {
          if (s.supported)
            return (m = new s.Doc(m)), s.parser.draw || s.prepare(), m;
        });
        if (
          ((s.ns = "http://www.w3.org/2000/svg"),
          (s.xmlns = "http://www.w3.org/2000/xmlns/"),
          (s.xlink = "http://www.w3.org/1999/xlink"),
          (s.svgjs = "http://svgjs.dev"),
          (s.supported = !0),
          !s.supported)
        )
          return !1;
        (s.did = 1e3),
          (s.eid = function (m) {
            return "Svgjs" + b(m) + s.did++;
          }),
          (s.create = function (m) {
            var k = i.createElementNS(this.ns, m);
            return k.setAttribute("id", this.eid(m)), k;
          }),
          (s.extend = function () {
            var m, k;
            k = (m = [].slice.call(arguments)).pop();
            for (var N = m.length - 1; N >= 0; N--)
              if (m[N]) for (var X in k) m[N].prototype[X] = k[X];
            s.Set && s.Set.inherit && s.Set.inherit();
          }),
          (s.invent = function (m) {
            var k =
              typeof m.create == "function"
                ? m.create
                : function () {
                    this.constructor.call(this, s.create(m.create));
                  };
            return (
              m.inherit && (k.prototype = new m.inherit()),
              m.extend && s.extend(k, m.extend),
              m.construct && s.extend(m.parent || s.Container, m.construct),
              k
            );
          }),
          (s.adopt = function (m) {
            return m
              ? m.instance
                ? m.instance
                : (((k =
                    m.nodeName == "svg"
                      ? m.parentNode instanceof U.SVGElement
                        ? new s.Nested()
                        : new s.Doc()
                      : m.nodeName == "linearGradient"
                      ? new s.Gradient("linear")
                      : m.nodeName == "radialGradient"
                      ? new s.Gradient("radial")
                      : s[b(m.nodeName)]
                      ? new s[b(m.nodeName)]()
                      : new s.Element(m)).type = m.nodeName),
                  (k.node = m),
                  (m.instance = k),
                  k instanceof s.Doc && k.namespace().defs(),
                  k.setData(JSON.parse(m.getAttribute("svgjs:data")) || {}),
                  k)
              : null;
            var k;
          }),
          (s.prepare = function () {
            var m = i.getElementsByTagName("body")[0],
              k = (m ? new s.Doc(m) : s.adopt(i.documentElement).nested()).size(
                2,
                0
              );
            s.parser = {
              body: m || i.documentElement,
              draw: k.style(
                "opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden"
              ).node,
              poly: k.polyline().node,
              path: k.path().node,
              native: s.create("svg"),
            };
          }),
          (s.parser = { native: s.create("svg") }),
          i.addEventListener(
            "DOMContentLoaded",
            function () {
              s.parser.draw || s.prepare();
            },
            !1
          ),
          (s.regex = {
            numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
            hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
            rgb: /rgb\((\d+),(\d+),(\d+)\)/,
            reference: /#([a-z0-9\-_]+)/i,
            transforms: /\)\s*,?\s*/,
            whitespace: /\s/g,
            isHex: /^#[a-f0-9]{3,6}$/i,
            isRgb: /^rgb\(/,
            isCss: /[^:]+:[^;]+;?/,
            isBlank: /^(\s+)?$/,
            isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
            isPercent: /^-?[\d\.]+%$/,
            isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
            delimiter: /[\s,]+/,
            hyphen: /([^e])\-/gi,
            pathLetters: /[MLHVCSQTAZ]/gi,
            isPathLetter: /[MLHVCSQTAZ]/i,
            numbersWithDots:
              /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
            dots: /\./g,
          }),
          (s.utils = {
            map: function (m, k) {
              for (var N = m.length, X = [], K = 0; K < N; K++) X.push(k(m[K]));
              return X;
            },
            filter: function (m, k) {
              for (var N = m.length, X = [], K = 0; K < N; K++)
                k(m[K]) && X.push(m[K]);
              return X;
            },
            filterSVGElements: function (m) {
              return this.filter(m, function (k) {
                return k instanceof U.SVGElement;
              });
            },
          }),
          (s.defaults = {
            attrs: {
              "fill-opacity": 1,
              "stroke-opacity": 1,
              "stroke-width": 0,
              "stroke-linejoin": "miter",
              "stroke-linecap": "butt",
              fill: "#000000",
              stroke: "#000000",
              opacity: 1,
              x: 0,
              y: 0,
              cx: 0,
              cy: 0,
              width: 0,
              height: 0,
              r: 0,
              rx: 0,
              ry: 0,
              offset: 0,
              "stop-opacity": 1,
              "stop-color": "#000000",
              "font-size": 16,
              "font-family": "Helvetica, Arial, sans-serif",
              "text-anchor": "start",
            },
          }),
          (s.Color = function (m) {
            var k, N;
            (this.r = 0),
              (this.g = 0),
              (this.b = 0),
              m &&
                (typeof m == "string"
                  ? s.regex.isRgb.test(m)
                    ? ((k = s.regex.rgb.exec(
                        m.replace(s.regex.whitespace, "")
                      )),
                      (this.r = parseInt(k[1])),
                      (this.g = parseInt(k[2])),
                      (this.b = parseInt(k[3])))
                    : s.regex.isHex.test(m) &&
                      ((k = s.regex.hex.exec(
                        (N = m).length == 4
                          ? [
                              "#",
                              N.substring(1, 2),
                              N.substring(1, 2),
                              N.substring(2, 3),
                              N.substring(2, 3),
                              N.substring(3, 4),
                              N.substring(3, 4),
                            ].join("")
                          : N
                      )),
                      (this.r = parseInt(k[1], 16)),
                      (this.g = parseInt(k[2], 16)),
                      (this.b = parseInt(k[3], 16)))
                  : a(m) === "object" &&
                    ((this.r = m.r), (this.g = m.g), (this.b = m.b)));
          }),
          s.extend(s.Color, {
            toString: function () {
              return this.toHex();
            },
            toHex: function () {
              return "#" + _(this.r) + _(this.g) + _(this.b);
            },
            toRgb: function () {
              return "rgb(" + [this.r, this.g, this.b].join() + ")";
            },
            brightness: function () {
              return (
                (this.r / 255) * 0.3 +
                (this.g / 255) * 0.59 +
                (this.b / 255) * 0.11
              );
            },
            morph: function (m) {
              return (this.destination = new s.Color(m)), this;
            },
            at: function (m) {
              return this.destination
                ? ((m = m < 0 ? 0 : m > 1 ? 1 : m),
                  new s.Color({
                    r: ~~(this.r + (this.destination.r - this.r) * m),
                    g: ~~(this.g + (this.destination.g - this.g) * m),
                    b: ~~(this.b + (this.destination.b - this.b) * m),
                  }))
                : this;
            },
          }),
          (s.Color.test = function (m) {
            return (m += ""), s.regex.isHex.test(m) || s.regex.isRgb.test(m);
          }),
          (s.Color.isRgb = function (m) {
            return (
              m &&
              typeof m.r == "number" &&
              typeof m.g == "number" &&
              typeof m.b == "number"
            );
          }),
          (s.Color.isColor = function (m) {
            return s.Color.isRgb(m) || s.Color.test(m);
          }),
          (s.Array = function (m, k) {
            (m = (m || []).valueOf()).length == 0 && k && (m = k.valueOf()),
              (this.value = this.parse(m));
          }),
          s.extend(s.Array, {
            toString: function () {
              return this.value.join(" ");
            },
            valueOf: function () {
              return this.value;
            },
            parse: function (m) {
              return (m = m.valueOf()), Array.isArray(m) ? m : this.split(m);
            },
          }),
          (s.PointArray = function (m, k) {
            s.Array.call(this, m, k || [[0, 0]]);
          }),
          (s.PointArray.prototype = new s.Array()),
          (s.PointArray.prototype.constructor = s.PointArray);
        for (
          var l = {
              M: function (m, k, N) {
                return (k.x = N.x = m[0]), (k.y = N.y = m[1]), ["M", k.x, k.y];
              },
              L: function (m, k) {
                return (k.x = m[0]), (k.y = m[1]), ["L", m[0], m[1]];
              },
              H: function (m, k) {
                return (k.x = m[0]), ["H", m[0]];
              },
              V: function (m, k) {
                return (k.y = m[0]), ["V", m[0]];
              },
              C: function (m, k) {
                return (
                  (k.x = m[4]),
                  (k.y = m[5]),
                  ["C", m[0], m[1], m[2], m[3], m[4], m[5]]
                );
              },
              Q: function (m, k) {
                return (
                  (k.x = m[2]), (k.y = m[3]), ["Q", m[0], m[1], m[2], m[3]]
                );
              },
              S: function (m, k) {
                return (
                  (k.x = m[2]), (k.y = m[3]), ["S", m[0], m[1], m[2], m[3]]
                );
              },
              Z: function (m, k, N) {
                return (k.x = N.x), (k.y = N.y), ["Z"];
              },
            },
            c = "mlhvqtcsaz".split(""),
            h = 0,
            d = c.length;
          h < d;
          ++h
        )
          l[c[h]] = (function (m) {
            return function (k, N, X) {
              if (m == "H") k[0] = k[0] + N.x;
              else if (m == "V") k[0] = k[0] + N.y;
              else if (m == "A") (k[5] = k[5] + N.x), (k[6] = k[6] + N.y);
              else
                for (var K = 0, ee = k.length; K < ee; ++K)
                  k[K] = k[K] + (K % 2 ? N.y : N.x);
              if (l && typeof l[m] == "function") return l[m](k, N, X);
            };
          })(c[h].toUpperCase());
        (s.PathArray = function (m, k) {
          s.Array.call(this, m, k || [["M", 0, 0]]);
        }),
          (s.PathArray.prototype = new s.Array()),
          (s.PathArray.prototype.constructor = s.PathArray),
          s.extend(s.PathArray, {
            toString: function () {
              return (function (m) {
                for (var k = 0, N = m.length, X = ""; k < N; k++)
                  (X += m[k][0]),
                    m[k][1] != null &&
                      ((X += m[k][1]),
                      m[k][2] != null &&
                        ((X += " "),
                        (X += m[k][2]),
                        m[k][3] != null &&
                          ((X += " "),
                          (X += m[k][3]),
                          (X += " "),
                          (X += m[k][4]),
                          m[k][5] != null &&
                            ((X += " "),
                            (X += m[k][5]),
                            (X += " "),
                            (X += m[k][6]),
                            m[k][7] != null && ((X += " "), (X += m[k][7]))))));
                return X + " ";
              })(this.value);
            },
            move: function (m, k) {
              var N = this.bbox();
              return N.x, N.y, this;
            },
            at: function (m) {
              if (!this.destination) return this;
              for (
                var k = this.value,
                  N = this.destination.value,
                  X = [],
                  K = new s.PathArray(),
                  ee = 0,
                  fe = k.length;
                ee < fe;
                ee++
              ) {
                X[ee] = [k[ee][0]];
                for (var ge = 1, Pe = k[ee].length; ge < Pe; ge++)
                  X[ee][ge] = k[ee][ge] + (N[ee][ge] - k[ee][ge]) * m;
                X[ee][0] === "A" &&
                  ((X[ee][4] = +(X[ee][4] != 0)),
                  (X[ee][5] = +(X[ee][5] != 0)));
              }
              return (K.value = X), K;
            },
            parse: function (m) {
              if (m instanceof s.PathArray) return m.valueOf();
              var k,
                N = {
                  M: 2,
                  L: 2,
                  H: 1,
                  V: 1,
                  C: 6,
                  S: 4,
                  Q: 4,
                  T: 2,
                  A: 7,
                  Z: 0,
                };
              m =
                typeof m == "string"
                  ? m
                      .replace(s.regex.numbersWithDots, p)
                      .replace(s.regex.pathLetters, " $& ")
                      .replace(s.regex.hyphen, "$1 -")
                      .trim()
                      .split(s.regex.delimiter)
                  : m.reduce(function (Pe, We) {
                      return [].concat.call(Pe, We);
                    }, []);
              var X = [],
                K = new s.Point(),
                ee = new s.Point(),
                fe = 0,
                ge = m.length;
              do
                s.regex.isPathLetter.test(m[fe])
                  ? ((k = m[fe]), ++fe)
                  : k == "M"
                  ? (k = "L")
                  : k == "m" && (k = "l"),
                  X.push(
                    l[k].call(
                      null,
                      m.slice(fe, (fe += N[k.toUpperCase()])).map(parseFloat),
                      K,
                      ee
                    )
                  );
              while (ge > fe);
              return X;
            },
            bbox: function () {
              return (
                s.parser.draw || s.prepare(),
                s.parser.path.setAttribute("d", this.toString()),
                s.parser.path.getBBox()
              );
            },
          }),
          (s.Number = s.invent({
            create: function (m, k) {
              (this.value = 0),
                (this.unit = k || ""),
                typeof m == "number"
                  ? (this.value = isNaN(m)
                      ? 0
                      : isFinite(m)
                      ? m
                      : m < 0
                      ? -34e37
                      : 34e37)
                  : typeof m == "string"
                  ? (k = m.match(s.regex.numberAndUnit)) &&
                    ((this.value = parseFloat(k[1])),
                    k[5] == "%"
                      ? (this.value /= 100)
                      : k[5] == "s" && (this.value *= 1e3),
                    (this.unit = k[5]))
                  : m instanceof s.Number &&
                    ((this.value = m.valueOf()), (this.unit = m.unit));
            },
            extend: {
              toString: function () {
                return (
                  (this.unit == "%"
                    ? ~~(1e8 * this.value) / 1e6
                    : this.unit == "s"
                    ? this.value / 1e3
                    : this.value) + this.unit
                );
              },
              toJSON: function () {
                return this.toString();
              },
              valueOf: function () {
                return this.value;
              },
              plus: function (m) {
                return (
                  (m = new s.Number(m)),
                  new s.Number(this + m, this.unit || m.unit)
                );
              },
              minus: function (m) {
                return (
                  (m = new s.Number(m)),
                  new s.Number(this - m, this.unit || m.unit)
                );
              },
              times: function (m) {
                return (
                  (m = new s.Number(m)),
                  new s.Number(this * m, this.unit || m.unit)
                );
              },
              divide: function (m) {
                return (
                  (m = new s.Number(m)),
                  new s.Number(this / m, this.unit || m.unit)
                );
              },
              to: function (m) {
                var k = new s.Number(this);
                return typeof m == "string" && (k.unit = m), k;
              },
              morph: function (m) {
                return (
                  (this.destination = new s.Number(m)),
                  m.relative && (this.destination.value += this.value),
                  this
                );
              },
              at: function (m) {
                return this.destination
                  ? new s.Number(this.destination)
                      .minus(this)
                      .times(m)
                      .plus(this)
                  : this;
              },
            },
          })),
          (s.Element = s.invent({
            create: function (m) {
              (this._stroke = s.defaults.attrs.stroke),
                (this._event = null),
                (this.dom = {}),
                (this.node = m) &&
                  ((this.type = m.nodeName),
                  (this.node.instance = this),
                  (this._stroke = m.getAttribute("stroke") || this._stroke));
            },
            extend: {
              x: function (m) {
                return this.attr("x", m);
              },
              y: function (m) {
                return this.attr("y", m);
              },
              cx: function (m) {
                return m == null
                  ? this.x() + this.width() / 2
                  : this.x(m - this.width() / 2);
              },
              cy: function (m) {
                return m == null
                  ? this.y() + this.height() / 2
                  : this.y(m - this.height() / 2);
              },
              move: function (m, k) {
                return this.x(m).y(k);
              },
              center: function (m, k) {
                return this.cx(m).cy(k);
              },
              width: function (m) {
                return this.attr("width", m);
              },
              height: function (m) {
                return this.attr("height", m);
              },
              size: function (m, k) {
                var N = S(this, m, k);
                return this.width(new s.Number(N.width)).height(
                  new s.Number(N.height)
                );
              },
              clone: function (m) {
                this.writeDataToDom();
                var k = D(this.node.cloneNode(!0));
                return m ? m.add(k) : this.after(k), k;
              },
              remove: function () {
                return this.parent() && this.parent().removeElement(this), this;
              },
              replace: function (m) {
                return this.after(m).remove(), m;
              },
              addTo: function (m) {
                return m.put(this);
              },
              putIn: function (m) {
                return m.add(this);
              },
              id: function (m) {
                return this.attr("id", m);
              },
              show: function () {
                return this.style("display", "");
              },
              hide: function () {
                return this.style("display", "none");
              },
              visible: function () {
                return this.style("display") != "none";
              },
              toString: function () {
                return this.attr("id");
              },
              classes: function () {
                var m = this.attr("class");
                return m == null ? [] : m.trim().split(s.regex.delimiter);
              },
              hasClass: function (m) {
                return this.classes().indexOf(m) != -1;
              },
              addClass: function (m) {
                if (!this.hasClass(m)) {
                  var k = this.classes();
                  k.push(m), this.attr("class", k.join(" "));
                }
                return this;
              },
              removeClass: function (m) {
                return (
                  this.hasClass(m) &&
                    this.attr(
                      "class",
                      this.classes()
                        .filter(function (k) {
                          return k != m;
                        })
                        .join(" ")
                    ),
                  this
                );
              },
              toggleClass: function (m) {
                return this.hasClass(m)
                  ? this.removeClass(m)
                  : this.addClass(m);
              },
              reference: function (m) {
                return s.get(this.attr(m));
              },
              parent: function (m) {
                var k = this;
                if (!k.node.parentNode) return null;
                if (((k = s.adopt(k.node.parentNode)), !m)) return k;
                for (; k && k.node instanceof U.SVGElement; ) {
                  if (typeof m == "string" ? k.matches(m) : k instanceof m)
                    return k;
                  if (
                    !k.node.parentNode ||
                    k.node.parentNode.nodeName == "#document"
                  )
                    return null;
                  k = s.adopt(k.node.parentNode);
                }
              },
              doc: function () {
                return this instanceof s.Doc ? this : this.parent(s.Doc);
              },
              parents: function (m) {
                var k = [],
                  N = this;
                do {
                  if (!(N = N.parent(m)) || !N.node) break;
                  k.push(N);
                } while (N.parent);
                return k;
              },
              matches: function (m) {
                return (function (k, N) {
                  return (
                    k.matches ||
                    k.matchesSelector ||
                    k.msMatchesSelector ||
                    k.mozMatchesSelector ||
                    k.webkitMatchesSelector ||
                    k.oMatchesSelector
                  ).call(k, N);
                })(this.node, m);
              },
              native: function () {
                return this.node;
              },
              svg: function (m) {
                var k = i.createElement("svg");
                if (!(m && this instanceof s.Parent))
                  return (
                    k.appendChild((m = i.createElement("svg"))),
                    this.writeDataToDom(),
                    m.appendChild(this.node.cloneNode(!0)),
                    k.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "")
                  );
                k.innerHTML =
                  "<svg>" +
                  m
                    .replace(/\n/, "")
                    .replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") +
                  "</svg>";
                for (var N = 0, X = k.firstChild.childNodes.length; N < X; N++)
                  this.node.appendChild(k.firstChild.firstChild);
                return this;
              },
              writeDataToDom: function () {
                return (
                  (this.each || this.lines) &&
                    (this.each ? this : this.lines()).each(function () {
                      this.writeDataToDom();
                    }),
                  this.node.removeAttribute("svgjs:data"),
                  Object.keys(this.dom).length &&
                    this.node.setAttribute(
                      "svgjs:data",
                      JSON.stringify(this.dom)
                    ),
                  this
                );
              },
              setData: function (m) {
                return (this.dom = m), this;
              },
              is: function (m) {
                return (function (k, N) {
                  return k instanceof N;
                })(this, m);
              },
            },
          })),
          (s.easing = {
            "-": function (m) {
              return m;
            },
            "<>": function (m) {
              return -Math.cos(m * Math.PI) / 2 + 0.5;
            },
            ">": function (m) {
              return Math.sin((m * Math.PI) / 2);
            },
            "<": function (m) {
              return 1 - Math.cos((m * Math.PI) / 2);
            },
          }),
          (s.morph = function (m) {
            return function (k, N) {
              return new s.MorphObj(k, N).at(m);
            };
          }),
          (s.Situation = s.invent({
            create: function (m) {
              (this.init = !1),
                (this.reversed = !1),
                (this.reversing = !1),
                (this.duration = new s.Number(m.duration).valueOf()),
                (this.delay = new s.Number(m.delay).valueOf()),
                (this.start = +new Date() + this.delay),
                (this.finish = this.start + this.duration),
                (this.ease = m.ease),
                (this.loop = 0),
                (this.loops = !1),
                (this.animations = {}),
                (this.attrs = {}),
                (this.styles = {}),
                (this.transforms = []),
                (this.once = {});
            },
          })),
          (s.FX = s.invent({
            create: function (m) {
              (this._target = m),
                (this.situations = []),
                (this.active = !1),
                (this.situation = null),
                (this.paused = !1),
                (this.lastPos = 0),
                (this.pos = 0),
                (this.absPos = 0),
                (this._speed = 1);
            },
            extend: {
              animate: function (m, k, N) {
                a(m) === "object" &&
                  ((k = m.ease), (N = m.delay), (m = m.duration));
                var X = new s.Situation({
                  duration: m || 1e3,
                  delay: N || 0,
                  ease: s.easing[k || "-"] || k,
                });
                return this.queue(X), this;
              },
              target: function (m) {
                return m && m instanceof s.Element
                  ? ((this._target = m), this)
                  : this._target;
              },
              timeToAbsPos: function (m) {
                return (
                  (m - this.situation.start) /
                  (this.situation.duration / this._speed)
                );
              },
              absPosToTime: function (m) {
                return (
                  (this.situation.duration / this._speed) * m +
                  this.situation.start
                );
              },
              startAnimFrame: function () {
                this.stopAnimFrame(),
                  (this.animationFrame = U.requestAnimationFrame(
                    function () {
                      this.step();
                    }.bind(this)
                  ));
              },
              stopAnimFrame: function () {
                U.cancelAnimationFrame(this.animationFrame);
              },
              start: function () {
                return (
                  !this.active &&
                    this.situation &&
                    ((this.active = !0), this.startCurrent()),
                  this
                );
              },
              startCurrent: function () {
                return (
                  (this.situation.start =
                    +new Date() + this.situation.delay / this._speed),
                  (this.situation.finish =
                    this.situation.start +
                    this.situation.duration / this._speed),
                  this.initAnimations().step()
                );
              },
              queue: function (m) {
                return (
                  (typeof m == "function" || m instanceof s.Situation) &&
                    this.situations.push(m),
                  this.situation || (this.situation = this.situations.shift()),
                  this
                );
              },
              dequeue: function () {
                return (
                  this.stop(),
                  (this.situation = this.situations.shift()),
                  this.situation &&
                    (this.situation instanceof s.Situation
                      ? this.start()
                      : this.situation.call(this)),
                  this
                );
              },
              initAnimations: function () {
                var m,
                  k = this.situation;
                if (k.init) return this;
                for (var N in k.animations) {
                  (m = this.target()[N]()),
                    Array.isArray(m) || (m = [m]),
                    Array.isArray(k.animations[N]) ||
                      (k.animations[N] = [k.animations[N]]);
                  for (var X = m.length; X--; )
                    k.animations[N][X] instanceof s.Number &&
                      (m[X] = new s.Number(m[X])),
                      (k.animations[N][X] = m[X].morph(k.animations[N][X]));
                }
                for (var N in k.attrs)
                  k.attrs[N] = new s.MorphObj(
                    this.target().attr(N),
                    k.attrs[N]
                  );
                for (var N in k.styles)
                  k.styles[N] = new s.MorphObj(
                    this.target().style(N),
                    k.styles[N]
                  );
                return (
                  (k.initialTransformation = this.target().matrixify()),
                  (k.init = !0),
                  this
                );
              },
              clearQueue: function () {
                return (this.situations = []), this;
              },
              clearCurrent: function () {
                return (this.situation = null), this;
              },
              stop: function (m, k) {
                var N = this.active;
                return (
                  (this.active = !1),
                  k && this.clearQueue(),
                  m &&
                    this.situation &&
                    (!N && this.startCurrent(), this.atEnd()),
                  this.stopAnimFrame(),
                  this.clearCurrent()
                );
              },
              after: function (m) {
                var k = this.last();
                return (
                  this.target().on("finished.fx", function N(X) {
                    X.detail.situation == k &&
                      (m.call(this, k), this.off("finished.fx", N));
                  }),
                  this._callStart()
                );
              },
              during: function (m) {
                var k = this.last(),
                  N = function (X) {
                    X.detail.situation == k &&
                      m.call(
                        this,
                        X.detail.pos,
                        s.morph(X.detail.pos),
                        X.detail.eased,
                        k
                      );
                  };
                return (
                  this.target().off("during.fx", N).on("during.fx", N),
                  this.after(function () {
                    this.off("during.fx", N);
                  }),
                  this._callStart()
                );
              },
              afterAll: function (m) {
                var k = function N(X) {
                  m.call(this), this.off("allfinished.fx", N);
                };
                return (
                  this.target()
                    .off("allfinished.fx", k)
                    .on("allfinished.fx", k),
                  this._callStart()
                );
              },
              last: function () {
                return this.situations.length
                  ? this.situations[this.situations.length - 1]
                  : this.situation;
              },
              add: function (m, k, N) {
                return (
                  (this.last()[N || "animations"][m] = k), this._callStart()
                );
              },
              step: function (m) {
                var k, N, X;
                m || (this.absPos = this.timeToAbsPos(+new Date())),
                  this.situation.loops !== !1
                    ? ((k = Math.max(this.absPos, 0)),
                      (N = Math.floor(k)),
                      this.situation.loops === !0 || N < this.situation.loops
                        ? ((this.pos = k - N),
                          (X = this.situation.loop),
                          (this.situation.loop = N))
                        : ((this.absPos = this.situation.loops),
                          (this.pos = 1),
                          (X = this.situation.loop - 1),
                          (this.situation.loop = this.situation.loops)),
                      this.situation.reversing &&
                        (this.situation.reversed =
                          this.situation.reversed !=
                          !!((this.situation.loop - X) % 2)))
                    : ((this.absPos = Math.min(this.absPos, 1)),
                      (this.pos = this.absPos)),
                  this.pos < 0 && (this.pos = 0),
                  this.situation.reversed && (this.pos = 1 - this.pos);
                var K = this.situation.ease(this.pos);
                for (var ee in this.situation.once)
                  ee > this.lastPos &&
                    ee <= K &&
                    (this.situation.once[ee].call(this.target(), this.pos, K),
                    delete this.situation.once[ee]);
                return (
                  this.active &&
                    this.target().fire("during", {
                      pos: this.pos,
                      eased: K,
                      fx: this,
                      situation: this.situation,
                    }),
                  this.situation
                    ? (this.eachAt(),
                      (this.pos == 1 && !this.situation.reversed) ||
                      (this.situation.reversed && this.pos == 0)
                        ? (this.stopAnimFrame(),
                          this.target().fire("finished", {
                            fx: this,
                            situation: this.situation,
                          }),
                          this.situations.length ||
                            (this.target().fire("allfinished"),
                            this.situations.length ||
                              (this.target().off(".fx"), (this.active = !1))),
                          this.active ? this.dequeue() : this.clearCurrent())
                        : !this.paused && this.active && this.startAnimFrame(),
                      (this.lastPos = K),
                      this)
                    : this
                );
              },
              eachAt: function () {
                var m,
                  k = this,
                  N = this.target(),
                  X = this.situation;
                for (var K in X.animations)
                  (m = [].concat(X.animations[K]).map(function (ge) {
                    return typeof ge != "string" && ge.at
                      ? ge.at(X.ease(k.pos), k.pos)
                      : ge;
                  })),
                    N[K].apply(N, m);
                for (var K in X.attrs)
                  (m = [K].concat(X.attrs[K]).map(function (Pe) {
                    return typeof Pe != "string" && Pe.at
                      ? Pe.at(X.ease(k.pos), k.pos)
                      : Pe;
                  })),
                    N.attr.apply(N, m);
                for (var K in X.styles)
                  (m = [K].concat(X.styles[K]).map(function (Pe) {
                    return typeof Pe != "string" && Pe.at
                      ? Pe.at(X.ease(k.pos), k.pos)
                      : Pe;
                  })),
                    N.style.apply(N, m);
                if (X.transforms.length) {
                  (m = X.initialTransformation), (K = 0);
                  for (var ee = X.transforms.length; K < ee; K++) {
                    var fe = X.transforms[K];
                    fe instanceof s.Matrix
                      ? (m = fe.relative
                          ? m.multiply(
                              new s.Matrix().morph(fe).at(X.ease(this.pos))
                            )
                          : m.morph(fe).at(X.ease(this.pos)))
                      : (fe.relative || fe.undo(m.extract()),
                        (m = m.multiply(fe.at(X.ease(this.pos)))));
                  }
                  N.matrix(m);
                }
                return this;
              },
              once: function (m, k, N) {
                var X = this.last();
                return N || (m = X.ease(m)), (X.once[m] = k), this;
              },
              _callStart: function () {
                return (
                  setTimeout(
                    function () {
                      this.start();
                    }.bind(this),
                    0
                  ),
                  this
                );
              },
            },
            parent: s.Element,
            construct: {
              animate: function (m, k, N) {
                return (this.fx || (this.fx = new s.FX(this))).animate(m, k, N);
              },
              delay: function (m) {
                return (this.fx || (this.fx = new s.FX(this))).delay(m);
              },
              stop: function (m, k) {
                return this.fx && this.fx.stop(m, k), this;
              },
              finish: function () {
                return this.fx && this.fx.finish(), this;
              },
            },
          })),
          (s.MorphObj = s.invent({
            create: function (m, k) {
              return s.Color.isColor(k)
                ? new s.Color(m).morph(k)
                : s.regex.delimiter.test(m)
                ? s.regex.pathLetters.test(m)
                  ? new s.PathArray(m).morph(k)
                  : new s.Array(m).morph(k)
                : s.regex.numberAndUnit.test(k)
                ? new s.Number(m).morph(k)
                : ((this.value = m), void (this.destination = k));
            },
            extend: {
              at: function (m, k) {
                return k < 1 ? this.value : this.destination;
              },
              valueOf: function () {
                return this.value;
              },
            },
          })),
          s.extend(s.FX, {
            attr: function (m, k, N) {
              if (a(m) === "object") for (var X in m) this.attr(X, m[X]);
              else this.add(m, k, "attrs");
              return this;
            },
            plot: function (m, k, N, X) {
              return arguments.length == 4
                ? this.plot([m, k, N, X])
                : this.add("plot", new (this.target().morphArray)(m));
            },
          }),
          (s.Box = s.invent({
            create: function (m, k, N, X) {
              if (!(a(m) !== "object" || m instanceof s.Element))
                return s.Box.call(
                  this,
                  m.left != null ? m.left : m.x,
                  m.top != null ? m.top : m.y,
                  m.width,
                  m.height
                );
              var K;
              arguments.length == 4 &&
                ((this.x = m),
                (this.y = k),
                (this.width = N),
                (this.height = X)),
                (K = this).x == null &&
                  ((K.x = 0), (K.y = 0), (K.width = 0), (K.height = 0)),
                (K.w = K.width),
                (K.h = K.height),
                (K.x2 = K.x + K.width),
                (K.y2 = K.y + K.height),
                (K.cx = K.x + K.width / 2),
                (K.cy = K.y + K.height / 2);
            },
          })),
          (s.BBox = s.invent({
            create: function (m) {
              if (
                (s.Box.apply(this, [].slice.call(arguments)),
                m instanceof s.Element)
              ) {
                var k;
                try {
                  if (!i.documentElement.contains) {
                    for (var N = m.node; N.parentNode; ) N = N.parentNode;
                    if (N != i) throw new Error("Element not in the dom");
                  }
                  k = m.node.getBBox();
                } catch {
                  if (m instanceof s.Shape) {
                    s.parser.draw || s.prepare();
                    var X = m.clone(s.parser.draw.instance).show();
                    X &&
                      X.node &&
                      typeof X.node.getBBox == "function" &&
                      (k = X.node.getBBox()),
                      X && typeof X.remove == "function" && X.remove();
                  } else
                    k = {
                      x: m.node.clientLeft,
                      y: m.node.clientTop,
                      width: m.node.clientWidth,
                      height: m.node.clientHeight,
                    };
                }
                s.Box.call(this, k);
              }
            },
            inherit: s.Box,
            parent: s.Element,
            construct: {
              bbox: function () {
                return new s.BBox(this);
              },
            },
          })),
          (s.BBox.prototype.constructor = s.BBox),
          (s.Matrix = s.invent({
            create: function (m) {
              var k = O([1, 0, 0, 1, 0, 0]);
              m =
                m === null
                  ? k
                  : m instanceof s.Element
                  ? m.matrixify()
                  : typeof m == "string"
                  ? O(m.split(s.regex.delimiter).map(parseFloat))
                  : arguments.length == 6
                  ? O([].slice.call(arguments))
                  : Array.isArray(m)
                  ? O(m)
                  : m && a(m) === "object"
                  ? m
                  : k;
              for (var N = G.length - 1; N >= 0; --N)
                this[G[N]] = m[G[N]] != null ? m[G[N]] : k[G[N]];
            },
            extend: {
              extract: function () {
                var m = T(this, 0, 1);
                T(this, 1, 0);
                var k = (180 / Math.PI) * Math.atan2(m.y, m.x) - 90;
                return {
                  x: this.e,
                  y: this.f,
                  transformedX:
                    (this.e * Math.cos((k * Math.PI) / 180) +
                      this.f * Math.sin((k * Math.PI) / 180)) /
                    Math.sqrt(this.a * this.a + this.b * this.b),
                  transformedY:
                    (this.f * Math.cos((k * Math.PI) / 180) +
                      this.e * Math.sin((-k * Math.PI) / 180)) /
                    Math.sqrt(this.c * this.c + this.d * this.d),
                  rotation: k,
                  a: this.a,
                  b: this.b,
                  c: this.c,
                  d: this.d,
                  e: this.e,
                  f: this.f,
                  matrix: new s.Matrix(this),
                };
              },
              clone: function () {
                return new s.Matrix(this);
              },
              morph: function (m) {
                return (this.destination = new s.Matrix(m)), this;
              },
              multiply: function (m) {
                return new s.Matrix(
                  this.native().multiply(
                    (function (k) {
                      return k instanceof s.Matrix || (k = new s.Matrix(k)), k;
                    })(m).native()
                  )
                );
              },
              inverse: function () {
                return new s.Matrix(this.native().inverse());
              },
              translate: function (m, k) {
                return new s.Matrix(this.native().translate(m || 0, k || 0));
              },
              native: function () {
                for (
                  var m = s.parser.native.createSVGMatrix(), k = G.length - 1;
                  k >= 0;
                  k--
                )
                  m[G[k]] = this[G[k]];
                return m;
              },
              toString: function () {
                return (
                  "matrix(" +
                  V(this.a) +
                  "," +
                  V(this.b) +
                  "," +
                  V(this.c) +
                  "," +
                  V(this.d) +
                  "," +
                  V(this.e) +
                  "," +
                  V(this.f) +
                  ")"
                );
              },
            },
            parent: s.Element,
            construct: {
              ctm: function () {
                return new s.Matrix(this.node.getCTM());
              },
              screenCTM: function () {
                if (this instanceof s.Nested) {
                  var m = this.rect(1, 1),
                    k = m.node.getScreenCTM();
                  return m.remove(), new s.Matrix(k);
                }
                return new s.Matrix(this.node.getScreenCTM());
              },
            },
          })),
          (s.Point = s.invent({
            create: function (m, k) {
              var N;
              (N = Array.isArray(m)
                ? { x: m[0], y: m[1] }
                : a(m) === "object"
                ? { x: m.x, y: m.y }
                : m != null
                ? { x: m, y: k ?? m }
                : { x: 0, y: 0 }),
                (this.x = N.x),
                (this.y = N.y);
            },
            extend: {
              clone: function () {
                return new s.Point(this);
              },
              morph: function (m, k) {
                return (this.destination = new s.Point(m, k)), this;
              },
            },
          })),
          s.extend(s.Element, {
            point: function (m, k) {
              return new s.Point(m, k).transform(this.screenCTM().inverse());
            },
          }),
          s.extend(s.Element, {
            attr: function (m, k, N) {
              if (m == null) {
                for (
                  m = {}, N = (k = this.node.attributes).length - 1;
                  N >= 0;
                  N--
                )
                  m[k[N].nodeName] = s.regex.isNumber.test(k[N].nodeValue)
                    ? parseFloat(k[N].nodeValue)
                    : k[N].nodeValue;
                return m;
              }
              if (a(m) === "object") for (var X in m) this.attr(X, m[X]);
              else if (k === null) this.node.removeAttribute(m);
              else {
                if (k == null)
                  return (k = this.node.getAttribute(m)) == null
                    ? s.defaults.attrs[m]
                    : s.regex.isNumber.test(k)
                    ? parseFloat(k)
                    : k;
                m == "stroke-width"
                  ? this.attr("stroke", parseFloat(k) > 0 ? this._stroke : null)
                  : m == "stroke" && (this._stroke = k),
                  (m != "fill" && m != "stroke") ||
                    (s.regex.isImage.test(k) &&
                      (k = this.doc().defs().image(k, 0, 0)),
                    k instanceof s.Image &&
                      (k = this.doc()
                        .defs()
                        .pattern(0, 0, function () {
                          this.add(k);
                        }))),
                  typeof k == "number"
                    ? (k = new s.Number(k))
                    : s.Color.isColor(k)
                    ? (k = new s.Color(k))
                    : Array.isArray(k) && (k = new s.Array(k)),
                  m == "leading"
                    ? this.leading && this.leading(k)
                    : typeof N == "string"
                    ? this.node.setAttributeNS(N, m, k.toString())
                    : this.node.setAttribute(m, k.toString()),
                  !this.rebuild ||
                    (m != "font-size" && m != "x") ||
                    this.rebuild(m, k);
              }
              return this;
            },
          }),
          s.extend(s.Element, {
            transform: function (m, k) {
              var N;
              return a(m) !== "object"
                ? ((N = new s.Matrix(this).extract()),
                  typeof m == "string" ? N[m] : N)
                : ((N = new s.Matrix(this)),
                  (k = !!k || !!m.relative),
                  m.a != null &&
                    (N = k ? N.multiply(new s.Matrix(m)) : new s.Matrix(m)),
                  this.attr("transform", N));
            },
          }),
          s.extend(s.Element, {
            untransform: function () {
              return this.attr("transform", null);
            },
            matrixify: function () {
              return (this.attr("transform") || "")
                .split(s.regex.transforms)
                .slice(0, -1)
                .map(function (m) {
                  var k = m.trim().split("(");
                  return [
                    k[0],
                    k[1].split(s.regex.delimiter).map(function (N) {
                      return parseFloat(N);
                    }),
                  ];
                })
                .reduce(function (m, k) {
                  return k[0] == "matrix"
                    ? m.multiply(O(k[1]))
                    : m[k[0]].apply(m, k[1]);
                }, new s.Matrix());
            },
            toParent: function (m) {
              if (this == m) return this;
              var k = this.screenCTM(),
                N = m.screenCTM().inverse();
              return this.addTo(m).untransform().transform(N.multiply(k)), this;
            },
            toDoc: function () {
              return this.toParent(this.doc());
            },
          }),
          (s.Transformation = s.invent({
            create: function (m, k) {
              if (arguments.length > 1 && typeof k != "boolean")
                return this.constructor.call(this, [].slice.call(arguments));
              if (Array.isArray(m))
                for (var N = 0, X = this.arguments.length; N < X; ++N)
                  this[this.arguments[N]] = m[N];
              else if (m && a(m) === "object")
                for (N = 0, X = this.arguments.length; N < X; ++N)
                  this[this.arguments[N]] = m[this.arguments[N]];
              (this.inversed = !1), k === !0 && (this.inversed = !0);
            },
          })),
          (s.Translate = s.invent({
            parent: s.Matrix,
            inherit: s.Transformation,
            create: function (m, k) {
              this.constructor.apply(this, [].slice.call(arguments));
            },
            extend: {
              arguments: ["transformedX", "transformedY"],
              method: "translate",
            },
          })),
          s.extend(s.Element, {
            style: function (m, k) {
              if (arguments.length == 0) return this.node.style.cssText || "";
              if (arguments.length < 2)
                if (a(m) === "object") for (var N in m) this.style(N, m[N]);
                else {
                  if (!s.regex.isCss.test(m)) return this.node.style[v(m)];
                  for (
                    m = m
                      .split(/\s*;\s*/)
                      .filter(function (X) {
                        return !!X;
                      })
                      .map(function (X) {
                        return X.split(/\s*:\s*/);
                      });
                    (k = m.pop());

                  )
                    this.style(k[0], k[1]);
                }
              else
                this.node.style[v(m)] =
                  k === null || s.regex.isBlank.test(k) ? "" : k;
              return this;
            },
          }),
          (s.Parent = s.invent({
            create: function (m) {
              this.constructor.call(this, m);
            },
            inherit: s.Element,
            extend: {
              children: function () {
                return s.utils.map(
                  s.utils.filterSVGElements(this.node.childNodes),
                  function (m) {
                    return s.adopt(m);
                  }
                );
              },
              add: function (m, k) {
                return (
                  k == null
                    ? this.node.appendChild(m.node)
                    : m.node != this.node.childNodes[k] &&
                      this.node.insertBefore(m.node, this.node.childNodes[k]),
                  this
                );
              },
              put: function (m, k) {
                return this.add(m, k), m;
              },
              has: function (m) {
                return this.index(m) >= 0;
              },
              index: function (m) {
                return [].slice.call(this.node.childNodes).indexOf(m.node);
              },
              get: function (m) {
                return s.adopt(this.node.childNodes[m]);
              },
              first: function () {
                return this.get(0);
              },
              last: function () {
                return this.get(this.node.childNodes.length - 1);
              },
              each: function (m, k) {
                for (var N = this.children(), X = 0, K = N.length; X < K; X++)
                  N[X] instanceof s.Element && m.apply(N[X], [X, N]),
                    k && N[X] instanceof s.Container && N[X].each(m, k);
                return this;
              },
              removeElement: function (m) {
                return this.node.removeChild(m.node), this;
              },
              clear: function () {
                for (; this.node.hasChildNodes(); )
                  this.node.removeChild(this.node.lastChild);
                return delete this._defs, this;
              },
              defs: function () {
                return this.doc().defs();
              },
            },
          })),
          s.extend(s.Parent, {
            ungroup: function (m, k) {
              return (
                k === 0 ||
                  this instanceof s.Defs ||
                  this.node == s.parser.draw ||
                  ((m =
                    m ||
                    (this instanceof s.Doc ? this : this.parent(s.Parent))),
                  (k = k || 1 / 0),
                  this.each(function () {
                    return this instanceof s.Defs
                      ? this
                      : this instanceof s.Parent
                      ? this.ungroup(m, k - 1)
                      : this.toParent(m);
                  }),
                  this.node.firstChild || this.remove()),
                this
              );
            },
            flatten: function (m, k) {
              return this.ungroup(m, k);
            },
          }),
          (s.Container = s.invent({
            create: function (m) {
              this.constructor.call(this, m);
            },
            inherit: s.Parent,
          })),
          (s.ViewBox = s.invent({ parent: s.Container, construct: {} })),
          [
            "click",
            "dblclick",
            "mousedown",
            "mouseup",
            "mouseover",
            "mouseout",
            "mousemove",
            "touchstart",
            "touchmove",
            "touchleave",
            "touchend",
            "touchcancel",
          ].forEach(function (m) {
            s.Element.prototype[m] = function (k) {
              return s.on(this.node, m, k), this;
            };
          }),
          (s.listeners = []),
          (s.handlerMap = []),
          (s.listenerId = 0),
          (s.on = function (m, k, N, X, K) {
            var ee = N.bind(X || m.instance || m),
              fe = (s.handlerMap.indexOf(m) + 1 || s.handlerMap.push(m)) - 1,
              ge = k.split(".")[0],
              Pe = k.split(".")[1] || "*";
            (s.listeners[fe] = s.listeners[fe] || {}),
              (s.listeners[fe][ge] = s.listeners[fe][ge] || {}),
              (s.listeners[fe][ge][Pe] = s.listeners[fe][ge][Pe] || {}),
              N._svgjsListenerId || (N._svgjsListenerId = ++s.listenerId),
              (s.listeners[fe][ge][Pe][N._svgjsListenerId] = ee),
              m.addEventListener(ge, ee, K || { passive: !0 });
          }),
          (s.off = function (m, k, N) {
            var X = s.handlerMap.indexOf(m),
              K = k && k.split(".")[0],
              ee = k && k.split(".")[1],
              fe = "";
            if (X != -1)
              if (N) {
                if ((typeof N == "function" && (N = N._svgjsListenerId), !N))
                  return;
                s.listeners[X][K] &&
                  s.listeners[X][K][ee || "*"] &&
                  (m.removeEventListener(
                    K,
                    s.listeners[X][K][ee || "*"][N],
                    !1
                  ),
                  delete s.listeners[X][K][ee || "*"][N]);
              } else if (ee && K) {
                if (s.listeners[X][K] && s.listeners[X][K][ee]) {
                  for (var ge in s.listeners[X][K][ee])
                    s.off(m, [K, ee].join("."), ge);
                  delete s.listeners[X][K][ee];
                }
              } else if (ee)
                for (var Pe in s.listeners[X])
                  for (var fe in s.listeners[X][Pe])
                    ee === fe && s.off(m, [Pe, ee].join("."));
              else if (K) {
                if (s.listeners[X][K]) {
                  for (var fe in s.listeners[X][K]) s.off(m, [K, fe].join("."));
                  delete s.listeners[X][K];
                }
              } else {
                for (var Pe in s.listeners[X]) s.off(m, Pe);
                delete s.listeners[X], delete s.handlerMap[X];
              }
          }),
          s.extend(s.Element, {
            on: function (m, k, N, X) {
              return s.on(this.node, m, k, N, X), this;
            },
            off: function (m, k) {
              return s.off(this.node, m, k), this;
            },
            fire: function (m, k) {
              return (
                m instanceof U.Event
                  ? this.node.dispatchEvent(m)
                  : this.node.dispatchEvent(
                      (m = new s.CustomEvent(m, { detail: k, cancelable: !0 }))
                    ),
                (this._event = m),
                this
              );
            },
            event: function () {
              return this._event;
            },
          }),
          (s.Defs = s.invent({ create: "defs", inherit: s.Container })),
          (s.G = s.invent({
            create: "g",
            inherit: s.Container,
            extend: {
              x: function (m) {
                return m == null
                  ? this.transform("x")
                  : this.transform({ x: m - this.x() }, !0);
              },
            },
            construct: {
              group: function () {
                return this.put(new s.G());
              },
            },
          })),
          (s.Doc = s.invent({
            create: function (m) {
              m &&
                ((m = typeof m == "string" ? i.getElementById(m) : m)
                  .nodeName == "svg"
                  ? this.constructor.call(this, m)
                  : (this.constructor.call(this, s.create("svg")),
                    m.appendChild(this.node),
                    this.size("100%", "100%")),
                this.namespace().defs());
            },
            inherit: s.Container,
            extend: {
              namespace: function () {
                return this.attr({ xmlns: s.ns, version: "1.1" })
                  .attr("xmlns:xlink", s.xlink, s.xmlns)
                  .attr("xmlns:svgjs", s.svgjs, s.xmlns);
              },
              defs: function () {
                var m;
                return (
                  this._defs ||
                    ((m = this.node.getElementsByTagName("defs")[0])
                      ? (this._defs = s.adopt(m))
                      : (this._defs = new s.Defs()),
                    this.node.appendChild(this._defs.node)),
                  this._defs
                );
              },
              parent: function () {
                return this.node.parentNode &&
                  this.node.parentNode.nodeName != "#document"
                  ? this.node.parentNode
                  : null;
              },
              remove: function () {
                return (
                  this.parent() && this.parent().removeChild(this.node), this
                );
              },
              clear: function () {
                for (; this.node.hasChildNodes(); )
                  this.node.removeChild(this.node.lastChild);
                return (
                  delete this._defs,
                  s.parser.draw &&
                    !s.parser.draw.parentNode &&
                    this.node.appendChild(s.parser.draw),
                  this
                );
              },
              clone: function (m) {
                this.writeDataToDom();
                var k = this.node,
                  N = D(k.cloneNode(!0));
                return (
                  m
                    ? (m.node || m).appendChild(N.node)
                    : k.parentNode.insertBefore(N.node, k.nextSibling),
                  N
                );
              },
            },
          })),
          s.extend(s.Element, {}),
          (s.Gradient = s.invent({
            create: function (m) {
              this.constructor.call(this, s.create(m + "Gradient")),
                (this.type = m);
            },
            inherit: s.Container,
            extend: {
              at: function (m, k, N) {
                return this.put(new s.Stop()).update(m, k, N);
              },
              update: function (m) {
                return (
                  this.clear(),
                  typeof m == "function" && m.call(this, this),
                  this
                );
              },
              fill: function () {
                return "url(#" + this.id() + ")";
              },
              toString: function () {
                return this.fill();
              },
              attr: function (m, k, N) {
                return (
                  m == "transform" && (m = "gradientTransform"),
                  s.Container.prototype.attr.call(this, m, k, N)
                );
              },
            },
            construct: {
              gradient: function (m, k) {
                return this.defs().gradient(m, k);
              },
            },
          })),
          s.extend(s.Gradient, s.FX, {
            from: function (m, k) {
              return (this._target || this).type == "radial"
                ? this.attr({ fx: new s.Number(m), fy: new s.Number(k) })
                : this.attr({ x1: new s.Number(m), y1: new s.Number(k) });
            },
            to: function (m, k) {
              return (this._target || this).type == "radial"
                ? this.attr({ cx: new s.Number(m), cy: new s.Number(k) })
                : this.attr({ x2: new s.Number(m), y2: new s.Number(k) });
            },
          }),
          s.extend(s.Defs, {
            gradient: function (m, k) {
              return this.put(new s.Gradient(m)).update(k);
            },
          }),
          (s.Stop = s.invent({
            create: "stop",
            inherit: s.Element,
            extend: {
              update: function (m) {
                return (
                  (typeof m == "number" || m instanceof s.Number) &&
                    (m = {
                      offset: arguments[0],
                      color: arguments[1],
                      opacity: arguments[2],
                    }),
                  m.opacity != null && this.attr("stop-opacity", m.opacity),
                  m.color != null && this.attr("stop-color", m.color),
                  m.offset != null &&
                    this.attr("offset", new s.Number(m.offset)),
                  this
                );
              },
            },
          })),
          (s.Pattern = s.invent({
            create: "pattern",
            inherit: s.Container,
            extend: {
              fill: function () {
                return "url(#" + this.id() + ")";
              },
              update: function (m) {
                return (
                  this.clear(),
                  typeof m == "function" && m.call(this, this),
                  this
                );
              },
              toString: function () {
                return this.fill();
              },
              attr: function (m, k, N) {
                return (
                  m == "transform" && (m = "patternTransform"),
                  s.Container.prototype.attr.call(this, m, k, N)
                );
              },
            },
            construct: {
              pattern: function (m, k, N) {
                return this.defs().pattern(m, k, N);
              },
            },
          })),
          s.extend(s.Defs, {
            pattern: function (m, k, N) {
              return this.put(new s.Pattern())
                .update(N)
                .attr({
                  x: 0,
                  y: 0,
                  width: m,
                  height: k,
                  patternUnits: "userSpaceOnUse",
                });
            },
          }),
          (s.Shape = s.invent({
            create: function (m) {
              this.constructor.call(this, m);
            },
            inherit: s.Element,
          })),
          (s.Symbol = s.invent({
            create: "symbol",
            inherit: s.Container,
            construct: {
              symbol: function () {
                return this.put(new s.Symbol());
              },
            },
          })),
          (s.Use = s.invent({
            create: "use",
            inherit: s.Shape,
            extend: {
              element: function (m, k) {
                return this.attr("href", (k || "") + "#" + m, s.xlink);
              },
            },
            construct: {
              use: function (m, k) {
                return this.put(new s.Use()).element(m, k);
              },
            },
          })),
          (s.Rect = s.invent({
            create: "rect",
            inherit: s.Shape,
            construct: {
              rect: function (m, k) {
                return this.put(new s.Rect()).size(m, k);
              },
            },
          })),
          (s.Circle = s.invent({
            create: "circle",
            inherit: s.Shape,
            construct: {
              circle: function (m) {
                return this.put(new s.Circle())
                  .rx(new s.Number(m).divide(2))
                  .move(0, 0);
              },
            },
          })),
          s.extend(s.Circle, s.FX, {
            rx: function (m) {
              return this.attr("r", m);
            },
            ry: function (m) {
              return this.rx(m);
            },
          }),
          (s.Ellipse = s.invent({
            create: "ellipse",
            inherit: s.Shape,
            construct: {
              ellipse: function (m, k) {
                return this.put(new s.Ellipse()).size(m, k).move(0, 0);
              },
            },
          })),
          s.extend(s.Ellipse, s.Rect, s.FX, {
            rx: function (m) {
              return this.attr("rx", m);
            },
            ry: function (m) {
              return this.attr("ry", m);
            },
          }),
          s.extend(s.Circle, s.Ellipse, {
            x: function (m) {
              return m == null ? this.cx() - this.rx() : this.cx(m + this.rx());
            },
            y: function (m) {
              return m == null ? this.cy() - this.ry() : this.cy(m + this.ry());
            },
            cx: function (m) {
              return m == null ? this.attr("cx") : this.attr("cx", m);
            },
            cy: function (m) {
              return m == null ? this.attr("cy") : this.attr("cy", m);
            },
            width: function (m) {
              return m == null
                ? 2 * this.rx()
                : this.rx(new s.Number(m).divide(2));
            },
            height: function (m) {
              return m == null
                ? 2 * this.ry()
                : this.ry(new s.Number(m).divide(2));
            },
            size: function (m, k) {
              var N = S(this, m, k);
              return this.rx(new s.Number(N.width).divide(2)).ry(
                new s.Number(N.height).divide(2)
              );
            },
          }),
          (s.Line = s.invent({
            create: "line",
            inherit: s.Shape,
            extend: {
              array: function () {
                return new s.PointArray([
                  [this.attr("x1"), this.attr("y1")],
                  [this.attr("x2"), this.attr("y2")],
                ]);
              },
              plot: function (m, k, N, X) {
                return m == null
                  ? this.array()
                  : ((m =
                      k !== void 0
                        ? { x1: m, y1: k, x2: N, y2: X }
                        : new s.PointArray(m).toLine()),
                    this.attr(m));
              },
              move: function (m, k) {
                return this.attr(this.array().move(m, k).toLine());
              },
              size: function (m, k) {
                var N = S(this, m, k);
                return this.attr(this.array().size(N.width, N.height).toLine());
              },
            },
            construct: {
              line: function (m, k, N, X) {
                return s.Line.prototype.plot.apply(
                  this.put(new s.Line()),
                  m != null ? [m, k, N, X] : [0, 0, 0, 0]
                );
              },
            },
          })),
          (s.Polyline = s.invent({
            create: "polyline",
            inherit: s.Shape,
            construct: {
              polyline: function (m) {
                return this.put(new s.Polyline()).plot(m || new s.PointArray());
              },
            },
          })),
          (s.Polygon = s.invent({
            create: "polygon",
            inherit: s.Shape,
            construct: {
              polygon: function (m) {
                return this.put(new s.Polygon()).plot(m || new s.PointArray());
              },
            },
          })),
          s.extend(s.Polyline, s.Polygon, {
            array: function () {
              return (
                this._array ||
                (this._array = new s.PointArray(this.attr("points")))
              );
            },
            plot: function (m) {
              return m == null
                ? this.array()
                : this.clear().attr(
                    "points",
                    typeof m == "string"
                      ? m
                      : (this._array = new s.PointArray(m))
                  );
            },
            clear: function () {
              return delete this._array, this;
            },
            move: function (m, k) {
              return this.attr("points", this.array().move(m, k));
            },
            size: function (m, k) {
              var N = S(this, m, k);
              return this.attr("points", this.array().size(N.width, N.height));
            },
          }),
          s.extend(s.Line, s.Polyline, s.Polygon, {
            morphArray: s.PointArray,
            x: function (m) {
              return m == null ? this.bbox().x : this.move(m, this.bbox().y);
            },
            y: function (m) {
              return m == null ? this.bbox().y : this.move(this.bbox().x, m);
            },
            width: function (m) {
              var k = this.bbox();
              return m == null ? k.width : this.size(m, k.height);
            },
            height: function (m) {
              var k = this.bbox();
              return m == null ? k.height : this.size(k.width, m);
            },
          }),
          (s.Path = s.invent({
            create: "path",
            inherit: s.Shape,
            extend: {
              morphArray: s.PathArray,
              array: function () {
                return (
                  this._array || (this._array = new s.PathArray(this.attr("d")))
                );
              },
              plot: function (m) {
                return m == null
                  ? this.array()
                  : this.clear().attr(
                      "d",
                      typeof m == "string"
                        ? m
                        : (this._array = new s.PathArray(m))
                    );
              },
              clear: function () {
                return delete this._array, this;
              },
            },
            construct: {
              path: function (m) {
                return this.put(new s.Path()).plot(m || new s.PathArray());
              },
            },
          })),
          (s.Image = s.invent({
            create: "image",
            inherit: s.Shape,
            extend: {
              load: function (m) {
                if (!m) return this;
                var k = this,
                  N = new U.Image();
                return (
                  s.on(N, "load", function () {
                    s.off(N);
                    var X = k.parent(s.Pattern);
                    X !== null &&
                      (k.width() == 0 &&
                        k.height() == 0 &&
                        k.size(N.width, N.height),
                      X &&
                        X.width() == 0 &&
                        X.height() == 0 &&
                        X.size(k.width(), k.height()),
                      typeof k._loaded == "function" &&
                        k._loaded.call(k, {
                          width: N.width,
                          height: N.height,
                          ratio: N.width / N.height,
                          url: m,
                        }));
                  }),
                  s.on(N, "error", function (X) {
                    s.off(N),
                      typeof k._error == "function" && k._error.call(k, X);
                  }),
                  this.attr("href", (N.src = this.src = m), s.xlink)
                );
              },
              loaded: function (m) {
                return (this._loaded = m), this;
              },
              error: function (m) {
                return (this._error = m), this;
              },
            },
            construct: {
              image: function (m, k, N) {
                return this.put(new s.Image())
                  .load(m)
                  .size(k || 0, N || k || 0);
              },
            },
          })),
          (s.Text = s.invent({
            create: function () {
              this.constructor.call(this, s.create("text")),
                (this.dom.leading = new s.Number(1.3)),
                (this._rebuild = !0),
                (this._build = !1),
                this.attr("font-family", s.defaults.attrs["font-family"]);
            },
            inherit: s.Shape,
            extend: {
              x: function (m) {
                return m == null ? this.attr("x") : this.attr("x", m);
              },
              text: function (m) {
                if (m === void 0) {
                  m = "";
                  for (
                    var k = this.node.childNodes, N = 0, X = k.length;
                    N < X;
                    ++N
                  )
                    N != 0 &&
                      k[N].nodeType != 3 &&
                      s.adopt(k[N]).dom.newLined == 1 &&
                      (m += `
`),
                      (m += k[N].textContent);
                  return m;
                }
                if ((this.clear().build(!0), typeof m == "function"))
                  m.call(this, this);
                else {
                  N = 0;
                  for (
                    var K = (m = m.split(`
`)).length;
                    N < K;
                    N++
                  )
                    this.tspan(m[N]).newLine();
                }
                return this.build(!1).rebuild();
              },
              size: function (m) {
                return this.attr("font-size", m).rebuild();
              },
              leading: function (m) {
                return m == null
                  ? this.dom.leading
                  : ((this.dom.leading = new s.Number(m)), this.rebuild());
              },
              lines: function () {
                var m = ((this.textPath && this.textPath()) || this).node,
                  k = s.utils.map(
                    s.utils.filterSVGElements(m.childNodes),
                    function (N) {
                      return s.adopt(N);
                    }
                  );
                return new s.Set(k);
              },
              rebuild: function (m) {
                if (
                  (typeof m == "boolean" && (this._rebuild = m), this._rebuild)
                ) {
                  var k = this,
                    N = 0,
                    X = this.dom.leading * new s.Number(this.attr("font-size"));
                  this.lines().each(function () {
                    this.dom.newLined &&
                      (k.textPath() || this.attr("x", k.attr("x")),
                      this.text() ==
                      `
`
                        ? (N += X)
                        : (this.attr("dy", X + N), (N = 0)));
                  }),
                    this.fire("rebuild");
                }
                return this;
              },
              build: function (m) {
                return (this._build = !!m), this;
              },
              setData: function (m) {
                return (
                  (this.dom = m),
                  (this.dom.leading = new s.Number(m.leading || 1.3)),
                  this
                );
              },
            },
            construct: {
              text: function (m) {
                return this.put(new s.Text()).text(m);
              },
              plain: function (m) {
                return this.put(new s.Text()).plain(m);
              },
            },
          })),
          (s.Tspan = s.invent({
            create: "tspan",
            inherit: s.Shape,
            extend: {
              text: function (m) {
                return m == null
                  ? this.node.textContent +
                      (this.dom.newLined
                        ? `
`
                        : "")
                  : (typeof m == "function"
                      ? m.call(this, this)
                      : this.plain(m),
                    this);
              },
              dx: function (m) {
                return this.attr("dx", m);
              },
              dy: function (m) {
                return this.attr("dy", m);
              },
              newLine: function () {
                var m = this.parent(s.Text);
                return (
                  (this.dom.newLined = !0),
                  this.dy(m.dom.leading * m.attr("font-size")).attr("x", m.x())
                );
              },
            },
          })),
          s.extend(s.Text, s.Tspan, {
            plain: function (m) {
              return (
                this._build === !1 && this.clear(),
                this.node.appendChild(i.createTextNode(m)),
                this
              );
            },
            tspan: function (m) {
              var k = ((this.textPath && this.textPath()) || this).node,
                N = new s.Tspan();
              return (
                this._build === !1 && this.clear(),
                k.appendChild(N.node),
                N.text(m)
              );
            },
            clear: function () {
              for (
                var m = ((this.textPath && this.textPath()) || this).node;
                m.hasChildNodes();

              )
                m.removeChild(m.lastChild);
              return this;
            },
            length: function () {
              return this.node.getComputedTextLength();
            },
          }),
          (s.TextPath = s.invent({
            create: "textPath",
            inherit: s.Parent,
            parent: s.Text,
            construct: {
              morphArray: s.PathArray,
              array: function () {
                var m = this.track();
                return m ? m.array() : null;
              },
              plot: function (m) {
                var k = this.track(),
                  N = null;
                return k && (N = k.plot(m)), m == null ? N : this;
              },
              track: function () {
                var m = this.textPath();
                if (m) return m.reference("href");
              },
              textPath: function () {
                if (
                  this.node.firstChild &&
                  this.node.firstChild.nodeName == "textPath"
                )
                  return s.adopt(this.node.firstChild);
              },
            },
          })),
          (s.Nested = s.invent({
            create: function () {
              this.constructor.call(this, s.create("svg")),
                this.style("overflow", "visible");
            },
            inherit: s.Container,
            construct: {
              nested: function () {
                return this.put(new s.Nested());
              },
            },
          }));
        var f = {
          stroke: [
            "color",
            "width",
            "opacity",
            "linecap",
            "linejoin",
            "miterlimit",
            "dasharray",
            "dashoffset",
          ],
          fill: ["color", "opacity", "rule"],
          prefix: function (m, k) {
            return k == "color" ? m : m + "-" + k;
          },
        };
        function p(m, k, N, X) {
          return N + X.replace(s.regex.dots, " .");
        }
        function v(m) {
          return m.toLowerCase().replace(/-(.)/g, function (k, N) {
            return N.toUpperCase();
          });
        }
        function b(m) {
          return m.charAt(0).toUpperCase() + m.slice(1);
        }
        function _(m) {
          var k = m.toString(16);
          return k.length == 1 ? "0" + k : k;
        }
        function S(m, k, N) {
          if (k == null || N == null) {
            var X = m.bbox();
            k == null
              ? (k = (X.width / X.height) * N)
              : N == null && (N = (X.height / X.width) * k);
          }
          return { width: k, height: N };
        }
        function T(m, k, N) {
          return { x: k * m.a + N * m.c + 0, y: k * m.b + N * m.d + 0 };
        }
        function O(m) {
          return { a: m[0], b: m[1], c: m[2], d: m[3], e: m[4], f: m[5] };
        }
        function D(m) {
          for (var k = m.childNodes.length - 1; k >= 0; k--)
            m.childNodes[k] instanceof U.SVGElement && D(m.childNodes[k]);
          return s.adopt(m).id(s.eid(m.nodeName));
        }
        function V(m) {
          return Math.abs(m) > 1e-37 ? m : 0;
        }
        ["fill", "stroke"].forEach(function (m) {
          var k = {};
          (k[m] = function (N) {
            if (N === void 0) return this;
            if (
              typeof N == "string" ||
              s.Color.isRgb(N) ||
              (N && typeof N.fill == "function")
            )
              this.attr(m, N);
            else
              for (var X = f[m].length - 1; X >= 0; X--)
                N[f[m][X]] != null &&
                  this.attr(f.prefix(m, f[m][X]), N[f[m][X]]);
            return this;
          }),
            s.extend(s.Element, s.FX, k);
        }),
          s.extend(s.Element, s.FX, {
            translate: function (m, k) {
              return this.transform({ x: m, y: k });
            },
            matrix: function (m) {
              return this.attr(
                "transform",
                new s.Matrix(
                  arguments.length == 6 ? [].slice.call(arguments) : m
                )
              );
            },
            opacity: function (m) {
              return this.attr("opacity", m);
            },
            dx: function (m) {
              return this.x(
                new s.Number(m).plus(this instanceof s.FX ? 0 : this.x()),
                !0
              );
            },
            dy: function (m) {
              return this.y(
                new s.Number(m).plus(this instanceof s.FX ? 0 : this.y()),
                !0
              );
            },
          }),
          s.extend(s.Path, {
            length: function () {
              return this.node.getTotalLength();
            },
            pointAt: function (m) {
              return this.node.getPointAtLength(m);
            },
          }),
          (s.Set = s.invent({
            create: function (m) {
              Array.isArray(m) ? (this.members = m) : this.clear();
            },
            extend: {
              add: function () {
                for (
                  var m = [].slice.call(arguments), k = 0, N = m.length;
                  k < N;
                  k++
                )
                  this.members.push(m[k]);
                return this;
              },
              remove: function (m) {
                var k = this.index(m);
                return k > -1 && this.members.splice(k, 1), this;
              },
              each: function (m) {
                for (var k = 0, N = this.members.length; k < N; k++)
                  m.apply(this.members[k], [k, this.members]);
                return this;
              },
              clear: function () {
                return (this.members = []), this;
              },
              length: function () {
                return this.members.length;
              },
              has: function (m) {
                return this.index(m) >= 0;
              },
              index: function (m) {
                return this.members.indexOf(m);
              },
              get: function (m) {
                return this.members[m];
              },
              first: function () {
                return this.get(0);
              },
              last: function () {
                return this.get(this.members.length - 1);
              },
              valueOf: function () {
                return this.members;
              },
            },
            construct: {
              set: function (m) {
                return new s.Set(m);
              },
            },
          })),
          (s.FX.Set = s.invent({
            create: function (m) {
              this.set = m;
            },
          })),
          (s.Set.inherit = function () {
            var m = [];
            for (var k in s.Shape.prototype)
              typeof s.Shape.prototype[k] == "function" &&
                typeof s.Set.prototype[k] != "function" &&
                m.push(k);
            for (var k in (m.forEach(function (X) {
              s.Set.prototype[X] = function () {
                for (var K = 0, ee = this.members.length; K < ee; K++)
                  this.members[K] &&
                    typeof this.members[K][X] == "function" &&
                    this.members[K][X].apply(this.members[K], arguments);
                return X == "animate"
                  ? this.fx || (this.fx = new s.FX.Set(this))
                  : this;
              };
            }),
            (m = []),
            s.FX.prototype))
              typeof s.FX.prototype[k] == "function" &&
                typeof s.FX.Set.prototype[k] != "function" &&
                m.push(k);
            m.forEach(function (N) {
              s.FX.Set.prototype[N] = function () {
                for (var X = 0, K = this.set.members.length; X < K; X++)
                  this.set.members[X].fx[N].apply(
                    this.set.members[X].fx,
                    arguments
                  );
                return this;
              };
            });
          }),
          s.extend(s.Element, {}),
          s.extend(s.Element, {
            remember: function (m, k) {
              if (a(arguments[0]) === "object")
                for (var N in m) this.remember(N, m[N]);
              else {
                if (arguments.length == 1) return this.memory()[m];
                this.memory()[m] = k;
              }
              return this;
            },
            forget: function () {
              if (arguments.length == 0) this._memory = {};
              else
                for (var m = arguments.length - 1; m >= 0; m--)
                  delete this.memory()[arguments[m]];
              return this;
            },
            memory: function () {
              return this._memory || (this._memory = {});
            },
          }),
          (s.get = function (m) {
            var k = i.getElementById(
              (function (N) {
                var X = (N || "").toString().match(s.regex.reference);
                if (X) return X[1];
              })(m) || m
            );
            return s.adopt(k);
          }),
          (s.select = function (m, k) {
            return new s.Set(
              s.utils.map((k || i).querySelectorAll(m), function (N) {
                return s.adopt(N);
              })
            );
          }),
          s.extend(s.Parent, {
            select: function (m) {
              return s.select(m, this.node);
            },
          });
        var G = "abcdef".split("");
        if (typeof U.CustomEvent != "function") {
          var Q = function (m, k) {
            k = k || { bubbles: !1, cancelable: !1, detail: void 0 };
            var N = i.createEvent("CustomEvent");
            return N.initCustomEvent(m, k.bubbles, k.cancelable, k.detail), N;
          };
          (Q.prototype = U.Event.prototype), (s.CustomEvent = Q);
        } else s.CustomEvent = U.CustomEvent;
        return s;
      }),
      a(e) === "object"
        ? (t.exports = er.document
            ? ar(er, er.document)
            : function (U) {
                return ar(U, U.document);
              })
        : (er.SVG = ar(er, er.document)),
      function () {
        (SVG.Filter = SVG.invent({
          create: "filter",
          inherit: SVG.Parent,
          extend: {
            source: "SourceGraphic",
            sourceAlpha: "SourceAlpha",
            background: "BackgroundImage",
            backgroundAlpha: "BackgroundAlpha",
            fill: "FillPaint",
            stroke: "StrokePaint",
            autoSetIn: !0,
            put: function (d, f) {
              return (
                this.add(d, f),
                !d.attr("in") && this.autoSetIn && d.attr("in", this.source),
                d.attr("result") || d.attr("result", d),
                d
              );
            },
            blend: function (d, f, p) {
              return this.put(new SVG.BlendEffect(d, f, p));
            },
            colorMatrix: function (d, f) {
              return this.put(new SVG.ColorMatrixEffect(d, f));
            },
            convolveMatrix: function (d) {
              return this.put(new SVG.ConvolveMatrixEffect(d));
            },
            componentTransfer: function (d) {
              return this.put(new SVG.ComponentTransferEffect(d));
            },
            composite: function (d, f, p) {
              return this.put(new SVG.CompositeEffect(d, f, p));
            },
            flood: function (d, f) {
              return this.put(new SVG.FloodEffect(d, f));
            },
            offset: function (d, f) {
              return this.put(new SVG.OffsetEffect(d, f));
            },
            image: function (d) {
              return this.put(new SVG.ImageEffect(d));
            },
            merge: function () {
              var d = [void 0];
              for (var f in arguments) d.push(arguments[f]);
              return this.put(
                new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, d))()
              );
            },
            gaussianBlur: function (d, f) {
              return this.put(new SVG.GaussianBlurEffect(d, f));
            },
            morphology: function (d, f) {
              return this.put(new SVG.MorphologyEffect(d, f));
            },
            diffuseLighting: function (d, f, p) {
              return this.put(new SVG.DiffuseLightingEffect(d, f, p));
            },
            displacementMap: function (d, f, p, v, b) {
              return this.put(new SVG.DisplacementMapEffect(d, f, p, v, b));
            },
            specularLighting: function (d, f, p, v) {
              return this.put(new SVG.SpecularLightingEffect(d, f, p, v));
            },
            tile: function () {
              return this.put(new SVG.TileEffect());
            },
            turbulence: function (d, f, p, v, b) {
              return this.put(new SVG.TurbulenceEffect(d, f, p, v, b));
            },
            toString: function () {
              return "url(#" + this.attr("id") + ")";
            },
          },
        })),
          SVG.extend(SVG.Defs, {
            filter: function (d) {
              var f = this.put(new SVG.Filter());
              return typeof d == "function" && d.call(f, f), f;
            },
          }),
          SVG.extend(SVG.Container, {
            filter: function (d) {
              return this.defs().filter(d);
            },
          }),
          SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
            filter: function (d) {
              return (
                (this.filterer =
                  d instanceof SVG.Element ? d : this.doc().filter(d)),
                this.doc() &&
                  this.filterer.doc() !== this.doc() &&
                  this.doc().defs().add(this.filterer),
                this.attr("filter", this.filterer),
                this.filterer
              );
            },
            unfilter: function (d) {
              return (
                this.filterer && d === !0 && this.filterer.remove(),
                delete this.filterer,
                this.attr("filter", null)
              );
            },
          }),
          (SVG.Effect = SVG.invent({
            create: function () {
              this.constructor.call(this);
            },
            inherit: SVG.Element,
            extend: {
              in: function (d) {
                return d == null
                  ? (this.parent() &&
                      this.parent()
                        .select('[result="' + this.attr("in") + '"]')
                        .get(0)) ||
                      this.attr("in")
                  : this.attr("in", d);
              },
              result: function (d) {
                return d == null ? this.attr("result") : this.attr("result", d);
              },
              toString: function () {
                return this.result();
              },
            },
          })),
          (SVG.ParentEffect = SVG.invent({
            create: function () {
              this.constructor.call(this);
            },
            inherit: SVG.Parent,
            extend: {
              in: function (d) {
                return d == null
                  ? (this.parent() &&
                      this.parent()
                        .select('[result="' + this.attr("in") + '"]')
                        .get(0)) ||
                      this.attr("in")
                  : this.attr("in", d);
              },
              result: function (d) {
                return d == null ? this.attr("result") : this.attr("result", d);
              },
              toString: function () {
                return this.result();
              },
            },
          }));
        var U = {
          blend: function (d, f) {
            return this.parent() && this.parent().blend(this, d, f);
          },
          colorMatrix: function (d, f) {
            return this.parent() && this.parent().colorMatrix(d, f).in(this);
          },
          convolveMatrix: function (d) {
            return this.parent() && this.parent().convolveMatrix(d).in(this);
          },
          componentTransfer: function (d) {
            return this.parent() && this.parent().componentTransfer(d).in(this);
          },
          composite: function (d, f) {
            return this.parent() && this.parent().composite(this, d, f);
          },
          flood: function (d, f) {
            return this.parent() && this.parent().flood(d, f);
          },
          offset: function (d, f) {
            return this.parent() && this.parent().offset(d, f).in(this);
          },
          image: function (d) {
            return this.parent() && this.parent().image(d);
          },
          merge: function () {
            return (
              this.parent() &&
              this.parent().merge.apply(this.parent(), [this].concat(arguments))
            );
          },
          gaussianBlur: function (d, f) {
            return this.parent() && this.parent().gaussianBlur(d, f).in(this);
          },
          morphology: function (d, f) {
            return this.parent() && this.parent().morphology(d, f).in(this);
          },
          diffuseLighting: function (d, f, p) {
            return (
              this.parent() && this.parent().diffuseLighting(d, f, p).in(this)
            );
          },
          displacementMap: function (d, f, p, v) {
            return (
              this.parent() && this.parent().displacementMap(this, d, f, p, v)
            );
          },
          specularLighting: function (d, f, p, v) {
            return (
              this.parent() &&
              this.parent().specularLighting(d, f, p, v).in(this)
            );
          },
          tile: function () {
            return this.parent() && this.parent().tile().in(this);
          },
          turbulence: function (d, f, p, v, b) {
            return (
              this.parent() && this.parent().turbulence(d, f, p, v, b).in(this)
            );
          },
        };
        SVG.extend(SVG.Effect, U),
          SVG.extend(SVG.ParentEffect, U),
          (SVG.ChildEffect = SVG.invent({
            create: function () {
              this.constructor.call(this);
            },
            inherit: SVG.Element,
            extend: {
              in: function (d) {
                this.attr("in", d);
              },
            },
          }));
        var i = {
            blend: function (d, f, p) {
              this.attr({ in: d, in2: f, mode: p || "normal" });
            },
            colorMatrix: function (d, f) {
              d == "matrix" && (f = c(f)),
                this.attr({ type: d, values: f === void 0 ? null : f });
            },
            convolveMatrix: function (d) {
              (d = c(d)),
                this.attr({
                  order: Math.sqrt(d.split(" ").length),
                  kernelMatrix: d,
                });
            },
            composite: function (d, f, p) {
              this.attr({ in: d, in2: f, operator: p });
            },
            flood: function (d, f) {
              this.attr("flood-color", d),
                f != null && this.attr("flood-opacity", f);
            },
            offset: function (d, f) {
              this.attr({ dx: d, dy: f });
            },
            image: function (d) {
              this.attr("href", d, SVG.xlink);
            },
            displacementMap: function (d, f, p, v, b) {
              this.attr({
                in: d,
                in2: f,
                scale: p,
                xChannelSelector: v,
                yChannelSelector: b,
              });
            },
            gaussianBlur: function (d, f) {
              d != null || f != null
                ? this.attr(
                    "stdDeviation",
                    (function (p) {
                      if (!Array.isArray(p)) return p;
                      for (var v = 0, b = p.length, _ = []; v < b; v++)
                        _.push(p[v]);
                      return _.join(" ");
                    })(Array.prototype.slice.call(arguments))
                  )
                : this.attr("stdDeviation", "0 0");
            },
            morphology: function (d, f) {
              this.attr({ operator: d, radius: f });
            },
            tile: function () {},
            turbulence: function (d, f, p, v, b) {
              this.attr({
                numOctaves: f,
                seed: p,
                stitchTiles: v,
                baseFrequency: d,
                type: b,
              });
            },
          },
          s = {
            merge: function () {
              var d;
              if (arguments[0] instanceof SVG.Set) {
                var f = this;
                arguments[0].each(function (v) {
                  this instanceof SVG.MergeNode
                    ? f.put(this)
                    : (this instanceof SVG.Effect ||
                        this instanceof SVG.ParentEffect) &&
                      f.put(new SVG.MergeNode(this));
                });
              } else {
                d = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                for (var p = 0; p < d.length; p++)
                  d[p] instanceof SVG.MergeNode
                    ? this.put(d[p])
                    : this.put(new SVG.MergeNode(d[p]));
              }
            },
            componentTransfer: function (d) {
              if (
                ((this.rgb = new SVG.Set()),
                ["r", "g", "b", "a"].forEach(
                  function (p) {
                    (this[p] = new SVG["Func" + p.toUpperCase()]("identity")),
                      this.rgb.add(this[p]),
                      this.node.appendChild(this[p].node);
                  }.bind(this)
                ),
                d)
              )
                for (var f in (d.rgb &&
                  (["r", "g", "b"].forEach(
                    function (p) {
                      this[p].attr(d.rgb);
                    }.bind(this)
                  ),
                  delete d.rgb),
                d))
                  this[f].attr(d[f]);
            },
            diffuseLighting: function (d, f, p) {
              this.attr({
                surfaceScale: d,
                diffuseConstant: f,
                kernelUnitLength: p,
              });
            },
            specularLighting: function (d, f, p, v) {
              this.attr({
                surfaceScale: d,
                diffuseConstant: f,
                specularExponent: p,
                kernelUnitLength: v,
              });
            },
          },
          l = {
            distantLight: function (d, f) {
              this.attr({ azimuth: d, elevation: f });
            },
            pointLight: function (d, f, p) {
              this.attr({ x: d, y: f, z: p });
            },
            spotLight: function (d, f, p, v, b, _) {
              this.attr({
                x: d,
                y: f,
                z: p,
                pointsAtX: v,
                pointsAtY: b,
                pointsAtZ: _,
              });
            },
            mergeNode: function (d) {
              this.attr("in", d);
            },
          };
        function c(d) {
          return (
            Array.isArray(d) && (d = new SVG.Array(d)),
            d
              .toString()
              .replace(/^\s+/, "")
              .replace(/\s+$/, "")
              .replace(/\s+/g, " ")
          );
        }
        function h() {
          var d = function () {};
          for (var f in (typeof arguments[arguments.length - 1] == "function" &&
            ((d = arguments[arguments.length - 1]),
            Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
          arguments))
            for (var p in arguments[f]) d(arguments[f][p], p, arguments[f]);
        }
        ["r", "g", "b", "a"].forEach(function (d) {
          l["Func" + d.toUpperCase()] = function (f) {
            switch ((this.attr("type", f), f)) {
              case "table":
                this.attr("tableValues", arguments[1]);
                break;
              case "linear":
                this.attr("slope", arguments[1]),
                  this.attr("intercept", arguments[2]);
                break;
              case "gamma":
                this.attr("amplitude", arguments[1]),
                  this.attr("exponent", arguments[2]),
                  this.attr("offset", arguments[2]);
            }
          };
        }),
          h(i, function (d, f) {
            var p = f.charAt(0).toUpperCase() + f.slice(1);
            SVG[p + "Effect"] = SVG.invent({
              create: function () {
                this.constructor.call(this, SVG.create("fe" + p)),
                  d.apply(this, arguments),
                  this.result(this.attr("id") + "Out");
              },
              inherit: SVG.Effect,
              extend: {},
            });
          }),
          h(s, function (d, f) {
            var p = f.charAt(0).toUpperCase() + f.slice(1);
            SVG[p + "Effect"] = SVG.invent({
              create: function () {
                this.constructor.call(this, SVG.create("fe" + p)),
                  d.apply(this, arguments),
                  this.result(this.attr("id") + "Out");
              },
              inherit: SVG.ParentEffect,
              extend: {},
            });
          }),
          h(l, function (d, f) {
            var p = f.charAt(0).toUpperCase() + f.slice(1);
            SVG[p] = SVG.invent({
              create: function () {
                this.constructor.call(this, SVG.create("fe" + p)),
                  d.apply(this, arguments);
              },
              inherit: SVG.ChildEffect,
              extend: {},
            });
          }),
          SVG.extend(SVG.MergeEffect, {
            in: function (d) {
              return (
                d instanceof SVG.MergeNode
                  ? this.add(d, 0)
                  : this.add(new SVG.MergeNode(d), 0),
                this
              );
            },
          }),
          SVG.extend(
            SVG.CompositeEffect,
            SVG.BlendEffect,
            SVG.DisplacementMapEffect,
            {
              in2: function (d) {
                return d == null
                  ? (this.parent() &&
                      this.parent()
                        .select('[result="' + this.attr("in2") + '"]')
                        .get(0)) ||
                      this.attr("in2")
                  : this.attr("in2", d);
              },
            }
          ),
          (SVG.filter = {
            sepiatone: [
              0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334,
              0.111, 0, 0, 0, 0, 0, 1, 0,
            ],
          });
      }.call(void 0),
      (function () {
        function U(h, d, f, p, v, b, _) {
          for (
            var S = h.slice(d, f || _),
              T = p.slice(v, b || _),
              O = 0,
              D = { pos: [0, 0], start: [0, 0] },
              V = { pos: [0, 0], start: [0, 0] };
            (S[O] = i.call(D, S[O])),
              (T[O] = i.call(V, T[O])),
              S[O][0] != T[O][0] ||
              S[O][0] == "M" ||
              (S[O][0] == "A" && (S[O][4] != T[O][4] || S[O][5] != T[O][5]))
                ? (Array.prototype.splice.apply(
                    S,
                    [O, 1].concat(l.call(D, S[O]))
                  ),
                  Array.prototype.splice.apply(
                    T,
                    [O, 1].concat(l.call(V, T[O]))
                  ))
                : ((S[O] = s.call(D, S[O])), (T[O] = s.call(V, T[O]))),
              !(++O == S.length && O == T.length);

          )
            O == S.length &&
              S.push([
                "C",
                D.pos[0],
                D.pos[1],
                D.pos[0],
                D.pos[1],
                D.pos[0],
                D.pos[1],
              ]),
              O == T.length &&
                T.push([
                  "C",
                  V.pos[0],
                  V.pos[1],
                  V.pos[0],
                  V.pos[1],
                  V.pos[0],
                  V.pos[1],
                ]);
          return { start: S, dest: T };
        }
        function i(h) {
          switch (h[0]) {
            case "z":
            case "Z":
              (h[0] = "L"), (h[1] = this.start[0]), (h[2] = this.start[1]);
              break;
            case "H":
              (h[0] = "L"), (h[2] = this.pos[1]);
              break;
            case "V":
              (h[0] = "L"), (h[2] = h[1]), (h[1] = this.pos[0]);
              break;
            case "T":
              (h[0] = "Q"),
                (h[3] = h[1]),
                (h[4] = h[2]),
                (h[1] = this.reflection[1]),
                (h[2] = this.reflection[0]);
              break;
            case "S":
              (h[0] = "C"),
                (h[6] = h[4]),
                (h[5] = h[3]),
                (h[4] = h[2]),
                (h[3] = h[1]),
                (h[2] = this.reflection[1]),
                (h[1] = this.reflection[0]);
          }
          return h;
        }
        function s(h) {
          var d = h.length;
          return (
            (this.pos = [h[d - 2], h[d - 1]]),
            "SCQT".indexOf(h[0]) != -1 &&
              (this.reflection = [
                2 * this.pos[0] - h[d - 4],
                2 * this.pos[1] - h[d - 3],
              ]),
            h
          );
        }
        function l(h) {
          var d = [h];
          switch (h[0]) {
            case "M":
              return (this.pos = this.start = [h[1], h[2]]), d;
            case "L":
              (h[5] = h[3] = h[1]),
                (h[6] = h[4] = h[2]),
                (h[1] = this.pos[0]),
                (h[2] = this.pos[1]);
              break;
            case "Q":
              (h[6] = h[4]),
                (h[5] = h[3]),
                (h[4] = (1 * h[4]) / 3 + (2 * h[2]) / 3),
                (h[3] = (1 * h[3]) / 3 + (2 * h[1]) / 3),
                (h[2] = (1 * this.pos[1]) / 3 + (2 * h[2]) / 3),
                (h[1] = (1 * this.pos[0]) / 3 + (2 * h[1]) / 3);
              break;
            case "A":
              (d = (function (f, p) {
                var v,
                  b,
                  _,
                  S,
                  T,
                  O,
                  D,
                  V,
                  G,
                  Q,
                  m,
                  k,
                  N,
                  X,
                  K,
                  ee,
                  fe,
                  ge,
                  Pe,
                  We,
                  ze,
                  ut,
                  St,
                  zt,
                  Ot,
                  dn,
                  Ln = Math.abs(p[1]),
                  wn = Math.abs(p[2]),
                  On = p[3] % 360,
                  Sr = p[4],
                  Br = p[5],
                  ys = p[6],
                  Ma = p[7],
                  Hr = new SVG.Point(f),
                  or = new SVG.Point(ys, Ma),
                  Ds = [];
                if (Ln === 0 || wn === 0 || (Hr.x === or.x && Hr.y === or.y))
                  return [["C", Hr.x, Hr.y, or.x, or.y, or.x, or.y]];
                for (
                  v = new SVG.Point(
                    (Hr.x - or.x) / 2,
                    (Hr.y - or.y) / 2
                  ).transform(new SVG.Matrix().rotate(On)),
                    (b = (v.x * v.x) / (Ln * Ln) + (v.y * v.y) / (wn * wn)) >
                      1 && ((Ln *= b = Math.sqrt(b)), (wn *= b)),
                    _ = new SVG.Matrix()
                      .rotate(On)
                      .scale(1 / Ln, 1 / wn)
                      .rotate(-On),
                    Hr = Hr.transform(_),
                    or = or.transform(_),
                    S = [or.x - Hr.x, or.y - Hr.y],
                    O = S[0] * S[0] + S[1] * S[1],
                    T = Math.sqrt(O),
                    S[0] /= T,
                    S[1] /= T,
                    D = O < 4 ? Math.sqrt(1 - O / 4) : 0,
                    Sr === Br && (D *= -1),
                    V = new SVG.Point(
                      (or.x + Hr.x) / 2 + D * -S[1],
                      (or.y + Hr.y) / 2 + D * S[0]
                    ),
                    G = new SVG.Point(Hr.x - V.x, Hr.y - V.y),
                    Q = new SVG.Point(or.x - V.x, or.y - V.y),
                    m = Math.acos(G.x / Math.sqrt(G.x * G.x + G.y * G.y)),
                    G.y < 0 && (m *= -1),
                    k = Math.acos(Q.x / Math.sqrt(Q.x * Q.x + Q.y * Q.y)),
                    Q.y < 0 && (k *= -1),
                    Br && m > k && (k += 2 * Math.PI),
                    !Br && m < k && (k -= 2 * Math.PI),
                    X = Math.ceil((2 * Math.abs(m - k)) / Math.PI),
                    ee = [],
                    fe = m,
                    N = (k - m) / X,
                    K = (4 * Math.tan(N / 4)) / 3,
                    ze = 0;
                  ze <= X;
                  ze++
                )
                  (Pe = Math.cos(fe)),
                    (ge = Math.sin(fe)),
                    (We = new SVG.Point(V.x + Pe, V.y + ge)),
                    (ee[ze] = [
                      new SVG.Point(We.x + K * ge, We.y - K * Pe),
                      We,
                      new SVG.Point(We.x - K * ge, We.y + K * Pe),
                    ]),
                    (fe += N);
                for (
                  ee[0][0] = ee[0][1].clone(),
                    ee[ee.length - 1][2] = ee[ee.length - 1][1].clone(),
                    _ = new SVG.Matrix().rotate(On).scale(Ln, wn).rotate(-On),
                    ze = 0,
                    ut = ee.length;
                  ze < ut;
                  ze++
                )
                  (ee[ze][0] = ee[ze][0].transform(_)),
                    (ee[ze][1] = ee[ze][1].transform(_)),
                    (ee[ze][2] = ee[ze][2].transform(_));
                for (ze = 1, ut = ee.length; ze < ut; ze++)
                  (St = (We = ee[ze - 1][2]).x),
                    (zt = We.y),
                    (Ot = (We = ee[ze][0]).x),
                    (dn = We.y),
                    (ys = (We = ee[ze][1]).x),
                    (Ma = We.y),
                    Ds.push(["C", St, zt, Ot, dn, ys, Ma]);
                return Ds;
              })(this.pos, h)),
                (h = d[0]);
          }
          return (
            (h[0] = "C"),
            (this.pos = [h[5], h[6]]),
            (this.reflection = [2 * h[5] - h[3], 2 * h[6] - h[4]]),
            d
          );
        }
        function c(h, d) {
          if (d === !1) return !1;
          for (var f = d, p = h.length; f < p; ++f)
            if (h[f][0] == "M") return f;
          return !1;
        }
        SVG.extend(SVG.PathArray, {
          morph: function (h) {
            for (
              var d = this.value,
                f = this.parse(h),
                p = 0,
                v = 0,
                b = !1,
                _ = !1;
              p !== !1 || v !== !1;

            ) {
              var S;
              (b = c(d, p !== !1 && p + 1)),
                (_ = c(f, v !== !1 && v + 1)),
                p === !1 &&
                  (p =
                    (S = new SVG.PathArray(T.start).bbox()).height == 0 ||
                    S.width == 0
                      ? d.push(d[0]) - 1
                      : d.push(["M", S.x + S.width / 2, S.y + S.height / 2]) -
                        1),
                v === !1 &&
                  (v =
                    (S = new SVG.PathArray(T.dest).bbox()).height == 0 ||
                    S.width == 0
                      ? f.push(f[0]) - 1
                      : f.push(["M", S.x + S.width / 2, S.y + S.height / 2]) -
                        1);
              var T = U(d, p, b, f, v, _);
              (d = d.slice(0, p).concat(T.start, b === !1 ? [] : d.slice(b))),
                (f = f.slice(0, v).concat(T.dest, _ === !1 ? [] : f.slice(_))),
                (p = b !== !1 && p + T.start.length),
                (v = _ !== !1 && v + T.dest.length);
            }
            return (
              (this.value = d),
              (this.destination = new SVG.PathArray()),
              (this.destination.value = f),
              this
            );
          },
        });
      })(),
      function () {
        function U(i) {
          i.remember("_draggable", this), (this.el = i);
        }
        (U.prototype.init = function (i, s) {
          var l = this;
          (this.constraint = i),
            (this.value = s),
            this.el.on("mousedown.drag", function (c) {
              l.start(c);
            }),
            this.el.on("touchstart.drag", function (c) {
              l.start(c);
            });
        }),
          (U.prototype.transformPoint = function (i, s) {
            var l =
              ((i = i || window.event).changedTouches && i.changedTouches[0]) ||
              i;
            return (
              (this.p.x = l.clientX - (s || 0)),
              (this.p.y = l.clientY),
              this.p.matrixTransform(this.m)
            );
          }),
          (U.prototype.getBBox = function () {
            var i = this.el.bbox();
            return (
              this.el instanceof SVG.Nested && (i = this.el.rbox()),
              (this.el instanceof SVG.G ||
                this.el instanceof SVG.Use ||
                this.el instanceof SVG.Nested) &&
                ((i.x = this.el.x()), (i.y = this.el.y())),
              i
            );
          }),
          (U.prototype.start = function (i) {
            if (
              (i.type != "click" &&
                i.type != "mousedown" &&
                i.type != "mousemove") ||
              (i.which || i.buttons) == 1
            ) {
              var s = this;
              if (
                (this.el.fire("beforedrag", { event: i, handler: this }),
                !this.el.event().defaultPrevented)
              ) {
                i.preventDefault(),
                  i.stopPropagation(),
                  (this.parent =
                    this.parent ||
                    this.el.parent(SVG.Nested) ||
                    this.el.parent(SVG.Doc)),
                  (this.p = this.parent.node.createSVGPoint()),
                  (this.m = this.el.node.getScreenCTM().inverse());
                var l,
                  c = this.getBBox();
                if (this.el instanceof SVG.Text)
                  switch (
                    ((l = this.el.node.getComputedTextLength()),
                    this.el.attr("text-anchor"))
                  ) {
                    case "middle":
                      l /= 2;
                      break;
                    case "start":
                      l = 0;
                  }
                (this.startPoints = {
                  point: this.transformPoint(i, l),
                  box: c,
                  transform: this.el.transform(),
                }),
                  SVG.on(window, "mousemove.drag", function (h) {
                    s.drag(h);
                  }),
                  SVG.on(window, "touchmove.drag", function (h) {
                    s.drag(h);
                  }),
                  SVG.on(window, "mouseup.drag", function (h) {
                    s.end(h);
                  }),
                  SVG.on(window, "touchend.drag", function (h) {
                    s.end(h);
                  }),
                  this.el.fire("dragstart", {
                    event: i,
                    p: this.startPoints.point,
                    m: this.m,
                    handler: this,
                  });
              }
            }
          }),
          (U.prototype.drag = function (i) {
            var s = this.getBBox(),
              l = this.transformPoint(i),
              c = this.startPoints.box.x + l.x - this.startPoints.point.x,
              h = this.startPoints.box.y + l.y - this.startPoints.point.y,
              d = this.constraint,
              f = l.x - this.startPoints.point.x,
              p = l.y - this.startPoints.point.y;
            if (
              (this.el.fire("dragmove", {
                event: i,
                p: l,
                m: this.m,
                handler: this,
              }),
              this.el.event().defaultPrevented)
            )
              return l;
            if (typeof d == "function") {
              var v = d.call(this.el, c, h, this.m);
              typeof v == "boolean" && (v = { x: v, y: v }),
                v.x === !0 ? this.el.x(c) : v.x !== !1 && this.el.x(v.x),
                v.y === !0 ? this.el.y(h) : v.y !== !1 && this.el.y(v.y);
            } else
              typeof d == "object" &&
                (d.minX != null && c < d.minX
                  ? (f = (c = d.minX) - this.startPoints.box.x)
                  : d.maxX != null &&
                    c > d.maxX - s.width &&
                    (f = (c = d.maxX - s.width) - this.startPoints.box.x),
                d.minY != null && h < d.minY
                  ? (p = (h = d.minY) - this.startPoints.box.y)
                  : d.maxY != null &&
                    h > d.maxY - s.height &&
                    (p = (h = d.maxY - s.height) - this.startPoints.box.y),
                d.snapToGrid != null &&
                  ((c -= c % d.snapToGrid),
                  (h -= h % d.snapToGrid),
                  (f -= f % d.snapToGrid),
                  (p -= p % d.snapToGrid)),
                this.el instanceof SVG.G
                  ? this.el
                      .matrix(this.startPoints.transform)
                      .transform({ x: f, y: p }, !0)
                  : this.el.move(c, h));
            return l;
          }),
          (U.prototype.end = function (i) {
            var s = this.drag(i);
            this.el.fire("dragend", {
              event: i,
              p: s,
              m: this.m,
              handler: this,
            }),
              SVG.off(window, "mousemove.drag"),
              SVG.off(window, "touchmove.drag"),
              SVG.off(window, "mouseup.drag"),
              SVG.off(window, "touchend.drag");
          }),
          SVG.extend(SVG.Element, {
            draggable: function (i, s) {
              (typeof i != "function" && typeof i != "object") ||
                ((s = i), (i = !0));
              var l = this.remember("_draggable") || new U(this);
              return (
                (i = i === void 0 || i)
                  ? l.init(s || {}, i)
                  : (this.off("mousedown.drag"), this.off("touchstart.drag")),
                this
              );
            },
          });
      }.call(void 0),
      (function () {
        function U(i) {
          (this.el = i),
            i.remember("_selectHandler", this),
            (this.pointSelection = { isSelected: !1 }),
            (this.rectSelection = { isSelected: !1 }),
            (this.pointsList = {
              lt: [0, 0],
              rt: ["width", 0],
              rb: ["width", "height"],
              lb: [0, "height"],
              t: ["width", 0],
              r: ["width", "height"],
              b: ["width", "height"],
              l: [0, "height"],
            }),
            (this.pointCoord = function (s, l, c) {
              var h = typeof s != "string" ? s : l[s];
              return c ? h / 2 : h;
            }),
            (this.pointCoords = function (s, l) {
              var c = this.pointsList[s];
              return {
                x: this.pointCoord(c[0], l, s === "t" || s === "b"),
                y: this.pointCoord(c[1], l, s === "r" || s === "l"),
              };
            });
        }
        (U.prototype.init = function (i, s) {
          var l = this.el.bbox();
          this.options = {};
          var c = this.el.selectize.defaults.points;
          for (var h in this.el.selectize.defaults)
            (this.options[h] = this.el.selectize.defaults[h]),
              s[h] !== void 0 && (this.options[h] = s[h]);
          var d = ["points", "pointsExclude"];
          for (var h in d) {
            var f = this.options[d[h]];
            typeof f == "string"
              ? (f = f.length > 0 ? f.split(/\s*,\s*/i) : [])
              : typeof f == "boolean" && d[h] === "points" && (f = f ? c : []),
              (this.options[d[h]] = f);
          }
          (this.options.points = [c, this.options.points].reduce(function (
            p,
            v
          ) {
            return p.filter(function (b) {
              return v.indexOf(b) > -1;
            });
          })),
            (this.options.points = [
              this.options.points,
              this.options.pointsExclude,
            ].reduce(function (p, v) {
              return p.filter(function (b) {
                return v.indexOf(b) < 0;
              });
            })),
            (this.parent = this.el.parent()),
            (this.nested = this.nested || this.parent.group()),
            this.nested.matrix(new SVG.Matrix(this.el).translate(l.x, l.y)),
            this.options.deepSelect &&
            ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1
              ? this.selectPoints(i)
              : this.selectRect(i),
            this.observe(),
            this.cleanup();
        }),
          (U.prototype.selectPoints = function (i) {
            return (
              (this.pointSelection.isSelected = i),
              this.pointSelection.set ||
                ((this.pointSelection.set = this.parent.set()),
                this.drawPoints()),
              this
            );
          }),
          (U.prototype.getPointArray = function () {
            var i = this.el.bbox();
            return this.el
              .array()
              .valueOf()
              .map(function (s) {
                return [s[0] - i.x, s[1] - i.y];
              });
          }),
          (U.prototype.drawPoints = function () {
            for (
              var i = this, s = this.getPointArray(), l = 0, c = s.length;
              l < c;
              ++l
            ) {
              var h = (function (f) {
                  return function (p) {
                    (p = p || window.event).preventDefault
                      ? p.preventDefault()
                      : (p.returnValue = !1),
                      p.stopPropagation();
                    var v = p.pageX || p.touches[0].pageX,
                      b = p.pageY || p.touches[0].pageY;
                    i.el.fire("point", { x: v, y: b, i: f, event: p });
                  };
                })(l),
                d = this.drawPoint(s[l][0], s[l][1])
                  .addClass(this.options.classPoints)
                  .addClass(this.options.classPoints + "_point")
                  .on("touchstart", h)
                  .on("mousedown", h);
              this.pointSelection.set.add(d);
            }
          }),
          (U.prototype.drawPoint = function (i, s) {
            var l = this.options.pointType;
            switch (l) {
              case "circle":
                return this.drawCircle(i, s);
              case "rect":
                return this.drawRect(i, s);
              default:
                if (typeof l == "function") return l.call(this, i, s);
                throw new Error("Unknown " + l + " point type!");
            }
          }),
          (U.prototype.drawCircle = function (i, s) {
            return this.nested.circle(this.options.pointSize).center(i, s);
          }),
          (U.prototype.drawRect = function (i, s) {
            return this.nested
              .rect(this.options.pointSize, this.options.pointSize)
              .center(i, s);
          }),
          (U.prototype.updatePointSelection = function () {
            var i = this.getPointArray();
            this.pointSelection.set.each(function (s) {
              (this.cx() === i[s][0] && this.cy() === i[s][1]) ||
                this.center(i[s][0], i[s][1]);
            });
          }),
          (U.prototype.updateRectSelection = function () {
            var i = this,
              s = this.el.bbox();
            if (
              (this.rectSelection.set
                .get(0)
                .attr({ width: s.width, height: s.height }),
              this.options.points.length &&
                this.options.points.map(function (c, h) {
                  var d = i.pointCoords(c, s);
                  i.rectSelection.set.get(h + 1).center(d.x, d.y);
                }),
              this.options.rotationPoint)
            ) {
              var l = this.rectSelection.set.length();
              this.rectSelection.set.get(l - 1).center(s.width / 2, 20);
            }
          }),
          (U.prototype.selectRect = function (i) {
            var s = this,
              l = this.el.bbox();
            function c(f) {
              return function (p) {
                (p = p || window.event).preventDefault
                  ? p.preventDefault()
                  : (p.returnValue = !1),
                  p.stopPropagation();
                var v = p.pageX || p.touches[0].pageX,
                  b = p.pageY || p.touches[0].pageY;
                s.el.fire(f, { x: v, y: b, event: p });
              };
            }
            if (
              ((this.rectSelection.isSelected = i),
              (this.rectSelection.set =
                this.rectSelection.set || this.parent.set()),
              this.rectSelection.set.get(0) ||
                this.rectSelection.set.add(
                  this.nested
                    .rect(l.width, l.height)
                    .addClass(this.options.classRect)
                ),
              this.options.points.length &&
                this.rectSelection.set.length() < 2 &&
                (this.options.points.map(function (f, p) {
                  var v = s.pointCoords(f, l),
                    b = s
                      .drawPoint(v.x, v.y)
                      .attr("class", s.options.classPoints + "_" + f)
                      .on("mousedown", c(f))
                      .on("touchstart", c(f));
                  s.rectSelection.set.add(b);
                }),
                this.rectSelection.set.each(function () {
                  this.addClass(s.options.classPoints);
                })),
              this.options.rotationPoint &&
                ((this.options.points && !this.rectSelection.set.get(9)) ||
                  (!this.options.points && !this.rectSelection.set.get(1))))
            ) {
              var h = function (f) {
                  (f = f || window.event).preventDefault
                    ? f.preventDefault()
                    : (f.returnValue = !1),
                    f.stopPropagation();
                  var p = f.pageX || f.touches[0].pageX,
                    v = f.pageY || f.touches[0].pageY;
                  s.el.fire("rot", { x: p, y: v, event: f });
                },
                d = this.drawPoint(l.width / 2, 20)
                  .attr("class", this.options.classPoints + "_rot")
                  .on("touchstart", h)
                  .on("mousedown", h);
              this.rectSelection.set.add(d);
            }
          }),
          (U.prototype.handler = function () {
            var i = this.el.bbox();
            this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)),
              this.rectSelection.isSelected && this.updateRectSelection(),
              this.pointSelection.isSelected && this.updatePointSelection();
          }),
          (U.prototype.observe = function () {
            var i = this;
            if (MutationObserver)
              if (
                this.rectSelection.isSelected ||
                this.pointSelection.isSelected
              )
                (this.observerInst =
                  this.observerInst ||
                  new MutationObserver(function () {
                    i.handler();
                  })),
                  this.observerInst.observe(this.el.node, { attributes: !0 });
              else
                try {
                  this.observerInst.disconnect(), delete this.observerInst;
                } catch {}
            else
              this.el.off("DOMAttrModified.select"),
                (this.rectSelection.isSelected ||
                  this.pointSelection.isSelected) &&
                  this.el.on("DOMAttrModified.select", function () {
                    i.handler();
                  });
          }),
          (U.prototype.cleanup = function () {
            !this.rectSelection.isSelected &&
              this.rectSelection.set &&
              (this.rectSelection.set.each(function () {
                this.remove();
              }),
              this.rectSelection.set.clear(),
              delete this.rectSelection.set),
              !this.pointSelection.isSelected &&
                this.pointSelection.set &&
                (this.pointSelection.set.each(function () {
                  this.remove();
                }),
                this.pointSelection.set.clear(),
                delete this.pointSelection.set),
              this.pointSelection.isSelected ||
                this.rectSelection.isSelected ||
                (this.nested.remove(), delete this.nested);
          }),
          SVG.extend(SVG.Element, {
            selectize: function (i, s) {
              return (
                typeof i == "object" && ((s = i), (i = !0)),
                (this.remember("_selectHandler") || new U(this)).init(
                  i === void 0 || i,
                  s || {}
                ),
                this
              );
            },
          }),
          (SVG.Element.prototype.selectize.defaults = {
            points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
            pointsExclude: [],
            classRect: "svg_select_boundingRect",
            classPoints: "svg_select_points",
            pointSize: 7,
            rotationPoint: !0,
            deepSelect: !1,
            pointType: "circle",
          });
      })(),
      (function () {
        (function () {
          function U(i) {
            i.remember("_resizeHandler", this),
              (this.el = i),
              (this.parameters = {}),
              (this.lastUpdateCall = null),
              (this.p = i.doc().node.createSVGPoint());
          }
          (U.prototype.transformPoint = function (i, s, l) {
            return (
              (this.p.x = i - (this.offset.x - window.pageXOffset)),
              (this.p.y = s - (this.offset.y - window.pageYOffset)),
              this.p.matrixTransform(l || this.m)
            );
          }),
            (U.prototype._extractPosition = function (i) {
              return {
                x: i.clientX != null ? i.clientX : i.touches[0].clientX,
                y: i.clientY != null ? i.clientY : i.touches[0].clientY,
              };
            }),
            (U.prototype.init = function (i) {
              var s = this;
              if ((this.stop(), i !== "stop")) {
                for (var l in ((this.options = {}), this.el.resize.defaults))
                  (this.options[l] = this.el.resize.defaults[l]),
                    i[l] !== void 0 && (this.options[l] = i[l]);
                this.el.on("lt.resize", function (c) {
                  s.resize(c || window.event);
                }),
                  this.el.on("rt.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("rb.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("lb.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("t.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("r.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("b.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("l.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("rot.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.el.on("point.resize", function (c) {
                    s.resize(c || window.event);
                  }),
                  this.update();
              }
            }),
            (U.prototype.stop = function () {
              return (
                this.el.off("lt.resize"),
                this.el.off("rt.resize"),
                this.el.off("rb.resize"),
                this.el.off("lb.resize"),
                this.el.off("t.resize"),
                this.el.off("r.resize"),
                this.el.off("b.resize"),
                this.el.off("l.resize"),
                this.el.off("rot.resize"),
                this.el.off("point.resize"),
                this
              );
            }),
            (U.prototype.resize = function (i) {
              var s = this;
              (this.m = this.el.node.getScreenCTM().inverse()),
                (this.offset = {
                  x: window.pageXOffset,
                  y: window.pageYOffset,
                });
              var l = this._extractPosition(i.detail.event);
              if (
                ((this.parameters = {
                  type: this.el.type,
                  p: this.transformPoint(l.x, l.y),
                  x: i.detail.x,
                  y: i.detail.y,
                  box: this.el.bbox(),
                  rotation: this.el.transform().rotation,
                }),
                this.el.type === "text" &&
                  (this.parameters.fontSize = this.el.attr()["font-size"]),
                i.detail.i !== void 0)
              ) {
                var c = this.el.array().valueOf();
                (this.parameters.i = i.detail.i),
                  (this.parameters.pointCoords = [
                    c[i.detail.i][0],
                    c[i.detail.i][1],
                  ]);
              }
              switch (i.type) {
                case "lt":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d);
                    if (
                      this.parameters.box.width - f[0] > 0 &&
                      this.parameters.box.height - f[1] > 0
                    ) {
                      if (this.parameters.type === "text")
                        return (
                          this.el.move(
                            this.parameters.box.x + f[0],
                            this.parameters.box.y
                          ),
                          void this.el.attr(
                            "font-size",
                            this.parameters.fontSize - f[0]
                          )
                        );
                      (f = this.checkAspectRatio(f)),
                        this.el
                          .move(
                            this.parameters.box.x + f[0],
                            this.parameters.box.y + f[1]
                          )
                          .size(
                            this.parameters.box.width - f[0],
                            this.parameters.box.height - f[1]
                          );
                    }
                  };
                  break;
                case "rt":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d, 2);
                    if (
                      this.parameters.box.width + f[0] > 0 &&
                      this.parameters.box.height - f[1] > 0
                    ) {
                      if (this.parameters.type === "text")
                        return (
                          this.el.move(
                            this.parameters.box.x - f[0],
                            this.parameters.box.y
                          ),
                          void this.el.attr(
                            "font-size",
                            this.parameters.fontSize + f[0]
                          )
                        );
                      (f = this.checkAspectRatio(f, !0)),
                        this.el
                          .move(
                            this.parameters.box.x,
                            this.parameters.box.y + f[1]
                          )
                          .size(
                            this.parameters.box.width + f[0],
                            this.parameters.box.height - f[1]
                          );
                    }
                  };
                  break;
                case "rb":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d, 0);
                    if (
                      this.parameters.box.width + f[0] > 0 &&
                      this.parameters.box.height + f[1] > 0
                    ) {
                      if (this.parameters.type === "text")
                        return (
                          this.el.move(
                            this.parameters.box.x - f[0],
                            this.parameters.box.y
                          ),
                          void this.el.attr(
                            "font-size",
                            this.parameters.fontSize + f[0]
                          )
                        );
                      (f = this.checkAspectRatio(f)),
                        this.el
                          .move(this.parameters.box.x, this.parameters.box.y)
                          .size(
                            this.parameters.box.width + f[0],
                            this.parameters.box.height + f[1]
                          );
                    }
                  };
                  break;
                case "lb":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d, 1);
                    if (
                      this.parameters.box.width - f[0] > 0 &&
                      this.parameters.box.height + f[1] > 0
                    ) {
                      if (this.parameters.type === "text")
                        return (
                          this.el.move(
                            this.parameters.box.x + f[0],
                            this.parameters.box.y
                          ),
                          void this.el.attr(
                            "font-size",
                            this.parameters.fontSize - f[0]
                          )
                        );
                      (f = this.checkAspectRatio(f, !0)),
                        this.el
                          .move(
                            this.parameters.box.x + f[0],
                            this.parameters.box.y
                          )
                          .size(
                            this.parameters.box.width - f[0],
                            this.parameters.box.height + f[1]
                          );
                    }
                  };
                  break;
                case "t":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d, 2);
                    if (this.parameters.box.height - f[1] > 0) {
                      if (this.parameters.type === "text") return;
                      this.el
                        .move(
                          this.parameters.box.x,
                          this.parameters.box.y + f[1]
                        )
                        .height(this.parameters.box.height - f[1]);
                    }
                  };
                  break;
                case "r":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d, 0);
                    if (this.parameters.box.width + f[0] > 0) {
                      if (this.parameters.type === "text") return;
                      this.el
                        .move(this.parameters.box.x, this.parameters.box.y)
                        .width(this.parameters.box.width + f[0]);
                    }
                  };
                  break;
                case "b":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d, 0);
                    if (this.parameters.box.height + f[1] > 0) {
                      if (this.parameters.type === "text") return;
                      this.el
                        .move(this.parameters.box.x, this.parameters.box.y)
                        .height(this.parameters.box.height + f[1]);
                    }
                  };
                  break;
                case "l":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(h, d, 1);
                    if (this.parameters.box.width - f[0] > 0) {
                      if (this.parameters.type === "text") return;
                      this.el
                        .move(
                          this.parameters.box.x + f[0],
                          this.parameters.box.y
                        )
                        .width(this.parameters.box.width - f[0]);
                    }
                  };
                  break;
                case "rot":
                  this.calc = function (h, d) {
                    var f = h + this.parameters.p.x,
                      p = d + this.parameters.p.y,
                      v = Math.atan2(
                        this.parameters.p.y -
                          this.parameters.box.y -
                          this.parameters.box.height / 2,
                        this.parameters.p.x -
                          this.parameters.box.x -
                          this.parameters.box.width / 2
                      ),
                      b = Math.atan2(
                        p -
                          this.parameters.box.y -
                          this.parameters.box.height / 2,
                        f -
                          this.parameters.box.x -
                          this.parameters.box.width / 2
                      ),
                      _ =
                        this.parameters.rotation +
                        (180 * (b - v)) / Math.PI +
                        this.options.snapToAngle / 2;
                    this.el
                      .center(this.parameters.box.cx, this.parameters.box.cy)
                      .rotate(
                        _ - (_ % this.options.snapToAngle),
                        this.parameters.box.cx,
                        this.parameters.box.cy
                      );
                  };
                  break;
                case "point":
                  this.calc = function (h, d) {
                    var f = this.snapToGrid(
                        h,
                        d,
                        this.parameters.pointCoords[0],
                        this.parameters.pointCoords[1]
                      ),
                      p = this.el.array().valueOf();
                    (p[this.parameters.i][0] =
                      this.parameters.pointCoords[0] + f[0]),
                      (p[this.parameters.i][1] =
                        this.parameters.pointCoords[1] + f[1]),
                      this.el.plot(p);
                  };
              }
              this.el.fire("resizestart", {
                dx: this.parameters.x,
                dy: this.parameters.y,
                event: i,
              }),
                SVG.on(window, "touchmove.resize", function (h) {
                  s.update(h || window.event);
                }),
                SVG.on(window, "touchend.resize", function () {
                  s.done();
                }),
                SVG.on(window, "mousemove.resize", function (h) {
                  s.update(h || window.event);
                }),
                SVG.on(window, "mouseup.resize", function () {
                  s.done();
                });
            }),
            (U.prototype.update = function (i) {
              if (i) {
                var s = this._extractPosition(i),
                  l = this.transformPoint(s.x, s.y),
                  c = l.x - this.parameters.p.x,
                  h = l.y - this.parameters.p.y;
                (this.lastUpdateCall = [c, h]),
                  this.calc(c, h),
                  this.el.fire("resizing", { dx: c, dy: h, event: i });
              } else
                this.lastUpdateCall &&
                  this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
            }),
            (U.prototype.done = function () {
              (this.lastUpdateCall = null),
                SVG.off(window, "mousemove.resize"),
                SVG.off(window, "mouseup.resize"),
                SVG.off(window, "touchmove.resize"),
                SVG.off(window, "touchend.resize"),
                this.el.fire("resizedone");
            }),
            (U.prototype.snapToGrid = function (i, s, l, c) {
              var h;
              return (
                c !== void 0
                  ? (h = [
                      (l + i) % this.options.snapToGrid,
                      (c + s) % this.options.snapToGrid,
                    ])
                  : ((l = l ?? 3),
                    (h = [
                      (this.parameters.box.x +
                        i +
                        (1 & l ? 0 : this.parameters.box.width)) %
                        this.options.snapToGrid,
                      (this.parameters.box.y +
                        s +
                        (2 & l ? 0 : this.parameters.box.height)) %
                        this.options.snapToGrid,
                    ])),
                i < 0 && (h[0] -= this.options.snapToGrid),
                s < 0 && (h[1] -= this.options.snapToGrid),
                (i -=
                  Math.abs(h[0]) < this.options.snapToGrid / 2
                    ? h[0]
                    : h[0] -
                      (i < 0
                        ? -this.options.snapToGrid
                        : this.options.snapToGrid)),
                (s -=
                  Math.abs(h[1]) < this.options.snapToGrid / 2
                    ? h[1]
                    : h[1] -
                      (s < 0
                        ? -this.options.snapToGrid
                        : this.options.snapToGrid)),
                this.constraintToBox(i, s, l, c)
              );
            }),
            (U.prototype.constraintToBox = function (i, s, l, c) {
              var h,
                d,
                f = this.options.constraint || {};
              return (
                c !== void 0
                  ? ((h = l), (d = c))
                  : ((h =
                      this.parameters.box.x +
                      (1 & l ? 0 : this.parameters.box.width)),
                    (d =
                      this.parameters.box.y +
                      (2 & l ? 0 : this.parameters.box.height))),
                f.minX !== void 0 && h + i < f.minX && (i = f.minX - h),
                f.maxX !== void 0 && h + i > f.maxX && (i = f.maxX - h),
                f.minY !== void 0 && d + s < f.minY && (s = f.minY - d),
                f.maxY !== void 0 && d + s > f.maxY && (s = f.maxY - d),
                [i, s]
              );
            }),
            (U.prototype.checkAspectRatio = function (i, s) {
              if (!this.options.saveAspectRatio) return i;
              var l = i.slice(),
                c = this.parameters.box.width / this.parameters.box.height,
                h = this.parameters.box.width + i[0],
                d = this.parameters.box.height - i[1],
                f = h / d;
              return (
                f < c
                  ? ((l[1] = h / c - this.parameters.box.height),
                    s && (l[1] = -l[1]))
                  : f > c &&
                    ((l[0] = this.parameters.box.width - d * c),
                    s && (l[0] = -l[0])),
                l
              );
            }),
            SVG.extend(SVG.Element, {
              resize: function (i) {
                return (
                  (this.remember("_resizeHandler") || new U(this)).init(
                    i || {}
                  ),
                  this
                );
              },
            }),
            (SVG.Element.prototype.resize.defaults = {
              snapToAngle: 0.1,
              snapToGrid: 1,
              constraint: {},
              saveAspectRatio: !1,
            });
        }).call(this);
      })(),
      window.Apex === void 0 && (window.Apex = {});
    var rs = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "initModules",
              value: function () {
                (this.ctx.publicMethods = [
                  "updateOptions",
                  "updateSeries",
                  "appendData",
                  "appendSeries",
                  "isSeriesHidden",
                  "toggleSeries",
                  "showSeries",
                  "hideSeries",
                  "setLocale",
                  "resetSeries",
                  "zoomX",
                  "toggleDataPointSelection",
                  "dataURI",
                  "exportToCSV",
                  "addXaxisAnnotation",
                  "addYaxisAnnotation",
                  "addPointAnnotation",
                  "clearAnnotations",
                  "removeAnnotation",
                  "paper",
                  "destroy",
                ]),
                  (this.ctx.eventList = [
                    "click",
                    "mousedown",
                    "mousemove",
                    "mouseleave",
                    "touchstart",
                    "touchmove",
                    "touchleave",
                    "mouseup",
                    "touchend",
                  ]),
                  (this.ctx.animations = new ce(this.ctx)),
                  (this.ctx.axes = new Jt(this.ctx)),
                  (this.ctx.core = new vs(this.ctx.el, this.ctx)),
                  (this.ctx.config = new Xe({})),
                  (this.ctx.data = new yt(this.ctx)),
                  (this.ctx.grid = new $t(this.ctx)),
                  (this.ctx.graphics = new C(this.ctx)),
                  (this.ctx.coreUtils = new ke(this.ctx)),
                  (this.ctx.crosshairs = new Rn(this.ctx)),
                  (this.ctx.events = new gt(this.ctx)),
                  (this.ctx.exports = new Zt(this.ctx)),
                  (this.ctx.localization = new mn(this.ctx)),
                  (this.ctx.options = new Mt()),
                  (this.ctx.responsive = new jr(this.ctx)),
                  (this.ctx.series = new de(this.ctx)),
                  (this.ctx.theme = new vn(this.ctx)),
                  (this.ctx.formatters = new ht(this.ctx)),
                  (this.ctx.titleSubtitle = new zn(this.ctx)),
                  (this.ctx.legend = new fn(this.ctx)),
                  (this.ctx.toolbar = new _r(this.ctx)),
                  (this.ctx.tooltip = new wi(this.ctx)),
                  (this.ctx.dimensions = new Dt(this.ctx)),
                  (this.ctx.updateHelpers = new Hn(this.ctx)),
                  (this.ctx.zoomPanSelection = new $r(this.ctx)),
                  (this.ctx.w.globals.tooltip = new wi(this.ctx));
              },
            },
          ]),
          U
        );
      })(),
      Ks = (function () {
        function U(i) {
          o(this, U), (this.ctx = i), (this.w = i.w);
        }
        return (
          g(U, [
            {
              key: "clear",
              value: function (i) {
                var s = i.isUpdating;
                this.ctx.zoomPanSelection &&
                  this.ctx.zoomPanSelection.destroy(),
                  this.ctx.toolbar && this.ctx.toolbar.destroy(),
                  (this.ctx.animations = null),
                  (this.ctx.axes = null),
                  (this.ctx.annotations = null),
                  (this.ctx.core = null),
                  (this.ctx.data = null),
                  (this.ctx.grid = null),
                  (this.ctx.series = null),
                  (this.ctx.responsive = null),
                  (this.ctx.theme = null),
                  (this.ctx.formatters = null),
                  (this.ctx.titleSubtitle = null),
                  (this.ctx.legend = null),
                  (this.ctx.dimensions = null),
                  (this.ctx.options = null),
                  (this.ctx.crosshairs = null),
                  (this.ctx.zoomPanSelection = null),
                  (this.ctx.updateHelpers = null),
                  (this.ctx.toolbar = null),
                  (this.ctx.localization = null),
                  (this.ctx.w.globals.tooltip = null),
                  this.clearDomElements({ isUpdating: s });
              },
            },
            {
              key: "killSVG",
              value: function (i) {
                i.each(function (s, l) {
                  this.removeClass("*"), this.off(), this.stop();
                }, !0),
                  i.ungroup(),
                  i.clear();
              },
            },
            {
              key: "clearDomElements",
              value: function (i) {
                var s = this,
                  l = i.isUpdating,
                  c = this.w.globals.dom.Paper.node;
                c.parentNode &&
                  c.parentNode.parentNode &&
                  !l &&
                  (c.parentNode.parentNode.style.minHeight = "unset");
                var h = this.w.globals.dom.baseEl;
                h &&
                  this.ctx.eventList.forEach(function (f) {
                    h.removeEventListener(f, s.ctx.events.documentEvent);
                  });
                var d = this.w.globals.dom;
                if (this.ctx.el !== null)
                  for (; this.ctx.el.firstChild; )
                    this.ctx.el.removeChild(this.ctx.el.firstChild);
                this.killSVG(d.Paper),
                  d.Paper.remove(),
                  (d.elWrap = null),
                  (d.elGraphical = null),
                  (d.elLegendWrap = null),
                  (d.elLegendForeign = null),
                  (d.baseEl = null),
                  (d.elGridRect = null),
                  (d.elGridRectMask = null),
                  (d.elGridRectMarkerMask = null),
                  (d.elForecastMask = null),
                  (d.elNonForecastMask = null),
                  (d.elDefs = null);
              },
            },
          ]),
          U
        );
      })(),
      is = new WeakMap(),
      Si = (function () {
        function U(i, s) {
          o(this, U),
            (this.opts = s),
            (this.ctx = this),
            (this.w = new Ye(s).init()),
            (this.el = i),
            (this.w.globals.cuid = F.randomId()),
            (this.w.globals.chartID = this.w.config.chart.id
              ? F.escapeString(this.w.config.chart.id)
              : this.w.globals.cuid),
            new rs(this).initModules(),
            (this.create = F.bind(this.create, this)),
            (this.windowResizeHandler = this._windowResizeHandler.bind(this)),
            (this.parentResizeHandler = this._parentResizeCallback.bind(this));
        }
        return (
          g(
            U,
            [
              {
                key: "render",
                value: function () {
                  var i = this;
                  return new Promise(function (s, l) {
                    if (i.el !== null) {
                      Apex._chartInstances === void 0 &&
                        (Apex._chartInstances = []),
                        i.w.config.chart.id &&
                          Apex._chartInstances.push({
                            id: i.w.globals.chartID,
                            group: i.w.config.chart.group,
                            chart: i,
                          }),
                        i.setLocale(i.w.config.chart.defaultLocale);
                      var c = i.w.config.chart.events.beforeMount;
                      if (
                        (typeof c == "function" && c(i, i.w),
                        i.events.fireEvent("beforeMount", [i, i.w]),
                        window.addEventListener(
                          "resize",
                          i.windowResizeHandler
                        ),
                        (function (S, T) {
                          var O = !1;
                          if (S.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                            var D = S.getBoundingClientRect();
                            (S.style.display !== "none" && D.width !== 0) ||
                              (O = !0);
                          }
                          var V = new ResizeObserver(function (G) {
                            O && T.call(S, G), (O = !0);
                          });
                          S.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                            ? Array.from(S.children).forEach(function (G) {
                                return V.observe(G);
                              })
                            : V.observe(S),
                            is.set(T, V);
                        })(i.el.parentNode, i.parentResizeHandler),
                        !i.css)
                      ) {
                        var h = i.el.getRootNode && i.el.getRootNode(),
                          d = F.is("ShadowRoot", h),
                          f = i.el.ownerDocument,
                          p = f.getElementById("apexcharts-css");
                        if (d || !p) {
                          var v;
                          (i.css = document.createElement("style")),
                            (i.css.id = "apexcharts-css"),
                            (i.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-radialbar-label {
  cursor: pointer;
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}

.apexcharts-bar-goals-markers{
  pointer-events: none
}

.apexcharts-bar-shadows{
  pointer-events: none
}

.apexcharts-rangebar-goals-markers{
  pointer-events: none
}`);
                          var b =
                            ((v = i.opts.chart) === null || v === void 0
                              ? void 0
                              : v.nonce) || i.w.config.chart.nonce;
                          b && i.css.setAttribute("nonce", b),
                            d ? h.prepend(i.css) : f.head.appendChild(i.css);
                        }
                      }
                      var _ = i.create(i.w.config.series, {});
                      if (!_) return s(i);
                      i.mount(_)
                        .then(function () {
                          typeof i.w.config.chart.events.mounted ==
                            "function" &&
                            i.w.config.chart.events.mounted(i, i.w),
                            i.events.fireEvent("mounted", [i, i.w]),
                            s(_);
                        })
                        .catch(function (S) {
                          l(S);
                        });
                    } else l(new Error("Element not found"));
                  });
                },
              },
              {
                key: "create",
                value: function (i, s) {
                  var l = this.w;
                  new rs(this).initModules();
                  var c = this.w.globals;
                  if (
                    ((c.noData = !1),
                    (c.animationEnded = !1),
                    this.responsive.checkResponsiveConfig(s),
                    l.config.xaxis.convertedCatToNumeric &&
                      new we(l.config).convertCatToNumericXaxis(
                        l.config,
                        this.ctx
                      ),
                    this.el === null ||
                      (this.core.setupElements(),
                      l.config.chart.type === "treemap" &&
                        ((l.config.grid.show = !1),
                        (l.config.yaxis[0].show = !1)),
                      c.svgWidth === 0))
                  )
                    return (c.animationEnded = !0), null;
                  var h = ke.checkComboSeries(i);
                  (c.comboCharts = h.comboCharts),
                    (c.comboBarCount = h.comboBarCount);
                  var d = i.every(function (b) {
                    return b.data && b.data.length === 0;
                  });
                  (i.length === 0 || d) && this.series.handleNoData(),
                    this.events.setupEventHandlers(),
                    this.data.parseData(i),
                    this.theme.init(),
                    new $e(this).setGlobalMarkerSize(),
                    this.formatters.setLabelFormatters(),
                    this.titleSubtitle.draw(),
                    (c.noData &&
                      c.collapsedSeries.length !== c.series.length &&
                      !l.config.legend.showForSingleSeries) ||
                      this.legend.init(),
                    this.series.hasAllSeriesEqualX(),
                    c.axisCharts &&
                      (this.core.coreCalculations(),
                      l.config.xaxis.type !== "category" &&
                        this.formatters.setLabelFormatters(),
                      (this.ctx.toolbar.minX = l.globals.minX),
                      (this.ctx.toolbar.maxX = l.globals.maxX)),
                    this.formatters.heatmapLabelFormatters(),
                    new ke(this).getLargestMarkerSize(),
                    this.dimensions.plotCoords();
                  var f = this.core.xySettings();
                  this.grid.createGridMask();
                  var p = this.core.plotChartType(i, f),
                    v = new ct(this);
                  return (
                    v.bringForward(),
                    l.config.dataLabels.background.enabled &&
                      v.dataLabelsBackground(),
                    this.core.shiftGraphPosition(),
                    {
                      elGraph: p,
                      xyRatios: f,
                      dimensions: {
                        plot: {
                          left: l.globals.translateX,
                          top: l.globals.translateY,
                          width: l.globals.gridWidth,
                          height: l.globals.gridHeight,
                        },
                      },
                    }
                  );
                },
              },
              {
                key: "mount",
                value: function () {
                  var i = this,
                    s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : null,
                    l = this,
                    c = l.w;
                  return new Promise(function (h, d) {
                    if (l.el === null)
                      return d(
                        new Error(
                          "Not enough data to display or target element not found"
                        )
                      );
                    (s === null || c.globals.allSeriesCollapsed) &&
                      l.series.handleNoData(),
                      (l.grid = new $t(l));
                    var f,
                      p,
                      v = l.grid.drawGrid();
                    if (
                      ((l.annotations = new Vt(l)),
                      l.annotations.drawImageAnnos(),
                      l.annotations.drawTextAnnos(),
                      c.config.grid.position === "back" &&
                        (v && c.globals.dom.elGraphical.add(v.el),
                        v != null &&
                          (f = v.elGridBorders) !== null &&
                          f !== void 0 &&
                          f.node &&
                          c.globals.dom.elGraphical.add(v.elGridBorders)),
                      Array.isArray(s.elGraph))
                    )
                      for (var b = 0; b < s.elGraph.length; b++)
                        c.globals.dom.elGraphical.add(s.elGraph[b]);
                    else c.globals.dom.elGraphical.add(s.elGraph);
                    c.config.grid.position === "front" &&
                      (v && c.globals.dom.elGraphical.add(v.el),
                      v != null &&
                        (p = v.elGridBorders) !== null &&
                        p !== void 0 &&
                        p.node &&
                        c.globals.dom.elGraphical.add(v.elGridBorders)),
                      c.config.xaxis.crosshairs.position === "front" &&
                        l.crosshairs.drawXCrosshairs(),
                      c.config.yaxis[0].crosshairs.position === "front" &&
                        l.crosshairs.drawYCrosshairs(),
                      c.config.chart.type !== "treemap" &&
                        l.axes.drawAxis(c.config.chart.type, v);
                    var _ = new Wt(i.ctx, v),
                      S = new dt(i.ctx, v);
                    if (
                      (v !== null &&
                        (_.xAxisLabelCorrections(v.xAxisTickWidth),
                        S.setYAxisTextAlignments(),
                        c.config.yaxis.map(function (O, D) {
                          c.globals.ignoreYAxisIndexes.indexOf(D) === -1 &&
                            S.yAxisTitleRotate(D, O.opposite);
                        })),
                      l.annotations.drawAxesAnnotations(),
                      !c.globals.noData)
                    ) {
                      if (
                        (c.config.tooltip.enabled &&
                          !c.globals.noData &&
                          l.w.globals.tooltip.drawTooltip(s.xyRatios),
                        c.globals.axisCharts &&
                          (c.globals.isXNumeric ||
                            c.config.xaxis.convertedCatToNumeric ||
                            c.globals.isRangeBar))
                      )
                        (c.config.chart.zoom.enabled ||
                          (c.config.chart.selection &&
                            c.config.chart.selection.enabled) ||
                          (c.config.chart.pan && c.config.chart.pan.enabled)) &&
                          l.zoomPanSelection.init({ xyRatios: s.xyRatios });
                      else {
                        var T = c.config.chart.toolbar.tools;
                        [
                          "zoom",
                          "zoomin",
                          "zoomout",
                          "selection",
                          "pan",
                          "reset",
                        ].forEach(function (O) {
                          T[O] = !1;
                        });
                      }
                      c.config.chart.toolbar.show &&
                        !c.globals.allSeriesCollapsed &&
                        l.toolbar.createToolbar();
                    }
                    c.globals.memory.methodsToExec.length > 0 &&
                      c.globals.memory.methodsToExec.forEach(function (O) {
                        O.method(O.params, !1, O.context);
                      }),
                      c.globals.axisCharts ||
                        c.globals.noData ||
                        l.core.resizeNonAxisCharts(),
                      h(l);
                  });
                },
              },
              {
                key: "destroy",
                value: function () {
                  var i, s;
                  window.removeEventListener(
                    "resize",
                    this.windowResizeHandler
                  ),
                    this.el.parentNode,
                    (i = this.parentResizeHandler),
                    (s = is.get(i)) && (s.disconnect(), is.delete(i));
                  var l = this.w.config.chart.id;
                  l &&
                    Apex._chartInstances.forEach(function (c, h) {
                      c.id === F.escapeString(l) &&
                        Apex._chartInstances.splice(h, 1);
                    }),
                    new Ks(this.ctx).clear({ isUpdating: !1 });
                },
              },
              {
                key: "updateOptions",
                value: function (i) {
                  var s = this,
                    l =
                      arguments.length > 1 &&
                      arguments[1] !== void 0 &&
                      arguments[1],
                    c =
                      !(arguments.length > 2 && arguments[2] !== void 0) ||
                      arguments[2],
                    h =
                      !(arguments.length > 3 && arguments[3] !== void 0) ||
                      arguments[3],
                    d =
                      !(arguments.length > 4 && arguments[4] !== void 0) ||
                      arguments[4],
                    f = this.w;
                  return (
                    (f.globals.selection = void 0),
                    i.series &&
                      (this.series.resetSeries(!1, !0, !1),
                      i.series.length &&
                        i.series[0].data &&
                        (i.series = i.series.map(function (p, v) {
                          return s.updateHelpers._extendSeries(p, v);
                        })),
                      this.updateHelpers.revertDefaultAxisMinMax()),
                    i.xaxis && (i = this.updateHelpers.forceXAxisUpdate(i)),
                    i.yaxis && (i = this.updateHelpers.forceYAxisUpdate(i)),
                    f.globals.collapsedSeriesIndices.length > 0 &&
                      this.series.clearPreviousPaths(),
                    i.theme && (i = this.theme.updateThemeOptions(i)),
                    this.updateHelpers._updateOptions(i, l, c, h, d)
                  );
                },
              },
              {
                key: "updateSeries",
                value: function () {
                  var i =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : [],
                    s =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1],
                    l =
                      !(arguments.length > 2 && arguments[2] !== void 0) ||
                      arguments[2];
                  return (
                    this.series.resetSeries(!1),
                    this.updateHelpers.revertDefaultAxisMinMax(),
                    this.updateHelpers._updateSeries(i, s, l)
                  );
                },
              },
              {
                key: "appendSeries",
                value: function (i) {
                  var s =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1],
                    l =
                      !(arguments.length > 2 && arguments[2] !== void 0) ||
                      arguments[2],
                    c = this.w.config.series.slice();
                  return (
                    c.push(i),
                    this.series.resetSeries(!1),
                    this.updateHelpers.revertDefaultAxisMinMax(),
                    this.updateHelpers._updateSeries(c, s, l)
                  );
                },
              },
              {
                key: "appendData",
                value: function (i) {
                  var s =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1],
                    l = this;
                  (l.w.globals.dataChanged = !0), l.series.getPreviousPaths();
                  for (
                    var c = l.w.config.series.slice(), h = 0;
                    h < c.length;
                    h++
                  )
                    if (i[h] !== null && i[h] !== void 0)
                      for (var d = 0; d < i[h].data.length; d++)
                        c[h].data.push(i[h].data[d]);
                  return (
                    (l.w.config.series = c),
                    s &&
                      (l.w.globals.initialSeries = F.clone(l.w.config.series)),
                    this.update()
                  );
                },
              },
              {
                key: "update",
                value: function (i) {
                  var s = this;
                  return new Promise(function (l, c) {
                    new Ks(s.ctx).clear({ isUpdating: !0 });
                    var h = s.create(s.w.config.series, i);
                    if (!h) return l(s);
                    s.mount(h)
                      .then(function () {
                        typeof s.w.config.chart.events.updated == "function" &&
                          s.w.config.chart.events.updated(s, s.w),
                          s.events.fireEvent("updated", [s, s.w]),
                          (s.w.globals.isDirty = !0),
                          l(s);
                      })
                      .catch(function (d) {
                        c(d);
                      });
                  });
                },
              },
              {
                key: "getSyncedCharts",
                value: function () {
                  var i = this.getGroupedCharts(),
                    s = [this];
                  return (
                    i.length &&
                      ((s = []),
                      i.forEach(function (l) {
                        s.push(l);
                      })),
                    s
                  );
                },
              },
              {
                key: "getGroupedCharts",
                value: function () {
                  var i = this;
                  return Apex._chartInstances
                    .filter(function (s) {
                      if (s.group) return !0;
                    })
                    .map(function (s) {
                      return i.w.config.chart.group === s.group ? s.chart : i;
                    });
                },
              },
              {
                key: "toggleSeries",
                value: function (i) {
                  return this.series.toggleSeries(i);
                },
              },
              {
                key: "highlightSeriesOnLegendHover",
                value: function (i, s) {
                  return this.series.toggleSeriesOnHover(i, s);
                },
              },
              {
                key: "showSeries",
                value: function (i) {
                  this.series.showSeries(i);
                },
              },
              {
                key: "hideSeries",
                value: function (i) {
                  this.series.hideSeries(i);
                },
              },
              {
                key: "isSeriesHidden",
                value: function (i) {
                  this.series.isSeriesHidden(i);
                },
              },
              {
                key: "resetSeries",
                value: function () {
                  var i =
                      !(arguments.length > 0 && arguments[0] !== void 0) ||
                      arguments[0],
                    s =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1];
                  this.series.resetSeries(i, s);
                },
              },
              {
                key: "addEventListener",
                value: function (i, s) {
                  this.events.addEventListener(i, s);
                },
              },
              {
                key: "removeEventListener",
                value: function (i, s) {
                  this.events.removeEventListener(i, s);
                },
              },
              {
                key: "addXaxisAnnotation",
                value: function (i) {
                  var s =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1],
                    l =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : void 0,
                    c = this;
                  l && (c = l),
                    c.annotations.addXaxisAnnotationExternal(i, s, c);
                },
              },
              {
                key: "addYaxisAnnotation",
                value: function (i) {
                  var s =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1],
                    l =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : void 0,
                    c = this;
                  l && (c = l),
                    c.annotations.addYaxisAnnotationExternal(i, s, c);
                },
              },
              {
                key: "addPointAnnotation",
                value: function (i) {
                  var s =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1],
                    l =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : void 0,
                    c = this;
                  l && (c = l),
                    c.annotations.addPointAnnotationExternal(i, s, c);
                },
              },
              {
                key: "clearAnnotations",
                value: function () {
                  var i =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : void 0,
                    s = this;
                  i && (s = i), s.annotations.clearAnnotations(s);
                },
              },
              {
                key: "removeAnnotation",
                value: function (i) {
                  var s =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : void 0,
                    l = this;
                  s && (l = s), l.annotations.removeAnnotation(l, i);
                },
              },
              {
                key: "getChartArea",
                value: function () {
                  return this.w.globals.dom.baseEl.querySelector(
                    ".apexcharts-inner"
                  );
                },
              },
              {
                key: "getSeriesTotalXRange",
                value: function (i, s) {
                  return this.coreUtils.getSeriesTotalsXRange(i, s);
                },
              },
              {
                key: "getHighestValueInSeries",
                value: function () {
                  var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0;
                  return new sn(this.ctx).getMinYMaxY(i).highestY;
                },
              },
              {
                key: "getLowestValueInSeries",
                value: function () {
                  var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0;
                  return new sn(this.ctx).getMinYMaxY(i).lowestY;
                },
              },
              {
                key: "getSeriesTotal",
                value: function () {
                  return this.w.globals.seriesTotals;
                },
              },
              {
                key: "toggleDataPointSelection",
                value: function (i, s) {
                  return this.updateHelpers.toggleDataPointSelection(i, s);
                },
              },
              {
                key: "zoomX",
                value: function (i, s) {
                  this.ctx.toolbar.zoomUpdateOptions(i, s);
                },
              },
              {
                key: "setLocale",
                value: function (i) {
                  this.localization.setCurrentLocaleValues(i);
                },
              },
              {
                key: "dataURI",
                value: function (i) {
                  return new Zt(this.ctx).dataURI(i);
                },
              },
              {
                key: "exportToCSV",
                value: function () {
                  var i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : {};
                  return new Zt(this.ctx).exportToCSV(i);
                },
              },
              {
                key: "paper",
                value: function () {
                  return this.w.globals.dom.Paper;
                },
              },
              {
                key: "_parentResizeCallback",
                value: function () {
                  this.w.globals.animationEnded &&
                    this.w.config.chart.redrawOnParentResize &&
                    this._windowResize();
                },
              },
              {
                key: "_windowResize",
                value: function () {
                  var i = this;
                  clearTimeout(this.w.globals.resizeTimer),
                    (this.w.globals.resizeTimer = window.setTimeout(
                      function () {
                        (i.w.globals.resized = !0),
                          (i.w.globals.dataChanged = !1),
                          i.ctx.update();
                      },
                      150
                    ));
                },
              },
              {
                key: "_windowResizeHandler",
                value: function () {
                  var i = this.w.config.chart.redrawOnWindowResize;
                  typeof i == "function" && (i = i()),
                    i && this._windowResize();
                },
              },
            ],
            [
              {
                key: "getChartByID",
                value: function (i) {
                  var s = F.escapeString(i);
                  if (Apex._chartInstances) {
                    var l = Apex._chartInstances.filter(function (c) {
                      return c.id === s;
                    })[0];
                    return l && l.chart;
                  }
                },
              },
              {
                key: "initOnLoad",
                value: function () {
                  for (
                    var i = document.querySelectorAll("[data-apexcharts]"),
                      s = 0;
                    s < i.length;
                    s++
                  )
                    new U(
                      i[s],
                      JSON.parse(i[s].getAttribute("data-options"))
                    ).render();
                },
              },
              {
                key: "exec",
                value: function (i, s) {
                  var l = this.getChartByID(i);
                  if (l) {
                    l.w.globals.isExecCalled = !0;
                    var c = null;
                    if (l.publicMethods.indexOf(s) !== -1) {
                      for (
                        var h = arguments.length,
                          d = new Array(h > 2 ? h - 2 : 0),
                          f = 2;
                        f < h;
                        f++
                      )
                        d[f - 2] = arguments[f];
                      c = l[s].apply(l, d);
                    }
                    return c;
                  }
                },
              },
              {
                key: "merge",
                value: function (i, s) {
                  return F.extend(i, s);
                },
              },
            ]
          ),
          U
        );
      })();
    t.exports = Si;
  })(w0, w0.exports);
  var pG = w0.exports,
    _0;
  Object.defineProperty(sL, "__esModule", { value: !0 });
  var gG =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (t) {
            return typeof t;
          }
        : function (t) {
            return t &&
              typeof Symbol == "function" &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? "symbol"
              : typeof t;
          },
    mG =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n,
            r = arguments[e];
          for (n in r)
            Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
        }
        return t;
      },
    vG = (function () {
      function t(e, n) {
        for (var r = 0; r < n.length; r++) {
          var a = n[r];
          (a.enumerable = a.enumerable || !1),
            (a.configurable = !0),
            "value" in a && (a.writable = !0),
            Object.defineProperty(e, a.key, a);
        }
      }
      return function (e, n, r) {
        return n && t(e.prototype, n), r && t(e, r), e;
      };
    })(),
    yG = pG,
    aL = g_(yG),
    oL = ue,
    fd = g_(oL),
    xG = _P,
    Ao = g_(xG);
  function g_(t) {
    return t && t.__esModule ? t : { default: t };
  }
  function bG(t, e, n) {
    return (
      e in t
        ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (t[e] = n),
      t
    );
  }
  function wG(t, e) {
    var n,
      r = {};
    for (n in t)
      0 <= e.indexOf(n) ||
        (Object.prototype.hasOwnProperty.call(t, n) && (r[n] = t[n]));
    return r;
  }
  function _G(t, e) {
    if (!(t instanceof e))
      throw new TypeError("Cannot call a class as a function");
  }
  function SG(t, e) {
    if (t)
      return !e || (typeof e != "object" && typeof e != "function") ? t : e;
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  }
  function EG(t, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError(
        "Super expression must either be null or a function, not " + typeof e
      );
    (t.prototype = Object.create(e && e.prototype, {
      constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 },
    })),
      e &&
        (Object.setPrototypeOf
          ? Object.setPrototypeOf(t, e)
          : (t.__proto__ = e));
  }
  window.ApexCharts = aL.default;
  var IA = (function () {
    function t(e) {
      _G(this, t);
      var n = SG(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
      return (
        fd.default.createRef
          ? (n.chartRef = fd.default.createRef())
          : (n.setRef = function (r) {
              return (n.chartRef = r);
            }),
        (n.chart = null),
        n
      );
    }
    return (
      EG(t, oL.Component),
      vG(t, [
        {
          key: "render",
          value: function () {
            var e = wG(this.props, []);
            return fd.default.createElement(
              "div",
              mG({ ref: fd.default.createRef ? this.chartRef : this.setRef }, e)
            );
          },
        },
        {
          key: "componentDidMount",
          value: function () {
            var e = fd.default.createRef
              ? this.chartRef.current
              : this.chartRef;
            (this.chart = new aL.default(e, this.getConfig())),
              this.chart.render();
          },
        },
        {
          key: "getConfig",
          value: function () {
            var o = this.props,
              e = o.type,
              n = o.height,
              r = o.width,
              a = o.series,
              o = o.options;
            return this.extend(o, {
              chart: { type: e, height: n, width: r },
              series: a,
            });
          },
        },
        {
          key: "isObject",
          value: function (e) {
            return (
              e &&
              (e === void 0 ? "undefined" : gG(e)) === "object" &&
              !Array.isArray(e) &&
              e != null
            );
          },
        },
        {
          key: "extend",
          value: function (e, n) {
            var r = this,
              a =
                (typeof Object.assign != "function" &&
                  (Object.assign = function (o) {
                    if (o == null)
                      throw new TypeError(
                        "Cannot convert undefined or null to object"
                      );
                    for (var u = Object(o), g = 1; g < arguments.length; g++) {
                      var x = arguments[g];
                      if (x != null)
                        for (var E in x) x.hasOwnProperty(E) && (u[E] = x[E]);
                    }
                    return u;
                  }),
                Object.assign({}, e));
            return (
              this.isObject(e) &&
                this.isObject(n) &&
                Object.keys(n).forEach(function (o) {
                  r.isObject(n[o]) && o in e
                    ? (a[o] = r.extend(e[o], n[o]))
                    : Object.assign(a, bG({}, o, n[o]));
                }),
              a
            );
          },
        },
        {
          key: "componentDidUpdate",
          value: function (e) {
            if (!this.chart) return null;
            var a = this.props,
              g = a.options,
              n = a.series,
              r = a.height,
              a = a.width,
              o = JSON.stringify(e.options),
              u = JSON.stringify(e.series),
              g = JSON.stringify(g),
              x = JSON.stringify(n);
            (o === g && u === x && r === e.height && a === e.width) ||
              (u !== x && o === g && r === e.height && a === e.width
                ? this.chart.updateSeries(n)
                : this.chart.updateOptions(this.getConfig()));
          },
        },
        {
          key: "componentWillUnmount",
          value: function () {
            this.chart &&
              typeof this.chart.destroy == "function" &&
              this.chart.destroy();
          },
        },
      ]),
      t
    );
  })();
  ((_0 = sL.default = IA).propTypes = {
    type: Ao.default.string.isRequired,
    width: Ao.default.oneOfType([Ao.default.string, Ao.default.number]),
    height: Ao.default.oneOfType([Ao.default.string, Ao.default.number]),
    series: Ao.default.array.isRequired,
    options: Ao.default.object.isRequired,
  }),
    (IA.defaultProps = { type: "line", width: "100%", height: "auto" });
  function kG() {
    const [t, e] = ue.useState(0),
      n = {
        series: [38, 40, 25, 10, 15],
        options: {
          chart: { type: "donut" },
          labels: ["Series 1", "Series 2", "Series 3", "Series 4", "Series 5"],
        },
      },
      r = {
        series: [38, 40, 25],
        options: {
          chart: { type: "donut" },
          labels: ["Series 1", "Series 2", "Series 3"],
        },
      };
    return P.jsxs("div", {
      className: "d-flex gap-5 col-lg-12 col-md-12 col-sm-6",
      children: [
        P.jsx("div", {
          className: "col-lg-6 col-md-12 col-sm-12 card card-body",
          children: P.jsx("div", {
            className:
              "MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 css-1idn90j-MuiGrid-root",
            children: P.jsx("div", {
              className:
                "MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation9 MuiCard-root css-ydfexc-MuiPaper-root-MuiCard-root",
              children: P.jsxs("div", {
                className: "MuiCardContent-root css-16iq3h-MuiCardContent-root",
                children: [
                  P.jsx("div", {
                    className: "MuiStack-root css-1s09o1t-MuiStack-root",
                    children: P.jsx("div", {
                      className: "MuiBox-root css-0",
                      children: P.jsx("h5", {
                        className:
                          "MuiTypography-root MuiTypography-h5 css-76dl6-MuiTypography-root",
                        style: { color: "#2A3547", fontWeight: "600" },
                        children: "Products",
                      }),
                    }),
                  }),
                  P.jsxs("div", {
                    className:
                      "MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3 css-zow5z4-MuiGrid-root d-flex",
                    style: { justifyContent: "space-between" },
                    children: [
                      P.jsxs("div", {
                        className:
                          "MuiGrid-root MuiGrid-item MuiGrid-grid-xs-7 MuiGrid-grid-sm-7 css-uqwprf-MuiGrid-root",
                        children: [
                          P.jsx("h3", {
                            className:
                              "MuiTypography-root MuiTypography-h3 css-ai2yoq-MuiTypography-root",
                            children: t || "-",
                          }),
                          P.jsx("div", {
                            className: "MuiStack-root css-8pheja-MuiStack-root",
                            children: P.jsxs("div", {
                              className:
                                "MuiAvatar-root MuiAvatar-circular MuiAvatar-colorDefault css-fh2vss-MuiAvatar-root",
                              children: [
                                P.jsxs("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  className:
                                    "icon icon-tabler icon-tabler-arrow-up-left",
                                  width: "20",
                                  height: "24",
                                  viewBox: "0 0 24 24",
                                  strokeWidth: "2",
                                  stroke: "#39B69A",
                                  fill: "none",
                                  strokeLinecap: "round",
                                  strokeLinejoin: "round",
                                  children: [
                                    P.jsx("path", {
                                      stroke: "none",
                                      d: "M0 0h24v24H0z",
                                    }),
                                    P.jsx("line", {
                                      x1: "7",
                                      y1: "7",
                                      x2: "17",
                                      y2: "17",
                                    }),
                                    P.jsx("polyline", {
                                      points: "16 7 7 7 7 16",
                                    }),
                                  ],
                                }),
                                P.jsxs("span", {
                                  className:
                                    "MuiTypography-root MuiTypography-subtitle2 css-o2z8bd-MuiTypography-root",
                                  style: { marginRight: "10px" },
                                  children: ["+", " -"],
                                }),
                                P.jsx("span", {
                                  className:
                                    "MuiTypography-root MuiTypography-subtitle2 css-u9bpq6-MuiTypography-root",
                                  children: "last year",
                                }),
                              ],
                            }),
                          }),
                        ],
                      }),
                      P.jsx("div", {
                        className:
                          "MuiGrid-root MuiGrid-item MuiGrid-grid-xs-5 MuiGrid-grid-sm-5 css-k3f0g4-MuiGrid-root",
                        children: P.jsx(_0, {
                          options: n.options,
                          series: n.series,
                          type: n.options.chart.type,
                          height: "150",
                          width: "100%",
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            }),
          }),
        }),
        P.jsx("div", {
          className: "col-lg-6 col-md-12 col-sm-12 card card-body",
          children: P.jsx("div", {
            className:
              "MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 css-1idn90j-MuiGrid-root",
            children: P.jsx("div", {
              className:
                "MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation9 MuiCard-root css-ydfexc-MuiPaper-root-MuiCard-root",
              children: P.jsxs("div", {
                className: "MuiCardContent-root css-16iq3h-MuiCardContent-root",
                children: [
                  P.jsx("div", {
                    className: "MuiStack-root css-1s09o1t-MuiStack-root",
                    children: P.jsx("div", {
                      className: "MuiBox-root css-0",
                      children: P.jsx("h5", {
                        className:
                          "MuiTypography-root MuiTypography-h5 css-76dl6-MuiTypography-root",
                        style: { color: "#2A3547", fontWeight: "600" },
                        children: "Equity",
                      }),
                    }),
                  }),
                  P.jsxs("div", {
                    className:
                      "MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3 css-zow5z4-MuiGrid-root d-flex",
                    style: { justifyContent: "space-between" },
                    children: [
                      P.jsxs("div", {
                        className:
                          "MuiGrid-root MuiGrid-item MuiGrid-grid-xs-7 MuiGrid-grid-sm-7 css-uqwprf-MuiGrid-root",
                        children: [
                          P.jsx("h3", {
                            className:
                              "MuiTypography-root MuiTypography-h3 css-ai2yoq-MuiTypography-root",
                            children: "-",
                          }),
                          P.jsx("div", {
                            className: "MuiStack-root css-8pheja-MuiStack-root",
                            children: P.jsxs("div", {
                              className:
                                "MuiAvatar-root MuiAvatar-circular MuiAvatar-colorDefault css-fh2vss-MuiAvatar-root",
                              children: [
                                P.jsxs("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  className:
                                    "icon icon-tabler icon-tabler-arrow-up-left",
                                  width: "20",
                                  height: "24",
                                  viewBox: "0 0 24 24",
                                  strokeWidth: "2",
                                  stroke: "#39B69A",
                                  fill: "none",
                                  strokeLinecap: "round",
                                  strokeLinejoin: "round",
                                  children: [
                                    P.jsx("path", {
                                      stroke: "none",
                                      d: "M0 0h24v24H0z",
                                    }),
                                    P.jsx("line", {
                                      x1: "7",
                                      y1: "7",
                                      x2: "17",
                                      y2: "17",
                                    }),
                                    P.jsx("polyline", {
                                      points: "16 7 7 7 7 16",
                                    }),
                                  ],
                                }),
                                P.jsx("span", {
                                  className:
                                    "MuiTypography-root MuiTypography-subtitle2 css-o2z8bd-MuiTypography-root",
                                  style: { marginRight: "10px" },
                                  children: "+0%",
                                }),
                                P.jsx("span", {
                                  className:
                                    "MuiTypography-root MuiTypography-subtitle2 css-u9bpq6-MuiTypography-root",
                                  children: "last year",
                                }),
                              ],
                            }),
                          }),
                        ],
                      }),
                      P.jsx("div", {
                        className:
                          "MuiGrid-root MuiGrid-item MuiGrid-grid-xs-5 MuiGrid-grid-sm-5 css-k3f0g4-MuiGrid-root",
                        children: P.jsx(_0, {
                          options: r.options,
                          series: r.series,
                          type: r.options.chart.type,
                          height: "150",
                          width: "100%",
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            }),
          }),
        }),
      ],
    });
  }
  function AG() {
    const t = rc();
    let e = { id: "", message: "" };
    const { Formik: n } = vv,
      r = Hf().shape({ message: Fo().required("message is required.") }),
      [a, o] = nr.useState(!1),
      [u, g] = ue.useState(!1),
      [x, E] = ue.useState([]),
      [L, z] = ue.useState(e),
      B = (he) => {
        he.id && (z(he), o(!0));
      },
      ae = async () => {
        const he = Ta(Hs),
          F = (await If(Hl(he, "testimonials"))).docs.map((ce) => ({
            id: ce.id,
            ...ce.data(),
          }));
        return console.log({ testimonialList: F }), F;
      };
    async function se(he) {
      if (he.message.length > 90) return;
      (he.id = L.id), g(!0);
      const oe = Ta(Hs);
      try {
        const ce = Zl(oe, "testimonials", he.id);
        await iy(ce, he);
      } catch (ce) {
        console.error("update", ce);
      }
      const F = await ae();
      E(F), g(!1), o(!1), z(e);
    }
    const le = () => {
      z(e), o(!1);
    };
    return (
      ue.useEffect(() => {
        if (!localStorage.getItem("isLoggedIn")) {
          console.log("loggedin exists"), t("/login");
          return;
        }
        ae().then((oe) => {
          E(oe), console.log({ data: oe });
        });
      }, []),
      P.jsxs("div", {
        className: "widget-content searchable-container list products",
        children: [
          P.jsxs(Pn, {
            show: a,
            size: "md",
            "aria-labelledby": "contained-modal-title-vcenter",
            animation: !0,
            scrollable: !0,
            centered: !0,
            children: [
              P.jsx(Pn.Header, {
                closeButton: !0,
                onClick: () => le(),
                children: P.jsx(Pn.Title, {
                  id: "contained-modal-title-vcenter",
                  children: P.jsx("b", {
                    children: L.id ? "Edit Testimonials" : "Add Testimonials",
                  }),
                }),
              }),
              P.jsx(n, {
                validationSchema: r,
                onSubmit: (he) => {
                  console.log("entered submit"), se(he);
                },
                initialValues: L
                  ? { message: L.message || "" }
                  : { message: "" },
                children: ({
                  handleSubmit: he,
                  handleChange: oe,
                  values: F,
                  touched: ce,
                  errors: ye,
                }) =>
                  P.jsxs(vt, {
                    noValidate: !0,
                    onSubmit: he,
                    children: [
                      P.jsx(Pn.Body, {
                        children: u
                          ? P.jsx(eu, {
                              height: "200",
                              width: "80",
                              radius: 9,
                              color: "green",
                              ariaLabel: "three-dots-loading",
                              wrapperStyle: {},
                              wrapperClass: "additional-css-class",
                            })
                          : P.jsx(Ev, {
                              className: "mb-3",
                              children: P.jsxs(vt.Group, {
                                as: Gr,
                                md: "12",
                                controlId: "validationFormik013",
                                className: "my-sm-2",
                                children: [
                                  P.jsxs("div", {
                                    style: {
                                      display: "flex",
                                      justifyContent: "space-between",
                                    },
                                    children: [
                                      P.jsx("div", {
                                        children: P.jsx(vt.Label, {
                                          children: " Message ",
                                        }),
                                      }),
                                      F.message.length < 90
                                        ? P.jsxs("div", {
                                            style: { color: "gray" },
                                            children: [
                                              "(",
                                              100 - F.message.length,
                                              " Characters left.)",
                                            ],
                                          })
                                        : P.jsx("div", {
                                            style: { color: "red" },
                                            children:
                                              "Character limit exceeded.",
                                          }),
                                    ],
                                  }),
                                  P.jsx(vt.Control, {
                                    as: "textarea",
                                    name: "message",
                                    rows: 4,
                                    value: F.message,
                                    onChange: oe,
                                    isValid:
                                      ce.message &&
                                      F.message.length < 90 &&
                                      !ye.message,
                                    isInvalid:
                                      ce.message &&
                                      (F.message.length > 90 || !!ye.message),
                                  }),
                                  P.jsx(vt.Control.Feedback, {
                                    type: "invalid",
                                    children: ye.message,
                                  }),
                                ],
                              }),
                            }),
                      }),
                      P.jsxs(Pn.Footer, {
                        children: [
                          P.jsx(Ts, {
                            className: "btn-success",
                            type: "submit",
                            children: "Save",
                          }),
                          P.jsx(Ts, {
                            className: "btn-danger",
                            onClick: () => le(),
                            children: "Close",
                          }),
                        ],
                      }),
                    ],
                  }),
              }),
            ],
          }),
          P.jsx("div", {
            className:
              "card bg-info-subtle shadow-none position-relative overflow-hidden mb-4",
            children: P.jsx("div", {
              className: "card-body px-4 py-3",
              children: P.jsxs("div", {
                className: "row align-items-center",
                children: [
                  P.jsxs("div", {
                    className: "col-9",
                    children: [
                      P.jsx("h4", {
                        className: "fw-semibold mb-8",
                        children: "Testimonials",
                      }),
                      P.jsx("nav", {
                        "aria-label": "breadcrumb",
                        children: P.jsxs("ol", {
                          className: "breadcrumb",
                          children: [
                            P.jsx("li", {
                              className: "breadcrumb-item",
                              children: P.jsx("a", {
                                className: "text-muted text-decoration-none",
                                href: "https://bootstrapdemos.adminmart.com/modernize/dist/main/index.html",
                                children: "Home",
                              }),
                            }),
                            P.jsx("li", {
                              className: "breadcrumb-item",
                              "aria-current": "page",
                              children: "Testimonials",
                            }),
                          ],
                        }),
                      }),
                    ],
                  }),
                  P.jsx("div", {
                    className: "col-3",
                    children: P.jsx("div", {
                      className: "text-center mb-n5",
                      children: P.jsx("img", {
                        src: "https://bootstrapdemos.adminmart.com/modernize/dist/assets/images/breadcrumb/ChatBc.png",
                        alt: "",
                        className: "img-fluid mb-n4",
                      }),
                    }),
                  }),
                ],
              }),
            }),
          }),
          P.jsx("div", {
            className: "card card-body",
            children: P.jsx("div", {
              className: "table-responsive",
              children: P.jsxs("table", {
                className: "table search-table align-middle text-nowrap",
                style: { tableLayout: "fixed", width: "100%" },
                children: [
                  P.jsx("thead", {
                    className: "header-item",
                    children: P.jsxs("tr", {
                      children: [
                        P.jsx("th", {
                          style: { width: "90%" },
                          children: "Message",
                        }),
                        P.jsx("th", {
                          style: { textAlign: "end" },
                          children: "Actions",
                        }),
                      ],
                    }),
                  }),
                  x.length
                    ? P.jsx("tbody", {
                        children: x.map((he, oe) =>
                          P.jsxs(
                            "tr",
                            {
                              className: "search-items",
                              children: [
                                P.jsx("td", {
                                  children: P.jsx("div", {
                                    className: "text-truncate",
                                    children: he.message,
                                  }),
                                }),
                                P.jsx("td", {
                                  children: P.jsx("div", {
                                    className: "action-btn",
                                    style: {
                                      display: "flex",
                                      justifyContent: "end",
                                    },
                                    children: P.jsx("div", {
                                      className: "text-info edit",
                                      onClick: () => B(he),
                                      children: P.jsxs("svg", {
                                        xmlns: "http://www.w3.org/2000/svg",
                                        className:
                                          "icon icon-tabler icon-tabler-eye-edit",
                                        width: 24,
                                        height: 24,
                                        viewBox: "0 0 24 24",
                                        strokeWidth: 1,
                                        stroke: "#000000",
                                        fill: "none",
                                        strokeLinecap: "round",
                                        strokeLinejoin: "round",
                                        children: [
                                          P.jsx("path", {
                                            stroke: "none",
                                            d: "M0 0h24v24H0z",
                                            fill: "none",
                                          }),
                                          P.jsx("path", {
                                            d: "M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",
                                          }),
                                          P.jsx("path", {
                                            d: "M11.192 17.966c-3.242 -.28 -5.972 -2.269 -8.192 -5.966c2.4 -4 5.4 -6 9 -6c3.326 0 6.14 1.707 8.442 5.122",
                                          }),
                                          P.jsx("path", {
                                            d: "M18.42 15.61a2.1 2.1 0 0 1 2.97 2.97l-3.39 3.42h-3v-3l3.42 -3.39z",
                                          }),
                                        ],
                                      }),
                                    }),
                                  }),
                                }),
                              ],
                            },
                            oe
                          )
                        ),
                      })
                    : P.jsx("tbody", {
                        children: P.jsx("tr", {
                          children: P.jsx("td", {
                            colSpan: 12,
                            children: P.jsx(eu, {
                              height: "100",
                              width: "90",
                              radius: 9,
                              color: "green",
                              ariaLabel: "three-dots-loading",
                              wrapperStyle: {},
                              wrapperClass: "additional-css-class",
                            }),
                          }),
                        }),
                      }),
                ],
              }),
            }),
          }),
        ],
      })
    );
  }
  function CG() {
    return P.jsxs(P.Fragment, {
      children: [
        P.jsx(Qj, {}),
        P.jsxs("div", {
          className: "body-wrapper",
          children: [
            P.jsx(Zj, {}),
            P.jsx("div", {
              className: "container-fluid",
              children: P.jsxs(vI, {
                children: [
                  P.jsx(Io, { path: "/dashboard", element: P.jsx(kG, {}) }),
                  P.jsx(Io, { path: "/products", element: P.jsx(hG, {}) }),
                  P.jsx(Io, { path: "/categories", element: P.jsx(dG, {}) }),
                  P.jsx(Io, { path: "/banners", element: P.jsx(fG, {}) }),
                  P.jsx(Io, { path: "/testimonials", element: P.jsx(AG, {}) }),
                ],
              }),
            }),
          ],
        }),
      ],
    });
  }
  function TG() {
    return P.jsx(P.Fragment, {
      children: P.jsx("div", {
        className: "page-wrapper",
        id: "main-wrapper",
        "data-layout": "vertical",
        "data-navbarbg": "skin6",
        "data-sidebartype": "full",
        "data-sidebar-position": "fixed",
        "data-header-position": "fixed",
        children: P.jsx(CG, {}),
      }),
    });
  }
  function m_(t, e) {
    var n = {};
    for (var r in t)
      Object.prototype.hasOwnProperty.call(t, r) &&
        e.indexOf(r) < 0 &&
        (n[r] = t[r]);
    if (t != null && typeof Object.getOwnPropertySymbols == "function")
      for (var a = 0, r = Object.getOwnPropertySymbols(t); a < r.length; a++)
        e.indexOf(r[a]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(t, r[a]) &&
          (n[r[a]] = t[r[a]]);
    return n;
  }
  function lL() {
    return {
      "dependent-sdk-initialized-before-auth":
        "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
    };
  }
  const IG = lL,
    cL = new Wf("auth", "Firebase", lL());
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Om = new Jw("@firebase/auth");
  function PG(t, ...e) {
    Om.logLevel <= In.WARN && Om.warn(`Auth (${hu}): ${t}`, ...e);
  }
  function Rg(t, ...e) {
    Om.logLevel <= In.ERROR && Om.error(`Auth (${hu}): ${t}`, ...e);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function Oa(t, ...e) {
    throw v_(t, ...e);
  }
  function lo(t, ...e) {
    return v_(t, ...e);
  }
  function RG(t, e, n) {
    const r = Object.assign(Object.assign({}, IG()), { [e]: n });
    return new Wf("auth", "Firebase", r).create(e, { appName: t.name });
  }
  function v_(t, ...e) {
    if (typeof t != "string") {
      const n = e[0],
        r = [...e.slice(1)];
      return r[0] && (r[0].appName = t.name), t._errorFactory.create(n, ...r);
    }
    return cL.create(t, ...e);
  }
  function an(t, e, ...n) {
    if (!t) throw v_(e, ...n);
  }
  function Do(t) {
    const e = "INTERNAL ASSERTION FAILED: " + t;
    throw (Rg(e), new Error(e));
  }
  function qo(t, e) {
    t || Do(e);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function S0() {
    var t;
    return (
      (typeof self < "u" &&
        ((t = self.location) === null || t === void 0 ? void 0 : t.href)) ||
      ""
    );
  }
  function OG() {
    return PA() === "http:" || PA() === "https:";
  }
  function PA() {
    var t;
    return (
      (typeof self < "u" &&
        ((t = self.location) === null || t === void 0 ? void 0 : t.protocol)) ||
      null
    );
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function NG() {
    return typeof navigator < "u" &&
      navigator &&
      "onLine" in navigator &&
      typeof navigator.onLine == "boolean" &&
      (OG() || MW() || "connection" in navigator)
      ? navigator.onLine
      : !0;
  }
  function LG() {
    if (typeof navigator > "u") return null;
    const t = navigator;
    return (t.languages && t.languages[0]) || t.language || null;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class cp {
    constructor(e, n) {
      (this.shortDelay = e),
        (this.longDelay = n),
        qo(n > e, "Short delay should be less than long delay!"),
        (this.isMobile = DW() || jW());
    }
    get() {
      return NG()
        ? this.isMobile
          ? this.longDelay
          : this.shortDelay
        : Math.min(5e3, this.shortDelay);
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function y_(t, e) {
    qo(t.emulator, "Emulator should always be set here");
    const { url: n } = t.emulator;
    return e ? `${n}${e.startsWith("/") ? e.slice(1) : e}` : n;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class uL {
    static initialize(e, n, r) {
      (this.fetchImpl = e),
        n && (this.headersImpl = n),
        r && (this.responseImpl = r);
    }
    static fetch() {
      if (this.fetchImpl) return this.fetchImpl;
      if (typeof self < "u" && "fetch" in self) return self.fetch;
      if (typeof globalThis < "u" && globalThis.fetch) return globalThis.fetch;
      if (typeof fetch < "u") return fetch;
      Do(
        "Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
      );
    }
    static headers() {
      if (this.headersImpl) return this.headersImpl;
      if (typeof self < "u" && "Headers" in self) return self.Headers;
      if (typeof globalThis < "u" && globalThis.Headers)
        return globalThis.Headers;
      if (typeof Headers < "u") return Headers;
      Do(
        "Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
      );
    }
    static response() {
      if (this.responseImpl) return this.responseImpl;
      if (typeof self < "u" && "Response" in self) return self.Response;
      if (typeof globalThis < "u" && globalThis.Response)
        return globalThis.Response;
      if (typeof Response < "u") return Response;
      Do(
        "Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
      );
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const DG = {
    CREDENTIAL_MISMATCH: "custom-token-mismatch",
    MISSING_CUSTOM_TOKEN: "internal-error",
    INVALID_IDENTIFIER: "invalid-email",
    MISSING_CONTINUE_URI: "internal-error",
    INVALID_PASSWORD: "wrong-password",
    MISSING_PASSWORD: "missing-password",
    INVALID_LOGIN_CREDENTIALS: "invalid-credential",
    EMAIL_EXISTS: "email-already-in-use",
    PASSWORD_LOGIN_DISABLED: "operation-not-allowed",
    INVALID_IDP_RESPONSE: "invalid-credential",
    INVALID_PENDING_TOKEN: "invalid-credential",
    FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use",
    MISSING_REQ_TYPE: "internal-error",
    EMAIL_NOT_FOUND: "user-not-found",
    RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
    EXPIRED_OOB_CODE: "expired-action-code",
    INVALID_OOB_CODE: "invalid-action-code",
    MISSING_OOB_CODE: "internal-error",
    CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
    INVALID_ID_TOKEN: "invalid-user-token",
    TOKEN_EXPIRED: "user-token-expired",
    USER_NOT_FOUND: "user-token-expired",
    TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",
    PASSWORD_DOES_NOT_MEET_REQUIREMENTS: "password-does-not-meet-requirements",
    INVALID_CODE: "invalid-verification-code",
    INVALID_SESSION_INFO: "invalid-verification-id",
    INVALID_TEMPORARY_PROOF: "invalid-credential",
    MISSING_SESSION_INFO: "missing-verification-id",
    SESSION_EXPIRED: "code-expired",
    MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",
    UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",
    INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",
    ADMIN_ONLY_OPERATION: "admin-restricted-operation",
    INVALID_MFA_PENDING_CREDENTIAL: "invalid-multi-factor-session",
    MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found",
    MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info",
    MISSING_MFA_PENDING_CREDENTIAL: "missing-multi-factor-session",
    SECOND_FACTOR_EXISTS: "second-factor-already-in-use",
    SECOND_FACTOR_LIMIT_EXCEEDED: "maximum-second-factor-count-exceeded",
    BLOCKING_FUNCTION_ERROR_RESPONSE: "internal-error",
    RECAPTCHA_NOT_ENABLED: "recaptcha-not-enabled",
    MISSING_RECAPTCHA_TOKEN: "missing-recaptcha-token",
    INVALID_RECAPTCHA_TOKEN: "invalid-recaptcha-token",
    INVALID_RECAPTCHA_ACTION: "invalid-recaptcha-action",
    MISSING_CLIENT_TYPE: "missing-client-type",
    MISSING_RECAPTCHA_VERSION: "missing-recaptcha-version",
    INVALID_RECAPTCHA_VERSION: "invalid-recaptcha-version",
    INVALID_REQ_TYPE: "invalid-req-type",
  };
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const MG = new cp(3e4, 6e4);
  function gu(t, e) {
    return t.tenantId && !e.tenantId
      ? Object.assign(Object.assign({}, e), { tenantId: t.tenantId })
      : e;
  }
  async function lc(t, e, n, r, a = {}) {
    return hL(t, a, async () => {
      let o = {},
        u = {};
      r && (e === "GET" ? (u = r) : (o = { body: JSON.stringify(r) }));
      const g = Uf(Object.assign({ key: t.config.apiKey }, u)).slice(1),
        x = await t._getAdditionalHeaders();
      return (
        (x["Content-Type"] = "application/json"),
        t.languageCode && (x["X-Firebase-Locale"] = t.languageCode),
        uL.fetch()(
          dL(t, t.config.apiHost, n, g),
          Object.assign(
            { method: e, headers: x, referrerPolicy: "no-referrer" },
            o
          )
        )
      );
    });
  }
  async function hL(t, e, n) {
    t._canInitEmulator = !1;
    const r = Object.assign(Object.assign({}, DG), e);
    try {
      const a = new FG(t),
        o = await Promise.race([n(), a.promise]);
      a.clearNetworkTimeout();
      const u = await o.json();
      if ("needConfirmation" in u)
        throw lg(t, "account-exists-with-different-credential", u);
      if (o.ok && !("errorMessage" in u)) return u;
      {
        const g = o.ok ? u.errorMessage : u.error.message,
          [x, E] = g.split(" : ");
        if (x === "FEDERATED_USER_ID_ALREADY_LINKED")
          throw lg(t, "credential-already-in-use", u);
        if (x === "EMAIL_EXISTS") throw lg(t, "email-already-in-use", u);
        if (x === "USER_DISABLED") throw lg(t, "user-disabled", u);
        const L = r[x] || x.toLowerCase().replace(/[_\s]+/g, "-");
        if (E) throw RG(t, L, E);
        Oa(t, L);
      }
    } catch (a) {
      if (a instanceof po) throw a;
      Oa(t, "network-request-failed", { message: String(a) });
    }
  }
  async function sy(t, e, n, r, a = {}) {
    const o = await lc(t, e, n, r, a);
    return (
      "mfaPendingCredential" in o &&
        Oa(t, "multi-factor-auth-required", { _serverResponse: o }),
      o
    );
  }
  function dL(t, e, n, r) {
    const a = `${e}${n}?${r}`;
    return t.config.emulator ? y_(t.config, a) : `${t.config.apiScheme}://${a}`;
  }
  function jG(t) {
    switch (t) {
      case "ENFORCE":
        return "ENFORCE";
      case "AUDIT":
        return "AUDIT";
      case "OFF":
        return "OFF";
      default:
        return "ENFORCEMENT_STATE_UNSPECIFIED";
    }
  }
  class FG {
    constructor(e) {
      (this.auth = e),
        (this.timer = null),
        (this.promise = new Promise((n, r) => {
          this.timer = setTimeout(
            () => r(lo(this.auth, "network-request-failed")),
            MG.get()
          );
        }));
    }
    clearNetworkTimeout() {
      clearTimeout(this.timer);
    }
  }
  function lg(t, e, n) {
    const r = { appName: t.name };
    n.email && (r.email = n.email),
      n.phoneNumber && (r.phoneNumber = n.phoneNumber);
    const a = lo(t, e, r);
    return (a.customData._tokenResponse = n), a;
  }
  function RA(t) {
    return t !== void 0 && t.enterprise !== void 0;
  }
  class zG {
    constructor(e) {
      if (
        ((this.siteKey = ""),
        (this.recaptchaEnforcementState = []),
        e.recaptchaKey === void 0)
      )
        throw new Error("recaptchaKey undefined");
      (this.siteKey = e.recaptchaKey.split("/")[3]),
        (this.recaptchaEnforcementState = e.recaptchaEnforcementState);
    }
    getProviderEnforcementState(e) {
      if (
        !this.recaptchaEnforcementState ||
        this.recaptchaEnforcementState.length === 0
      )
        return null;
      for (const n of this.recaptchaEnforcementState)
        if (n.provider && n.provider === e) return jG(n.enforcementState);
      return null;
    }
    isProviderEnabled(e) {
      return (
        this.getProviderEnforcementState(e) === "ENFORCE" ||
        this.getProviderEnforcementState(e) === "AUDIT"
      );
    }
  }
  async function VG(t, e) {
    return lc(t, "GET", "/v2/recaptchaConfig", gu(t, e));
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function $G(t, e) {
    return lc(t, "POST", "/v1/accounts:delete", e);
  }
  async function BG(t, e) {
    return lc(t, "POST", "/v1/accounts:lookup", e);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function Wd(t) {
    if (t)
      try {
        const e = new Date(Number(t));
        if (!isNaN(e.getTime())) return e.toUTCString();
      } catch {}
  }
  async function HG(t, e = !1) {
    const n = ci(t),
      r = await n.getIdToken(e),
      a = x_(r);
    an(a && a.exp && a.auth_time && a.iat, n.auth, "internal-error");
    const o = typeof a.firebase == "object" ? a.firebase : void 0,
      u = o == null ? void 0 : o.sign_in_provider;
    return {
      claims: a,
      token: r,
      authTime: Wd(Ax(a.auth_time)),
      issuedAtTime: Wd(Ax(a.iat)),
      expirationTime: Wd(Ax(a.exp)),
      signInProvider: u || null,
      signInSecondFactor:
        (o == null ? void 0 : o.sign_in_second_factor) || null,
    };
  }
  function Ax(t) {
    return Number(t) * 1e3;
  }
  function x_(t) {
    const [e, n, r] = t.split(".");
    if (e === void 0 || n === void 0 || r === void 0)
      return Rg("JWT malformed, contained fewer than 3 sections"), null;
    try {
      const a = aR(n);
      return a
        ? JSON.parse(a)
        : (Rg("Failed to decode base64 JWT payload"), null);
    } catch (a) {
      return (
        Rg(
          "Caught error parsing JWT payload as JSON",
          a == null ? void 0 : a.toString()
        ),
        null
      );
    }
  }
  function WG(t) {
    const e = x_(t);
    return (
      an(e, "internal-error"),
      an(typeof e.exp < "u", "internal-error"),
      an(typeof e.iat < "u", "internal-error"),
      Number(e.exp) - Number(e.iat)
    );
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function Rf(t, e, n = !1) {
    if (n) return e;
    try {
      return await e;
    } catch (r) {
      throw (
        (r instanceof po &&
          UG(r) &&
          t.auth.currentUser === t &&
          (await t.auth.signOut()),
        r)
      );
    }
  }
  function UG({ code: t }) {
    return t === "auth/user-disabled" || t === "auth/user-token-expired";
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class XG {
    constructor(e) {
      (this.user = e),
        (this.isRunning = !1),
        (this.timerId = null),
        (this.errorBackoff = 3e4);
    }
    _start() {
      this.isRunning || ((this.isRunning = !0), this.schedule());
    }
    _stop() {
      this.isRunning &&
        ((this.isRunning = !1),
        this.timerId !== null && clearTimeout(this.timerId));
    }
    getInterval(e) {
      var n;
      if (e) {
        const r = this.errorBackoff;
        return (this.errorBackoff = Math.min(this.errorBackoff * 2, 96e4)), r;
      } else {
        this.errorBackoff = 3e4;
        const a =
          ((n = this.user.stsTokenManager.expirationTime) !== null &&
          n !== void 0
            ? n
            : 0) -
          Date.now() -
          3e5;
        return Math.max(0, a);
      }
    }
    schedule(e = !1) {
      if (!this.isRunning) return;
      const n = this.getInterval(e);
      this.timerId = setTimeout(async () => {
        await this.iteration();
      }, n);
    }
    async iteration() {
      try {
        await this.user.getIdToken(!0);
      } catch (e) {
        (e == null ? void 0 : e.code) === "auth/network-request-failed" &&
          this.schedule(!0);
        return;
      }
      this.schedule();
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class fL {
    constructor(e, n) {
      (this.createdAt = e), (this.lastLoginAt = n), this._initializeTime();
    }
    _initializeTime() {
      (this.lastSignInTime = Wd(this.lastLoginAt)),
        (this.creationTime = Wd(this.createdAt));
    }
    _copy(e) {
      (this.createdAt = e.createdAt),
        (this.lastLoginAt = e.lastLoginAt),
        this._initializeTime();
    }
    toJSON() {
      return { createdAt: this.createdAt, lastLoginAt: this.lastLoginAt };
    }
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function Nm(t) {
    var e;
    const n = t.auth,
      r = await t.getIdToken(),
      a = await Rf(t, BG(n, { idToken: r }));
    an(a == null ? void 0 : a.users.length, n, "internal-error");
    const o = a.users[0];
    t._notifyReloadListener(o);
    const u =
        !((e = o.providerUserInfo) === null || e === void 0) && e.length
          ? qG(o.providerUserInfo)
          : [],
      g = GG(t.providerData, u),
      x = t.isAnonymous,
      E = !(t.email && o.passwordHash) && !(g != null && g.length),
      L = x ? E : !1,
      z = {
        uid: o.localId,
        displayName: o.displayName || null,
        photoURL: o.photoUrl || null,
        email: o.email || null,
        emailVerified: o.emailVerified || !1,
        phoneNumber: o.phoneNumber || null,
        tenantId: o.tenantId || null,
        providerData: g,
        metadata: new fL(o.createdAt, o.lastLoginAt),
        isAnonymous: L,
      };
    Object.assign(t, z);
  }
  async function YG(t) {
    const e = ci(t);
    await Nm(e),
      await e.auth._persistUserIfCurrent(e),
      e.auth._notifyListenersIfCurrent(e);
  }
  function GG(t, e) {
    return [
      ...t.filter((r) => !e.some((a) => a.providerId === r.providerId)),
      ...e,
    ];
  }
  function qG(t) {
    return t.map((e) => {
      var { providerId: n } = e,
        r = m_(e, ["providerId"]);
      return {
        providerId: n,
        uid: r.rawId || "",
        displayName: r.displayName || null,
        email: r.email || null,
        phoneNumber: r.phoneNumber || null,
        photoURL: r.photoUrl || null,
      };
    });
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function KG(t, e) {
    const n = await hL(t, {}, async () => {
      const r = Uf({ grant_type: "refresh_token", refresh_token: e }).slice(1),
        { tokenApiHost: a, apiKey: o } = t.config,
        u = dL(t, a, "/v1/token", `key=${o}`),
        g = await t._getAdditionalHeaders();
      return (
        (g["Content-Type"] = "application/x-www-form-urlencoded"),
        uL.fetch()(u, { method: "POST", headers: g, body: r })
      );
    });
    return {
      accessToken: n.access_token,
      expiresIn: n.expires_in,
      refreshToken: n.refresh_token,
    };
  }
  async function QG(t, e) {
    return lc(t, "POST", "/v2/accounts:revokeToken", gu(t, e));
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Of {
    constructor() {
      (this.refreshToken = null),
        (this.accessToken = null),
        (this.expirationTime = null);
    }
    get isExpired() {
      return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
    }
    updateFromServerResponse(e) {
      an(e.idToken, "internal-error"),
        an(typeof e.idToken < "u", "internal-error"),
        an(typeof e.refreshToken < "u", "internal-error");
      const n =
        "expiresIn" in e && typeof e.expiresIn < "u"
          ? Number(e.expiresIn)
          : WG(e.idToken);
      this.updateTokensAndExpiration(e.idToken, e.refreshToken, n);
    }
    async getToken(e, n = !1) {
      return (
        an(!this.accessToken || this.refreshToken, e, "user-token-expired"),
        !n && this.accessToken && !this.isExpired
          ? this.accessToken
          : this.refreshToken
          ? (await this.refresh(e, this.refreshToken), this.accessToken)
          : null
      );
    }
    clearRefreshToken() {
      this.refreshToken = null;
    }
    async refresh(e, n) {
      const { accessToken: r, refreshToken: a, expiresIn: o } = await KG(e, n);
      this.updateTokensAndExpiration(r, a, Number(o));
    }
    updateTokensAndExpiration(e, n, r) {
      (this.refreshToken = n || null),
        (this.accessToken = e || null),
        (this.expirationTime = Date.now() + r * 1e3);
    }
    static fromJSON(e, n) {
      const { refreshToken: r, accessToken: a, expirationTime: o } = n,
        u = new Of();
      return (
        r &&
          (an(typeof r == "string", "internal-error", { appName: e }),
          (u.refreshToken = r)),
        a &&
          (an(typeof a == "string", "internal-error", { appName: e }),
          (u.accessToken = a)),
        o &&
          (an(typeof o == "number", "internal-error", { appName: e }),
          (u.expirationTime = o)),
        u
      );
    }
    toJSON() {
      return {
        refreshToken: this.refreshToken,
        accessToken: this.accessToken,
        expirationTime: this.expirationTime,
      };
    }
    _assign(e) {
      (this.accessToken = e.accessToken),
        (this.refreshToken = e.refreshToken),
        (this.expirationTime = e.expirationTime);
    }
    _clone() {
      return Object.assign(new Of(), this.toJSON());
    }
    _performRefresh() {
      return Do("not implemented");
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function hl(t, e) {
    an(typeof t == "string" || typeof t > "u", "internal-error", {
      appName: e,
    });
  }
  class zc {
    constructor(e) {
      var { uid: n, auth: r, stsTokenManager: a } = e,
        o = m_(e, ["uid", "auth", "stsTokenManager"]);
      (this.providerId = "firebase"),
        (this.proactiveRefresh = new XG(this)),
        (this.reloadUserInfo = null),
        (this.reloadListener = null),
        (this.uid = n),
        (this.auth = r),
        (this.stsTokenManager = a),
        (this.accessToken = a.accessToken),
        (this.displayName = o.displayName || null),
        (this.email = o.email || null),
        (this.emailVerified = o.emailVerified || !1),
        (this.phoneNumber = o.phoneNumber || null),
        (this.photoURL = o.photoURL || null),
        (this.isAnonymous = o.isAnonymous || !1),
        (this.tenantId = o.tenantId || null),
        (this.providerData = o.providerData ? [...o.providerData] : []),
        (this.metadata = new fL(
          o.createdAt || void 0,
          o.lastLoginAt || void 0
        ));
    }
    async getIdToken(e) {
      const n = await Rf(this, this.stsTokenManager.getToken(this.auth, e));
      return (
        an(n, this.auth, "internal-error"),
        this.accessToken !== n &&
          ((this.accessToken = n),
          await this.auth._persistUserIfCurrent(this),
          this.auth._notifyListenersIfCurrent(this)),
        n
      );
    }
    getIdTokenResult(e) {
      return HG(this, e);
    }
    reload() {
      return YG(this);
    }
    _assign(e) {
      this !== e &&
        (an(this.uid === e.uid, this.auth, "internal-error"),
        (this.displayName = e.displayName),
        (this.photoURL = e.photoURL),
        (this.email = e.email),
        (this.emailVerified = e.emailVerified),
        (this.phoneNumber = e.phoneNumber),
        (this.isAnonymous = e.isAnonymous),
        (this.tenantId = e.tenantId),
        (this.providerData = e.providerData.map((n) => Object.assign({}, n))),
        this.metadata._copy(e.metadata),
        this.stsTokenManager._assign(e.stsTokenManager));
    }
    _clone(e) {
      const n = new zc(
        Object.assign(Object.assign({}, this), {
          auth: e,
          stsTokenManager: this.stsTokenManager._clone(),
        })
      );
      return n.metadata._copy(this.metadata), n;
    }
    _onReload(e) {
      an(!this.reloadListener, this.auth, "internal-error"),
        (this.reloadListener = e),
        this.reloadUserInfo &&
          (this._notifyReloadListener(this.reloadUserInfo),
          (this.reloadUserInfo = null));
    }
    _notifyReloadListener(e) {
      this.reloadListener ? this.reloadListener(e) : (this.reloadUserInfo = e);
    }
    _startProactiveRefresh() {
      this.proactiveRefresh._start();
    }
    _stopProactiveRefresh() {
      this.proactiveRefresh._stop();
    }
    async _updateTokensIfNecessary(e, n = !1) {
      let r = !1;
      e.idToken &&
        e.idToken !== this.stsTokenManager.accessToken &&
        (this.stsTokenManager.updateFromServerResponse(e), (r = !0)),
        n && (await Nm(this)),
        await this.auth._persistUserIfCurrent(this),
        r && this.auth._notifyListenersIfCurrent(this);
    }
    async delete() {
      const e = await this.getIdToken();
      return (
        await Rf(this, $G(this.auth, { idToken: e })),
        this.stsTokenManager.clearRefreshToken(),
        this.auth.signOut()
      );
    }
    toJSON() {
      return Object.assign(
        Object.assign(
          {
            uid: this.uid,
            email: this.email || void 0,
            emailVerified: this.emailVerified,
            displayName: this.displayName || void 0,
            isAnonymous: this.isAnonymous,
            photoURL: this.photoURL || void 0,
            phoneNumber: this.phoneNumber || void 0,
            tenantId: this.tenantId || void 0,
            providerData: this.providerData.map((e) => Object.assign({}, e)),
            stsTokenManager: this.stsTokenManager.toJSON(),
            _redirectEventId: this._redirectEventId,
          },
          this.metadata.toJSON()
        ),
        { apiKey: this.auth.config.apiKey, appName: this.auth.name }
      );
    }
    get refreshToken() {
      return this.stsTokenManager.refreshToken || "";
    }
    static _fromJSON(e, n) {
      var r, a, o, u, g, x, E, L;
      const z = (r = n.displayName) !== null && r !== void 0 ? r : void 0,
        B = (a = n.email) !== null && a !== void 0 ? a : void 0,
        ae = (o = n.phoneNumber) !== null && o !== void 0 ? o : void 0,
        se = (u = n.photoURL) !== null && u !== void 0 ? u : void 0,
        le = (g = n.tenantId) !== null && g !== void 0 ? g : void 0,
        he = (x = n._redirectEventId) !== null && x !== void 0 ? x : void 0,
        oe = (E = n.createdAt) !== null && E !== void 0 ? E : void 0,
        F = (L = n.lastLoginAt) !== null && L !== void 0 ? L : void 0,
        {
          uid: ce,
          emailVerified: ye,
          isAnonymous: C,
          providerData: ke,
          stsTokenManager: je,
        } = n;
      an(ce && je, e, "internal-error");
      const tt = Of.fromJSON(this.name, je);
      an(typeof ce == "string", e, "internal-error"),
        hl(z, e.name),
        hl(B, e.name),
        an(typeof ye == "boolean", e, "internal-error"),
        an(typeof C == "boolean", e, "internal-error"),
        hl(ae, e.name),
        hl(se, e.name),
        hl(le, e.name),
        hl(he, e.name),
        hl(oe, e.name),
        hl(F, e.name);
      const Ct = new zc({
        uid: ce,
        auth: e,
        email: B,
        emailVerified: ye,
        displayName: z,
        isAnonymous: C,
        photoURL: se,
        phoneNumber: ae,
        tenantId: le,
        stsTokenManager: tt,
        createdAt: oe,
        lastLoginAt: F,
      });
      return (
        ke &&
          Array.isArray(ke) &&
          (Ct.providerData = ke.map((xt) => Object.assign({}, xt))),
        he && (Ct._redirectEventId = he),
        Ct
      );
    }
    static async _fromIdTokenResponse(e, n, r = !1) {
      const a = new Of();
      a.updateFromServerResponse(n);
      const o = new zc({
        uid: n.localId,
        auth: e,
        stsTokenManager: a,
        isAnonymous: r,
      });
      return await Nm(o), o;
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const OA = new Map();
  function Mo(t) {
    qo(t instanceof Function, "Expected a class definition");
    let e = OA.get(t);
    return e
      ? (qo(e instanceof t, "Instance stored in cache mismatched with class"),
        e)
      : ((e = new t()), OA.set(t, e), e);
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class pL {
    constructor() {
      (this.type = "NONE"), (this.storage = {});
    }
    async _isAvailable() {
      return !0;
    }
    async _set(e, n) {
      this.storage[e] = n;
    }
    async _get(e) {
      const n = this.storage[e];
      return n === void 0 ? null : n;
    }
    async _remove(e) {
      delete this.storage[e];
    }
    _addListener(e, n) {}
    _removeListener(e, n) {}
  }
  pL.type = "NONE";
  const NA = pL;
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function Og(t, e, n) {
    return `firebase:${t}:${e}:${n}`;
  }
  class ah {
    constructor(e, n, r) {
      (this.persistence = e), (this.auth = n), (this.userKey = r);
      const { config: a, name: o } = this.auth;
      (this.fullUserKey = Og(this.userKey, a.apiKey, o)),
        (this.fullPersistenceKey = Og("persistence", a.apiKey, o)),
        (this.boundEventHandler = n._onStorageEvent.bind(n)),
        this.persistence._addListener(this.fullUserKey, this.boundEventHandler);
    }
    setCurrentUser(e) {
      return this.persistence._set(this.fullUserKey, e.toJSON());
    }
    async getCurrentUser() {
      const e = await this.persistence._get(this.fullUserKey);
      return e ? zc._fromJSON(this.auth, e) : null;
    }
    removeCurrentUser() {
      return this.persistence._remove(this.fullUserKey);
    }
    savePersistenceForRedirect() {
      return this.persistence._set(
        this.fullPersistenceKey,
        this.persistence.type
      );
    }
    async setPersistence(e) {
      if (this.persistence === e) return;
      const n = await this.getCurrentUser();
      if ((await this.removeCurrentUser(), (this.persistence = e), n))
        return this.setCurrentUser(n);
    }
    delete() {
      this.persistence._removeListener(
        this.fullUserKey,
        this.boundEventHandler
      );
    }
    static async create(e, n, r = "authUser") {
      if (!n.length) return new ah(Mo(NA), e, r);
      const a = (
        await Promise.all(
          n.map(async (E) => {
            if (await E._isAvailable()) return E;
          })
        )
      ).filter((E) => E);
      let o = a[0] || Mo(NA);
      const u = Og(r, e.config.apiKey, e.name);
      let g = null;
      for (const E of n)
        try {
          const L = await E._get(u);
          if (L) {
            const z = zc._fromJSON(e, L);
            E !== o && (g = z), (o = E);
            break;
          }
        } catch {}
      const x = a.filter((E) => E._shouldAllowMigration);
      return !o._shouldAllowMigration || !x.length
        ? new ah(o, e, r)
        : ((o = x[0]),
          g && (await o._set(u, g.toJSON())),
          await Promise.all(
            n.map(async (E) => {
              if (E !== o)
                try {
                  await E._remove(u);
                } catch {}
            })
          ),
          new ah(o, e, r));
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function LA(t) {
    const e = t.toLowerCase();
    if (e.includes("opera/") || e.includes("opr/") || e.includes("opios/"))
      return "Opera";
    if (vL(e)) return "IEMobile";
    if (e.includes("msie") || e.includes("trident/")) return "IE";
    if (e.includes("edge/")) return "Edge";
    if (gL(e)) return "Firefox";
    if (e.includes("silk/")) return "Silk";
    if (xL(e)) return "Blackberry";
    if (bL(e)) return "Webos";
    if (b_(e)) return "Safari";
    if ((e.includes("chrome/") || mL(e)) && !e.includes("edge/"))
      return "Chrome";
    if (yL(e)) return "Android";
    {
      const n = /([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/,
        r = t.match(n);
      if ((r == null ? void 0 : r.length) === 2) return r[1];
    }
    return "Other";
  }
  function gL(t = Zi()) {
    return /firefox\//i.test(t);
  }
  function b_(t = Zi()) {
    const e = t.toLowerCase();
    return (
      e.includes("safari/") &&
      !e.includes("chrome/") &&
      !e.includes("crios/") &&
      !e.includes("android")
    );
  }
  function mL(t = Zi()) {
    return /crios\//i.test(t);
  }
  function vL(t = Zi()) {
    return /iemobile/i.test(t);
  }
  function yL(t = Zi()) {
    return /android/i.test(t);
  }
  function xL(t = Zi()) {
    return /blackberry/i.test(t);
  }
  function bL(t = Zi()) {
    return /webos/i.test(t);
  }
  function ay(t = Zi()) {
    return (
      /iphone|ipad|ipod/i.test(t) || (/macintosh/i.test(t) && /mobile/i.test(t))
    );
  }
  function ZG(t = Zi()) {
    var e;
    return (
      ay(t) &&
      !!(!((e = window.navigator) === null || e === void 0) && e.standalone)
    );
  }
  function JG() {
    return FW() && document.documentMode === 10;
  }
  function wL(t = Zi()) {
    return (
      ay(t) || yL(t) || bL(t) || xL(t) || /windows phone/i.test(t) || vL(t)
    );
  }
  function e8() {
    try {
      return !!(window && window !== window.top);
    } catch {
      return !1;
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function _L(t, e = []) {
    let n;
    switch (t) {
      case "Browser":
        n = LA(Zi());
        break;
      case "Worker":
        n = `${LA(Zi())}-${t}`;
        break;
      default:
        n = t;
    }
    const r = e.length ? e.join(",") : "FirebaseCore-web";
    return `${n}/JsCore/${hu}/${r}`;
  }
  /**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class t8 {
    constructor(e) {
      (this.auth = e), (this.queue = []);
    }
    pushCallback(e, n) {
      const r = (o) =>
        new Promise((u, g) => {
          try {
            const x = e(o);
            u(x);
          } catch (x) {
            g(x);
          }
        });
      (r.onAbort = n), this.queue.push(r);
      const a = this.queue.length - 1;
      return () => {
        this.queue[a] = () => Promise.resolve();
      };
    }
    async runMiddleware(e) {
      if (this.auth.currentUser === e) return;
      const n = [];
      try {
        for (const r of this.queue) await r(e), r.onAbort && n.push(r.onAbort);
      } catch (r) {
        n.reverse();
        for (const a of n)
          try {
            a();
          } catch {}
        throw this.auth._errorFactory.create("login-blocked", {
          originalMessage: r == null ? void 0 : r.message,
        });
      }
    }
  }
  /**
   * @license
   * Copyright 2023 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function n8(t, e = {}) {
    return lc(t, "GET", "/v2/passwordPolicy", gu(t, e));
  }
  /**
   * @license
   * Copyright 2023 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const r8 = 6;
  class i8 {
    constructor(e) {
      var n, r, a, o;
      const u = e.customStrengthOptions;
      (this.customStrengthOptions = {}),
        (this.customStrengthOptions.minPasswordLength =
          (n = u.minPasswordLength) !== null && n !== void 0 ? n : r8),
        u.maxPasswordLength &&
          (this.customStrengthOptions.maxPasswordLength = u.maxPasswordLength),
        u.containsLowercaseCharacter !== void 0 &&
          (this.customStrengthOptions.containsLowercaseLetter =
            u.containsLowercaseCharacter),
        u.containsUppercaseCharacter !== void 0 &&
          (this.customStrengthOptions.containsUppercaseLetter =
            u.containsUppercaseCharacter),
        u.containsNumericCharacter !== void 0 &&
          (this.customStrengthOptions.containsNumericCharacter =
            u.containsNumericCharacter),
        u.containsNonAlphanumericCharacter !== void 0 &&
          (this.customStrengthOptions.containsNonAlphanumericCharacter =
            u.containsNonAlphanumericCharacter),
        (this.enforcementState = e.enforcementState),
        this.enforcementState === "ENFORCEMENT_STATE_UNSPECIFIED" &&
          (this.enforcementState = "OFF"),
        (this.allowedNonAlphanumericCharacters =
          (a =
            (r = e.allowedNonAlphanumericCharacters) === null || r === void 0
              ? void 0
              : r.join("")) !== null && a !== void 0
            ? a
            : ""),
        (this.forceUpgradeOnSignin =
          (o = e.forceUpgradeOnSignin) !== null && o !== void 0 ? o : !1),
        (this.schemaVersion = e.schemaVersion);
    }
    validatePassword(e) {
      var n, r, a, o, u, g;
      const x = { isValid: !0, passwordPolicy: this };
      return (
        this.validatePasswordLengthOptions(e, x),
        this.validatePasswordCharacterOptions(e, x),
        x.isValid &&
          (x.isValid =
            (n = x.meetsMinPasswordLength) !== null && n !== void 0 ? n : !0),
        x.isValid &&
          (x.isValid =
            (r = x.meetsMaxPasswordLength) !== null && r !== void 0 ? r : !0),
        x.isValid &&
          (x.isValid =
            (a = x.containsLowercaseLetter) !== null && a !== void 0 ? a : !0),
        x.isValid &&
          (x.isValid =
            (o = x.containsUppercaseLetter) !== null && o !== void 0 ? o : !0),
        x.isValid &&
          (x.isValid =
            (u = x.containsNumericCharacter) !== null && u !== void 0 ? u : !0),
        x.isValid &&
          (x.isValid =
            (g = x.containsNonAlphanumericCharacter) !== null && g !== void 0
              ? g
              : !0),
        x
      );
    }
    validatePasswordLengthOptions(e, n) {
      const r = this.customStrengthOptions.minPasswordLength,
        a = this.customStrengthOptions.maxPasswordLength;
      r && (n.meetsMinPasswordLength = e.length >= r),
        a && (n.meetsMaxPasswordLength = e.length <= a);
    }
    validatePasswordCharacterOptions(e, n) {
      this.updatePasswordCharacterOptionsStatuses(n, !1, !1, !1, !1);
      let r;
      for (let a = 0; a < e.length; a++)
        (r = e.charAt(a)),
          this.updatePasswordCharacterOptionsStatuses(
            n,
            r >= "a" && r <= "z",
            r >= "A" && r <= "Z",
            r >= "0" && r <= "9",
            this.allowedNonAlphanumericCharacters.includes(r)
          );
    }
    updatePasswordCharacterOptionsStatuses(e, n, r, a, o) {
      this.customStrengthOptions.containsLowercaseLetter &&
        (e.containsLowercaseLetter || (e.containsLowercaseLetter = n)),
        this.customStrengthOptions.containsUppercaseLetter &&
          (e.containsUppercaseLetter || (e.containsUppercaseLetter = r)),
        this.customStrengthOptions.containsNumericCharacter &&
          (e.containsNumericCharacter || (e.containsNumericCharacter = a)),
        this.customStrengthOptions.containsNonAlphanumericCharacter &&
          (e.containsNonAlphanumericCharacter ||
            (e.containsNonAlphanumericCharacter = o));
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class s8 {
    constructor(e, n, r, a) {
      (this.app = e),
        (this.heartbeatServiceProvider = n),
        (this.appCheckServiceProvider = r),
        (this.config = a),
        (this.currentUser = null),
        (this.emulatorConfig = null),
        (this.operations = Promise.resolve()),
        (this.authStateSubscription = new DA(this)),
        (this.idTokenSubscription = new DA(this)),
        (this.beforeStateQueue = new t8(this)),
        (this.redirectUser = null),
        (this.isProactiveRefreshEnabled = !1),
        (this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1),
        (this._canInitEmulator = !0),
        (this._isInitialized = !1),
        (this._deleted = !1),
        (this._initializationPromise = null),
        (this._popupRedirectResolver = null),
        (this._errorFactory = cL),
        (this._agentRecaptchaConfig = null),
        (this._tenantRecaptchaConfigs = {}),
        (this._projectPasswordPolicy = null),
        (this._tenantPasswordPolicies = {}),
        (this.lastNotifiedUid = void 0),
        (this.languageCode = null),
        (this.tenantId = null),
        (this.settings = { appVerificationDisabledForTesting: !1 }),
        (this.frameworks = []),
        (this.name = e.name),
        (this.clientVersion = a.sdkClientVersion);
    }
    _initializeWithPersistence(e, n) {
      return (
        n && (this._popupRedirectResolver = Mo(n)),
        (this._initializationPromise = this.queue(async () => {
          var r, a;
          if (
            !this._deleted &&
            ((this.persistenceManager = await ah.create(this, e)),
            !this._deleted)
          ) {
            if (
              !((r = this._popupRedirectResolver) === null || r === void 0) &&
              r._shouldInitProactively
            )
              try {
                await this._popupRedirectResolver._initialize(this);
              } catch {}
            await this.initializeCurrentUser(n),
              (this.lastNotifiedUid =
                ((a = this.currentUser) === null || a === void 0
                  ? void 0
                  : a.uid) || null),
              !this._deleted && (this._isInitialized = !0);
          }
        })),
        this._initializationPromise
      );
    }
    async _onStorageEvent() {
      if (this._deleted) return;
      const e = await this.assertedPersistence.getCurrentUser();
      if (!(!this.currentUser && !e)) {
        if (this.currentUser && e && this.currentUser.uid === e.uid) {
          this._currentUser._assign(e), await this.currentUser.getIdToken();
          return;
        }
        await this._updateCurrentUser(e, !0);
      }
    }
    async initializeCurrentUser(e) {
      var n;
      const r = await this.assertedPersistence.getCurrentUser();
      let a = r,
        o = !1;
      if (e && this.config.authDomain) {
        await this.getOrInitRedirectPersistenceManager();
        const u =
            (n = this.redirectUser) === null || n === void 0
              ? void 0
              : n._redirectEventId,
          g = a == null ? void 0 : a._redirectEventId,
          x = await this.tryRedirectSignIn(e);
        (!u || u === g) && x != null && x.user && ((a = x.user), (o = !0));
      }
      if (!a) return this.directlySetCurrentUser(null);
      if (!a._redirectEventId) {
        if (o)
          try {
            await this.beforeStateQueue.runMiddleware(a);
          } catch (u) {
            (a = r),
              this._popupRedirectResolver._overrideRedirectResult(this, () =>
                Promise.reject(u)
              );
          }
        return a
          ? this.reloadAndSetCurrentUserOrClear(a)
          : this.directlySetCurrentUser(null);
      }
      return (
        an(this._popupRedirectResolver, this, "argument-error"),
        await this.getOrInitRedirectPersistenceManager(),
        this.redirectUser &&
        this.redirectUser._redirectEventId === a._redirectEventId
          ? this.directlySetCurrentUser(a)
          : this.reloadAndSetCurrentUserOrClear(a)
      );
    }
    async tryRedirectSignIn(e) {
      let n = null;
      try {
        n = await this._popupRedirectResolver._completeRedirectFn(this, e, !0);
      } catch {
        await this._setRedirectUser(null);
      }
      return n;
    }
    async reloadAndSetCurrentUserOrClear(e) {
      try {
        await Nm(e);
      } catch (n) {
        if ((n == null ? void 0 : n.code) !== "auth/network-request-failed")
          return this.directlySetCurrentUser(null);
      }
      return this.directlySetCurrentUser(e);
    }
    useDeviceLanguage() {
      this.languageCode = LG();
    }
    async _delete() {
      this._deleted = !0;
    }
    async updateCurrentUser(e) {
      const n = e ? ci(e) : null;
      return (
        n &&
          an(
            n.auth.config.apiKey === this.config.apiKey,
            this,
            "invalid-user-token"
          ),
        this._updateCurrentUser(n && n._clone(this))
      );
    }
    async _updateCurrentUser(e, n = !1) {
      if (!this._deleted)
        return (
          e && an(this.tenantId === e.tenantId, this, "tenant-id-mismatch"),
          n || (await this.beforeStateQueue.runMiddleware(e)),
          this.queue(async () => {
            await this.directlySetCurrentUser(e), this.notifyAuthListeners();
          })
        );
    }
    async signOut() {
      return (
        await this.beforeStateQueue.runMiddleware(null),
        (this.redirectPersistenceManager || this._popupRedirectResolver) &&
          (await this._setRedirectUser(null)),
        this._updateCurrentUser(null, !0)
      );
    }
    setPersistence(e) {
      return this.queue(async () => {
        await this.assertedPersistence.setPersistence(Mo(e));
      });
    }
    _getRecaptchaConfig() {
      return this.tenantId == null
        ? this._agentRecaptchaConfig
        : this._tenantRecaptchaConfigs[this.tenantId];
    }
    async validatePassword(e) {
      this._getPasswordPolicyInternal() || (await this._updatePasswordPolicy());
      const n = this._getPasswordPolicyInternal();
      return n.schemaVersion !== this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION
        ? Promise.reject(
            this._errorFactory.create(
              "unsupported-password-policy-schema-version",
              {}
            )
          )
        : n.validatePassword(e);
    }
    _getPasswordPolicyInternal() {
      return this.tenantId === null
        ? this._projectPasswordPolicy
        : this._tenantPasswordPolicies[this.tenantId];
    }
    async _updatePasswordPolicy() {
      const e = await n8(this),
        n = new i8(e);
      this.tenantId === null
        ? (this._projectPasswordPolicy = n)
        : (this._tenantPasswordPolicies[this.tenantId] = n);
    }
    _getPersistence() {
      return this.assertedPersistence.persistence.type;
    }
    _updateErrorMap(e) {
      this._errorFactory = new Wf("auth", "Firebase", e());
    }
    onAuthStateChanged(e, n, r) {
      return this.registerStateListener(this.authStateSubscription, e, n, r);
    }
    beforeAuthStateChanged(e, n) {
      return this.beforeStateQueue.pushCallback(e, n);
    }
    onIdTokenChanged(e, n, r) {
      return this.registerStateListener(this.idTokenSubscription, e, n, r);
    }
    authStateReady() {
      return new Promise((e, n) => {
        if (this.currentUser) e();
        else {
          const r = this.onAuthStateChanged(() => {
            r(), e();
          }, n);
        }
      });
    }
    async revokeAccessToken(e) {
      if (this.currentUser) {
        const n = await this.currentUser.getIdToken(),
          r = {
            providerId: "apple.com",
            tokenType: "ACCESS_TOKEN",
            token: e,
            idToken: n,
          };
        this.tenantId != null && (r.tenantId = this.tenantId),
          await QG(this, r);
      }
    }
    toJSON() {
      var e;
      return {
        apiKey: this.config.apiKey,
        authDomain: this.config.authDomain,
        appName: this.name,
        currentUser:
          (e = this._currentUser) === null || e === void 0
            ? void 0
            : e.toJSON(),
      };
    }
    async _setRedirectUser(e, n) {
      const r = await this.getOrInitRedirectPersistenceManager(n);
      return e === null ? r.removeCurrentUser() : r.setCurrentUser(e);
    }
    async getOrInitRedirectPersistenceManager(e) {
      if (!this.redirectPersistenceManager) {
        const n = (e && Mo(e)) || this._popupRedirectResolver;
        an(n, this, "argument-error"),
          (this.redirectPersistenceManager = await ah.create(
            this,
            [Mo(n._redirectPersistence)],
            "redirectUser"
          )),
          (this.redirectUser =
            await this.redirectPersistenceManager.getCurrentUser());
      }
      return this.redirectPersistenceManager;
    }
    async _redirectUserForId(e) {
      var n, r;
      return (
        this._isInitialized && (await this.queue(async () => {})),
        ((n = this._currentUser) === null || n === void 0
          ? void 0
          : n._redirectEventId) === e
          ? this._currentUser
          : ((r = this.redirectUser) === null || r === void 0
              ? void 0
              : r._redirectEventId) === e
          ? this.redirectUser
          : null
      );
    }
    async _persistUserIfCurrent(e) {
      if (e === this.currentUser)
        return this.queue(async () => this.directlySetCurrentUser(e));
    }
    _notifyListenersIfCurrent(e) {
      e === this.currentUser && this.notifyAuthListeners();
    }
    _key() {
      return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
    }
    _startProactiveRefresh() {
      (this.isProactiveRefreshEnabled = !0),
        this.currentUser && this._currentUser._startProactiveRefresh();
    }
    _stopProactiveRefresh() {
      (this.isProactiveRefreshEnabled = !1),
        this.currentUser && this._currentUser._stopProactiveRefresh();
    }
    get _currentUser() {
      return this.currentUser;
    }
    notifyAuthListeners() {
      var e, n;
      if (!this._isInitialized) return;
      this.idTokenSubscription.next(this.currentUser);
      const r =
        (n =
          (e = this.currentUser) === null || e === void 0 ? void 0 : e.uid) !==
          null && n !== void 0
          ? n
          : null;
      this.lastNotifiedUid !== r &&
        ((this.lastNotifiedUid = r),
        this.authStateSubscription.next(this.currentUser));
    }
    registerStateListener(e, n, r, a) {
      if (this._deleted) return () => {};
      const o = typeof n == "function" ? n : n.next.bind(n);
      let u = !1;
      const g = this._isInitialized
        ? Promise.resolve()
        : this._initializationPromise;
      if (
        (an(g, this, "internal-error"),
        g.then(() => {
          u || o(this.currentUser);
        }),
        typeof n == "function")
      ) {
        const x = e.addObserver(n, r, a);
        return () => {
          (u = !0), x();
        };
      } else {
        const x = e.addObserver(n);
        return () => {
          (u = !0), x();
        };
      }
    }
    async directlySetCurrentUser(e) {
      this.currentUser &&
        this.currentUser !== e &&
        this._currentUser._stopProactiveRefresh(),
        e && this.isProactiveRefreshEnabled && e._startProactiveRefresh(),
        (this.currentUser = e),
        e
          ? await this.assertedPersistence.setCurrentUser(e)
          : await this.assertedPersistence.removeCurrentUser();
    }
    queue(e) {
      return (this.operations = this.operations.then(e, e)), this.operations;
    }
    get assertedPersistence() {
      return (
        an(this.persistenceManager, this, "internal-error"),
        this.persistenceManager
      );
    }
    _logFramework(e) {
      !e ||
        this.frameworks.includes(e) ||
        (this.frameworks.push(e),
        this.frameworks.sort(),
        (this.clientVersion = _L(
          this.config.clientPlatform,
          this._getFrameworks()
        )));
    }
    _getFrameworks() {
      return this.frameworks;
    }
    async _getAdditionalHeaders() {
      var e;
      const n = { "X-Client-Version": this.clientVersion };
      this.app.options.appId &&
        (n["X-Firebase-gmpid"] = this.app.options.appId);
      const r = await ((e = this.heartbeatServiceProvider.getImmediate({
        optional: !0,
      })) === null || e === void 0
        ? void 0
        : e.getHeartbeatsHeader());
      r && (n["X-Firebase-Client"] = r);
      const a = await this._getAppCheckToken();
      return a && (n["X-Firebase-AppCheck"] = a), n;
    }
    async _getAppCheckToken() {
      var e;
      const n = await ((e = this.appCheckServiceProvider.getImmediate({
        optional: !0,
      })) === null || e === void 0
        ? void 0
        : e.getToken());
      return (
        n != null &&
          n.error &&
          PG(`Error while retrieving App Check token: ${n.error}`),
        n == null ? void 0 : n.token
      );
    }
  }
  function Vh(t) {
    return ci(t);
  }
  class DA {
    constructor(e) {
      (this.auth = e),
        (this.observer = null),
        (this.addObserver = UW((n) => (this.observer = n)));
    }
    get next() {
      return (
        an(this.observer, this.auth, "internal-error"),
        this.observer.next.bind(this.observer)
      );
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function a8() {
    var t, e;
    return (e =
      (t = document.getElementsByTagName("head")) === null || t === void 0
        ? void 0
        : t[0]) !== null && e !== void 0
      ? e
      : document;
  }
  function SL(t) {
    return new Promise((e, n) => {
      const r = document.createElement("script");
      r.setAttribute("src", t),
        (r.onload = e),
        (r.onerror = (a) => {
          const o = lo("internal-error");
          (o.customData = a), n(o);
        }),
        (r.type = "text/javascript"),
        (r.charset = "UTF-8"),
        a8().appendChild(r);
    });
  }
  function o8(t) {
    return `__${t}${Math.floor(Math.random() * 1e6)}`;
  }
  const l8 = "https://www.google.com/recaptcha/enterprise.js?render=",
    c8 = "recaptcha-enterprise",
    u8 = "NO_RECAPTCHA";
  class h8 {
    constructor(e) {
      (this.type = c8), (this.auth = Vh(e));
    }
    async verify(e = "verify", n = !1) {
      async function r(o) {
        if (!n) {
          if (o.tenantId == null && o._agentRecaptchaConfig != null)
            return o._agentRecaptchaConfig.siteKey;
          if (
            o.tenantId != null &&
            o._tenantRecaptchaConfigs[o.tenantId] !== void 0
          )
            return o._tenantRecaptchaConfigs[o.tenantId].siteKey;
        }
        return new Promise(async (u, g) => {
          VG(o, {
            clientType: "CLIENT_TYPE_WEB",
            version: "RECAPTCHA_ENTERPRISE",
          })
            .then((x) => {
              if (x.recaptchaKey === void 0)
                g(new Error("recaptcha Enterprise site key undefined"));
              else {
                const E = new zG(x);
                return (
                  o.tenantId == null
                    ? (o._agentRecaptchaConfig = E)
                    : (o._tenantRecaptchaConfigs[o.tenantId] = E),
                  u(E.siteKey)
                );
              }
            })
            .catch((x) => {
              g(x);
            });
        });
      }
      function a(o, u, g) {
        const x = window.grecaptcha;
        RA(x)
          ? x.enterprise.ready(() => {
              x.enterprise
                .execute(o, { action: e })
                .then((E) => {
                  u(E);
                })
                .catch(() => {
                  u(u8);
                });
            })
          : g(Error("No reCAPTCHA enterprise script loaded."));
      }
      return new Promise((o, u) => {
        r(this.auth)
          .then((g) => {
            if (!n && RA(window.grecaptcha)) a(g, o, u);
            else {
              if (typeof window > "u") {
                u(new Error("RecaptchaVerifier is only supported in browser"));
                return;
              }
              SL(l8 + g)
                .then(() => {
                  a(g, o, u);
                })
                .catch((x) => {
                  u(x);
                });
            }
          })
          .catch((g) => {
            u(g);
          });
      });
    }
  }
  async function MA(t, e, n, r = !1) {
    const a = new h8(t);
    let o;
    try {
      o = await a.verify(n);
    } catch {
      o = await a.verify(n, !0);
    }
    const u = Object.assign({}, e);
    return (
      r
        ? Object.assign(u, { captchaResp: o })
        : Object.assign(u, { captchaResponse: o }),
      Object.assign(u, { clientType: "CLIENT_TYPE_WEB" }),
      Object.assign(u, { recaptchaVersion: "RECAPTCHA_ENTERPRISE" }),
      u
    );
  }
  async function jA(t, e, n, r) {
    var a;
    if (
      !((a = t._getRecaptchaConfig()) === null || a === void 0) &&
      a.isProviderEnabled("EMAIL_PASSWORD_PROVIDER")
    ) {
      const o = await MA(t, e, n, n === "getOobCode");
      return r(t, o);
    } else
      return r(t, e).catch(async (o) => {
        if (o.code === "auth/missing-recaptcha-token") {
          console.log(
            `${n} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`
          );
          const u = await MA(t, e, n, n === "getOobCode");
          return r(t, u);
        } else return Promise.reject(o);
      });
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function d8(t, e) {
    const n = kv(t, "auth");
    if (n.isInitialized()) {
      const a = n.getImmediate(),
        o = n.getOptions();
      if (gm(o, e ?? {})) return a;
      Oa(a, "already-initialized");
    }
    return n.initialize({ options: e });
  }
  function f8(t, e) {
    const n = (e == null ? void 0 : e.persistence) || [],
      r = (Array.isArray(n) ? n : [n]).map(Mo);
    e != null && e.errorMap && t._updateErrorMap(e.errorMap),
      t._initializeWithPersistence(
        r,
        e == null ? void 0 : e.popupRedirectResolver
      );
  }
  function p8(t, e, n) {
    const r = Vh(t);
    an(r._canInitEmulator, r, "emulator-config-failed"),
      an(/^https?:\/\//.test(e), r, "invalid-emulator-scheme");
    const a = !!(n != null && n.disableWarnings),
      o = EL(e),
      { host: u, port: g } = g8(e),
      x = g === null ? "" : `:${g}`;
    (r.config.emulator = { url: `${o}//${u}${x}/` }),
      (r.settings.appVerificationDisabledForTesting = !0),
      (r.emulatorConfig = Object.freeze({
        host: u,
        port: g,
        protocol: o.replace(":", ""),
        options: Object.freeze({ disableWarnings: a }),
      })),
      a || m8();
  }
  function EL(t) {
    const e = t.indexOf(":");
    return e < 0 ? "" : t.substr(0, e + 1);
  }
  function g8(t) {
    const e = EL(t),
      n = /(\/\/)?([^?#/]+)/.exec(t.substr(e.length));
    if (!n) return { host: "", port: null };
    const r = n[2].split("@").pop() || "",
      a = /^(\[[^\]]+\])(:|$)/.exec(r);
    if (a) {
      const o = a[1];
      return { host: o, port: FA(r.substr(o.length + 1)) };
    } else {
      const [o, u] = r.split(":");
      return { host: o, port: FA(u) };
    }
  }
  function FA(t) {
    if (!t) return null;
    const e = Number(t);
    return isNaN(e) ? null : e;
  }
  function m8() {
    function t() {
      const e = document.createElement("p"),
        n = e.style;
      (e.innerText =
        "Running in emulator mode. Do not use with production credentials."),
        (n.position = "fixed"),
        (n.width = "100%"),
        (n.backgroundColor = "#ffffff"),
        (n.border = ".1em solid #000000"),
        (n.color = "#b50000"),
        (n.bottom = "0px"),
        (n.left = "0px"),
        (n.margin = "0px"),
        (n.zIndex = "10000"),
        (n.textAlign = "center"),
        e.classList.add("firebase-emulator-warning"),
        document.body.appendChild(e);
    }
    typeof console < "u" &&
      typeof console.info == "function" &&
      console.info(
        "WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."
      ),
      typeof window < "u" &&
        typeof document < "u" &&
        (document.readyState === "loading"
          ? window.addEventListener("DOMContentLoaded", t)
          : t());
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class w_ {
    constructor(e, n) {
      (this.providerId = e), (this.signInMethod = n);
    }
    toJSON() {
      return Do("not implemented");
    }
    _getIdTokenResponse(e) {
      return Do("not implemented");
    }
    _linkToIdToken(e, n) {
      return Do("not implemented");
    }
    _getReauthenticationResolver(e) {
      return Do("not implemented");
    }
  }
  async function v8(t, e) {
    return lc(t, "POST", "/v1/accounts:signUp", e);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function y8(t, e) {
    return sy(t, "POST", "/v1/accounts:signInWithPassword", gu(t, e));
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function x8(t, e) {
    return sy(t, "POST", "/v1/accounts:signInWithEmailLink", gu(t, e));
  }
  async function b8(t, e) {
    return sy(t, "POST", "/v1/accounts:signInWithEmailLink", gu(t, e));
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Nf extends w_ {
    constructor(e, n, r, a = null) {
      super("password", r),
        (this._email = e),
        (this._password = n),
        (this._tenantId = a);
    }
    static _fromEmailAndPassword(e, n) {
      return new Nf(e, n, "password");
    }
    static _fromEmailAndCode(e, n, r = null) {
      return new Nf(e, n, "emailLink", r);
    }
    toJSON() {
      return {
        email: this._email,
        password: this._password,
        signInMethod: this.signInMethod,
        tenantId: this._tenantId,
      };
    }
    static fromJSON(e) {
      const n = typeof e == "string" ? JSON.parse(e) : e;
      if (n != null && n.email && n != null && n.password) {
        if (n.signInMethod === "password")
          return this._fromEmailAndPassword(n.email, n.password);
        if (n.signInMethod === "emailLink")
          return this._fromEmailAndCode(n.email, n.password, n.tenantId);
      }
      return null;
    }
    async _getIdTokenResponse(e) {
      switch (this.signInMethod) {
        case "password":
          const n = {
            returnSecureToken: !0,
            email: this._email,
            password: this._password,
            clientType: "CLIENT_TYPE_WEB",
          };
          return jA(e, n, "signInWithPassword", y8);
        case "emailLink":
          return x8(e, { email: this._email, oobCode: this._password });
        default:
          Oa(e, "internal-error");
      }
    }
    async _linkToIdToken(e, n) {
      switch (this.signInMethod) {
        case "password":
          const r = {
            idToken: n,
            returnSecureToken: !0,
            email: this._email,
            password: this._password,
            clientType: "CLIENT_TYPE_WEB",
          };
          return jA(e, r, "signUpPassword", v8);
        case "emailLink":
          return b8(e, {
            idToken: n,
            email: this._email,
            oobCode: this._password,
          });
        default:
          Oa(e, "internal-error");
      }
    }
    _getReauthenticationResolver(e) {
      return this._getIdTokenResponse(e);
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function oh(t, e) {
    return sy(t, "POST", "/v1/accounts:signInWithIdp", gu(t, e));
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const w8 = "http://localhost";
  class tu extends w_ {
    constructor() {
      super(...arguments), (this.pendingToken = null);
    }
    static _fromParams(e) {
      const n = new tu(e.providerId, e.signInMethod);
      return (
        e.idToken || e.accessToken
          ? (e.idToken && (n.idToken = e.idToken),
            e.accessToken && (n.accessToken = e.accessToken),
            e.nonce && !e.pendingToken && (n.nonce = e.nonce),
            e.pendingToken && (n.pendingToken = e.pendingToken))
          : e.oauthToken && e.oauthTokenSecret
          ? ((n.accessToken = e.oauthToken), (n.secret = e.oauthTokenSecret))
          : Oa("argument-error"),
        n
      );
    }
    toJSON() {
      return {
        idToken: this.idToken,
        accessToken: this.accessToken,
        secret: this.secret,
        nonce: this.nonce,
        pendingToken: this.pendingToken,
        providerId: this.providerId,
        signInMethod: this.signInMethod,
      };
    }
    static fromJSON(e) {
      const n = typeof e == "string" ? JSON.parse(e) : e,
        { providerId: r, signInMethod: a } = n,
        o = m_(n, ["providerId", "signInMethod"]);
      if (!r || !a) return null;
      const u = new tu(r, a);
      return (
        (u.idToken = o.idToken || void 0),
        (u.accessToken = o.accessToken || void 0),
        (u.secret = o.secret),
        (u.nonce = o.nonce),
        (u.pendingToken = o.pendingToken || null),
        u
      );
    }
    _getIdTokenResponse(e) {
      const n = this.buildRequest();
      return oh(e, n);
    }
    _linkToIdToken(e, n) {
      const r = this.buildRequest();
      return (r.idToken = n), oh(e, r);
    }
    _getReauthenticationResolver(e) {
      const n = this.buildRequest();
      return (n.autoCreate = !1), oh(e, n);
    }
    buildRequest() {
      const e = { requestUri: w8, returnSecureToken: !0 };
      if (this.pendingToken) e.pendingToken = this.pendingToken;
      else {
        const n = {};
        this.idToken && (n.id_token = this.idToken),
          this.accessToken && (n.access_token = this.accessToken),
          this.secret && (n.oauth_token_secret = this.secret),
          (n.providerId = this.providerId),
          this.nonce && !this.pendingToken && (n.nonce = this.nonce),
          (e.postBody = Uf(n));
      }
      return e;
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function _8(t) {
    switch (t) {
      case "recoverEmail":
        return "RECOVER_EMAIL";
      case "resetPassword":
        return "PASSWORD_RESET";
      case "signIn":
        return "EMAIL_SIGNIN";
      case "verifyEmail":
        return "VERIFY_EMAIL";
      case "verifyAndChangeEmail":
        return "VERIFY_AND_CHANGE_EMAIL";
      case "revertSecondFactorAddition":
        return "REVERT_SECOND_FACTOR_ADDITION";
      default:
        return null;
    }
  }
  function S8(t) {
    const e = xd(bd(t)).link,
      n = e ? xd(bd(e)).deep_link_id : null,
      r = xd(bd(t)).deep_link_id;
    return (r ? xd(bd(r)).link : null) || r || n || e || t;
  }
  class __ {
    constructor(e) {
      var n, r, a, o, u, g;
      const x = xd(bd(e)),
        E = (n = x.apiKey) !== null && n !== void 0 ? n : null,
        L = (r = x.oobCode) !== null && r !== void 0 ? r : null,
        z = _8((a = x.mode) !== null && a !== void 0 ? a : null);
      an(E && L && z, "argument-error"),
        (this.apiKey = E),
        (this.operation = z),
        (this.code = L),
        (this.continueUrl =
          (o = x.continueUrl) !== null && o !== void 0 ? o : null),
        (this.languageCode =
          (u = x.languageCode) !== null && u !== void 0 ? u : null),
        (this.tenantId = (g = x.tenantId) !== null && g !== void 0 ? g : null);
    }
    static parseLink(e) {
      const n = S8(e);
      try {
        return new __(n);
      } catch {
        return null;
      }
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class $h {
    constructor() {
      this.providerId = $h.PROVIDER_ID;
    }
    static credential(e, n) {
      return Nf._fromEmailAndPassword(e, n);
    }
    static credentialWithLink(e, n) {
      const r = __.parseLink(n);
      return (
        an(r, "argument-error"), Nf._fromEmailAndCode(e, r.code, r.tenantId)
      );
    }
  }
  $h.PROVIDER_ID = "password";
  $h.EMAIL_PASSWORD_SIGN_IN_METHOD = "password";
  $h.EMAIL_LINK_SIGN_IN_METHOD = "emailLink";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class kL {
    constructor(e) {
      (this.providerId = e),
        (this.defaultLanguageCode = null),
        (this.customParameters = {});
    }
    setDefaultLanguage(e) {
      this.defaultLanguageCode = e;
    }
    setCustomParameters(e) {
      return (this.customParameters = e), this;
    }
    getCustomParameters() {
      return this.customParameters;
    }
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class up extends kL {
    constructor() {
      super(...arguments), (this.scopes = []);
    }
    addScope(e) {
      return this.scopes.includes(e) || this.scopes.push(e), this;
    }
    getScopes() {
      return [...this.scopes];
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class wl extends up {
    constructor() {
      super("facebook.com");
    }
    static credential(e) {
      return tu._fromParams({
        providerId: wl.PROVIDER_ID,
        signInMethod: wl.FACEBOOK_SIGN_IN_METHOD,
        accessToken: e,
      });
    }
    static credentialFromResult(e) {
      return wl.credentialFromTaggedObject(e);
    }
    static credentialFromError(e) {
      return wl.credentialFromTaggedObject(e.customData || {});
    }
    static credentialFromTaggedObject({ _tokenResponse: e }) {
      if (!e || !("oauthAccessToken" in e) || !e.oauthAccessToken) return null;
      try {
        return wl.credential(e.oauthAccessToken);
      } catch {
        return null;
      }
    }
  }
  wl.FACEBOOK_SIGN_IN_METHOD = "facebook.com";
  wl.PROVIDER_ID = "facebook.com";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class _l extends up {
    constructor() {
      super("google.com"), this.addScope("profile");
    }
    static credential(e, n) {
      return tu._fromParams({
        providerId: _l.PROVIDER_ID,
        signInMethod: _l.GOOGLE_SIGN_IN_METHOD,
        idToken: e,
        accessToken: n,
      });
    }
    static credentialFromResult(e) {
      return _l.credentialFromTaggedObject(e);
    }
    static credentialFromError(e) {
      return _l.credentialFromTaggedObject(e.customData || {});
    }
    static credentialFromTaggedObject({ _tokenResponse: e }) {
      if (!e) return null;
      const { oauthIdToken: n, oauthAccessToken: r } = e;
      if (!n && !r) return null;
      try {
        return _l.credential(n, r);
      } catch {
        return null;
      }
    }
  }
  _l.GOOGLE_SIGN_IN_METHOD = "google.com";
  _l.PROVIDER_ID = "google.com";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Sl extends up {
    constructor() {
      super("github.com");
    }
    static credential(e) {
      return tu._fromParams({
        providerId: Sl.PROVIDER_ID,
        signInMethod: Sl.GITHUB_SIGN_IN_METHOD,
        accessToken: e,
      });
    }
    static credentialFromResult(e) {
      return Sl.credentialFromTaggedObject(e);
    }
    static credentialFromError(e) {
      return Sl.credentialFromTaggedObject(e.customData || {});
    }
    static credentialFromTaggedObject({ _tokenResponse: e }) {
      if (!e || !("oauthAccessToken" in e) || !e.oauthAccessToken) return null;
      try {
        return Sl.credential(e.oauthAccessToken);
      } catch {
        return null;
      }
    }
  }
  Sl.GITHUB_SIGN_IN_METHOD = "github.com";
  Sl.PROVIDER_ID = "github.com";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class El extends up {
    constructor() {
      super("twitter.com");
    }
    static credential(e, n) {
      return tu._fromParams({
        providerId: El.PROVIDER_ID,
        signInMethod: El.TWITTER_SIGN_IN_METHOD,
        oauthToken: e,
        oauthTokenSecret: n,
      });
    }
    static credentialFromResult(e) {
      return El.credentialFromTaggedObject(e);
    }
    static credentialFromError(e) {
      return El.credentialFromTaggedObject(e.customData || {});
    }
    static credentialFromTaggedObject({ _tokenResponse: e }) {
      if (!e) return null;
      const { oauthAccessToken: n, oauthTokenSecret: r } = e;
      if (!n || !r) return null;
      try {
        return El.credential(n, r);
      } catch {
        return null;
      }
    }
  }
  El.TWITTER_SIGN_IN_METHOD = "twitter.com";
  El.PROVIDER_ID = "twitter.com";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Ah {
    constructor(e) {
      (this.user = e.user),
        (this.providerId = e.providerId),
        (this._tokenResponse = e._tokenResponse),
        (this.operationType = e.operationType);
    }
    static async _fromIdTokenResponse(e, n, r, a = !1) {
      const o = await zc._fromIdTokenResponse(e, r, a),
        u = zA(r);
      return new Ah({
        user: o,
        providerId: u,
        _tokenResponse: r,
        operationType: n,
      });
    }
    static async _forOperation(e, n, r) {
      await e._updateTokensIfNecessary(r, !0);
      const a = zA(r);
      return new Ah({
        user: e,
        providerId: a,
        _tokenResponse: r,
        operationType: n,
      });
    }
  }
  function zA(t) {
    return t.providerId ? t.providerId : "phoneNumber" in t ? "phone" : null;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Lm extends po {
    constructor(e, n, r, a) {
      var o;
      super(n.code, n.message),
        (this.operationType = r),
        (this.user = a),
        Object.setPrototypeOf(this, Lm.prototype),
        (this.customData = {
          appName: e.name,
          tenantId: (o = e.tenantId) !== null && o !== void 0 ? o : void 0,
          _serverResponse: n.customData._serverResponse,
          operationType: r,
        });
    }
    static _fromErrorAndOperation(e, n, r, a) {
      return new Lm(e, n, r, a);
    }
  }
  function AL(t, e, n, r) {
    return (
      e === "reauthenticate"
        ? n._getReauthenticationResolver(t)
        : n._getIdTokenResponse(t)
    ).catch((o) => {
      throw o.code === "auth/multi-factor-auth-required"
        ? Lm._fromErrorAndOperation(t, o, e, r)
        : o;
    });
  }
  async function E8(t, e, n = !1) {
    const r = await Rf(t, e._linkToIdToken(t.auth, await t.getIdToken()), n);
    return Ah._forOperation(t, "link", r);
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function k8(t, e, n = !1) {
    const { auth: r } = t,
      a = "reauthenticate";
    try {
      const o = await Rf(t, AL(r, a, e, t), n);
      an(o.idToken, r, "internal-error");
      const u = x_(o.idToken);
      an(u, r, "internal-error");
      const { sub: g } = u;
      return an(t.uid === g, r, "user-mismatch"), Ah._forOperation(t, a, o);
    } catch (o) {
      throw (
        ((o == null ? void 0 : o.code) === "auth/user-not-found" &&
          Oa(r, "user-mismatch"),
        o)
      );
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function CL(t, e, n = !1) {
    const r = "signIn",
      a = await AL(t, r, e),
      o = await Ah._fromIdTokenResponse(t, r, a);
    return n || (await t._updateCurrentUser(o.user)), o;
  }
  async function A8(t, e) {
    return CL(Vh(t), e);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function C8(t) {
    const e = Vh(t);
    e._getPasswordPolicyInternal() && (await e._updatePasswordPolicy());
  }
  function T8(t, e, n) {
    return A8(ci(t), $h.credential(e, n)).catch(async (r) => {
      throw (r.code === "auth/password-does-not-meet-requirements" && C8(t), r);
    });
  }
  function I8(t, e, n, r) {
    return ci(t).onIdTokenChanged(e, n, r);
  }
  function P8(t, e, n) {
    return ci(t).beforeAuthStateChanged(e, n);
  }
  const Dm = "__sak";
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class TL {
    constructor(e, n) {
      (this.storageRetriever = e), (this.type = n);
    }
    _isAvailable() {
      try {
        return this.storage
          ? (this.storage.setItem(Dm, "1"),
            this.storage.removeItem(Dm),
            Promise.resolve(!0))
          : Promise.resolve(!1);
      } catch {
        return Promise.resolve(!1);
      }
    }
    _set(e, n) {
      return this.storage.setItem(e, JSON.stringify(n)), Promise.resolve();
    }
    _get(e) {
      const n = this.storage.getItem(e);
      return Promise.resolve(n ? JSON.parse(n) : null);
    }
    _remove(e) {
      return this.storage.removeItem(e), Promise.resolve();
    }
    get storage() {
      return this.storageRetriever();
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function R8() {
    const t = Zi();
    return b_(t) || ay(t);
  }
  const O8 = 1e3,
    N8 = 10;
  class IL extends TL {
    constructor() {
      super(() => window.localStorage, "LOCAL"),
        (this.boundEventHandler = (e, n) => this.onStorageEvent(e, n)),
        (this.listeners = {}),
        (this.localCache = {}),
        (this.pollTimer = null),
        (this.safariLocalStorageNotSynced = R8() && e8()),
        (this.fallbackToPolling = wL()),
        (this._shouldAllowMigration = !0);
    }
    forAllChangedKeys(e) {
      for (const n of Object.keys(this.listeners)) {
        const r = this.storage.getItem(n),
          a = this.localCache[n];
        r !== a && e(n, a, r);
      }
    }
    onStorageEvent(e, n = !1) {
      if (!e.key) {
        this.forAllChangedKeys((u, g, x) => {
          this.notifyListeners(u, x);
        });
        return;
      }
      const r = e.key;
      if (
        (n ? this.detachListener() : this.stopPolling(),
        this.safariLocalStorageNotSynced)
      ) {
        const u = this.storage.getItem(r);
        if (e.newValue !== u)
          e.newValue !== null
            ? this.storage.setItem(r, e.newValue)
            : this.storage.removeItem(r);
        else if (this.localCache[r] === e.newValue && !n) return;
      }
      const a = () => {
          const u = this.storage.getItem(r);
          (!n && this.localCache[r] === u) || this.notifyListeners(r, u);
        },
        o = this.storage.getItem(r);
      JG() && o !== e.newValue && e.newValue !== e.oldValue
        ? setTimeout(a, N8)
        : a();
    }
    notifyListeners(e, n) {
      this.localCache[e] = n;
      const r = this.listeners[e];
      if (r) for (const a of Array.from(r)) a(n && JSON.parse(n));
    }
    startPolling() {
      this.stopPolling(),
        (this.pollTimer = setInterval(() => {
          this.forAllChangedKeys((e, n, r) => {
            this.onStorageEvent(
              new StorageEvent("storage", { key: e, oldValue: n, newValue: r }),
              !0
            );
          });
        }, O8));
    }
    stopPolling() {
      this.pollTimer &&
        (clearInterval(this.pollTimer), (this.pollTimer = null));
    }
    attachListener() {
      window.addEventListener("storage", this.boundEventHandler);
    }
    detachListener() {
      window.removeEventListener("storage", this.boundEventHandler);
    }
    _addListener(e, n) {
      Object.keys(this.listeners).length === 0 &&
        (this.fallbackToPolling ? this.startPolling() : this.attachListener()),
        this.listeners[e] ||
          ((this.listeners[e] = new Set()),
          (this.localCache[e] = this.storage.getItem(e))),
        this.listeners[e].add(n);
    }
    _removeListener(e, n) {
      this.listeners[e] &&
        (this.listeners[e].delete(n),
        this.listeners[e].size === 0 && delete this.listeners[e]),
        Object.keys(this.listeners).length === 0 &&
          (this.detachListener(), this.stopPolling());
    }
    async _set(e, n) {
      await super._set(e, n), (this.localCache[e] = JSON.stringify(n));
    }
    async _get(e) {
      const n = await super._get(e);
      return (this.localCache[e] = JSON.stringify(n)), n;
    }
    async _remove(e) {
      await super._remove(e), delete this.localCache[e];
    }
  }
  IL.type = "LOCAL";
  const L8 = IL;
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class PL extends TL {
    constructor() {
      super(() => window.sessionStorage, "SESSION");
    }
    _addListener(e, n) {}
    _removeListener(e, n) {}
  }
  PL.type = "SESSION";
  const RL = PL;
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function D8(t) {
    return Promise.all(
      t.map(async (e) => {
        try {
          return { fulfilled: !0, value: await e };
        } catch (n) {
          return { fulfilled: !1, reason: n };
        }
      })
    );
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class oy {
    constructor(e) {
      (this.eventTarget = e),
        (this.handlersMap = {}),
        (this.boundEventHandler = this.handleEvent.bind(this));
    }
    static _getInstance(e) {
      const n = this.receivers.find((a) => a.isListeningto(e));
      if (n) return n;
      const r = new oy(e);
      return this.receivers.push(r), r;
    }
    isListeningto(e) {
      return this.eventTarget === e;
    }
    async handleEvent(e) {
      const n = e,
        { eventId: r, eventType: a, data: o } = n.data,
        u = this.handlersMap[a];
      if (!(u != null && u.size)) return;
      n.ports[0].postMessage({ status: "ack", eventId: r, eventType: a });
      const g = Array.from(u).map(async (E) => E(n.origin, o)),
        x = await D8(g);
      n.ports[0].postMessage({
        status: "done",
        eventId: r,
        eventType: a,
        response: x,
      });
    }
    _subscribe(e, n) {
      Object.keys(this.handlersMap).length === 0 &&
        this.eventTarget.addEventListener("message", this.boundEventHandler),
        this.handlersMap[e] || (this.handlersMap[e] = new Set()),
        this.handlersMap[e].add(n);
    }
    _unsubscribe(e, n) {
      this.handlersMap[e] && n && this.handlersMap[e].delete(n),
        (!n || this.handlersMap[e].size === 0) && delete this.handlersMap[e],
        Object.keys(this.handlersMap).length === 0 &&
          this.eventTarget.removeEventListener(
            "message",
            this.boundEventHandler
          );
    }
  }
  oy.receivers = [];
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function S_(t = "", e = 10) {
    let n = "";
    for (let r = 0; r < e; r++) n += Math.floor(Math.random() * 10);
    return t + n;
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class M8 {
    constructor(e) {
      (this.target = e), (this.handlers = new Set());
    }
    removeMessageHandler(e) {
      e.messageChannel &&
        (e.messageChannel.port1.removeEventListener("message", e.onMessage),
        e.messageChannel.port1.close()),
        this.handlers.delete(e);
    }
    async _send(e, n, r = 50) {
      const a = typeof MessageChannel < "u" ? new MessageChannel() : null;
      if (!a) throw new Error("connection_unavailable");
      let o, u;
      return new Promise((g, x) => {
        const E = S_("", 20);
        a.port1.start();
        const L = setTimeout(() => {
          x(new Error("unsupported_event"));
        }, r);
        (u = {
          messageChannel: a,
          onMessage(z) {
            const B = z;
            if (B.data.eventId === E)
              switch (B.data.status) {
                case "ack":
                  clearTimeout(L),
                    (o = setTimeout(() => {
                      x(new Error("timeout"));
                    }, 3e3));
                  break;
                case "done":
                  clearTimeout(o), g(B.data.response);
                  break;
                default:
                  clearTimeout(L),
                    clearTimeout(o),
                    x(new Error("invalid_response"));
                  break;
              }
          },
        }),
          this.handlers.add(u),
          a.port1.addEventListener("message", u.onMessage),
          this.target.postMessage({ eventType: e, eventId: E, data: n }, [
            a.port2,
          ]);
      }).finally(() => {
        u && this.removeMessageHandler(u);
      });
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function co() {
    return window;
  }
  function j8(t) {
    co().location.href = t;
  }
  /**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function OL() {
    return (
      typeof co().WorkerGlobalScope < "u" &&
      typeof co().importScripts == "function"
    );
  }
  async function F8() {
    if (!(navigator != null && navigator.serviceWorker)) return null;
    try {
      return (await navigator.serviceWorker.ready).active;
    } catch {
      return null;
    }
  }
  function z8() {
    var t;
    return (
      ((t = navigator == null ? void 0 : navigator.serviceWorker) === null ||
      t === void 0
        ? void 0
        : t.controller) || null
    );
  }
  function V8() {
    return OL() ? self : null;
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const NL = "firebaseLocalStorageDb",
    $8 = 1,
    Mm = "firebaseLocalStorage",
    LL = "fbase_key";
  class hp {
    constructor(e) {
      this.request = e;
    }
    toPromise() {
      return new Promise((e, n) => {
        this.request.addEventListener("success", () => {
          e(this.request.result);
        }),
          this.request.addEventListener("error", () => {
            n(this.request.error);
          });
      });
    }
  }
  function ly(t, e) {
    return t.transaction([Mm], e ? "readwrite" : "readonly").objectStore(Mm);
  }
  function B8() {
    const t = indexedDB.deleteDatabase(NL);
    return new hp(t).toPromise();
  }
  function E0() {
    const t = indexedDB.open(NL, $8);
    return new Promise((e, n) => {
      t.addEventListener("error", () => {
        n(t.error);
      }),
        t.addEventListener("upgradeneeded", () => {
          const r = t.result;
          try {
            r.createObjectStore(Mm, { keyPath: LL });
          } catch (a) {
            n(a);
          }
        }),
        t.addEventListener("success", async () => {
          const r = t.result;
          r.objectStoreNames.contains(Mm)
            ? e(r)
            : (r.close(), await B8(), e(await E0()));
        });
    });
  }
  async function VA(t, e, n) {
    const r = ly(t, !0).put({ [LL]: e, value: n });
    return new hp(r).toPromise();
  }
  async function H8(t, e) {
    const n = ly(t, !1).get(e),
      r = await new hp(n).toPromise();
    return r === void 0 ? null : r.value;
  }
  function $A(t, e) {
    const n = ly(t, !0).delete(e);
    return new hp(n).toPromise();
  }
  const W8 = 800,
    U8 = 3;
  class DL {
    constructor() {
      (this.type = "LOCAL"),
        (this._shouldAllowMigration = !0),
        (this.listeners = {}),
        (this.localCache = {}),
        (this.pollTimer = null),
        (this.pendingWrites = 0),
        (this.receiver = null),
        (this.sender = null),
        (this.serviceWorkerReceiverAvailable = !1),
        (this.activeServiceWorker = null),
        (this._workerInitializationPromise =
          this.initializeServiceWorkerMessaging().then(
            () => {},
            () => {}
          ));
    }
    async _openDb() {
      return this.db ? this.db : ((this.db = await E0()), this.db);
    }
    async _withRetries(e) {
      let n = 0;
      for (;;)
        try {
          const r = await this._openDb();
          return await e(r);
        } catch (r) {
          if (n++ > U8) throw r;
          this.db && (this.db.close(), (this.db = void 0));
        }
    }
    async initializeServiceWorkerMessaging() {
      return OL() ? this.initializeReceiver() : this.initializeSender();
    }
    async initializeReceiver() {
      (this.receiver = oy._getInstance(V8())),
        this.receiver._subscribe("keyChanged", async (e, n) => ({
          keyProcessed: (await this._poll()).includes(n.key),
        })),
        this.receiver._subscribe("ping", async (e, n) => ["keyChanged"]);
    }
    async initializeSender() {
      var e, n;
      if (((this.activeServiceWorker = await F8()), !this.activeServiceWorker))
        return;
      this.sender = new M8(this.activeServiceWorker);
      const r = await this.sender._send("ping", {}, 800);
      r &&
        !((e = r[0]) === null || e === void 0) &&
        e.fulfilled &&
        !((n = r[0]) === null || n === void 0) &&
        n.value.includes("keyChanged") &&
        (this.serviceWorkerReceiverAvailable = !0);
    }
    async notifyServiceWorker(e) {
      if (
        !(
          !this.sender ||
          !this.activeServiceWorker ||
          z8() !== this.activeServiceWorker
        )
      )
        try {
          await this.sender._send(
            "keyChanged",
            { key: e },
            this.serviceWorkerReceiverAvailable ? 800 : 50
          );
        } catch {}
    }
    async _isAvailable() {
      try {
        if (!indexedDB) return !1;
        const e = await E0();
        return await VA(e, Dm, "1"), await $A(e, Dm), !0;
      } catch {}
      return !1;
    }
    async _withPendingWrite(e) {
      this.pendingWrites++;
      try {
        await e();
      } finally {
        this.pendingWrites--;
      }
    }
    async _set(e, n) {
      return this._withPendingWrite(
        async () => (
          await this._withRetries((r) => VA(r, e, n)),
          (this.localCache[e] = n),
          this.notifyServiceWorker(e)
        )
      );
    }
    async _get(e) {
      const n = await this._withRetries((r) => H8(r, e));
      return (this.localCache[e] = n), n;
    }
    async _remove(e) {
      return this._withPendingWrite(
        async () => (
          await this._withRetries((n) => $A(n, e)),
          delete this.localCache[e],
          this.notifyServiceWorker(e)
        )
      );
    }
    async _poll() {
      const e = await this._withRetries((a) => {
        const o = ly(a, !1).getAll();
        return new hp(o).toPromise();
      });
      if (!e) return [];
      if (this.pendingWrites !== 0) return [];
      const n = [],
        r = new Set();
      if (e.length !== 0)
        for (const { fbase_key: a, value: o } of e)
          r.add(a),
            JSON.stringify(this.localCache[a]) !== JSON.stringify(o) &&
              (this.notifyListeners(a, o), n.push(a));
      for (const a of Object.keys(this.localCache))
        this.localCache[a] &&
          !r.has(a) &&
          (this.notifyListeners(a, null), n.push(a));
      return n;
    }
    notifyListeners(e, n) {
      this.localCache[e] = n;
      const r = this.listeners[e];
      if (r) for (const a of Array.from(r)) a(n);
    }
    startPolling() {
      this.stopPolling(),
        (this.pollTimer = setInterval(async () => this._poll(), W8));
    }
    stopPolling() {
      this.pollTimer &&
        (clearInterval(this.pollTimer), (this.pollTimer = null));
    }
    _addListener(e, n) {
      Object.keys(this.listeners).length === 0 && this.startPolling(),
        this.listeners[e] || ((this.listeners[e] = new Set()), this._get(e)),
        this.listeners[e].add(n);
    }
    _removeListener(e, n) {
      this.listeners[e] &&
        (this.listeners[e].delete(n),
        this.listeners[e].size === 0 && delete this.listeners[e]),
        Object.keys(this.listeners).length === 0 && this.stopPolling();
    }
  }
  DL.type = "LOCAL";
  const X8 = DL;
  new cp(3e4, 6e4);
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function Y8(t, e) {
    return e
      ? Mo(e)
      : (an(t._popupRedirectResolver, t, "argument-error"),
        t._popupRedirectResolver);
  }
  /**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class E_ extends w_ {
    constructor(e) {
      super("custom", "custom"), (this.params = e);
    }
    _getIdTokenResponse(e) {
      return oh(e, this._buildIdpRequest());
    }
    _linkToIdToken(e, n) {
      return oh(e, this._buildIdpRequest(n));
    }
    _getReauthenticationResolver(e) {
      return oh(e, this._buildIdpRequest());
    }
    _buildIdpRequest(e) {
      const n = {
        requestUri: this.params.requestUri,
        sessionId: this.params.sessionId,
        postBody: this.params.postBody,
        tenantId: this.params.tenantId,
        pendingToken: this.params.pendingToken,
        returnSecureToken: !0,
        returnIdpCredential: !0,
      };
      return e && (n.idToken = e), n;
    }
  }
  function G8(t) {
    return CL(t.auth, new E_(t), t.bypassAuthState);
  }
  function q8(t) {
    const { auth: e, user: n } = t;
    return an(n, e, "internal-error"), k8(n, new E_(t), t.bypassAuthState);
  }
  async function K8(t) {
    const { auth: e, user: n } = t;
    return an(n, e, "internal-error"), E8(n, new E_(t), t.bypassAuthState);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class ML {
    constructor(e, n, r, a, o = !1) {
      (this.auth = e),
        (this.resolver = r),
        (this.user = a),
        (this.bypassAuthState = o),
        (this.pendingPromise = null),
        (this.eventManager = null),
        (this.filter = Array.isArray(n) ? n : [n]);
    }
    execute() {
      return new Promise(async (e, n) => {
        this.pendingPromise = { resolve: e, reject: n };
        try {
          (this.eventManager = await this.resolver._initialize(this.auth)),
            await this.onExecution(),
            this.eventManager.registerConsumer(this);
        } catch (r) {
          this.reject(r);
        }
      });
    }
    async onAuthEvent(e) {
      const {
        urlResponse: n,
        sessionId: r,
        postBody: a,
        tenantId: o,
        error: u,
        type: g,
      } = e;
      if (u) {
        this.reject(u);
        return;
      }
      const x = {
        auth: this.auth,
        requestUri: n,
        sessionId: r,
        tenantId: o || void 0,
        postBody: a || void 0,
        user: this.user,
        bypassAuthState: this.bypassAuthState,
      };
      try {
        this.resolve(await this.getIdpTask(g)(x));
      } catch (E) {
        this.reject(E);
      }
    }
    onError(e) {
      this.reject(e);
    }
    getIdpTask(e) {
      switch (e) {
        case "signInViaPopup":
        case "signInViaRedirect":
          return G8;
        case "linkViaPopup":
        case "linkViaRedirect":
          return K8;
        case "reauthViaPopup":
        case "reauthViaRedirect":
          return q8;
        default:
          Oa(this.auth, "internal-error");
      }
    }
    resolve(e) {
      qo(this.pendingPromise, "Pending promise was never set"),
        this.pendingPromise.resolve(e),
        this.unregisterAndCleanUp();
    }
    reject(e) {
      qo(this.pendingPromise, "Pending promise was never set"),
        this.pendingPromise.reject(e),
        this.unregisterAndCleanUp();
    }
    unregisterAndCleanUp() {
      this.eventManager && this.eventManager.unregisterConsumer(this),
        (this.pendingPromise = null),
        this.cleanUp();
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Q8 = new cp(2e3, 1e4);
  class Ku extends ML {
    constructor(e, n, r, a, o) {
      super(e, n, a, o),
        (this.provider = r),
        (this.authWindow = null),
        (this.pollId = null),
        Ku.currentPopupAction && Ku.currentPopupAction.cancel(),
        (Ku.currentPopupAction = this);
    }
    async executeNotNull() {
      const e = await this.execute();
      return an(e, this.auth, "internal-error"), e;
    }
    async onExecution() {
      qo(this.filter.length === 1, "Popup operations only handle one event");
      const e = S_();
      (this.authWindow = await this.resolver._openPopup(
        this.auth,
        this.provider,
        this.filter[0],
        e
      )),
        (this.authWindow.associatedEvent = e),
        this.resolver._originValidation(this.auth).catch((n) => {
          this.reject(n);
        }),
        this.resolver._isIframeWebStorageSupported(this.auth, (n) => {
          n || this.reject(lo(this.auth, "web-storage-unsupported"));
        }),
        this.pollUserCancellation();
    }
    get eventId() {
      var e;
      return (
        ((e = this.authWindow) === null || e === void 0
          ? void 0
          : e.associatedEvent) || null
      );
    }
    cancel() {
      this.reject(lo(this.auth, "cancelled-popup-request"));
    }
    cleanUp() {
      this.authWindow && this.authWindow.close(),
        this.pollId && window.clearTimeout(this.pollId),
        (this.authWindow = null),
        (this.pollId = null),
        (Ku.currentPopupAction = null);
    }
    pollUserCancellation() {
      const e = () => {
        var n, r;
        if (
          !(
            (r =
              (n = this.authWindow) === null || n === void 0
                ? void 0
                : n.window) === null || r === void 0
          ) &&
          r.closed
        ) {
          this.pollId = window.setTimeout(() => {
            (this.pollId = null),
              this.reject(lo(this.auth, "popup-closed-by-user"));
          }, 8e3);
          return;
        }
        this.pollId = window.setTimeout(e, Q8.get());
      };
      e();
    }
  }
  Ku.currentPopupAction = null;
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Z8 = "pendingRedirect",
    Ng = new Map();
  class J8 extends ML {
    constructor(e, n, r = !1) {
      super(
        e,
        [
          "signInViaRedirect",
          "linkViaRedirect",
          "reauthViaRedirect",
          "unknown",
        ],
        n,
        void 0,
        r
      ),
        (this.eventId = null);
    }
    async execute() {
      let e = Ng.get(this.auth._key());
      if (!e) {
        try {
          const r = (await eq(this.resolver, this.auth))
            ? await super.execute()
            : null;
          e = () => Promise.resolve(r);
        } catch (n) {
          e = () => Promise.reject(n);
        }
        Ng.set(this.auth._key(), e);
      }
      return (
        this.bypassAuthState ||
          Ng.set(this.auth._key(), () => Promise.resolve(null)),
        e()
      );
    }
    async onAuthEvent(e) {
      if (e.type === "signInViaRedirect") return super.onAuthEvent(e);
      if (e.type === "unknown") {
        this.resolve(null);
        return;
      }
      if (e.eventId) {
        const n = await this.auth._redirectUserForId(e.eventId);
        if (n) return (this.user = n), super.onAuthEvent(e);
        this.resolve(null);
      }
    }
    async onExecution() {}
    cleanUp() {}
  }
  async function eq(t, e) {
    const n = rq(e),
      r = nq(t);
    if (!(await r._isAvailable())) return !1;
    const a = (await r._get(n)) === "true";
    return await r._remove(n), a;
  }
  function tq(t, e) {
    Ng.set(t._key(), e);
  }
  function nq(t) {
    return Mo(t._redirectPersistence);
  }
  function rq(t) {
    return Og(Z8, t.config.apiKey, t.name);
  }
  async function iq(t, e, n = !1) {
    const r = Vh(t),
      a = Y8(r, e),
      u = await new J8(r, a, n).execute();
    return (
      u &&
        !n &&
        (delete u.user._redirectEventId,
        await r._persistUserIfCurrent(u.user),
        await r._setRedirectUser(null, e)),
      u
    );
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const sq = 10 * 60 * 1e3;
  class aq {
    constructor(e) {
      (this.auth = e),
        (this.cachedEventUids = new Set()),
        (this.consumers = new Set()),
        (this.queuedRedirectEvent = null),
        (this.hasHandledPotentialRedirect = !1),
        (this.lastProcessedEventTime = Date.now());
    }
    registerConsumer(e) {
      this.consumers.add(e),
        this.queuedRedirectEvent &&
          this.isEventForConsumer(this.queuedRedirectEvent, e) &&
          (this.sendToConsumer(this.queuedRedirectEvent, e),
          this.saveEventToCache(this.queuedRedirectEvent),
          (this.queuedRedirectEvent = null));
    }
    unregisterConsumer(e) {
      this.consumers.delete(e);
    }
    onEvent(e) {
      if (this.hasEventBeenHandled(e)) return !1;
      let n = !1;
      return (
        this.consumers.forEach((r) => {
          this.isEventForConsumer(e, r) &&
            ((n = !0), this.sendToConsumer(e, r), this.saveEventToCache(e));
        }),
        this.hasHandledPotentialRedirect ||
          !oq(e) ||
          ((this.hasHandledPotentialRedirect = !0),
          n || ((this.queuedRedirectEvent = e), (n = !0))),
        n
      );
    }
    sendToConsumer(e, n) {
      var r;
      if (e.error && !jL(e)) {
        const a =
          ((r = e.error.code) === null || r === void 0
            ? void 0
            : r.split("auth/")[1]) || "internal-error";
        n.onError(lo(this.auth, a));
      } else n.onAuthEvent(e);
    }
    isEventForConsumer(e, n) {
      const r = n.eventId === null || (!!e.eventId && e.eventId === n.eventId);
      return n.filter.includes(e.type) && r;
    }
    hasEventBeenHandled(e) {
      return (
        Date.now() - this.lastProcessedEventTime >= sq &&
          this.cachedEventUids.clear(),
        this.cachedEventUids.has(BA(e))
      );
    }
    saveEventToCache(e) {
      this.cachedEventUids.add(BA(e)),
        (this.lastProcessedEventTime = Date.now());
    }
  }
  function BA(t) {
    return [t.type, t.eventId, t.sessionId, t.tenantId]
      .filter((e) => e)
      .join("-");
  }
  function jL({ type: t, error: e }) {
    return (
      t === "unknown" && (e == null ? void 0 : e.code) === "auth/no-auth-event"
    );
  }
  function oq(t) {
    switch (t.type) {
      case "signInViaRedirect":
      case "linkViaRedirect":
      case "reauthViaRedirect":
        return !0;
      case "unknown":
        return jL(t);
      default:
        return !1;
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ async function lq(t, e = {}) {
    return lc(t, "GET", "/v1/projects", e);
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const cq = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
    uq = /^https?/;
  async function hq(t) {
    if (t.config.emulator) return;
    const { authorizedDomains: e } = await lq(t);
    for (const n of e)
      try {
        if (dq(n)) return;
      } catch {}
    Oa(t, "unauthorized-domain");
  }
  function dq(t) {
    const e = S0(),
      { protocol: n, hostname: r } = new URL(e);
    if (t.startsWith("chrome-extension://")) {
      const u = new URL(t);
      return u.hostname === "" && r === ""
        ? n === "chrome-extension:" &&
            t.replace("chrome-extension://", "") ===
              e.replace("chrome-extension://", "")
        : n === "chrome-extension:" && u.hostname === r;
    }
    if (!uq.test(n)) return !1;
    if (cq.test(t)) return r === t;
    const a = t.replace(/\./g, "\\.");
    return new RegExp("^(.+\\." + a + "|" + a + ")$", "i").test(r);
  }
  /**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const fq = new cp(3e4, 6e4);
  function HA() {
    const t = co().___jsl;
    if (t != null && t.H) {
      for (const e of Object.keys(t.H))
        if (
          ((t.H[e].r = t.H[e].r || []),
          (t.H[e].L = t.H[e].L || []),
          (t.H[e].r = [...t.H[e].L]),
          t.CP)
        )
          for (let n = 0; n < t.CP.length; n++) t.CP[n] = null;
    }
  }
  function pq(t) {
    return new Promise((e, n) => {
      var r, a, o;
      function u() {
        HA(),
          gapi.load("gapi.iframes", {
            callback: () => {
              e(gapi.iframes.getContext());
            },
            ontimeout: () => {
              HA(), n(lo(t, "network-request-failed"));
            },
            timeout: fq.get(),
          });
      }
      if (
        !(
          (a =
            (r = co().gapi) === null || r === void 0 ? void 0 : r.iframes) ===
            null || a === void 0
        ) &&
        a.Iframe
      )
        e(gapi.iframes.getContext());
      else if (!((o = co().gapi) === null || o === void 0) && o.load) u();
      else {
        const g = o8("iframefcb");
        return (
          (co()[g] = () => {
            gapi.load ? u() : n(lo(t, "network-request-failed"));
          }),
          SL(`https://apis.google.com/js/api.js?onload=${g}`).catch((x) => n(x))
        );
      }
    }).catch((e) => {
      throw ((Lg = null), e);
    });
  }
  let Lg = null;
  function gq(t) {
    return (Lg = Lg || pq(t)), Lg;
  }
  /**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const mq = new cp(5e3, 15e3),
    vq = "__/auth/iframe",
    yq = "emulator/auth/iframe",
    xq = {
      style: {
        position: "absolute",
        top: "-100px",
        width: "1px",
        height: "1px",
      },
      "aria-hidden": "true",
      tabindex: "-1",
    },
    bq = new Map([
      ["identitytoolkit.googleapis.com", "p"],
      ["staging-identitytoolkit.sandbox.googleapis.com", "s"],
      ["test-identitytoolkit.sandbox.googleapis.com", "t"],
    ]);
  function wq(t) {
    const e = t.config;
    an(e.authDomain, t, "auth-domain-config-required");
    const n = e.emulator ? y_(e, yq) : `https://${t.config.authDomain}/${vq}`,
      r = { apiKey: e.apiKey, appName: t.name, v: hu },
      a = bq.get(t.config.apiHost);
    a && (r.eid = a);
    const o = t._getFrameworks();
    return o.length && (r.fw = o.join(",")), `${n}?${Uf(r).slice(1)}`;
  }
  async function _q(t) {
    const e = await gq(t),
      n = co().gapi;
    return (
      an(n, t, "internal-error"),
      e.open(
        {
          where: document.body,
          url: wq(t),
          messageHandlersFilter: n.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
          attributes: xq,
          dontclear: !0,
        },
        (r) =>
          new Promise(async (a, o) => {
            await r.restyle({ setHideOnLeave: !1 });
            const u = lo(t, "network-request-failed"),
              g = co().setTimeout(() => {
                o(u);
              }, mq.get());
            function x() {
              co().clearTimeout(g), a(r);
            }
            r.ping(x).then(x, () => {
              o(u);
            });
          })
      )
    );
  }
  /**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Sq = {
      location: "yes",
      resizable: "yes",
      statusbar: "yes",
      toolbar: "no",
    },
    Eq = 500,
    kq = 600,
    Aq = "_blank",
    Cq = "http://localhost";
  class WA {
    constructor(e) {
      (this.window = e), (this.associatedEvent = null);
    }
    close() {
      if (this.window)
        try {
          this.window.close();
        } catch {}
    }
  }
  function Tq(t, e, n, r = Eq, a = kq) {
    const o = Math.max((window.screen.availHeight - a) / 2, 0).toString(),
      u = Math.max((window.screen.availWidth - r) / 2, 0).toString();
    let g = "";
    const x = Object.assign(Object.assign({}, Sq), {
        width: r.toString(),
        height: a.toString(),
        top: o,
        left: u,
      }),
      E = Zi().toLowerCase();
    n && (g = mL(E) ? Aq : n), gL(E) && ((e = e || Cq), (x.scrollbars = "yes"));
    const L = Object.entries(x).reduce((B, [ae, se]) => `${B}${ae}=${se},`, "");
    if (ZG(E) && g !== "_self") return Iq(e || "", g), new WA(null);
    const z = window.open(e || "", g, L);
    an(z, t, "popup-blocked");
    try {
      z.focus();
    } catch {}
    return new WA(z);
  }
  function Iq(t, e) {
    const n = document.createElement("a");
    (n.href = t), (n.target = e);
    const r = document.createEvent("MouseEvent");
    r.initMouseEvent(
      "click",
      !0,
      !0,
      window,
      1,
      0,
      0,
      0,
      0,
      !1,
      !1,
      !1,
      !1,
      1,
      null
    ),
      n.dispatchEvent(r);
  }
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Pq = "__/auth/handler",
    Rq = "emulator/auth/handler",
    Oq = encodeURIComponent("fac");
  async function UA(t, e, n, r, a, o) {
    an(t.config.authDomain, t, "auth-domain-config-required"),
      an(t.config.apiKey, t, "invalid-api-key");
    const u = {
      apiKey: t.config.apiKey,
      appName: t.name,
      authType: n,
      redirectUrl: r,
      v: hu,
      eventId: a,
    };
    if (e instanceof kL) {
      e.setDefaultLanguage(t.languageCode),
        (u.providerId = e.providerId || ""),
        WW(e.getCustomParameters()) ||
          (u.customParameters = JSON.stringify(e.getCustomParameters()));
      for (const [L, z] of Object.entries(o || {})) u[L] = z;
    }
    if (e instanceof up) {
      const L = e.getScopes().filter((z) => z !== "");
      L.length > 0 && (u.scopes = L.join(","));
    }
    t.tenantId && (u.tid = t.tenantId);
    const g = u;
    for (const L of Object.keys(g)) g[L] === void 0 && delete g[L];
    const x = await t._getAppCheckToken(),
      E = x ? `#${Oq}=${encodeURIComponent(x)}` : "";
    return `${Nq(t)}?${Uf(g).slice(1)}${E}`;
  }
  function Nq({ config: t }) {
    return t.emulator ? y_(t, Rq) : `https://${t.authDomain}/${Pq}`;
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const Cx = "webStorageSupport";
  class Lq {
    constructor() {
      (this.eventManagers = {}),
        (this.iframes = {}),
        (this.originValidationPromises = {}),
        (this._redirectPersistence = RL),
        (this._completeRedirectFn = iq),
        (this._overrideRedirectResult = tq);
    }
    async _openPopup(e, n, r, a) {
      var o;
      qo(
        (o = this.eventManagers[e._key()]) === null || o === void 0
          ? void 0
          : o.manager,
        "_initialize() not called before _openPopup()"
      );
      const u = await UA(e, n, r, S0(), a);
      return Tq(e, u, S_());
    }
    async _openRedirect(e, n, r, a) {
      await this._originValidation(e);
      const o = await UA(e, n, r, S0(), a);
      return j8(o), new Promise(() => {});
    }
    _initialize(e) {
      const n = e._key();
      if (this.eventManagers[n]) {
        const { manager: a, promise: o } = this.eventManagers[n];
        return a
          ? Promise.resolve(a)
          : (qo(o, "If manager is not set, promise should be"), o);
      }
      const r = this.initAndGetManager(e);
      return (
        (this.eventManagers[n] = { promise: r }),
        r.catch(() => {
          delete this.eventManagers[n];
        }),
        r
      );
    }
    async initAndGetManager(e) {
      const n = await _q(e),
        r = new aq(e);
      return (
        n.register(
          "authEvent",
          (a) => (
            an(a == null ? void 0 : a.authEvent, e, "invalid-auth-event"),
            { status: r.onEvent(a.authEvent) ? "ACK" : "ERROR" }
          ),
          gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
        ),
        (this.eventManagers[e._key()] = { manager: r }),
        (this.iframes[e._key()] = n),
        r
      );
    }
    _isIframeWebStorageSupported(e, n) {
      this.iframes[e._key()].send(
        Cx,
        { type: Cx },
        (a) => {
          var o;
          const u =
            (o = a == null ? void 0 : a[0]) === null || o === void 0
              ? void 0
              : o[Cx];
          u !== void 0 && n(!!u), Oa(e, "internal-error");
        },
        gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
      );
    }
    _originValidation(e) {
      const n = e._key();
      return (
        this.originValidationPromises[n] ||
          (this.originValidationPromises[n] = hq(e)),
        this.originValidationPromises[n]
      );
    }
    get _shouldInitProactively() {
      return wL() || b_() || ay();
    }
  }
  const Dq = Lq;
  var XA = "@firebase/auth",
    YA = "1.5.1";
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ class Mq {
    constructor(e) {
      (this.auth = e), (this.internalListeners = new Map());
    }
    getUid() {
      var e;
      return (
        this.assertAuthConfigured(),
        ((e = this.auth.currentUser) === null || e === void 0
          ? void 0
          : e.uid) || null
      );
    }
    async getToken(e) {
      return (
        this.assertAuthConfigured(),
        await this.auth._initializationPromise,
        this.auth.currentUser
          ? { accessToken: await this.auth.currentUser.getIdToken(e) }
          : null
      );
    }
    addAuthTokenListener(e) {
      if ((this.assertAuthConfigured(), this.internalListeners.has(e))) return;
      const n = this.auth.onIdTokenChanged((r) => {
        e((r == null ? void 0 : r.stsTokenManager.accessToken) || null);
      });
      this.internalListeners.set(e, n), this.updateProactiveRefresh();
    }
    removeAuthTokenListener(e) {
      this.assertAuthConfigured();
      const n = this.internalListeners.get(e);
      n &&
        (this.internalListeners.delete(e), n(), this.updateProactiveRefresh());
    }
    assertAuthConfigured() {
      an(
        this.auth._initializationPromise,
        "dependent-sdk-initialized-before-auth"
      );
    }
    updateProactiveRefresh() {
      this.internalListeners.size > 0
        ? this.auth._startProactiveRefresh()
        : this.auth._stopProactiveRefresh();
    }
  }
  /**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ function jq(t) {
    switch (t) {
      case "Node":
        return "node";
      case "ReactNative":
        return "rn";
      case "Worker":
        return "webworker";
      case "Cordova":
        return "cordova";
      default:
        return;
    }
  }
  function Fq(t) {
    Gc(
      new Gl(
        "auth",
        (e, { options: n }) => {
          const r = e.getProvider("app").getImmediate(),
            a = e.getProvider("heartbeat"),
            o = e.getProvider("app-check-internal"),
            { apiKey: u, authDomain: g } = r.options;
          an(u && !u.includes(":"), "invalid-api-key", { appName: r.name });
          const x = {
              apiKey: u,
              authDomain: g,
              clientPlatform: t,
              apiHost: "identitytoolkit.googleapis.com",
              tokenApiHost: "securetoken.googleapis.com",
              apiScheme: "https",
              sdkClientVersion: _L(t),
            },
            E = new s8(r, a, o, x);
          return f8(E, n), E;
        },
        "PUBLIC"
      )
        .setInstantiationMode("EXPLICIT")
        .setInstanceCreatedCallback((e, n, r) => {
          e.getProvider("auth-internal").initialize();
        })
    ),
      Gc(
        new Gl(
          "auth-internal",
          (e) => {
            const n = Vh(e.getProvider("auth").getImmediate());
            return ((r) => new Mq(r))(n);
          },
          "PRIVATE"
        ).setInstantiationMode("EXPLICIT")
      ),
      so(XA, YA, jq(t)),
      so(XA, YA, "esm2017");
  }
  /**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */ const zq = 5 * 60,
    Vq = uR("authIdTokenMaxAge") || zq;
  let GA = null;
  const $q = (t) => async (e) => {
    const n = e && (await e.getIdTokenResult()),
      r = n && (new Date().getTime() - Date.parse(n.issuedAtTime)) / 1e3;
    if (r && r > Vq) return;
    const a = n == null ? void 0 : n.token;
    GA !== a &&
      ((GA = a),
      await fetch(t, {
        method: a ? "POST" : "DELETE",
        headers: a ? { Authorization: `Bearer ${a}` } : {},
      }));
  };
  function Bq(t = t1()) {
    const e = kv(t, "auth");
    if (e.isInitialized()) return e.getImmediate();
    const n = d8(t, { popupRedirectResolver: Dq, persistence: [X8, L8, RL] }),
      r = uR("authTokenSyncURL");
    if (r) {
      const o = $q(r);
      P8(n, o, () => o(n.currentUser)), I8(n, (u) => o(u));
    }
    const a = oR("auth");
    return a && p8(n, `http://${a}`), n;
  }
  Fq("Browser");
  function Hq() {
    const [t, e] = ue.useState(""),
      [n, r] = ue.useState(""),
      a = rc(),
      o = async () => {
        try {
          const u = Bq(Hs);
          await T8(u, t, n),
            console.log("Login successful!"),
            localStorage.setItem("isLoggedIn", "true"),
            a("/admin/dashboard");
        } catch (u) {
          console.error("Login failed:", u.message);
        }
      };
    return (
      ue.useEffect(() => {
        if (localStorage.getItem("isLoggedIn")) {
          console.log("loggedin exists"), a("/admin/dashboard");
          return;
        }
      }, []),
      P.jsx("div", {
        className:
          "position-relative overflow-hidden radial-gradient min-vh-100 d-flex align-items-center justify-content-center",
        children: P.jsx("div", {
          className: "d-flex align-items-center justify-content-center w-100",
          children: P.jsx("div", {
            className: "row justify-content-center w-100",
            children: P.jsx("div", {
              className: "col-md-8 col-lg-6 col-xxl-3",
              children: P.jsx("div", {
                className: "card mb-0",
                children: P.jsxs("div", {
                  className: "card-body",
                  children: [
                    P.jsxs("div", {
                      className: "d-flex justify-content-center",
                      style: { marginBottom: "10px" },
                      children: [
                        P.jsx("img", {
                          src: "https://firebasestorage.googleapis.com/v0/b/chefguard-5ca00.appspot.com/o/images%2Flogo.png?alt=media&token=e0d2877a-2920-4c6b-84f3-4ec89219885b",
                          width: "50",
                          alt: "",
                        }),
                        P.jsx("h2", {
                          className: "",
                          style: {
                            marginBottom: "0",
                            marginTop: "4px",
                            fontWeight: "600",
                            color: "#135b21",
                          },
                          children: "CHEFGUARD",
                        }),
                      ],
                    }),
                    P.jsxs("div", {
                      className: "mb-3",
                      children: [
                        P.jsx("span", {
                          className: "importantStar",
                          children: "* ",
                        }),
                        P.jsx("label", {
                          htmlFor: "exampleInputEmail1",
                          className: "form-label",
                          children: "Username / Email",
                        }),
                        P.jsx("input", {
                          type: "email",
                          className: "form-control",
                          id: "exampleInputEmail1",
                          "aria-describedby": "emailHelp",
                          value: t,
                          onChange: (u) => e(u.target.value),
                        }),
                      ],
                    }),
                    P.jsxs("div", {
                      className: "mb-4",
                      children: [
                        P.jsx("span", {
                          className: "importantStar",
                          children: "* ",
                        }),
                        P.jsx("label", {
                          htmlFor: "exampleInputPassword1",
                          className: "form-label",
                          children: "Password",
                        }),
                        P.jsx("input", {
                          type: "password",
                          className: "form-control",
                          id: "exampleInputPassword1",
                          value: n,
                          onChange: (u) => r(u.target.value),
                        }),
                      ],
                    }),
                    P.jsxs("div", {
                      className:
                        "d-flex align-items-center justify-content-between mb-4",
                      children: [
                        P.jsxs("div", {
                          className: "form-check",
                          children: [
                            P.jsx("input", {
                              className: "form-check-input primary",
                              type: "checkbox",
                              value: "",
                              id: "flexCheckChecked",
                            }),
                            P.jsx("label", {
                              className: "form-check-label text-dark",
                              htmlFor: "flexCheckChecked",
                              children: "Remeber this Device",
                            }),
                          ],
                        }),
                        P.jsx("a", {
                          className: "text-primary fw-bold",
                          href: "./index.html",
                          children: "Forgot Password ?",
                        }),
                      ],
                    }),
                    P.jsx("button", {
                      type: "button",
                      className:
                        "btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2",
                      onClick: o,
                      children: "Sign In",
                    }),
                  ],
                }),
              }),
            }),
          }),
        }),
      })
    );
  }
  function Wq() {
    return (
      ue.useState(0),
      P.jsx(P.Fragment, {
        children: P.jsxs(vI, {
          children: [
            P.jsx(Io, {
              path: "/",
              element: P.jsx(Vj, { to: "/admin/dashboard", replace: !0 }),
            }),
            P.jsx(Io, { path: "/admin/*", element: P.jsx(TG, {}) }),
            P.jsx(Io, { path: "/login", element: P.jsx(Hq, {}) }),
          ],
        }),
      })
    );
  }
  Tx.createRoot(document.getElementById("root")).render(
    P.jsx(Yj, { children: P.jsx(Wq, {}) })
  );
  /*! jQuery v3.4.0 | (c) JS Foundation and other contributors | jquery.org/license */ (function (
    t,
    e
  ) {
    typeof Qr == "object" && typeof Qr.exports == "object"
      ? (Qr.exports = t.document
          ? e(t, !0)
          : function (n) {
              if (!n.document)
                throw new Error("jQuery requires a window with a document");
              return e(n);
            })
      : e(t);
  })(typeof window < "u" ? window : void 0, function (t, e) {
    var n = [],
      r = t.document,
      a = Object.getPrototypeOf,
      o = n.slice,
      u = n.concat,
      g = n.push,
      x = n.indexOf,
      E = {},
      L = E.toString,
      z = E.hasOwnProperty,
      B = z.toString,
      ae = B.call(Object),
      se = {},
      le = function (y) {
        return typeof y == "function" && typeof y.nodeType != "number";
      },
      he = function (y) {
        return y != null && y === y.window;
      },
      oe = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function F(y, A, R) {
      var M,
        Y,
        J = (R = R || r).createElement("script");
      if (((J.text = y), A))
        for (M in oe)
          (Y = A[M] || (A.getAttribute && A.getAttribute(M))) &&
            J.setAttribute(M, Y);
      R.head.appendChild(J).parentNode.removeChild(J);
    }
    function ce(y) {
      return y == null
        ? y + ""
        : typeof y == "object" || typeof y == "function"
        ? E[L.call(y)] || "object"
        : typeof y;
    }
    var ye = "3.4.0",
      C = function (y, A) {
        return new C.fn.init(y, A);
      },
      ke = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    function je(y) {
      var A = !!y && "length" in y && y.length,
        R = ce(y);
      return (
        !le(y) &&
        !he(y) &&
        (R === "array" ||
          A === 0 ||
          (typeof A == "number" && 0 < A && A - 1 in y))
      );
    }
    (C.fn = C.prototype =
      {
        jquery: ye,
        constructor: C,
        length: 0,
        toArray: function () {
          return o.call(this);
        },
        get: function (y) {
          return y == null
            ? o.call(this)
            : y < 0
            ? this[y + this.length]
            : this[y];
        },
        pushStack: function (y) {
          var A = C.merge(this.constructor(), y);
          return (A.prevObject = this), A;
        },
        each: function (y) {
          return C.each(this, y);
        },
        map: function (y) {
          return this.pushStack(
            C.map(this, function (A, R) {
              return y.call(A, R, A);
            })
          );
        },
        slice: function () {
          return this.pushStack(o.apply(this, arguments));
        },
        first: function () {
          return this.eq(0);
        },
        last: function () {
          return this.eq(-1);
        },
        eq: function (y) {
          var A = this.length,
            R = +y + (y < 0 ? A : 0);
          return this.pushStack(0 <= R && R < A ? [this[R]] : []);
        },
        end: function () {
          return this.prevObject || this.constructor();
        },
        push: g,
        sort: n.sort,
        splice: n.splice,
      }),
      (C.extend = C.fn.extend =
        function () {
          var y,
            A,
            R,
            M,
            Y,
            J,
            re = arguments[0] || {},
            pe = 1,
            be = arguments.length,
            Ee = !1;
          for (
            typeof re == "boolean" &&
              ((Ee = re), (re = arguments[pe] || {}), pe++),
              typeof re == "object" || le(re) || (re = {}),
              pe === be && ((re = this), pe--);
            pe < be;
            pe++
          )
            if ((y = arguments[pe]) != null)
              for (A in y)
                (M = y[A]),
                  A !== "__proto__" &&
                    re !== M &&
                    (Ee && M && (C.isPlainObject(M) || (Y = Array.isArray(M)))
                      ? ((R = re[A]),
                        (J =
                          Y && !Array.isArray(R)
                            ? []
                            : Y || C.isPlainObject(R)
                            ? R
                            : {}),
                        (Y = !1),
                        (re[A] = C.extend(Ee, J, M)))
                      : M !== void 0 && (re[A] = M));
          return re;
        }),
      C.extend({
        expando: "jQuery" + (ye + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function (y) {
          throw new Error(y);
        },
        noop: function () {},
        isPlainObject: function (y) {
          var A, R;
          return (
            !(!y || L.call(y) !== "[object Object]") &&
            (!(A = a(y)) ||
              (typeof (R = z.call(A, "constructor") && A.constructor) ==
                "function" &&
                B.call(R) === ae))
          );
        },
        isEmptyObject: function (y) {
          var A;
          for (A in y) return !1;
          return !0;
        },
        globalEval: function (y, A) {
          F(y, { nonce: A && A.nonce });
        },
        each: function (y, A) {
          var R,
            M = 0;
          if (je(y))
            for (R = y.length; M < R && A.call(y[M], M, y[M]) !== !1; M++);
          else for (M in y) if (A.call(y[M], M, y[M]) === !1) break;
          return y;
        },
        trim: function (y) {
          return y == null ? "" : (y + "").replace(ke, "");
        },
        makeArray: function (y, A) {
          var R = A || [];
          return (
            y != null &&
              (je(Object(y))
                ? C.merge(R, typeof y == "string" ? [y] : y)
                : g.call(R, y)),
            R
          );
        },
        inArray: function (y, A, R) {
          return A == null ? -1 : x.call(A, y, R);
        },
        merge: function (y, A) {
          for (var R = +A.length, M = 0, Y = y.length; M < R; M++)
            y[Y++] = A[M];
          return (y.length = Y), y;
        },
        grep: function (y, A, R) {
          for (var M = [], Y = 0, J = y.length, re = !R; Y < J; Y++)
            !A(y[Y], Y) !== re && M.push(y[Y]);
          return M;
        },
        map: function (y, A, R) {
          var M,
            Y,
            J = 0,
            re = [];
          if (je(y))
            for (M = y.length; J < M; J++)
              (Y = A(y[J], J, R)) != null && re.push(Y);
          else for (J in y) (Y = A(y[J], J, R)) != null && re.push(Y);
          return u.apply([], re);
        },
        guid: 1,
        support: se,
      }),
      typeof Symbol == "function" &&
        (C.fn[Symbol.iterator] = n[Symbol.iterator]),
      C.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " "
        ),
        function (y, A) {
          E["[object " + A + "]"] = A.toLowerCase();
        }
      );
    var tt = (function (y) {
      var A,
        R,
        M,
        Y,
        J,
        re,
        pe,
        be,
        Ee,
        Ve,
        Ke,
        De,
        Me,
        Et,
        jt,
        Tt,
        tr,
        vr,
        hi,
        Dn = "sizzle" + 1 * new Date(),
        Gt = y.document,
        Jr = 0,
        xn = 0,
        rr = bo(),
        vo = bo(),
        da = bo(),
        Ei = bo(),
        di = function (ie, me) {
          return ie === me && (Ke = !0), 0;
        },
        fa = {}.hasOwnProperty,
        ei = [],
        Zs = ei.pop,
        zi = ei.push,
        ir = ei.push,
        Er = ei.slice,
        ti = function (ie, me) {
          for (var Se = 0, Be = ie.length; Se < Be; Se++)
            if (ie[Se] === me) return Se;
          return -1;
        },
        Vi =
          "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        rn = "[\\x20\\t\\r\\n\\f]",
        _n = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
        yr =
          "\\[" +
          rn +
          "*(" +
          _n +
          ")(?:" +
          rn +
          "*([*^$|!~]?=)" +
          rn +
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` +
          _n +
          "))|)" +
          rn +
          "*\\]",
        ni =
          ":(" +
          _n +
          `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` +
          yr +
          ")*)|.*)\\)|)",
        xr = new RegExp(rn + "+", "g"),
        ki = new RegExp(
          "^" + rn + "+|((?:^|[^\\\\])(?:\\\\.)*)" + rn + "+$",
          "g"
        ),
        fi = new RegExp("^" + rn + "*," + rn + "*"),
        Va = new RegExp("^" + rn + "*([>+~]|" + rn + ")" + rn + "*"),
        Bh = new RegExp(rn + "|>"),
        Hh = new RegExp(ni),
        Wh = new RegExp("^" + _n + "$"),
        yo = {
          ID: new RegExp("^#(" + _n + ")"),
          CLASS: new RegExp("^\\.(" + _n + ")"),
          TAG: new RegExp("^(" + _n + "|[*])"),
          ATTR: new RegExp("^" + yr),
          PSEUDO: new RegExp("^" + ni),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
              rn +
              "*(even|odd|(([+-]|)(\\d*)n|)" +
              rn +
              "*(?:([+-]|)" +
              rn +
              "*(\\d+)|))" +
              rn +
              "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + Vi + ")$", "i"),
          needsContext: new RegExp(
            "^" +
              rn +
              "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
              rn +
              "*((?:-\\d)?\\d*)" +
              rn +
              "*\\)|)(?=[^-]|$)",
            "i"
          ),
        },
        Uh = /HTML$/i,
        il = /^(?:input|select|textarea|button)$/i,
        vu = /^h\d$/i,
        pa = /^[^{]+\{\s*\[native \w/,
        yu = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        ga = /[+~]/,
        Ai = new RegExp("\\\\([\\da-f]{1,6}" + rn + "?|(" + rn + ")|.)", "ig"),
        $i = function (ie, me, Se) {
          var Be = "0x" + me - 65536;
          return Be != Be || Se
            ? me
            : Be < 0
            ? String.fromCharCode(Be + 65536)
            : String.fromCharCode((Be >> 10) | 55296, (1023 & Be) | 56320);
        },
        xo = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
        $a = function (ie, me) {
          return me
            ? ie === "\0"
              ? "�"
              : ie.slice(0, -1) +
                "\\" +
                ie.charCodeAt(ie.length - 1).toString(16) +
                " "
            : "\\" + ie;
        },
        ss = function () {
          De();
        },
        Ba = So(
          function (ie) {
            return (
              ie.disabled === !0 && ie.nodeName.toLowerCase() === "fieldset"
            );
          },
          { dir: "parentNode", next: "legend" }
        );
      try {
        ir.apply((ei = Er.call(Gt.childNodes)), Gt.childNodes),
          ei[Gt.childNodes.length].nodeType;
      } catch {
        ir = {
          apply: ei.length
            ? function (me, Se) {
                zi.apply(me, Er.call(Se));
              }
            : function (me, Se) {
                for (var Be = me.length, Ce = 0; (me[Be++] = Se[Ce++]); );
                me.length = Be - 1;
              },
        };
      }
      function $n(ie, me, Se, Be) {
        var Ce,
          et,
          nt,
          mt,
          _t,
          Xt,
          W,
          w = me && me.ownerDocument,
          j = me ? me.nodeType : 9;
        if (
          ((Se = Se || []),
          typeof ie != "string" || !ie || (j !== 1 && j !== 9 && j !== 11))
        )
          return Se;
        if (
          !Be &&
          ((me ? me.ownerDocument || me : Gt) !== Me && De(me),
          (me = me || Me),
          jt)
        ) {
          if (j !== 11 && (_t = yu.exec(ie)))
            if ((Ce = _t[1])) {
              if (j === 9) {
                if (!(nt = me.getElementById(Ce))) return Se;
                if (nt.id === Ce) return Se.push(nt), Se;
              } else if (
                w &&
                (nt = w.getElementById(Ce)) &&
                hi(me, nt) &&
                nt.id === Ce
              )
                return Se.push(nt), Se;
            } else {
              if (_t[2]) return ir.apply(Se, me.getElementsByTagName(ie)), Se;
              if (
                (Ce = _t[3]) &&
                R.getElementsByClassName &&
                me.getElementsByClassName
              )
                return ir.apply(Se, me.getElementsByClassName(Ce)), Se;
            }
          if (
            R.qsa &&
            !Ei[ie + " "] &&
            (!Tt || !Tt.test(ie)) &&
            (j !== 1 || me.nodeName.toLowerCase() !== "object")
          ) {
            if (((W = ie), (w = me), j === 1 && Bh.test(ie))) {
              for (
                (mt = me.getAttribute("id"))
                  ? (mt = mt.replace(xo, $a))
                  : me.setAttribute("id", (mt = Dn)),
                  et = (Xt = re(ie)).length;
                et--;

              )
                Xt[et] = "#" + mt + " " + sl(Xt[et]);
              (W = Xt.join(",")),
                (w = (ga.test(ie) && pc(me.parentNode)) || me);
            }
            try {
              return ir.apply(Se, w.querySelectorAll(W)), Se;
            } catch {
              Ei(ie, !0);
            } finally {
              mt === Dn && me.removeAttribute("id");
            }
          }
        }
        return be(ie.replace(ki, "$1"), me, Se, Be);
      }
      function bo() {
        var ie = [];
        return function me(Se, Be) {
          return (
            ie.push(Se + " ") > M.cacheLength && delete me[ie.shift()],
            (me[Se + " "] = Be)
          );
        };
      }
      function Fr(ie) {
        return (ie[Dn] = !0), ie;
      }
      function bs(ie) {
        var me = Me.createElement("fieldset");
        try {
          return !!ie(me);
        } catch {
          return !1;
        } finally {
          me.parentNode && me.parentNode.removeChild(me), (me = null);
        }
      }
      function dc(ie, me) {
        for (var Se = ie.split("|"), Be = Se.length; Be--; )
          M.attrHandle[Se[Be]] = me;
      }
      function wo(ie, me) {
        var Se = me && ie,
          Be =
            Se &&
            ie.nodeType === 1 &&
            me.nodeType === 1 &&
            ie.sourceIndex - me.sourceIndex;
        if (Be) return Be;
        if (Se) {
          for (; (Se = Se.nextSibling); ) if (Se === me) return -1;
        }
        return ie ? 1 : -1;
      }
      function xu(ie) {
        return function (me) {
          return me.nodeName.toLowerCase() === "input" && me.type === ie;
        };
      }
      function _o(ie) {
        return function (me) {
          var Se = me.nodeName.toLowerCase();
          return (Se === "input" || Se === "button") && me.type === ie;
        };
      }
      function fc(ie) {
        return function (me) {
          return "form" in me
            ? me.parentNode && me.disabled === !1
              ? "label" in me
                ? "label" in me.parentNode
                  ? me.parentNode.disabled === ie
                  : me.disabled === ie
                : me.isDisabled === ie ||
                  (me.isDisabled !== !ie && Ba(me) === ie)
              : me.disabled === ie
            : "label" in me && me.disabled === ie;
        };
      }
      function ma(ie) {
        return Fr(function (me) {
          return (
            (me = +me),
            Fr(function (Se, Be) {
              for (var Ce, et = ie([], Se.length, me), nt = et.length; nt--; )
                Se[(Ce = et[nt])] && (Se[Ce] = !(Be[Ce] = Se[Ce]));
            })
          );
        });
      }
      function pc(ie) {
        return ie && typeof ie.getElementsByTagName < "u" && ie;
      }
      for (A in ((R = $n.support = {}),
      (J = $n.isXML =
        function (ie) {
          var me = ie.namespaceURI,
            Se = (ie.ownerDocument || ie).documentElement;
          return !Uh.test(me || (Se && Se.nodeName) || "HTML");
        }),
      (De = $n.setDocument =
        function (ie) {
          var me,
            Se,
            Be = ie ? ie.ownerDocument || ie : Gt;
          return (
            Be !== Me &&
              Be.nodeType === 9 &&
              Be.documentElement &&
              ((Et = (Me = Be).documentElement),
              (jt = !J(Me)),
              Gt !== Me &&
                (Se = Me.defaultView) &&
                Se.top !== Se &&
                (Se.addEventListener
                  ? Se.addEventListener("unload", ss, !1)
                  : Se.attachEvent && Se.attachEvent("onunload", ss)),
              (R.attributes = bs(function (Ce) {
                return (Ce.className = "i"), !Ce.getAttribute("className");
              })),
              (R.getElementsByTagName = bs(function (Ce) {
                return (
                  Ce.appendChild(Me.createComment("")),
                  !Ce.getElementsByTagName("*").length
                );
              })),
              (R.getElementsByClassName = pa.test(Me.getElementsByClassName)),
              (R.getById = bs(function (Ce) {
                return (
                  (Et.appendChild(Ce).id = Dn),
                  !Me.getElementsByName || !Me.getElementsByName(Dn).length
                );
              })),
              R.getById
                ? ((M.filter.ID = function (Ce) {
                    var et = Ce.replace(Ai, $i);
                    return function (nt) {
                      return nt.getAttribute("id") === et;
                    };
                  }),
                  (M.find.ID = function (Ce, et) {
                    if (typeof et.getElementById < "u" && jt) {
                      var nt = et.getElementById(Ce);
                      return nt ? [nt] : [];
                    }
                  }))
                : ((M.filter.ID = function (Ce) {
                    var et = Ce.replace(Ai, $i);
                    return function (nt) {
                      var mt =
                        typeof nt.getAttributeNode < "u" &&
                        nt.getAttributeNode("id");
                      return mt && mt.value === et;
                    };
                  }),
                  (M.find.ID = function (Ce, et) {
                    if (typeof et.getElementById < "u" && jt) {
                      var nt,
                        mt,
                        _t,
                        Xt = et.getElementById(Ce);
                      if (Xt) {
                        if ((nt = Xt.getAttributeNode("id")) && nt.value === Ce)
                          return [Xt];
                        for (
                          _t = et.getElementsByName(Ce), mt = 0;
                          (Xt = _t[mt++]);

                        )
                          if (
                            (nt = Xt.getAttributeNode("id")) &&
                            nt.value === Ce
                          )
                            return [Xt];
                      }
                      return [];
                    }
                  })),
              (M.find.TAG = R.getElementsByTagName
                ? function (Ce, et) {
                    return typeof et.getElementsByTagName < "u"
                      ? et.getElementsByTagName(Ce)
                      : R.qsa
                      ? et.querySelectorAll(Ce)
                      : void 0;
                  }
                : function (Ce, et) {
                    var nt,
                      mt = [],
                      _t = 0,
                      Xt = et.getElementsByTagName(Ce);
                    if (Ce === "*") {
                      for (; (nt = Xt[_t++]); )
                        nt.nodeType === 1 && mt.push(nt);
                      return mt;
                    }
                    return Xt;
                  }),
              (M.find.CLASS =
                R.getElementsByClassName &&
                function (Ce, et) {
                  if (typeof et.getElementsByClassName < "u" && jt)
                    return et.getElementsByClassName(Ce);
                }),
              (tr = []),
              (Tt = []),
              (R.qsa = pa.test(Me.querySelectorAll)) &&
                (bs(function (Ce) {
                  (Et.appendChild(Ce).innerHTML =
                    "<a id='" +
                    Dn +
                    "'></a><select id='" +
                    Dn +
                    "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                    Ce.querySelectorAll("[msallowcapture^='']").length &&
                      Tt.push("[*^$]=" + rn + `*(?:''|"")`),
                    Ce.querySelectorAll("[selected]").length ||
                      Tt.push("\\[" + rn + "*(?:value|" + Vi + ")"),
                    Ce.querySelectorAll("[id~=" + Dn + "-]").length ||
                      Tt.push("~="),
                    Ce.querySelectorAll(":checked").length ||
                      Tt.push(":checked"),
                    Ce.querySelectorAll("a#" + Dn + "+*").length ||
                      Tt.push(".#.+[+~]");
                }),
                bs(function (Ce) {
                  Ce.innerHTML =
                    "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                  var et = Me.createElement("input");
                  et.setAttribute("type", "hidden"),
                    Ce.appendChild(et).setAttribute("name", "D"),
                    Ce.querySelectorAll("[name=d]").length &&
                      Tt.push("name" + rn + "*[*^$|!~]?="),
                    Ce.querySelectorAll(":enabled").length !== 2 &&
                      Tt.push(":enabled", ":disabled"),
                    (Et.appendChild(Ce).disabled = !0),
                    Ce.querySelectorAll(":disabled").length !== 2 &&
                      Tt.push(":enabled", ":disabled"),
                    Ce.querySelectorAll("*,:x"),
                    Tt.push(",.*:");
                })),
              (R.matchesSelector = pa.test(
                (vr =
                  Et.matches ||
                  Et.webkitMatchesSelector ||
                  Et.mozMatchesSelector ||
                  Et.oMatchesSelector ||
                  Et.msMatchesSelector)
              )) &&
                bs(function (Ce) {
                  (R.disconnectedMatch = vr.call(Ce, "*")),
                    vr.call(Ce, "[s!='']:x"),
                    tr.push("!=", ni);
                }),
              (Tt = Tt.length && new RegExp(Tt.join("|"))),
              (tr = tr.length && new RegExp(tr.join("|"))),
              (me = pa.test(Et.compareDocumentPosition)),
              (hi =
                me || pa.test(Et.contains)
                  ? function (Ce, et) {
                      var nt = Ce.nodeType === 9 ? Ce.documentElement : Ce,
                        mt = et && et.parentNode;
                      return (
                        Ce === mt ||
                        !(
                          !mt ||
                          mt.nodeType !== 1 ||
                          !(nt.contains
                            ? nt.contains(mt)
                            : Ce.compareDocumentPosition &&
                              16 & Ce.compareDocumentPosition(mt))
                        )
                      );
                    }
                  : function (Ce, et) {
                      if (et) {
                        for (; (et = et.parentNode); ) if (et === Ce) return !0;
                      }
                      return !1;
                    }),
              (di = me
                ? function (Ce, et) {
                    if (Ce === et) return (Ke = !0), 0;
                    var nt =
                      !Ce.compareDocumentPosition - !et.compareDocumentPosition;
                    return (
                      nt ||
                      (1 &
                        (nt =
                          (Ce.ownerDocument || Ce) === (et.ownerDocument || et)
                            ? Ce.compareDocumentPosition(et)
                            : 1) ||
                      (!R.sortDetached && et.compareDocumentPosition(Ce) === nt)
                        ? Ce === Me || (Ce.ownerDocument === Gt && hi(Gt, Ce))
                          ? -1
                          : et === Me || (et.ownerDocument === Gt && hi(Gt, et))
                          ? 1
                          : Ve
                          ? ti(Ve, Ce) - ti(Ve, et)
                          : 0
                        : 4 & nt
                        ? -1
                        : 1)
                    );
                  }
                : function (Ce, et) {
                    if (Ce === et) return (Ke = !0), 0;
                    var nt,
                      mt = 0,
                      _t = Ce.parentNode,
                      Xt = et.parentNode,
                      W = [Ce],
                      w = [et];
                    if (!_t || !Xt)
                      return Ce === Me
                        ? -1
                        : et === Me
                        ? 1
                        : _t
                        ? -1
                        : Xt
                        ? 1
                        : Ve
                        ? ti(Ve, Ce) - ti(Ve, et)
                        : 0;
                    if (_t === Xt) return wo(Ce, et);
                    for (nt = Ce; (nt = nt.parentNode); ) W.unshift(nt);
                    for (nt = et; (nt = nt.parentNode); ) w.unshift(nt);
                    for (; W[mt] === w[mt]; ) mt++;
                    return mt
                      ? wo(W[mt], w[mt])
                      : W[mt] === Gt
                      ? -1
                      : w[mt] === Gt
                      ? 1
                      : 0;
                  })),
            Me
          );
        }),
      ($n.matches = function (ie, me) {
        return $n(ie, null, null, me);
      }),
      ($n.matchesSelector = function (ie, me) {
        if (
          ((ie.ownerDocument || ie) !== Me && De(ie),
          R.matchesSelector &&
            jt &&
            !Ei[me + " "] &&
            (!tr || !tr.test(me)) &&
            (!Tt || !Tt.test(me)))
        )
          try {
            var Se = vr.call(ie, me);
            if (
              Se ||
              R.disconnectedMatch ||
              (ie.document && ie.document.nodeType !== 11)
            )
              return Se;
          } catch {
            Ei(me, !0);
          }
        return 0 < $n(me, Me, null, [ie]).length;
      }),
      ($n.contains = function (ie, me) {
        return (ie.ownerDocument || ie) !== Me && De(ie), hi(ie, me);
      }),
      ($n.attr = function (ie, me) {
        (ie.ownerDocument || ie) !== Me && De(ie);
        var Se = M.attrHandle[me.toLowerCase()],
          Be =
            Se && fa.call(M.attrHandle, me.toLowerCase())
              ? Se(ie, me, !jt)
              : void 0;
        return Be !== void 0
          ? Be
          : R.attributes || !jt
          ? ie.getAttribute(me)
          : (Be = ie.getAttributeNode(me)) && Be.specified
          ? Be.value
          : null;
      }),
      ($n.escape = function (ie) {
        return (ie + "").replace(xo, $a);
      }),
      ($n.error = function (ie) {
        throw new Error("Syntax error, unrecognized expression: " + ie);
      }),
      ($n.uniqueSort = function (ie) {
        var me,
          Se = [],
          Be = 0,
          Ce = 0;
        if (
          ((Ke = !R.detectDuplicates),
          (Ve = !R.sortStable && ie.slice(0)),
          ie.sort(di),
          Ke)
        ) {
          for (; (me = ie[Ce++]); ) me === ie[Ce] && (Be = Se.push(Ce));
          for (; Be--; ) ie.splice(Se[Be], 1);
        }
        return (Ve = null), ie;
      }),
      (Y = $n.getText =
        function (ie) {
          var me,
            Se = "",
            Be = 0,
            Ce = ie.nodeType;
          if (Ce) {
            if (Ce === 1 || Ce === 9 || Ce === 11) {
              if (typeof ie.textContent == "string") return ie.textContent;
              for (ie = ie.firstChild; ie; ie = ie.nextSibling) Se += Y(ie);
            } else if (Ce === 3 || Ce === 4) return ie.nodeValue;
          } else for (; (me = ie[Be++]); ) Se += Y(me);
          return Se;
        }),
      ((M = $n.selectors =
        {
          cacheLength: 50,
          createPseudo: Fr,
          match: yo,
          attrHandle: {},
          find: {},
          relative: {
            ">": { dir: "parentNode", first: !0 },
            " ": { dir: "parentNode" },
            "+": { dir: "previousSibling", first: !0 },
            "~": { dir: "previousSibling" },
          },
          preFilter: {
            ATTR: function (ie) {
              return (
                (ie[1] = ie[1].replace(Ai, $i)),
                (ie[3] = (ie[3] || ie[4] || ie[5] || "").replace(Ai, $i)),
                ie[2] === "~=" && (ie[3] = " " + ie[3] + " "),
                ie.slice(0, 4)
              );
            },
            CHILD: function (ie) {
              return (
                (ie[1] = ie[1].toLowerCase()),
                ie[1].slice(0, 3) === "nth"
                  ? (ie[3] || $n.error(ie[0]),
                    (ie[4] = +(ie[4]
                      ? ie[5] + (ie[6] || 1)
                      : 2 * (ie[3] === "even" || ie[3] === "odd"))),
                    (ie[5] = +(ie[7] + ie[8] || ie[3] === "odd")))
                  : ie[3] && $n.error(ie[0]),
                ie
              );
            },
            PSEUDO: function (ie) {
              var me,
                Se = !ie[6] && ie[2];
              return yo.CHILD.test(ie[0])
                ? null
                : (ie[3]
                    ? (ie[2] = ie[4] || ie[5] || "")
                    : Se &&
                      Hh.test(Se) &&
                      (me = re(Se, !0)) &&
                      (me = Se.indexOf(")", Se.length - me) - Se.length) &&
                      ((ie[0] = ie[0].slice(0, me)), (ie[2] = Se.slice(0, me))),
                  ie.slice(0, 3));
            },
          },
          filter: {
            TAG: function (ie) {
              var me = ie.replace(Ai, $i).toLowerCase();
              return ie === "*"
                ? function () {
                    return !0;
                  }
                : function (Se) {
                    return Se.nodeName && Se.nodeName.toLowerCase() === me;
                  };
            },
            CLASS: function (ie) {
              var me = rr[ie + " "];
              return (
                me ||
                ((me = new RegExp("(^|" + rn + ")" + ie + "(" + rn + "|$)")) &&
                  rr(ie, function (Se) {
                    return me.test(
                      (typeof Se.className == "string" && Se.className) ||
                        (typeof Se.getAttribute < "u" &&
                          Se.getAttribute("class")) ||
                        ""
                    );
                  }))
              );
            },
            ATTR: function (ie, me, Se) {
              return function (Be) {
                var Ce = $n.attr(Be, ie);
                return Ce == null
                  ? me === "!="
                  : !me ||
                      ((Ce += ""),
                      me === "="
                        ? Ce === Se
                        : me === "!="
                        ? Ce !== Se
                        : me === "^="
                        ? Se && Ce.indexOf(Se) === 0
                        : me === "*="
                        ? Se && -1 < Ce.indexOf(Se)
                        : me === "$="
                        ? Se && Ce.slice(-Se.length) === Se
                        : me === "~="
                        ? -1 < (" " + Ce.replace(xr, " ") + " ").indexOf(Se)
                        : me === "|=" &&
                          (Ce === Se ||
                            Ce.slice(0, Se.length + 1) === Se + "-"));
              };
            },
            CHILD: function (ie, me, Se, Be, Ce) {
              var et = ie.slice(0, 3) !== "nth",
                nt = ie.slice(-4) !== "last",
                mt = me === "of-type";
              return Be === 1 && Ce === 0
                ? function (_t) {
                    return !!_t.parentNode;
                  }
                : function (_t, Xt, W) {
                    var w,
                      j,
                      ne,
                      ve,
                      _e,
                      Le,
                      Ue = et !== nt ? "nextSibling" : "previousSibling",
                      Qe = _t.parentNode,
                      bt = mt && _t.nodeName.toLowerCase(),
                      ft = !W && !mt,
                      ot = !1;
                    if (Qe) {
                      if (et) {
                        for (; Ue; ) {
                          for (ve = _t; (ve = ve[Ue]); )
                            if (
                              mt
                                ? ve.nodeName.toLowerCase() === bt
                                : ve.nodeType === 1
                            )
                              return !1;
                          Le = Ue = ie === "only" && !Le && "nextSibling";
                        }
                        return !0;
                      }
                      if (
                        ((Le = [nt ? Qe.firstChild : Qe.lastChild]), nt && ft)
                      ) {
                        for (
                          ot =
                            (_e =
                              (w =
                                (j =
                                  (ne = (ve = Qe)[Dn] || (ve[Dn] = {}))[
                                    ve.uniqueID
                                  ] || (ne[ve.uniqueID] = {}))[ie] || [])[0] ===
                                Jr && w[1]) && w[2],
                            ve = _e && Qe.childNodes[_e];
                          (ve =
                            (++_e && ve && ve[Ue]) ||
                            (ot = _e = 0) ||
                            Le.pop());

                        )
                          if (ve.nodeType === 1 && ++ot && ve === _t) {
                            j[ie] = [Jr, _e, ot];
                            break;
                          }
                      } else if (
                        (ft &&
                          (ot = _e =
                            (w =
                              (j =
                                (ne = (ve = _t)[Dn] || (ve[Dn] = {}))[
                                  ve.uniqueID
                                ] || (ne[ve.uniqueID] = {}))[ie] || [])[0] ===
                              Jr && w[1]),
                        ot === !1)
                      )
                        for (
                          ;
                          (ve =
                            (++_e && ve && ve[Ue]) ||
                            (ot = _e = 0) ||
                            Le.pop()) &&
                          !(
                            (mt
                              ? ve.nodeName.toLowerCase() === bt
                              : ve.nodeType === 1) &&
                            ++ot &&
                            (ft &&
                              ((j =
                                (ne = ve[Dn] || (ve[Dn] = {}))[ve.uniqueID] ||
                                (ne[ve.uniqueID] = {}))[ie] = [Jr, ot]),
                            ve === _t)
                          );

                        );
                      return (
                        (ot -= Ce) === Be || (ot % Be == 0 && 0 <= ot / Be)
                      );
                    }
                  };
            },
            PSEUDO: function (ie, me) {
              var Se,
                Be =
                  M.pseudos[ie] ||
                  M.setFilters[ie.toLowerCase()] ||
                  $n.error("unsupported pseudo: " + ie);
              return Be[Dn]
                ? Be(me)
                : 1 < Be.length
                ? ((Se = [ie, ie, "", me]),
                  M.setFilters.hasOwnProperty(ie.toLowerCase())
                    ? Fr(function (Ce, et) {
                        for (var nt, mt = Be(Ce, me), _t = mt.length; _t--; )
                          Ce[(nt = ti(Ce, mt[_t]))] = !(et[nt] = mt[_t]);
                      })
                    : function (Ce) {
                        return Be(Ce, 0, Se);
                      })
                : Be;
            },
          },
          pseudos: {
            not: Fr(function (ie) {
              var me = [],
                Se = [],
                Be = pe(ie.replace(ki, "$1"));
              return Be[Dn]
                ? Fr(function (Ce, et, nt, mt) {
                    for (
                      var _t, Xt = Be(Ce, null, mt, []), W = Ce.length;
                      W--;

                    )
                      (_t = Xt[W]) && (Ce[W] = !(et[W] = _t));
                  })
                : function (Ce, et, nt) {
                    return (
                      (me[0] = Ce),
                      Be(me, null, nt, Se),
                      (me[0] = null),
                      !Se.pop()
                    );
                  };
            }),
            has: Fr(function (ie) {
              return function (me) {
                return 0 < $n(ie, me).length;
              };
            }),
            contains: Fr(function (ie) {
              return (
                (ie = ie.replace(Ai, $i)),
                function (me) {
                  return -1 < (me.textContent || Y(me)).indexOf(ie);
                }
              );
            }),
            lang: Fr(function (ie) {
              return (
                Wh.test(ie || "") || $n.error("unsupported lang: " + ie),
                (ie = ie.replace(Ai, $i).toLowerCase()),
                function (me) {
                  var Se;
                  do
                    if (
                      (Se = jt
                        ? me.lang
                        : me.getAttribute("xml:lang") ||
                          me.getAttribute("lang"))
                    )
                      return (
                        (Se = Se.toLowerCase()) === ie ||
                        Se.indexOf(ie + "-") === 0
                      );
                  while ((me = me.parentNode) && me.nodeType === 1);
                  return !1;
                }
              );
            }),
            target: function (ie) {
              var me = y.location && y.location.hash;
              return me && me.slice(1) === ie.id;
            },
            root: function (ie) {
              return ie === Et;
            },
            focus: function (ie) {
              return (
                ie === Me.activeElement &&
                (!Me.hasFocus || Me.hasFocus()) &&
                !!(ie.type || ie.href || ~ie.tabIndex)
              );
            },
            enabled: fc(!1),
            disabled: fc(!0),
            checked: function (ie) {
              var me = ie.nodeName.toLowerCase();
              return (
                (me === "input" && !!ie.checked) ||
                (me === "option" && !!ie.selected)
              );
            },
            selected: function (ie) {
              return (
                ie.parentNode && ie.parentNode.selectedIndex, ie.selected === !0
              );
            },
            empty: function (ie) {
              for (ie = ie.firstChild; ie; ie = ie.nextSibling)
                if (ie.nodeType < 6) return !1;
              return !0;
            },
            parent: function (ie) {
              return !M.pseudos.empty(ie);
            },
            header: function (ie) {
              return vu.test(ie.nodeName);
            },
            input: function (ie) {
              return il.test(ie.nodeName);
            },
            button: function (ie) {
              var me = ie.nodeName.toLowerCase();
              return (
                (me === "input" && ie.type === "button") || me === "button"
              );
            },
            text: function (ie) {
              var me;
              return (
                ie.nodeName.toLowerCase() === "input" &&
                ie.type === "text" &&
                ((me = ie.getAttribute("type")) == null ||
                  me.toLowerCase() === "text")
              );
            },
            first: ma(function () {
              return [0];
            }),
            last: ma(function (ie, me) {
              return [me - 1];
            }),
            eq: ma(function (ie, me, Se) {
              return [Se < 0 ? Se + me : Se];
            }),
            even: ma(function (ie, me) {
              for (var Se = 0; Se < me; Se += 2) ie.push(Se);
              return ie;
            }),
            odd: ma(function (ie, me) {
              for (var Se = 1; Se < me; Se += 2) ie.push(Se);
              return ie;
            }),
            lt: ma(function (ie, me, Se) {
              for (var Be = Se < 0 ? Se + me : me < Se ? me : Se; 0 <= --Be; )
                ie.push(Be);
              return ie;
            }),
            gt: ma(function (ie, me, Se) {
              for (var Be = Se < 0 ? Se + me : Se; ++Be < me; ) ie.push(Be);
              return ie;
            }),
          },
        }).pseudos.nth = M.pseudos.eq),
      { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }))
        M.pseudos[A] = xu(A);
      for (A in { submit: !0, reset: !0 }) M.pseudos[A] = _o(A);
      function Ha() {}
      function sl(ie) {
        for (var me = 0, Se = ie.length, Be = ""; me < Se; me++)
          Be += ie[me].value;
        return Be;
      }
      function So(ie, me, Se) {
        var Be = me.dir,
          Ce = me.next,
          et = Ce || Be,
          nt = Se && et === "parentNode",
          mt = xn++;
        return me.first
          ? function (_t, Xt, W) {
              for (; (_t = _t[Be]); )
                if (_t.nodeType === 1 || nt) return ie(_t, Xt, W);
              return !1;
            }
          : function (_t, Xt, W) {
              var w,
                j,
                ne,
                ve = [Jr, mt];
              if (W) {
                for (; (_t = _t[Be]); )
                  if ((_t.nodeType === 1 || nt) && ie(_t, Xt, W)) return !0;
              } else
                for (; (_t = _t[Be]); )
                  if (_t.nodeType === 1 || nt)
                    if (
                      ((j =
                        (ne = _t[Dn] || (_t[Dn] = {}))[_t.uniqueID] ||
                        (ne[_t.uniqueID] = {})),
                      Ce && Ce === _t.nodeName.toLowerCase())
                    )
                      _t = _t[Be] || _t;
                    else {
                      if ((w = j[et]) && w[0] === Jr && w[1] === mt)
                        return (ve[2] = w[2]);
                      if (((j[et] = ve)[2] = ie(_t, Xt, W))) return !0;
                    }
              return !1;
            };
      }
      function gc(ie) {
        return 1 < ie.length
          ? function (me, Se, Be) {
              for (var Ce = ie.length; Ce--; )
                if (!ie[Ce](me, Se, Be)) return !1;
              return !0;
            }
          : ie[0];
      }
      function va(ie, me, Se, Be, Ce) {
        for (
          var et, nt = [], mt = 0, _t = ie.length, Xt = me != null;
          mt < _t;
          mt++
        )
          (et = ie[mt]) &&
            ((Se && !Se(et, Be, Ce)) || (nt.push(et), Xt && me.push(mt)));
        return nt;
      }
      function Wa(ie, me, Se, Be, Ce, et) {
        return (
          Be && !Be[Dn] && (Be = Wa(Be)),
          Ce && !Ce[Dn] && (Ce = Wa(Ce, et)),
          Fr(function (nt, mt, _t, Xt) {
            var W,
              w,
              j,
              ne = [],
              ve = [],
              _e = mt.length,
              Le =
                nt ||
                (function (bt, ft, ot) {
                  for (var Ht = 0, Ut = ft.length; Ht < Ut; Ht++)
                    $n(bt, ft[Ht], ot);
                  return ot;
                })(me || "*", _t.nodeType ? [_t] : _t, []),
              Ue = !ie || (!nt && me) ? Le : va(Le, ne, ie, _t, Xt),
              Qe = Se ? (Ce || (nt ? ie : _e || Be) ? [] : mt) : Ue;
            if ((Se && Se(Ue, Qe, _t, Xt), Be))
              for (W = va(Qe, ve), Be(W, [], _t, Xt), w = W.length; w--; )
                (j = W[w]) && (Qe[ve[w]] = !(Ue[ve[w]] = j));
            if (nt) {
              if (Ce || ie) {
                if (Ce) {
                  for (W = [], w = Qe.length; w--; )
                    (j = Qe[w]) && W.push((Ue[w] = j));
                  Ce(null, (Qe = []), W, Xt);
                }
                for (w = Qe.length; w--; )
                  (j = Qe[w]) &&
                    -1 < (W = Ce ? ti(nt, j) : ne[w]) &&
                    (nt[W] = !(mt[W] = j));
              }
            } else (Qe = va(Qe === mt ? Qe.splice(_e, Qe.length) : Qe)), Ce ? Ce(null, mt, Qe, Xt) : ir.apply(mt, Qe);
          })
        );
      }
      function al(ie) {
        for (
          var me,
            Se,
            Be,
            Ce = ie.length,
            et = M.relative[ie[0].type],
            nt = et || M.relative[" "],
            mt = et ? 1 : 0,
            _t = So(
              function (w) {
                return w === me;
              },
              nt,
              !0
            ),
            Xt = So(
              function (w) {
                return -1 < ti(me, w);
              },
              nt,
              !0
            ),
            W = [
              function (w, j, ne) {
                var ve =
                  (!et && (ne || j !== Ee)) ||
                  ((me = j).nodeType ? _t(w, j, ne) : Xt(w, j, ne));
                return (me = null), ve;
              },
            ];
          mt < Ce;
          mt++
        )
          if ((Se = M.relative[ie[mt].type])) W = [So(gc(W), Se)];
          else {
            if ((Se = M.filter[ie[mt].type].apply(null, ie[mt].matches))[Dn]) {
              for (Be = ++mt; Be < Ce && !M.relative[ie[Be].type]; Be++);
              return Wa(
                1 < mt && gc(W),
                1 < mt &&
                  sl(
                    ie
                      .slice(0, mt - 1)
                      .concat({ value: ie[mt - 2].type === " " ? "*" : "" })
                  ).replace(ki, "$1"),
                Se,
                mt < Be && al(ie.slice(mt, Be)),
                Be < Ce && al((ie = ie.slice(Be))),
                Be < Ce && sl(ie)
              );
            }
            W.push(Se);
          }
        return gc(W);
      }
      return (
        (Ha.prototype = M.filters = M.pseudos),
        (M.setFilters = new Ha()),
        (re = $n.tokenize =
          function (ie, me) {
            var Se,
              Be,
              Ce,
              et,
              nt,
              mt,
              _t,
              Xt = vo[ie + " "];
            if (Xt) return me ? 0 : Xt.slice(0);
            for (nt = ie, mt = [], _t = M.preFilter; nt; ) {
              for (et in ((Se && !(Be = fi.exec(nt))) ||
                (Be && (nt = nt.slice(Be[0].length) || nt), mt.push((Ce = []))),
              (Se = !1),
              (Be = Va.exec(nt)) &&
                ((Se = Be.shift()),
                Ce.push({ value: Se, type: Be[0].replace(ki, " ") }),
                (nt = nt.slice(Se.length))),
              M.filter))
                !(Be = yo[et].exec(nt)) ||
                  (_t[et] && !(Be = _t[et](Be))) ||
                  ((Se = Be.shift()),
                  Ce.push({ value: Se, type: et, matches: Be }),
                  (nt = nt.slice(Se.length)));
              if (!Se) break;
            }
            return me ? nt.length : nt ? $n.error(ie) : vo(ie, mt).slice(0);
          }),
        (pe = $n.compile =
          function (ie, me) {
            var Se,
              Be,
              Ce,
              et,
              nt,
              mt,
              _t = [],
              Xt = [],
              W = da[ie + " "];
            if (!W) {
              for (me || (me = re(ie)), Se = me.length; Se--; )
                (W = al(me[Se]))[Dn] ? _t.push(W) : Xt.push(W);
              (W = da(
                ie,
                ((Be = Xt),
                (et = 0 < (Ce = _t).length),
                (nt = 0 < Be.length),
                (mt = function (w, j, ne, ve, _e) {
                  var Le,
                    Ue,
                    Qe,
                    bt = 0,
                    ft = "0",
                    ot = w && [],
                    Ht = [],
                    Ut = Ee,
                    en = w || (nt && M.find.TAG("*", _e)),
                    qt = (Jr += Ut == null ? 1 : Math.random() || 0.1),
                    tn = en.length;
                  for (
                    _e && (Ee = j === Me || j || _e);
                    ft !== tn && (Le = en[ft]) != null;
                    ft++
                  ) {
                    if (nt && Le) {
                      for (
                        Ue = 0,
                          j || Le.ownerDocument === Me || (De(Le), (ne = !jt));
                        (Qe = Be[Ue++]);

                      )
                        if (Qe(Le, j || Me, ne)) {
                          ve.push(Le);
                          break;
                        }
                      _e && (Jr = qt);
                    }
                    et && ((Le = !Qe && Le) && bt--, w && ot.push(Le));
                  }
                  if (((bt += ft), et && ft !== bt)) {
                    for (Ue = 0; (Qe = Ce[Ue++]); ) Qe(ot, Ht, j, ne);
                    if (w) {
                      if (0 < bt)
                        for (; ft--; )
                          ot[ft] || Ht[ft] || (Ht[ft] = Zs.call(ve));
                      Ht = va(Ht);
                    }
                    ir.apply(ve, Ht),
                      _e &&
                        !w &&
                        0 < Ht.length &&
                        1 < bt + Ce.length &&
                        $n.uniqueSort(ve);
                  }
                  return _e && ((Jr = qt), (Ee = Ut)), ot;
                }),
                et ? Fr(mt) : mt)
              )).selector = ie;
            }
            return W;
          }),
        (be = $n.select =
          function (ie, me, Se, Be) {
            var Ce,
              et,
              nt,
              mt,
              _t,
              Xt = typeof ie == "function" && ie,
              W = !Be && re((ie = Xt.selector || ie));
            if (((Se = Se || []), W.length === 1)) {
              if (
                2 < (et = W[0] = W[0].slice(0)).length &&
                (nt = et[0]).type === "ID" &&
                me.nodeType === 9 &&
                jt &&
                M.relative[et[1].type]
              ) {
                if (
                  !(me = (M.find.ID(nt.matches[0].replace(Ai, $i), me) ||
                    [])[0])
                )
                  return Se;
                Xt && (me = me.parentNode),
                  (ie = ie.slice(et.shift().value.length));
              }
              for (
                Ce = yo.needsContext.test(ie) ? 0 : et.length;
                Ce-- && ((nt = et[Ce]), !M.relative[(mt = nt.type)]);

              )
                if (
                  (_t = M.find[mt]) &&
                  (Be = _t(
                    nt.matches[0].replace(Ai, $i),
                    (ga.test(et[0].type) && pc(me.parentNode)) || me
                  ))
                ) {
                  if ((et.splice(Ce, 1), !(ie = Be.length && sl(et))))
                    return ir.apply(Se, Be), Se;
                  break;
                }
            }
            return (
              (Xt || pe(ie, W))(
                Be,
                me,
                !jt,
                Se,
                !me || (ga.test(ie) && pc(me.parentNode)) || me
              ),
              Se
            );
          }),
        (R.sortStable = Dn.split("").sort(di).join("") === Dn),
        (R.detectDuplicates = !!Ke),
        De(),
        (R.sortDetached = bs(function (ie) {
          return 1 & ie.compareDocumentPosition(Me.createElement("fieldset"));
        })),
        bs(function (ie) {
          return (
            (ie.innerHTML = "<a href='#'></a>"),
            ie.firstChild.getAttribute("href") === "#"
          );
        }) ||
          dc("type|href|height|width", function (ie, me, Se) {
            if (!Se)
              return ie.getAttribute(me, me.toLowerCase() === "type" ? 1 : 2);
          }),
        (R.attributes &&
          bs(function (ie) {
            return (
              (ie.innerHTML = "<input/>"),
              ie.firstChild.setAttribute("value", ""),
              ie.firstChild.getAttribute("value") === ""
            );
          })) ||
          dc("value", function (ie, me, Se) {
            if (!Se && ie.nodeName.toLowerCase() === "input")
              return ie.defaultValue;
          }),
        bs(function (ie) {
          return ie.getAttribute("disabled") == null;
        }) ||
          dc(Vi, function (ie, me, Se) {
            var Be;
            if (!Se)
              return ie[me] === !0
                ? me.toLowerCase()
                : (Be = ie.getAttributeNode(me)) && Be.specified
                ? Be.value
                : null;
          }),
        $n
      );
    })(t);
    (C.find = tt),
      (C.expr = tt.selectors),
      (C.expr[":"] = C.expr.pseudos),
      (C.uniqueSort = C.unique = tt.uniqueSort),
      (C.text = tt.getText),
      (C.isXMLDoc = tt.isXML),
      (C.contains = tt.contains),
      (C.escapeSelector = tt.escape);
    var Ct = function (y, A, R) {
        for (var M = [], Y = R !== void 0; (y = y[A]) && y.nodeType !== 9; )
          if (y.nodeType === 1) {
            if (Y && C(y).is(R)) break;
            M.push(y);
          }
        return M;
      },
      xt = function (y, A) {
        for (var R = []; y; y = y.nextSibling)
          y.nodeType === 1 && y !== A && R.push(y);
        return R;
      },
      pt = C.expr.match.needsContext;
    function Mt(y, A) {
      return y.nodeName && y.nodeName.toLowerCase() === A.toLowerCase();
    }
    var Vt = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function It(y, A, R) {
      return le(A)
        ? C.grep(y, function (M, Y) {
            return !!A.call(M, Y, M) !== R;
          })
        : A.nodeType
        ? C.grep(y, function (M) {
            return (M === A) !== R;
          })
        : typeof A != "string"
        ? C.grep(y, function (M) {
            return -1 < x.call(A, M) !== R;
          })
        : C.filter(A, y, R);
    }
    (C.filter = function (y, A, R) {
      var M = A[0];
      return (
        R && (y = ":not(" + y + ")"),
        A.length === 1 && M.nodeType === 1
          ? C.find.matchesSelector(M, y)
            ? [M]
            : []
          : C.find.matches(
              y,
              C.grep(A, function (Y) {
                return Y.nodeType === 1;
              })
            )
      );
    }),
      C.fn.extend({
        find: function (y) {
          var A,
            R,
            M = this.length,
            Y = this;
          if (typeof y != "string")
            return this.pushStack(
              C(y).filter(function () {
                for (A = 0; A < M; A++) if (C.contains(Y[A], this)) return !0;
              })
            );
          for (R = this.pushStack([]), A = 0; A < M; A++) C.find(y, Y[A], R);
          return 1 < M ? C.uniqueSort(R) : R;
        },
        filter: function (y) {
          return this.pushStack(It(this, y || [], !1));
        },
        not: function (y) {
          return this.pushStack(It(this, y || [], !0));
        },
        is: function (y) {
          return !!It(
            this,
            typeof y == "string" && pt.test(y) ? C(y) : y || [],
            !1
          ).length;
        },
      });
    var ht,
      Ie = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    ((C.fn.init = function (y, A, R) {
      var M, Y;
      if (!y) return this;
      if (((R = R || ht), typeof y == "string")) {
        if (
          !(M =
            y[0] === "<" && y[y.length - 1] === ">" && 3 <= y.length
              ? [null, y, null]
              : Ie.exec(y)) ||
          (!M[1] && A)
        )
          return !A || A.jquery
            ? (A || R).find(y)
            : this.constructor(A).find(y);
        if (M[1]) {
          if (
            ((A = A instanceof C ? A[0] : A),
            C.merge(
              this,
              C.parseHTML(M[1], A && A.nodeType ? A.ownerDocument || A : r, !0)
            ),
            Vt.test(M[1]) && C.isPlainObject(A))
          )
            for (M in A) le(this[M]) ? this[M](A[M]) : this.attr(M, A[M]);
          return this;
        }
        return (
          (Y = r.getElementById(M[2])) && ((this[0] = Y), (this.length = 1)),
          this
        );
      }
      return y.nodeType
        ? ((this[0] = y), (this.length = 1), this)
        : le(y)
        ? R.ready !== void 0
          ? R.ready(y)
          : y(C)
        : C.makeArray(y, this);
    }).prototype = C.fn),
      (ht = C(r));
    var Lt = /^(?:parents|prev(?:Until|All))/,
      we = { children: !0, contents: !0, next: !0, prev: !0 };
    function Xe(y, A) {
      for (; (y = y[A]) && y.nodeType !== 1; );
      return y;
    }
    C.fn.extend({
      has: function (y) {
        var A = C(y, this),
          R = A.length;
        return this.filter(function () {
          for (var M = 0; M < R; M++) if (C.contains(this, A[M])) return !0;
        });
      },
      closest: function (y, A) {
        var R,
          M = 0,
          Y = this.length,
          J = [],
          re = typeof y != "string" && C(y);
        if (!pt.test(y)) {
          for (; M < Y; M++)
            for (R = this[M]; R && R !== A; R = R.parentNode)
              if (
                R.nodeType < 11 &&
                (re
                  ? -1 < re.index(R)
                  : R.nodeType === 1 && C.find.matchesSelector(R, y))
              ) {
                J.push(R);
                break;
              }
        }
        return this.pushStack(1 < J.length ? C.uniqueSort(J) : J);
      },
      index: function (y) {
        return y
          ? typeof y == "string"
            ? x.call(C(y), this[0])
            : x.call(this, y.jquery ? y[0] : y)
          : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      },
      add: function (y, A) {
        return this.pushStack(C.uniqueSort(C.merge(this.get(), C(y, A))));
      },
      addBack: function (y) {
        return this.add(
          y == null ? this.prevObject : this.prevObject.filter(y)
        );
      },
    }),
      C.each(
        {
          parent: function (y) {
            var A = y.parentNode;
            return A && A.nodeType !== 11 ? A : null;
          },
          parents: function (y) {
            return Ct(y, "parentNode");
          },
          parentsUntil: function (y, A, R) {
            return Ct(y, "parentNode", R);
          },
          next: function (y) {
            return Xe(y, "nextSibling");
          },
          prev: function (y) {
            return Xe(y, "previousSibling");
          },
          nextAll: function (y) {
            return Ct(y, "nextSibling");
          },
          prevAll: function (y) {
            return Ct(y, "previousSibling");
          },
          nextUntil: function (y, A, R) {
            return Ct(y, "nextSibling", R);
          },
          prevUntil: function (y, A, R) {
            return Ct(y, "previousSibling", R);
          },
          siblings: function (y) {
            return xt((y.parentNode || {}).firstChild, y);
          },
          children: function (y) {
            return xt(y.firstChild);
          },
          contents: function (y) {
            return typeof y.contentDocument < "u"
              ? y.contentDocument
              : (Mt(y, "template") && (y = y.content || y),
                C.merge([], y.childNodes));
          },
        },
        function (y, A) {
          C.fn[y] = function (R, M) {
            var Y = C.map(this, A, R);
            return (
              y.slice(-5) !== "Until" && (M = R),
              M && typeof M == "string" && (Y = C.filter(M, Y)),
              1 < this.length &&
                (we[y] || C.uniqueSort(Y), Lt.test(y) && Y.reverse()),
              this.pushStack(Y)
            );
          };
        }
      );
    var Oe = /[^\x20\t\r\n\f]+/g;
    function Ye(y) {
      return y;
    }
    function Re(y) {
      throw y;
    }
    function $e(y, A, R, M) {
      var Y;
      try {
        y && le((Y = y.promise))
          ? Y.call(y).done(A).fail(R)
          : y && le((Y = y.then))
          ? Y.call(y, A, R)
          : A.apply(void 0, [y].slice(M));
      } catch (J) {
        R.apply(void 0, [J]);
      }
    }
    (C.Callbacks = function (y) {
      var A, R;
      y =
        typeof y == "string"
          ? ((A = y),
            (R = {}),
            C.each(A.match(Oe) || [], function (De, Me) {
              R[Me] = !0;
            }),
            R)
          : C.extend({}, y);
      var M,
        Y,
        J,
        re,
        pe = [],
        be = [],
        Ee = -1,
        Ve = function () {
          for (re = re || y.once, J = M = !0; be.length; Ee = -1)
            for (Y = be.shift(); ++Ee < pe.length; )
              pe[Ee].apply(Y[0], Y[1]) === !1 &&
                y.stopOnFalse &&
                ((Ee = pe.length), (Y = !1));
          y.memory || (Y = !1), (M = !1), re && (pe = Y ? [] : "");
        },
        Ke = {
          add: function () {
            return (
              pe &&
                (Y && !M && ((Ee = pe.length - 1), be.push(Y)),
                (function De(Me) {
                  C.each(Me, function (Et, jt) {
                    le(jt)
                      ? (y.unique && Ke.has(jt)) || pe.push(jt)
                      : jt && jt.length && ce(jt) !== "string" && De(jt);
                  });
                })(arguments),
                Y && !M && Ve()),
              this
            );
          },
          remove: function () {
            return (
              C.each(arguments, function (De, Me) {
                for (var Et; -1 < (Et = C.inArray(Me, pe, Et)); )
                  pe.splice(Et, 1), Et <= Ee && Ee--;
              }),
              this
            );
          },
          has: function (De) {
            return De ? -1 < C.inArray(De, pe) : 0 < pe.length;
          },
          empty: function () {
            return pe && (pe = []), this;
          },
          disable: function () {
            return (re = be = []), (pe = Y = ""), this;
          },
          disabled: function () {
            return !pe;
          },
          lock: function () {
            return (re = be = []), Y || M || (pe = Y = ""), this;
          },
          locked: function () {
            return !!re;
          },
          fireWith: function (De, Me) {
            return (
              re ||
                ((Me = [De, (Me = Me || []).slice ? Me.slice() : Me]),
                be.push(Me),
                M || Ve()),
              this
            );
          },
          fire: function () {
            return Ke.fireWith(this, arguments), this;
          },
          fired: function () {
            return !!J;
          },
        };
      return Ke;
    }),
      C.extend({
        Deferred: function (y) {
          var A = [
              [
                "notify",
                "progress",
                C.Callbacks("memory"),
                C.Callbacks("memory"),
                2,
              ],
              [
                "resolve",
                "done",
                C.Callbacks("once memory"),
                C.Callbacks("once memory"),
                0,
                "resolved",
              ],
              [
                "reject",
                "fail",
                C.Callbacks("once memory"),
                C.Callbacks("once memory"),
                1,
                "rejected",
              ],
            ],
            R = "pending",
            M = {
              state: function () {
                return R;
              },
              always: function () {
                return Y.done(arguments).fail(arguments), this;
              },
              catch: function (J) {
                return M.then(null, J);
              },
              pipe: function () {
                var J = arguments;
                return C.Deferred(function (re) {
                  C.each(A, function (pe, be) {
                    var Ee = le(J[be[4]]) && J[be[4]];
                    Y[be[1]](function () {
                      var Ve = Ee && Ee.apply(this, arguments);
                      Ve && le(Ve.promise)
                        ? Ve.promise()
                            .progress(re.notify)
                            .done(re.resolve)
                            .fail(re.reject)
                        : re[be[0] + "With"](this, Ee ? [Ve] : arguments);
                    });
                  }),
                    (J = null);
                }).promise();
              },
              then: function (J, re, pe) {
                var be = 0;
                function Ee(Ve, Ke, De, Me) {
                  return function () {
                    var Et = this,
                      jt = arguments,
                      Tt = function () {
                        var vr, hi;
                        if (!(Ve < be)) {
                          if ((vr = De.apply(Et, jt)) === Ke.promise())
                            throw new TypeError("Thenable self-resolution");
                          (hi =
                            vr &&
                            (typeof vr == "object" ||
                              typeof vr == "function") &&
                            vr.then),
                            le(hi)
                              ? Me
                                ? hi.call(
                                    vr,
                                    Ee(be, Ke, Ye, Me),
                                    Ee(be, Ke, Re, Me)
                                  )
                                : (be++,
                                  hi.call(
                                    vr,
                                    Ee(be, Ke, Ye, Me),
                                    Ee(be, Ke, Re, Me),
                                    Ee(be, Ke, Ye, Ke.notifyWith)
                                  ))
                              : (De !== Ye && ((Et = void 0), (jt = [vr])),
                                (Me || Ke.resolveWith)(Et, jt));
                        }
                      },
                      tr = Me
                        ? Tt
                        : function () {
                            try {
                              Tt();
                            } catch (vr) {
                              C.Deferred.exceptionHook &&
                                C.Deferred.exceptionHook(vr, tr.stackTrace),
                                be <= Ve + 1 &&
                                  (De !== Re && ((Et = void 0), (jt = [vr])),
                                  Ke.rejectWith(Et, jt));
                            }
                          };
                    Ve
                      ? tr()
                      : (C.Deferred.getStackHook &&
                          (tr.stackTrace = C.Deferred.getStackHook()),
                        t.setTimeout(tr));
                  };
                }
                return C.Deferred(function (Ve) {
                  A[0][3].add(Ee(0, Ve, le(pe) ? pe : Ye, Ve.notifyWith)),
                    A[1][3].add(Ee(0, Ve, le(J) ? J : Ye)),
                    A[2][3].add(Ee(0, Ve, le(re) ? re : Re));
                }).promise();
              },
              promise: function (J) {
                return J != null ? C.extend(J, M) : M;
              },
            },
            Y = {};
          return (
            C.each(A, function (J, re) {
              var pe = re[2],
                be = re[5];
              (M[re[1]] = pe.add),
                be &&
                  pe.add(
                    function () {
                      R = be;
                    },
                    A[3 - J][2].disable,
                    A[3 - J][3].disable,
                    A[0][2].lock,
                    A[0][3].lock
                  ),
                pe.add(re[3].fire),
                (Y[re[0]] = function () {
                  return (
                    Y[re[0] + "With"](this === Y ? void 0 : this, arguments),
                    this
                  );
                }),
                (Y[re[0] + "With"] = pe.fireWith);
            }),
            M.promise(Y),
            y && y.call(Y, Y),
            Y
          );
        },
        when: function (y) {
          var A = arguments.length,
            R = A,
            M = Array(R),
            Y = o.call(arguments),
            J = C.Deferred(),
            re = function (pe) {
              return function (be) {
                (M[pe] = this),
                  (Y[pe] = 1 < arguments.length ? o.call(arguments) : be),
                  --A || J.resolveWith(M, Y);
              };
            };
          if (
            A <= 1 &&
            ($e(y, J.done(re(R)).resolve, J.reject, !A),
            J.state() === "pending" || le(Y[R] && Y[R].then))
          )
            return J.then();
          for (; R--; ) $e(Y[R], re(R), J.reject);
          return J.promise();
        },
      });
    var Fe = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (C.Deferred.exceptionHook = function (y, A) {
      t.console &&
        t.console.warn &&
        y &&
        Fe.test(y.name) &&
        t.console.warn("jQuery.Deferred exception: " + y.message, y.stack, A);
    }),
      (C.readyException = function (y) {
        t.setTimeout(function () {
          throw y;
        });
      });
    var ct = C.Deferred();
    function de() {
      r.removeEventListener("DOMContentLoaded", de),
        t.removeEventListener("load", de),
        C.ready();
    }
    (C.fn.ready = function (y) {
      return (
        ct.then(y).catch(function (A) {
          C.readyException(A);
        }),
        this
      );
    }),
      C.extend({
        isReady: !1,
        readyWait: 1,
        ready: function (y) {
          (y === !0 ? --C.readyWait : C.isReady) ||
            ((C.isReady = !0) !== y && 0 < --C.readyWait) ||
            ct.resolveWith(r, [C]);
        },
      }),
      (C.ready.then = ct.then),
      r.readyState === "complete" ||
      (r.readyState !== "loading" && !r.documentElement.doScroll)
        ? t.setTimeout(C.ready)
        : (r.addEventListener("DOMContentLoaded", de),
          t.addEventListener("load", de));
    var yt = function (y, A, R, M, Y, J, re) {
        var pe = 0,
          be = y.length,
          Ee = R == null;
        if (ce(R) === "object")
          for (pe in ((Y = !0), R)) yt(y, A, pe, R[pe], !0, J, re);
        else if (
          M !== void 0 &&
          ((Y = !0),
          le(M) || (re = !0),
          Ee &&
            (re
              ? (A.call(y, M), (A = null))
              : ((Ee = A),
                (A = function (Ve, Ke, De) {
                  return Ee.call(C(Ve), De);
                }))),
          A)
        )
          for (; pe < be; pe++)
            A(y[pe], R, re ? M : M.call(y[pe], pe, A(y[pe], R)));
        return Y ? y : Ee ? A.call(y) : be ? A(y[0], R) : J;
      },
      Ze = /^-ms-/,
      Zt = /-([a-z])/g;
    function Wt(y, A) {
      return A.toUpperCase();
    }
    function $t(y) {
      return y.replace(Ze, "ms-").replace(Zt, Wt);
    }
    var Rt = function (y) {
      return y.nodeType === 1 || y.nodeType === 9 || !+y.nodeType;
    };
    function sn() {
      this.expando = C.expando + sn.uid++;
    }
    (sn.uid = 1),
      (sn.prototype = {
        cache: function (y) {
          var A = y[this.expando];
          return (
            A ||
              ((A = {}),
              Rt(y) &&
                (y.nodeType
                  ? (y[this.expando] = A)
                  : Object.defineProperty(y, this.expando, {
                      value: A,
                      configurable: !0,
                    }))),
            A
          );
        },
        set: function (y, A, R) {
          var M,
            Y = this.cache(y);
          if (typeof A == "string") Y[$t(A)] = R;
          else for (M in A) Y[$t(M)] = A[M];
          return Y;
        },
        get: function (y, A) {
          return A === void 0
            ? this.cache(y)
            : y[this.expando] && y[this.expando][$t(A)];
        },
        access: function (y, A, R) {
          return A === void 0 || (A && typeof A == "string" && R === void 0)
            ? this.get(y, A)
            : (this.set(y, A, R), R !== void 0 ? R : A);
        },
        remove: function (y, A) {
          var R,
            M = y[this.expando];
          if (M !== void 0) {
            if (A !== void 0)
              for (
                R = (A = Array.isArray(A)
                  ? A.map($t)
                  : ((A = $t(A)) in M)
                  ? [A]
                  : A.match(Oe) || []).length;
                R--;

              )
                delete M[A[R]];
            (A === void 0 || C.isEmptyObject(M)) &&
              (y.nodeType
                ? (y[this.expando] = void 0)
                : delete y[this.expando]);
          }
        },
        hasData: function (y) {
          var A = y[this.expando];
          return A !== void 0 && !C.isEmptyObject(A);
        },
      });
    var dt = new sn(),
      gt = new sn(),
      mn = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      Jt = /[A-Z]/g;
    function Rn(y, A, R) {
      var M, Y;
      if (R === void 0 && y.nodeType === 1)
        if (
          ((M = "data-" + A.replace(Jt, "-$&").toLowerCase()),
          typeof (R = y.getAttribute(M)) == "string")
        ) {
          try {
            R =
              (Y = R) === "true" ||
              (Y !== "false" &&
                (Y === "null"
                  ? null
                  : Y === +Y + ""
                  ? +Y
                  : mn.test(Y)
                  ? JSON.parse(Y)
                  : Y));
          } catch {}
          gt.set(y, A, R);
        } else R = void 0;
      return R;
    }
    C.extend({
      hasData: function (y) {
        return gt.hasData(y) || dt.hasData(y);
      },
      data: function (y, A, R) {
        return gt.access(y, A, R);
      },
      removeData: function (y, A) {
        gt.remove(y, A);
      },
      _data: function (y, A, R) {
        return dt.access(y, A, R);
      },
      _removeData: function (y, A) {
        dt.remove(y, A);
      },
    }),
      C.fn.extend({
        data: function (y, A) {
          var R,
            M,
            Y,
            J = this[0],
            re = J && J.attributes;
          if (y === void 0) {
            if (
              this.length &&
              ((Y = gt.get(J)), J.nodeType === 1 && !dt.get(J, "hasDataAttrs"))
            ) {
              for (R = re.length; R--; )
                re[R] &&
                  (M = re[R].name).indexOf("data-") === 0 &&
                  ((M = $t(M.slice(5))), Rn(J, M, Y[M]));
              dt.set(J, "hasDataAttrs", !0);
            }
            return Y;
          }
          return typeof y == "object"
            ? this.each(function () {
                gt.set(this, y);
              })
            : yt(
                this,
                function (pe) {
                  var be;
                  if (J && pe === void 0)
                    return (be = gt.get(J, y)) !== void 0 ||
                      (be = Rn(J, y)) !== void 0
                      ? be
                      : void 0;
                  this.each(function () {
                    gt.set(this, y, pe);
                  });
                },
                null,
                A,
                1 < arguments.length,
                null,
                !0
              );
        },
        removeData: function (y) {
          return this.each(function () {
            gt.remove(this, y);
          });
        },
      }),
      C.extend({
        queue: function (y, A, R) {
          var M;
          if (y)
            return (
              (A = (A || "fx") + "queue"),
              (M = dt.get(y, A)),
              R &&
                (!M || Array.isArray(R)
                  ? (M = dt.access(y, A, C.makeArray(R)))
                  : M.push(R)),
              M || []
            );
        },
        dequeue: function (y, A) {
          A = A || "fx";
          var R = C.queue(y, A),
            M = R.length,
            Y = R.shift(),
            J = C._queueHooks(y, A);
          Y === "inprogress" && ((Y = R.shift()), M--),
            Y &&
              (A === "fx" && R.unshift("inprogress"),
              delete J.stop,
              Y.call(
                y,
                function () {
                  C.dequeue(y, A);
                },
                J
              )),
            !M && J && J.empty.fire();
        },
        _queueHooks: function (y, A) {
          var R = A + "queueHooks";
          return (
            dt.get(y, R) ||
            dt.access(y, R, {
              empty: C.Callbacks("once memory").add(function () {
                dt.remove(y, [A + "queue", R]);
              }),
            })
          );
        },
      }),
      C.fn.extend({
        queue: function (y, A) {
          var R = 2;
          return (
            typeof y != "string" && ((A = y), (y = "fx"), R--),
            arguments.length < R
              ? C.queue(this[0], y)
              : A === void 0
              ? this
              : this.each(function () {
                  var M = C.queue(this, y, A);
                  C._queueHooks(this, y),
                    y === "fx" && M[0] !== "inprogress" && C.dequeue(this, y);
                })
          );
        },
        dequeue: function (y) {
          return this.each(function () {
            C.dequeue(this, y);
          });
        },
        clearQueue: function (y) {
          return this.queue(y || "fx", []);
        },
        promise: function (y, A) {
          var R,
            M = 1,
            Y = C.Deferred(),
            J = this,
            re = this.length,
            pe = function () {
              --M || Y.resolveWith(J, [J]);
            };
          for (
            typeof y != "string" && ((A = y), (y = void 0)), y = y || "fx";
            re--;

          )
            (R = dt.get(J[re], y + "queueHooks")) &&
              R.empty &&
              (M++, R.empty.add(pe));
          return pe(), Y.promise(A);
        },
      });
    var jr = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      vn = new RegExp("^(?:([+-])=|)(" + jr + ")([a-z%]*)$", "i"),
      zn = ["Top", "Right", "Bottom", "Left"],
      Te = r.documentElement,
      st = function (y) {
        return C.contains(y.ownerDocument, y);
      },
      Ge = { composed: !0 };
    Te.attachShadow &&
      (st = function (y) {
        return (
          C.contains(y.ownerDocument, y) ||
          y.getRootNode(Ge) === y.ownerDocument
        );
      });
    var qe = function (y, A) {
        return (
          (y = A || y).style.display === "none" ||
          (y.style.display === "" && st(y) && C.css(y, "display") === "none")
        );
      },
      Dt = function (y, A, R, M) {
        var Y,
          J,
          re = {};
        for (J in A) (re[J] = y.style[J]), (y.style[J] = A[J]);
        for (J in ((Y = R.apply(y, M || [])), A)) y.style[J] = re[J];
        return Y;
      };
    function nn(y, A, R, M) {
      var Y,
        J,
        re = 20,
        pe = M
          ? function () {
              return M.cur();
            }
          : function () {
              return C.css(y, A, "");
            },
        be = pe(),
        Ee = (R && R[3]) || (C.cssNumber[A] ? "" : "px"),
        Ve =
          y.nodeType &&
          (C.cssNumber[A] || (Ee !== "px" && +be)) &&
          vn.exec(C.css(y, A));
      if (Ve && Ve[3] !== Ee) {
        for (be /= 2, Ee = Ee || Ve[3], Ve = +be || 1; re--; )
          C.style(y, A, Ve + Ee),
            (1 - J) * (1 - (J = pe() / be || 0.5)) <= 0 && (re = 0),
            (Ve /= J);
        (Ve *= 2), C.style(y, A, Ve + Ee), (R = R || []);
      }
      return (
        R &&
          ((Ve = +Ve || +be || 0),
          (Y = R[1] ? Ve + (R[1] + 1) * R[2] : +R[2]),
          M && ((M.unit = Ee), (M.start = Ve), (M.end = Y))),
        Y
      );
    }
    var fn = {};
    function _r(y, A) {
      for (
        var R, M, Y, J, re, pe, be, Ee = [], Ve = 0, Ke = y.length;
        Ve < Ke;
        Ve++
      )
        (M = y[Ve]).style &&
          ((R = M.style.display),
          A
            ? (R === "none" &&
                ((Ee[Ve] = dt.get(M, "display") || null),
                Ee[Ve] || (M.style.display = "")),
              M.style.display === "" &&
                qe(M) &&
                (Ee[Ve] =
                  ((be = re = J = void 0),
                  (re = (Y = M).ownerDocument),
                  (pe = Y.nodeName),
                  (be = fn[pe]) ||
                    ((J = re.body.appendChild(re.createElement(pe))),
                    (be = C.css(J, "display")),
                    J.parentNode.removeChild(J),
                    be === "none" && (be = "block"),
                    (fn[pe] = be)))))
            : R !== "none" && ((Ee[Ve] = "none"), dt.set(M, "display", R)));
      for (Ve = 0; Ve < Ke; Ve++)
        Ee[Ve] != null && (y[Ve].style.display = Ee[Ve]);
      return y;
    }
    C.fn.extend({
      show: function () {
        return _r(this, !0);
      },
      hide: function () {
        return _r(this);
      },
      toggle: function (y) {
        return typeof y == "boolean"
          ? y
            ? this.show()
            : this.hide()
          : this.each(function () {
              qe(this) ? C(this).show() : C(this).hide();
            });
      },
    });
    var $r = /^(?:checkbox|radio)$/i,
      ui = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      mr = /^$|^module$|\/(?:java|ecma)script/i,
      Vn = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""],
      };
    function An(y, A) {
      var R;
      return (
        (R =
          typeof y.getElementsByTagName < "u"
            ? y.getElementsByTagName(A || "*")
            : typeof y.querySelectorAll < "u"
            ? y.querySelectorAll(A || "*")
            : []),
        A === void 0 || (A && Mt(y, A)) ? C.merge([y], R) : R
      );
    }
    function hr(y, A) {
      for (var R = 0, M = y.length; R < M; R++)
        dt.set(y[R], "globalEval", !A || dt.get(A[R], "globalEval"));
    }
    (Vn.optgroup = Vn.option),
      (Vn.tbody = Vn.tfoot = Vn.colgroup = Vn.caption = Vn.thead),
      (Vn.th = Vn.td);
    var gs,
      wi,
      ji = /<|&#?\w+;/;
    function Os(y, A, R, M, Y) {
      for (
        var J,
          re,
          pe,
          be,
          Ee,
          Ve,
          Ke = A.createDocumentFragment(),
          De = [],
          Me = 0,
          Et = y.length;
        Me < Et;
        Me++
      )
        if ((J = y[Me]) || J === 0)
          if (ce(J) === "object") C.merge(De, J.nodeType ? [J] : J);
          else if (ji.test(J)) {
            for (
              re = re || Ke.appendChild(A.createElement("div")),
                pe = (ui.exec(J) || ["", ""])[1].toLowerCase(),
                be = Vn[pe] || Vn._default,
                re.innerHTML = be[1] + C.htmlPrefilter(J) + be[2],
                Ve = be[0];
              Ve--;

            )
              re = re.lastChild;
            C.merge(De, re.childNodes), ((re = Ke.firstChild).textContent = "");
          } else De.push(A.createTextNode(J));
      for (Ke.textContent = "", Me = 0; (J = De[Me++]); )
        if (M && -1 < C.inArray(J, M)) Y && Y.push(J);
        else if (
          ((Ee = st(J)),
          (re = An(Ke.appendChild(J), "script")),
          Ee && hr(re),
          R)
        )
          for (Ve = 0; (J = re[Ve++]); ) mr.test(J.type || "") && R.push(J);
      return Ke;
    }
    (gs = r.createDocumentFragment().appendChild(r.createElement("div"))),
      (wi = r.createElement("input")).setAttribute("type", "radio"),
      wi.setAttribute("checked", "checked"),
      wi.setAttribute("name", "t"),
      gs.appendChild(wi),
      (se.checkClone = gs.cloneNode(!0).cloneNode(!0).lastChild.checked),
      (gs.innerHTML = "<textarea>x</textarea>"),
      (se.noCloneChecked = !!gs.cloneNode(!0).lastChild.defaultValue);
    var Ns = /^key/,
      Na = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
      es = /^([^.]*)(?:\.(.+)|)/;
    function ts() {
      return !0;
    }
    function ms() {
      return !1;
    }
    function La(y, A) {
      return (
        (y ===
          (function () {
            try {
              return r.activeElement;
            } catch {}
          })()) ==
        (A === "focus")
      );
    }
    function ua(y, A, R, M, Y, J) {
      var re, pe;
      if (typeof A == "object") {
        for (pe in (typeof R != "string" && ((M = M || R), (R = void 0)), A))
          ua(y, pe, R, M, A[pe], J);
        return y;
      }
      if (
        (M == null && Y == null
          ? ((Y = R), (M = R = void 0))
          : Y == null &&
            (typeof R == "string"
              ? ((Y = M), (M = void 0))
              : ((Y = M), (M = R), (R = void 0))),
        Y === !1)
      )
        Y = ms;
      else if (!Y) return y;
      return (
        J === 1 &&
          ((re = Y),
          ((Y = function (be) {
            return C().off(be), re.apply(this, arguments);
          }).guid = re.guid || (re.guid = C.guid++))),
        y.each(function () {
          C.event.add(this, A, Y, M, R);
        })
      );
    }
    function ns(y, A, R) {
      R
        ? (dt.set(y, A, !1),
          C.event.add(y, A, {
            namespace: !1,
            handler: function (M) {
              var Y,
                J,
                re = dt.get(this, A);
              if (1 & M.isTrigger && this[A]) {
                if (re)
                  (C.event.special[A] || {}).delegateType &&
                    M.stopPropagation();
                else if (
                  ((re = o.call(arguments)),
                  dt.set(this, A, re),
                  (Y = R(this, A)),
                  this[A](),
                  re !== (J = dt.get(this, A)) || Y
                    ? dt.set(this, A, !1)
                    : (J = void 0),
                  re !== J)
                )
                  return M.stopImmediatePropagation(), M.preventDefault(), J;
              } else
                re &&
                  (dt.set(
                    this,
                    A,
                    C.event.trigger(
                      C.extend(re.shift(), C.Event.prototype),
                      re,
                      this
                    )
                  ),
                  M.stopImmediatePropagation());
            },
          }))
        : C.event.add(y, A, ts);
    }
    (C.event = {
      global: {},
      add: function (y, A, R, M, Y) {
        var J,
          re,
          pe,
          be,
          Ee,
          Ve,
          Ke,
          De,
          Me,
          Et,
          jt,
          Tt = dt.get(y);
        if (Tt)
          for (
            R.handler && ((R = (J = R).handler), (Y = J.selector)),
              Y && C.find.matchesSelector(Te, Y),
              R.guid || (R.guid = C.guid++),
              (be = Tt.events) || (be = Tt.events = {}),
              (re = Tt.handle) ||
                (re = Tt.handle =
                  function (tr) {
                    return typeof C < "u" && C.event.triggered !== tr.type
                      ? C.event.dispatch.apply(y, arguments)
                      : void 0;
                  }),
              Ee = (A = (A || "").match(Oe) || [""]).length;
            Ee--;

          )
            (Me = jt = (pe = es.exec(A[Ee]) || [])[1]),
              (Et = (pe[2] || "").split(".").sort()),
              Me &&
                ((Ke = C.event.special[Me] || {}),
                (Me = (Y ? Ke.delegateType : Ke.bindType) || Me),
                (Ke = C.event.special[Me] || {}),
                (Ve = C.extend(
                  {
                    type: Me,
                    origType: jt,
                    data: M,
                    handler: R,
                    guid: R.guid,
                    selector: Y,
                    needsContext: Y && C.expr.match.needsContext.test(Y),
                    namespace: Et.join("."),
                  },
                  J
                )),
                (De = be[Me]) ||
                  (((De = be[Me] = []).delegateCount = 0),
                  (Ke.setup && Ke.setup.call(y, M, Et, re) !== !1) ||
                    (y.addEventListener && y.addEventListener(Me, re))),
                Ke.add &&
                  (Ke.add.call(y, Ve),
                  Ve.handler.guid || (Ve.handler.guid = R.guid)),
                Y ? De.splice(De.delegateCount++, 0, Ve) : De.push(Ve),
                (C.event.global[Me] = !0));
      },
      remove: function (y, A, R, M, Y) {
        var J,
          re,
          pe,
          be,
          Ee,
          Ve,
          Ke,
          De,
          Me,
          Et,
          jt,
          Tt = dt.hasData(y) && dt.get(y);
        if (Tt && (be = Tt.events)) {
          for (Ee = (A = (A || "").match(Oe) || [""]).length; Ee--; )
            if (
              ((Me = jt = (pe = es.exec(A[Ee]) || [])[1]),
              (Et = (pe[2] || "").split(".").sort()),
              Me)
            ) {
              for (
                Ke = C.event.special[Me] || {},
                  De =
                    be[(Me = (M ? Ke.delegateType : Ke.bindType) || Me)] || [],
                  pe =
                    pe[2] &&
                    new RegExp(
                      "(^|\\.)" + Et.join("\\.(?:.*\\.|)") + "(\\.|$)"
                    ),
                  re = J = De.length;
                J--;

              )
                (Ve = De[J]),
                  (!Y && jt !== Ve.origType) ||
                    (R && R.guid !== Ve.guid) ||
                    (pe && !pe.test(Ve.namespace)) ||
                    (M && M !== Ve.selector && (M !== "**" || !Ve.selector)) ||
                    (De.splice(J, 1),
                    Ve.selector && De.delegateCount--,
                    Ke.remove && Ke.remove.call(y, Ve));
              re &&
                !De.length &&
                ((Ke.teardown && Ke.teardown.call(y, Et, Tt.handle) !== !1) ||
                  C.removeEvent(y, Me, Tt.handle),
                delete be[Me]);
            } else for (Me in be) C.event.remove(y, Me + A[Ee], R, M, !0);
          C.isEmptyObject(be) && dt.remove(y, "handle events");
        }
      },
      dispatch: function (y) {
        var A,
          R,
          M,
          Y,
          J,
          re,
          pe = C.event.fix(y),
          be = new Array(arguments.length),
          Ee = (dt.get(this, "events") || {})[pe.type] || [],
          Ve = C.event.special[pe.type] || {};
        for (be[0] = pe, A = 1; A < arguments.length; A++) be[A] = arguments[A];
        if (
          ((pe.delegateTarget = this),
          !Ve.preDispatch || Ve.preDispatch.call(this, pe) !== !1)
        ) {
          for (
            re = C.event.handlers.call(this, pe, Ee), A = 0;
            (Y = re[A++]) && !pe.isPropagationStopped();

          )
            for (
              pe.currentTarget = Y.elem, R = 0;
              (J = Y.handlers[R++]) && !pe.isImmediatePropagationStopped();

            )
              (pe.rnamespace &&
                J.namespace !== !1 &&
                !pe.rnamespace.test(J.namespace)) ||
                ((pe.handleObj = J),
                (pe.data = J.data),
                (M = (
                  (C.event.special[J.origType] || {}).handle || J.handler
                ).apply(Y.elem, be)) !== void 0 &&
                  (pe.result = M) === !1 &&
                  (pe.preventDefault(), pe.stopPropagation()));
          return Ve.postDispatch && Ve.postDispatch.call(this, pe), pe.result;
        }
      },
      handlers: function (y, A) {
        var R,
          M,
          Y,
          J,
          re,
          pe = [],
          be = A.delegateCount,
          Ee = y.target;
        if (be && Ee.nodeType && !(y.type === "click" && 1 <= y.button)) {
          for (; Ee !== this; Ee = Ee.parentNode || this)
            if (
              Ee.nodeType === 1 &&
              (y.type !== "click" || Ee.disabled !== !0)
            ) {
              for (J = [], re = {}, R = 0; R < be; R++)
                re[(Y = (M = A[R]).selector + " ")] === void 0 &&
                  (re[Y] = M.needsContext
                    ? -1 < C(Y, this).index(Ee)
                    : C.find(Y, this, null, [Ee]).length),
                  re[Y] && J.push(M);
              J.length && pe.push({ elem: Ee, handlers: J });
            }
        }
        return (
          (Ee = this),
          be < A.length && pe.push({ elem: Ee, handlers: A.slice(be) }),
          pe
        );
      },
      addProp: function (y, A) {
        Object.defineProperty(C.Event.prototype, y, {
          enumerable: !0,
          configurable: !0,
          get: le(A)
            ? function () {
                if (this.originalEvent) return A(this.originalEvent);
              }
            : function () {
                if (this.originalEvent) return this.originalEvent[y];
              },
          set: function (R) {
            Object.defineProperty(this, y, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: R,
            });
          },
        });
      },
      fix: function (y) {
        return y[C.expando] ? y : new C.Event(y);
      },
      special: {
        load: { noBubble: !0 },
        click: {
          setup: function (y) {
            var A = this || y;
            return (
              $r.test(A.type) &&
                A.click &&
                Mt(A, "input") &&
                dt.get(A, "click") === void 0 &&
                ns(A, "click", ts),
              !1
            );
          },
          trigger: function (y) {
            var A = this || y;
            return (
              $r.test(A.type) &&
                A.click &&
                Mt(A, "input") &&
                dt.get(A, "click") === void 0 &&
                ns(A, "click"),
              !0
            );
          },
          _default: function (y) {
            var A = y.target;
            return (
              ($r.test(A.type) &&
                A.click &&
                Mt(A, "input") &&
                dt.get(A, "click")) ||
              Mt(A, "a")
            );
          },
        },
        beforeunload: {
          postDispatch: function (y) {
            y.result !== void 0 &&
              y.originalEvent &&
              (y.originalEvent.returnValue = y.result);
          },
        },
      },
    }),
      (C.removeEvent = function (y, A, R) {
        y.removeEventListener && y.removeEventListener(A, R);
      }),
      (C.Event = function (y, A) {
        if (!(this instanceof C.Event)) return new C.Event(y, A);
        y && y.type
          ? ((this.originalEvent = y),
            (this.type = y.type),
            (this.isDefaultPrevented =
              y.defaultPrevented ||
              (y.defaultPrevented === void 0 && y.returnValue === !1)
                ? ts
                : ms),
            (this.target =
              y.target && y.target.nodeType === 3
                ? y.target.parentNode
                : y.target),
            (this.currentTarget = y.currentTarget),
            (this.relatedTarget = y.relatedTarget))
          : (this.type = y),
          A && C.extend(this, A),
          (this.timeStamp = (y && y.timeStamp) || Date.now()),
          (this[C.expando] = !0);
      }),
      (C.Event.prototype = {
        constructor: C.Event,
        isDefaultPrevented: ms,
        isPropagationStopped: ms,
        isImmediatePropagationStopped: ms,
        isSimulated: !1,
        preventDefault: function () {
          var y = this.originalEvent;
          (this.isDefaultPrevented = ts),
            y && !this.isSimulated && y.preventDefault();
        },
        stopPropagation: function () {
          var y = this.originalEvent;
          (this.isPropagationStopped = ts),
            y && !this.isSimulated && y.stopPropagation();
        },
        stopImmediatePropagation: function () {
          var y = this.originalEvent;
          (this.isImmediatePropagationStopped = ts),
            y && !this.isSimulated && y.stopImmediatePropagation(),
            this.stopPropagation();
        },
      }),
      C.each(
        {
          altKey: !0,
          bubbles: !0,
          cancelable: !0,
          changedTouches: !0,
          ctrlKey: !0,
          detail: !0,
          eventPhase: !0,
          metaKey: !0,
          pageX: !0,
          pageY: !0,
          shiftKey: !0,
          view: !0,
          char: !0,
          code: !0,
          charCode: !0,
          key: !0,
          keyCode: !0,
          button: !0,
          buttons: !0,
          clientX: !0,
          clientY: !0,
          offsetX: !0,
          offsetY: !0,
          pointerId: !0,
          pointerType: !0,
          screenX: !0,
          screenY: !0,
          targetTouches: !0,
          toElement: !0,
          touches: !0,
          which: function (y) {
            var A = y.button;
            return y.which == null && Ns.test(y.type)
              ? y.charCode != null
                ? y.charCode
                : y.keyCode
              : !y.which && A !== void 0 && Na.test(y.type)
              ? 1 & A
                ? 1
                : 2 & A
                ? 3
                : 4 & A
                ? 2
                : 0
              : y.which;
          },
        },
        C.event.addProp
      ),
      C.each({ focus: "focusin", blur: "focusout" }, function (y, A) {
        C.event.special[y] = {
          setup: function () {
            return ns(this, y, La), !1;
          },
          trigger: function () {
            return ns(this, y), !0;
          },
          delegateType: A,
        };
      }),
      C.each(
        {
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout",
        },
        function (y, A) {
          C.event.special[y] = {
            delegateType: A,
            bindType: A,
            handle: function (R) {
              var M,
                Y = R.relatedTarget,
                J = R.handleObj;
              return (
                (Y && (Y === this || C.contains(this, Y))) ||
                  ((R.type = J.origType),
                  (M = J.handler.apply(this, arguments)),
                  (R.type = A)),
                M
              );
            },
          };
        }
      ),
      C.fn.extend({
        on: function (y, A, R, M) {
          return ua(this, y, A, R, M);
        },
        one: function (y, A, R, M) {
          return ua(this, y, A, R, M, 1);
        },
        off: function (y, A, R) {
          var M, Y;
          if (y && y.preventDefault && y.handleObj)
            return (
              (M = y.handleObj),
              C(y.delegateTarget).off(
                M.namespace ? M.origType + "." + M.namespace : M.origType,
                M.selector,
                M.handler
              ),
              this
            );
          if (typeof y == "object") {
            for (Y in y) this.off(Y, A, y[Y]);
            return this;
          }
          return (
            (A !== !1 && typeof A != "function") || ((R = A), (A = void 0)),
            R === !1 && (R = ms),
            this.each(function () {
              C.event.remove(this, y, R, A);
            })
          );
        },
      });
    var Jo =
        /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
      el = /<script|<style|<link/i,
      tl = /checked\s*(?:[^=]|=\s*.checked.)/i,
      nl = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    function Ls(y, A) {
      return (
        (Mt(y, "table") &&
          Mt(A.nodeType !== 11 ? A : A.firstChild, "tr") &&
          C(y).children("tbody")[0]) ||
        y
      );
    }
    function go(y) {
      return (y.type = (y.getAttribute("type") !== null) + "/" + y.type), y;
    }
    function _i(y) {
      return (
        (y.type || "").slice(0, 5) === "true/"
          ? (y.type = y.type.slice(5))
          : y.removeAttribute("type"),
        y
      );
    }
    function qs(y, A) {
      var R, M, Y, J, re, pe, be, Ee;
      if (A.nodeType === 1) {
        if (
          dt.hasData(y) &&
          ((J = dt.access(y)), (re = dt.set(A, J)), (Ee = J.events))
        )
          for (Y in (delete re.handle, (re.events = {}), Ee))
            for (R = 0, M = Ee[Y].length; R < M; R++)
              C.event.add(A, Y, Ee[Y][R]);
        gt.hasData(y) &&
          ((pe = gt.access(y)), (be = C.extend({}, pe)), gt.set(A, be));
      }
    }
    function er(y, A, R, M) {
      A = u.apply([], A);
      var Y,
        J,
        re,
        pe,
        be,
        Ee,
        Ve = 0,
        Ke = y.length,
        De = Ke - 1,
        Me = A[0],
        Et = le(Me);
      if (
        Et ||
        (1 < Ke && typeof Me == "string" && !se.checkClone && tl.test(Me))
      )
        return y.each(function (jt) {
          var Tt = y.eq(jt);
          Et && (A[0] = Me.call(this, jt, Tt.html())), er(Tt, A, R, M);
        });
      if (
        Ke &&
        ((J = (Y = Os(A, y[0].ownerDocument, !1, y, M)).firstChild),
        Y.childNodes.length === 1 && (Y = J),
        J || M)
      ) {
        for (pe = (re = C.map(An(Y, "script"), go)).length; Ve < Ke; Ve++)
          (be = Y),
            Ve !== De &&
              ((be = C.clone(be, !0, !0)), pe && C.merge(re, An(be, "script"))),
            R.call(y[Ve], be, Ve);
        if (pe)
          for (
            Ee = re[re.length - 1].ownerDocument, C.map(re, _i), Ve = 0;
            Ve < pe;
            Ve++
          )
            (be = re[Ve]),
              mr.test(be.type || "") &&
                !dt.access(be, "globalEval") &&
                C.contains(Ee, be) &&
                (be.src && (be.type || "").toLowerCase() !== "module"
                  ? C._evalUrl &&
                    !be.noModule &&
                    C._evalUrl(be.src, {
                      nonce: be.nonce || be.getAttribute("nonce"),
                    })
                  : F(be.textContent.replace(nl, ""), be, Ee));
      }
      return y;
    }
    function ar(y, A, R) {
      for (var M, Y = A ? C.filter(A, y) : y, J = 0; (M = Y[J]) != null; J++)
        R || M.nodeType !== 1 || C.cleanData(An(M)),
          M.parentNode &&
            (R && st(M) && hr(An(M, "script")), M.parentNode.removeChild(M));
      return y;
    }
    C.extend({
      htmlPrefilter: function (y) {
        return y.replace(Jo, "<$1></$2>");
      },
      clone: function (y, A, R) {
        var M,
          Y,
          J,
          re,
          pe,
          be,
          Ee,
          Ve = y.cloneNode(!0),
          Ke = st(y);
        if (
          !(
            se.noCloneChecked ||
            (y.nodeType !== 1 && y.nodeType !== 11) ||
            C.isXMLDoc(y)
          )
        )
          for (re = An(Ve), M = 0, Y = (J = An(y)).length; M < Y; M++)
            (pe = J[M]),
              (be = re[M]),
              (Ee = be.nodeName.toLowerCase()) === "input" && $r.test(pe.type)
                ? (be.checked = pe.checked)
                : (Ee !== "input" && Ee !== "textarea") ||
                  (be.defaultValue = pe.defaultValue);
        if (A)
          if (R)
            for (
              J = J || An(y), re = re || An(Ve), M = 0, Y = J.length;
              M < Y;
              M++
            )
              qs(J[M], re[M]);
          else qs(y, Ve);
        return (
          0 < (re = An(Ve, "script")).length && hr(re, !Ke && An(y, "script")),
          Ve
        );
      },
      cleanData: function (y) {
        for (
          var A, R, M, Y = C.event.special, J = 0;
          (R = y[J]) !== void 0;
          J++
        )
          if (Rt(R)) {
            if ((A = R[dt.expando])) {
              if (A.events)
                for (M in A.events)
                  Y[M] ? C.event.remove(R, M) : C.removeEvent(R, M, A.handle);
              R[dt.expando] = void 0;
            }
            R[gt.expando] && (R[gt.expando] = void 0);
          }
      },
    }),
      C.fn.extend({
        detach: function (y) {
          return ar(this, y, !0);
        },
        remove: function (y) {
          return ar(this, y);
        },
        text: function (y) {
          return yt(
            this,
            function (A) {
              return A === void 0
                ? C.text(this)
                : this.empty().each(function () {
                    (this.nodeType !== 1 &&
                      this.nodeType !== 11 &&
                      this.nodeType !== 9) ||
                      (this.textContent = A);
                  });
            },
            null,
            y,
            arguments.length
          );
        },
        append: function () {
          return er(this, arguments, function (y) {
            (this.nodeType !== 1 &&
              this.nodeType !== 11 &&
              this.nodeType !== 9) ||
              Ls(this, y).appendChild(y);
          });
        },
        prepend: function () {
          return er(this, arguments, function (y) {
            if (
              this.nodeType === 1 ||
              this.nodeType === 11 ||
              this.nodeType === 9
            ) {
              var A = Ls(this, y);
              A.insertBefore(y, A.firstChild);
            }
          });
        },
        before: function () {
          return er(this, arguments, function (y) {
            this.parentNode && this.parentNode.insertBefore(y, this);
          });
        },
        after: function () {
          return er(this, arguments, function (y) {
            this.parentNode &&
              this.parentNode.insertBefore(y, this.nextSibling);
          });
        },
        empty: function () {
          for (var y, A = 0; (y = this[A]) != null; A++)
            y.nodeType === 1 && (C.cleanData(An(y, !1)), (y.textContent = ""));
          return this;
        },
        clone: function (y, A) {
          return (
            (y = y != null && y),
            (A = A ?? y),
            this.map(function () {
              return C.clone(this, y, A);
            })
          );
        },
        html: function (y) {
          return yt(
            this,
            function (A) {
              var R = this[0] || {},
                M = 0,
                Y = this.length;
              if (A === void 0 && R.nodeType === 1) return R.innerHTML;
              if (
                typeof A == "string" &&
                !el.test(A) &&
                !Vn[(ui.exec(A) || ["", ""])[1].toLowerCase()]
              ) {
                A = C.htmlPrefilter(A);
                try {
                  for (; M < Y; M++)
                    (R = this[M] || {}).nodeType === 1 &&
                      (C.cleanData(An(R, !1)), (R.innerHTML = A));
                  R = 0;
                } catch {}
              }
              R && this.empty().append(A);
            },
            null,
            y,
            arguments.length
          );
        },
        replaceWith: function () {
          var y = [];
          return er(
            this,
            arguments,
            function (A) {
              var R = this.parentNode;
              C.inArray(this, y) < 0 &&
                (C.cleanData(An(this)), R && R.replaceChild(A, this));
            },
            y
          );
        },
      }),
      C.each(
        {
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith",
        },
        function (y, A) {
          C.fn[y] = function (R) {
            for (
              var M, Y = [], J = C(R), re = J.length - 1, pe = 0;
              pe <= re;
              pe++
            )
              (M = pe === re ? this : this.clone(!0)),
                C(J[pe])[A](M),
                g.apply(Y, M.get());
            return this.pushStack(Y);
          };
        }
      );
    var Fi = new RegExp("^(" + jr + ")(?!px)[a-z%]+$", "i"),
      Pr = function (y) {
        var A = y.ownerDocument.defaultView;
        return (A && A.opener) || (A = t), A.getComputedStyle(y);
      },
      Da = new RegExp(zn.join("|"), "i");
    function vs(y, A, R) {
      var M,
        Y,
        J,
        re,
        pe = y.style;
      return (
        (R = R || Pr(y)) &&
          ((re = R.getPropertyValue(A) || R[A]) !== "" ||
            st(y) ||
            (re = C.style(y, A)),
          !se.pixelBoxStyles() &&
            Fi.test(re) &&
            Da.test(A) &&
            ((M = pe.width),
            (Y = pe.minWidth),
            (J = pe.maxWidth),
            (pe.minWidth = pe.maxWidth = pe.width = re),
            (re = R.width),
            (pe.width = M),
            (pe.minWidth = Y),
            (pe.maxWidth = J))),
        re !== void 0 ? re + "" : re
      );
    }
    function Hn(y, A) {
      return {
        get: function () {
          if (!y()) return (this.get = A).apply(this, arguments);
          delete this.get;
        },
      };
    }
    (function () {
      function y() {
        if (be) {
          (pe.style.cssText =
            "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
            (be.style.cssText =
              "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
            Te.appendChild(pe).appendChild(be);
          var Ee = t.getComputedStyle(be);
          (R = Ee.top !== "1%"),
            (re = A(Ee.marginLeft) === 12),
            (be.style.right = "60%"),
            (J = A(Ee.right) === 36),
            (M = A(Ee.width) === 36),
            (be.style.position = "absolute"),
            (Y = A(be.offsetWidth / 3) === 12),
            Te.removeChild(pe),
            (be = null);
        }
      }
      function A(Ee) {
        return Math.round(parseFloat(Ee));
      }
      var R,
        M,
        Y,
        J,
        re,
        pe = r.createElement("div"),
        be = r.createElement("div");
      be.style &&
        ((be.style.backgroundClip = "content-box"),
        (be.cloneNode(!0).style.backgroundClip = ""),
        (se.clearCloneStyle = be.style.backgroundClip === "content-box"),
        C.extend(se, {
          boxSizingReliable: function () {
            return y(), M;
          },
          pixelBoxStyles: function () {
            return y(), J;
          },
          pixelPosition: function () {
            return y(), R;
          },
          reliableMarginLeft: function () {
            return y(), re;
          },
          scrollboxSize: function () {
            return y(), Y;
          },
        }));
    })();
    var rs = ["Webkit", "Moz", "ms"],
      Ks = r.createElement("div").style,
      is = {};
    function Si(y) {
      var A = C.cssProps[y] || is[y];
      return (
        A ||
        (y in Ks
          ? y
          : (is[y] =
              (function (R) {
                for (
                  var M = R[0].toUpperCase() + R.slice(1), Y = rs.length;
                  Y--;

                )
                  if ((R = rs[Y] + M) in Ks) return R;
              })(y) || y))
      );
    }
    var U = /^(none|table(?!-c[ea]).+)/,
      i = /^--/,
      s = { position: "absolute", visibility: "hidden", display: "block" },
      l = { letterSpacing: "0", fontWeight: "400" };
    function c(y, A, R) {
      var M = vn.exec(A);
      return M ? Math.max(0, M[2] - (R || 0)) + (M[3] || "px") : A;
    }
    function h(y, A, R, M, Y, J) {
      var re = A === "width" ? 1 : 0,
        pe = 0,
        be = 0;
      if (R === (M ? "border" : "content")) return 0;
      for (; re < 4; re += 2)
        R === "margin" && (be += C.css(y, R + zn[re], !0, Y)),
          M
            ? (R === "content" && (be -= C.css(y, "padding" + zn[re], !0, Y)),
              R !== "margin" &&
                (be -= C.css(y, "border" + zn[re] + "Width", !0, Y)))
            : ((be += C.css(y, "padding" + zn[re], !0, Y)),
              R !== "padding"
                ? (be += C.css(y, "border" + zn[re] + "Width", !0, Y))
                : (pe += C.css(y, "border" + zn[re] + "Width", !0, Y)));
      return (
        !M &&
          0 <= J &&
          (be +=
            Math.max(
              0,
              Math.ceil(
                y["offset" + A[0].toUpperCase() + A.slice(1)] -
                  J -
                  be -
                  pe -
                  0.5
              )
            ) || 0),
        be
      );
    }
    function d(y, A, R) {
      var M = Pr(y),
        Y =
          (!se.boxSizingReliable() || R) &&
          C.css(y, "boxSizing", !1, M) === "border-box",
        J = Y,
        re = vs(y, A, M),
        pe = "offset" + A[0].toUpperCase() + A.slice(1);
      if (Fi.test(re)) {
        if (!R) return re;
        re = "auto";
      }
      return (
        ((!se.boxSizingReliable() && Y) ||
          re === "auto" ||
          (!parseFloat(re) && C.css(y, "display", !1, M) === "inline")) &&
          y.getClientRects().length &&
          ((Y = C.css(y, "boxSizing", !1, M) === "border-box"),
          (J = pe in y) && (re = y[pe])),
        (re = parseFloat(re) || 0) +
          h(y, A, R || (Y ? "border" : "content"), J, M, re) +
          "px"
      );
    }
    function f(y, A, R, M, Y) {
      return new f.prototype.init(y, A, R, M, Y);
    }
    C.extend({
      cssHooks: {
        opacity: {
          get: function (y, A) {
            if (A) {
              var R = vs(y, "opacity");
              return R === "" ? "1" : R;
            }
          },
        },
      },
      cssNumber: {
        animationIterationCount: !0,
        columnCount: !0,
        fillOpacity: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
      },
      cssProps: {},
      style: function (y, A, R, M) {
        if (y && y.nodeType !== 3 && y.nodeType !== 8 && y.style) {
          var Y,
            J,
            re,
            pe = $t(A),
            be = i.test(A),
            Ee = y.style;
          if (
            (be || (A = Si(pe)),
            (re = C.cssHooks[A] || C.cssHooks[pe]),
            R === void 0)
          )
            return re && "get" in re && (Y = re.get(y, !1, M)) !== void 0
              ? Y
              : Ee[A];
          (J = typeof R) == "string" &&
            (Y = vn.exec(R)) &&
            Y[1] &&
            ((R = nn(y, A, Y)), (J = "number")),
            R != null &&
              R == R &&
              (J !== "number" ||
                be ||
                (R += (Y && Y[3]) || (C.cssNumber[pe] ? "" : "px")),
              se.clearCloneStyle ||
                R !== "" ||
                A.indexOf("background") !== 0 ||
                (Ee[A] = "inherit"),
              (re && "set" in re && (R = re.set(y, R, M)) === void 0) ||
                (be ? Ee.setProperty(A, R) : (Ee[A] = R)));
        }
      },
      css: function (y, A, R, M) {
        var Y,
          J,
          re,
          pe = $t(A);
        return (
          i.test(A) || (A = Si(pe)),
          (re = C.cssHooks[A] || C.cssHooks[pe]) &&
            "get" in re &&
            (Y = re.get(y, !0, R)),
          Y === void 0 && (Y = vs(y, A, M)),
          Y === "normal" && A in l && (Y = l[A]),
          R === "" || R
            ? ((J = parseFloat(Y)), R === !0 || isFinite(J) ? J || 0 : Y)
            : Y
        );
      },
    }),
      C.each(["height", "width"], function (y, A) {
        C.cssHooks[A] = {
          get: function (R, M, Y) {
            if (M)
              return !U.test(C.css(R, "display")) ||
                (R.getClientRects().length && R.getBoundingClientRect().width)
                ? d(R, A, Y)
                : Dt(R, s, function () {
                    return d(R, A, Y);
                  });
          },
          set: function (R, M, Y) {
            var J,
              re = Pr(R),
              pe = !se.scrollboxSize() && re.position === "absolute",
              be = (pe || Y) && C.css(R, "boxSizing", !1, re) === "border-box",
              Ee = Y ? h(R, A, Y, be, re) : 0;
            return (
              be &&
                pe &&
                (Ee -= Math.ceil(
                  R["offset" + A[0].toUpperCase() + A.slice(1)] -
                    parseFloat(re[A]) -
                    h(R, A, "border", !1, re) -
                    0.5
                )),
              Ee &&
                (J = vn.exec(M)) &&
                (J[3] || "px") !== "px" &&
                ((R.style[A] = M), (M = C.css(R, A))),
              c(0, M, Ee)
            );
          },
        };
      }),
      (C.cssHooks.marginLeft = Hn(se.reliableMarginLeft, function (y, A) {
        if (A)
          return (
            (parseFloat(vs(y, "marginLeft")) ||
              y.getBoundingClientRect().left -
                Dt(y, { marginLeft: 0 }, function () {
                  return y.getBoundingClientRect().left;
                })) + "px"
          );
      })),
      C.each({ margin: "", padding: "", border: "Width" }, function (y, A) {
        (C.cssHooks[y + A] = {
          expand: function (R) {
            for (
              var M = 0, Y = {}, J = typeof R == "string" ? R.split(" ") : [R];
              M < 4;
              M++
            )
              Y[y + zn[M] + A] = J[M] || J[M - 2] || J[0];
            return Y;
          },
        }),
          y !== "margin" && (C.cssHooks[y + A].set = c);
      }),
      C.fn.extend({
        css: function (y, A) {
          return yt(
            this,
            function (R, M, Y) {
              var J,
                re,
                pe = {},
                be = 0;
              if (Array.isArray(M)) {
                for (J = Pr(R), re = M.length; be < re; be++)
                  pe[M[be]] = C.css(R, M[be], !1, J);
                return pe;
              }
              return Y !== void 0 ? C.style(R, M, Y) : C.css(R, M);
            },
            y,
            A,
            1 < arguments.length
          );
        },
      }),
      (((C.Tween = f).prototype = {
        constructor: f,
        init: function (y, A, R, M, Y, J) {
          (this.elem = y),
            (this.prop = R),
            (this.easing = Y || C.easing._default),
            (this.options = A),
            (this.start = this.now = this.cur()),
            (this.end = M),
            (this.unit = J || (C.cssNumber[R] ? "" : "px"));
        },
        cur: function () {
          var y = f.propHooks[this.prop];
          return y && y.get ? y.get(this) : f.propHooks._default.get(this);
        },
        run: function (y) {
          var A,
            R = f.propHooks[this.prop];
          return (
            this.options.duration
              ? (this.pos = A =
                  C.easing[this.easing](
                    y,
                    this.options.duration * y,
                    0,
                    1,
                    this.options.duration
                  ))
              : (this.pos = A = y),
            (this.now = (this.end - this.start) * A + this.start),
            this.options.step &&
              this.options.step.call(this.elem, this.now, this),
            R && R.set ? R.set(this) : f.propHooks._default.set(this),
            this
          );
        },
      }).init.prototype = f.prototype),
      ((f.propHooks = {
        _default: {
          get: function (y) {
            var A;
            return y.elem.nodeType !== 1 ||
              (y.elem[y.prop] != null && y.elem.style[y.prop] == null)
              ? y.elem[y.prop]
              : (A = C.css(y.elem, y.prop, "")) && A !== "auto"
              ? A
              : 0;
          },
          set: function (y) {
            C.fx.step[y.prop]
              ? C.fx.step[y.prop](y)
              : y.elem.nodeType !== 1 ||
                (!C.cssHooks[y.prop] && y.elem.style[Si(y.prop)] == null)
              ? (y.elem[y.prop] = y.now)
              : C.style(y.elem, y.prop, y.now + y.unit);
          },
        },
      }).scrollTop = f.propHooks.scrollLeft =
        {
          set: function (y) {
            y.elem.nodeType && y.elem.parentNode && (y.elem[y.prop] = y.now);
          },
        }),
      (C.easing = {
        linear: function (y) {
          return y;
        },
        swing: function (y) {
          return 0.5 - Math.cos(y * Math.PI) / 2;
        },
        _default: "swing",
      }),
      (C.fx = f.prototype.init),
      (C.fx.step = {});
    var p,
      v,
      b,
      _,
      S = /^(?:toggle|show|hide)$/,
      T = /queueHooks$/;
    function O() {
      v &&
        (r.hidden === !1 && t.requestAnimationFrame
          ? t.requestAnimationFrame(O)
          : t.setTimeout(O, C.fx.interval),
        C.fx.tick());
    }
    function D() {
      return (
        t.setTimeout(function () {
          p = void 0;
        }),
        (p = Date.now())
      );
    }
    function V(y, A) {
      var R,
        M = 0,
        Y = { height: y };
      for (A = A ? 1 : 0; M < 4; M += 2 - A)
        Y["margin" + (R = zn[M])] = Y["padding" + R] = y;
      return A && (Y.opacity = Y.width = y), Y;
    }
    function G(y, A, R) {
      for (
        var M,
          Y = (Q.tweeners[A] || []).concat(Q.tweeners["*"]),
          J = 0,
          re = Y.length;
        J < re;
        J++
      )
        if ((M = Y[J].call(R, A, y))) return M;
    }
    function Q(y, A, R) {
      var M,
        Y,
        J = 0,
        re = Q.prefilters.length,
        pe = C.Deferred().always(function () {
          delete be.elem;
        }),
        be = function () {
          if (Y) return !1;
          for (
            var Ke = p || D(),
              De = Math.max(0, Ee.startTime + Ee.duration - Ke),
              Me = 1 - (De / Ee.duration || 0),
              Et = 0,
              jt = Ee.tweens.length;
            Et < jt;
            Et++
          )
            Ee.tweens[Et].run(Me);
          return (
            pe.notifyWith(y, [Ee, Me, De]),
            Me < 1 && jt
              ? De
              : (jt || pe.notifyWith(y, [Ee, 1, 0]),
                pe.resolveWith(y, [Ee]),
                !1)
          );
        },
        Ee = pe.promise({
          elem: y,
          props: C.extend({}, A),
          opts: C.extend(
            !0,
            { specialEasing: {}, easing: C.easing._default },
            R
          ),
          originalProperties: A,
          originalOptions: R,
          startTime: p || D(),
          duration: R.duration,
          tweens: [],
          createTween: function (Ke, De) {
            var Me = C.Tween(
              y,
              Ee.opts,
              Ke,
              De,
              Ee.opts.specialEasing[Ke] || Ee.opts.easing
            );
            return Ee.tweens.push(Me), Me;
          },
          stop: function (Ke) {
            var De = 0,
              Me = Ke ? Ee.tweens.length : 0;
            if (Y) return this;
            for (Y = !0; De < Me; De++) Ee.tweens[De].run(1);
            return (
              Ke
                ? (pe.notifyWith(y, [Ee, 1, 0]), pe.resolveWith(y, [Ee, Ke]))
                : pe.rejectWith(y, [Ee, Ke]),
              this
            );
          },
        }),
        Ve = Ee.props;
      for (
        !(function (Ke, De) {
          var Me, Et, jt, Tt, tr;
          for (Me in Ke)
            if (
              ((jt = De[(Et = $t(Me))]),
              (Tt = Ke[Me]),
              Array.isArray(Tt) && ((jt = Tt[1]), (Tt = Ke[Me] = Tt[0])),
              Me !== Et && ((Ke[Et] = Tt), delete Ke[Me]),
              (tr = C.cssHooks[Et]) && ("expand" in tr))
            )
              for (Me in ((Tt = tr.expand(Tt)), delete Ke[Et], Tt))
                (Me in Ke) || ((Ke[Me] = Tt[Me]), (De[Me] = jt));
            else De[Et] = jt;
        })(Ve, Ee.opts.specialEasing);
        J < re;
        J++
      )
        if ((M = Q.prefilters[J].call(Ee, y, Ve, Ee.opts)))
          return (
            le(M.stop) &&
              (C._queueHooks(Ee.elem, Ee.opts.queue).stop = M.stop.bind(M)),
            M
          );
      return (
        C.map(Ve, G, Ee),
        le(Ee.opts.start) && Ee.opts.start.call(y, Ee),
        Ee.progress(Ee.opts.progress)
          .done(Ee.opts.done, Ee.opts.complete)
          .fail(Ee.opts.fail)
          .always(Ee.opts.always),
        C.fx.timer(C.extend(be, { elem: y, anim: Ee, queue: Ee.opts.queue })),
        Ee
      );
    }
    (C.Animation = C.extend(Q, {
      tweeners: {
        "*": [
          function (y, A) {
            var R = this.createTween(y, A);
            return nn(R.elem, y, vn.exec(A), R), R;
          },
        ],
      },
      tweener: function (y, A) {
        le(y) ? ((A = y), (y = ["*"])) : (y = y.match(Oe));
        for (var R, M = 0, Y = y.length; M < Y; M++)
          (R = y[M]),
            (Q.tweeners[R] = Q.tweeners[R] || []),
            Q.tweeners[R].unshift(A);
      },
      prefilters: [
        function (y, A, R) {
          var M,
            Y,
            J,
            re,
            pe,
            be,
            Ee,
            Ve,
            Ke = "width" in A || "height" in A,
            De = this,
            Me = {},
            Et = y.style,
            jt = y.nodeType && qe(y),
            Tt = dt.get(y, "fxshow");
          for (M in (R.queue ||
            ((re = C._queueHooks(y, "fx")).unqueued == null &&
              ((re.unqueued = 0),
              (pe = re.empty.fire),
              (re.empty.fire = function () {
                re.unqueued || pe();
              })),
            re.unqueued++,
            De.always(function () {
              De.always(function () {
                re.unqueued--, C.queue(y, "fx").length || re.empty.fire();
              });
            })),
          A))
            if (((Y = A[M]), S.test(Y))) {
              if (
                (delete A[M],
                (J = J || Y === "toggle"),
                Y === (jt ? "hide" : "show"))
              ) {
                if (Y !== "show" || !Tt || Tt[M] === void 0) continue;
                jt = !0;
              }
              Me[M] = (Tt && Tt[M]) || C.style(y, M);
            }
          if ((be = !C.isEmptyObject(A)) || !C.isEmptyObject(Me))
            for (M in (Ke &&
              y.nodeType === 1 &&
              ((R.overflow = [Et.overflow, Et.overflowX, Et.overflowY]),
              (Ee = Tt && Tt.display) == null && (Ee = dt.get(y, "display")),
              (Ve = C.css(y, "display")) === "none" &&
                (Ee
                  ? (Ve = Ee)
                  : (_r([y], !0),
                    (Ee = y.style.display || Ee),
                    (Ve = C.css(y, "display")),
                    _r([y]))),
              (Ve === "inline" || (Ve === "inline-block" && Ee != null)) &&
                C.css(y, "float") === "none" &&
                (be ||
                  (De.done(function () {
                    Et.display = Ee;
                  }),
                  Ee == null &&
                    ((Ve = Et.display), (Ee = Ve === "none" ? "" : Ve))),
                (Et.display = "inline-block"))),
            R.overflow &&
              ((Et.overflow = "hidden"),
              De.always(function () {
                (Et.overflow = R.overflow[0]),
                  (Et.overflowX = R.overflow[1]),
                  (Et.overflowY = R.overflow[2]);
              })),
            (be = !1),
            Me))
              be ||
                (Tt
                  ? "hidden" in Tt && (jt = Tt.hidden)
                  : (Tt = dt.access(y, "fxshow", { display: Ee })),
                J && (Tt.hidden = !jt),
                jt && _r([y], !0),
                De.done(function () {
                  for (M in (jt || _r([y]), dt.remove(y, "fxshow"), Me))
                    C.style(y, M, Me[M]);
                })),
                (be = G(jt ? Tt[M] : 0, M, De)),
                M in Tt ||
                  ((Tt[M] = be.start),
                  jt && ((be.end = be.start), (be.start = 0)));
        },
      ],
      prefilter: function (y, A) {
        A ? Q.prefilters.unshift(y) : Q.prefilters.push(y);
      },
    })),
      (C.speed = function (y, A, R) {
        var M =
          y && typeof y == "object"
            ? C.extend({}, y)
            : {
                complete: R || (!R && A) || (le(y) && y),
                duration: y,
                easing: (R && A) || (A && !le(A) && A),
              };
        return (
          C.fx.off
            ? (M.duration = 0)
            : typeof M.duration != "number" &&
              (M.duration in C.fx.speeds
                ? (M.duration = C.fx.speeds[M.duration])
                : (M.duration = C.fx.speeds._default)),
          (M.queue != null && M.queue !== !0) || (M.queue = "fx"),
          (M.old = M.complete),
          (M.complete = function () {
            le(M.old) && M.old.call(this), M.queue && C.dequeue(this, M.queue);
          }),
          M
        );
      }),
      C.fn.extend({
        fadeTo: function (y, A, R, M) {
          return this.filter(qe)
            .css("opacity", 0)
            .show()
            .end()
            .animate({ opacity: A }, y, R, M);
        },
        animate: function (y, A, R, M) {
          var Y = C.isEmptyObject(y),
            J = C.speed(A, R, M),
            re = function () {
              var pe = Q(this, C.extend({}, y), J);
              (Y || dt.get(this, "finish")) && pe.stop(!0);
            };
          return (
            (re.finish = re),
            Y || J.queue === !1 ? this.each(re) : this.queue(J.queue, re)
          );
        },
        stop: function (y, A, R) {
          var M = function (Y) {
            var J = Y.stop;
            delete Y.stop, J(R);
          };
          return (
            typeof y != "string" && ((R = A), (A = y), (y = void 0)),
            A && y !== !1 && this.queue(y || "fx", []),
            this.each(function () {
              var Y = !0,
                J = y != null && y + "queueHooks",
                re = C.timers,
                pe = dt.get(this);
              if (J) pe[J] && pe[J].stop && M(pe[J]);
              else for (J in pe) pe[J] && pe[J].stop && T.test(J) && M(pe[J]);
              for (J = re.length; J--; )
                re[J].elem !== this ||
                  (y != null && re[J].queue !== y) ||
                  (re[J].anim.stop(R), (Y = !1), re.splice(J, 1));
              (!Y && R) || C.dequeue(this, y);
            })
          );
        },
        finish: function (y) {
          return (
            y !== !1 && (y = y || "fx"),
            this.each(function () {
              var A,
                R = dt.get(this),
                M = R[y + "queue"],
                Y = R[y + "queueHooks"],
                J = C.timers,
                re = M ? M.length : 0;
              for (
                R.finish = !0,
                  C.queue(this, y, []),
                  Y && Y.stop && Y.stop.call(this, !0),
                  A = J.length;
                A--;

              )
                J[A].elem === this &&
                  J[A].queue === y &&
                  (J[A].anim.stop(!0), J.splice(A, 1));
              for (A = 0; A < re; A++)
                M[A] && M[A].finish && M[A].finish.call(this);
              delete R.finish;
            })
          );
        },
      }),
      C.each(["toggle", "show", "hide"], function (y, A) {
        var R = C.fn[A];
        C.fn[A] = function (M, Y, J) {
          return M == null || typeof M == "boolean"
            ? R.apply(this, arguments)
            : this.animate(V(A, !0), M, Y, J);
        };
      }),
      C.each(
        {
          slideDown: V("show"),
          slideUp: V("hide"),
          slideToggle: V("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" },
        },
        function (y, A) {
          C.fn[y] = function (R, M, Y) {
            return this.animate(A, R, M, Y);
          };
        }
      ),
      (C.timers = []),
      (C.fx.tick = function () {
        var y,
          A = 0,
          R = C.timers;
        for (p = Date.now(); A < R.length; A++)
          (y = R[A])() || R[A] !== y || R.splice(A--, 1);
        R.length || C.fx.stop(), (p = void 0);
      }),
      (C.fx.timer = function (y) {
        C.timers.push(y), C.fx.start();
      }),
      (C.fx.interval = 13),
      (C.fx.start = function () {
        v || ((v = !0), O());
      }),
      (C.fx.stop = function () {
        v = null;
      }),
      (C.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
      (C.fn.delay = function (y, A) {
        return (
          (y = (C.fx && C.fx.speeds[y]) || y),
          (A = A || "fx"),
          this.queue(A, function (R, M) {
            var Y = t.setTimeout(R, y);
            M.stop = function () {
              t.clearTimeout(Y);
            };
          })
        );
      }),
      (b = r.createElement("input")),
      (_ = r.createElement("select").appendChild(r.createElement("option"))),
      (b.type = "checkbox"),
      (se.checkOn = b.value !== ""),
      (se.optSelected = _.selected),
      ((b = r.createElement("input")).value = "t"),
      (b.type = "radio"),
      (se.radioValue = b.value === "t");
    var m,
      k = C.expr.attrHandle;
    C.fn.extend({
      attr: function (y, A) {
        return yt(this, C.attr, y, A, 1 < arguments.length);
      },
      removeAttr: function (y) {
        return this.each(function () {
          C.removeAttr(this, y);
        });
      },
    }),
      C.extend({
        attr: function (y, A, R) {
          var M,
            Y,
            J = y.nodeType;
          if (J !== 3 && J !== 8 && J !== 2)
            return typeof y.getAttribute > "u"
              ? C.prop(y, A, R)
              : ((J === 1 && C.isXMLDoc(y)) ||
                  (Y =
                    C.attrHooks[A.toLowerCase()] ||
                    (C.expr.match.bool.test(A) ? m : void 0)),
                R !== void 0
                  ? R === null
                    ? void C.removeAttr(y, A)
                    : Y && "set" in Y && (M = Y.set(y, R, A)) !== void 0
                    ? M
                    : (y.setAttribute(A, R + ""), R)
                  : Y && "get" in Y && (M = Y.get(y, A)) !== null
                  ? M
                  : (M = C.find.attr(y, A)) == null
                  ? void 0
                  : M);
        },
        attrHooks: {
          type: {
            set: function (y, A) {
              if (!se.radioValue && A === "radio" && Mt(y, "input")) {
                var R = y.value;
                return y.setAttribute("type", A), R && (y.value = R), A;
              }
            },
          },
        },
        removeAttr: function (y, A) {
          var R,
            M = 0,
            Y = A && A.match(Oe);
          if (Y && y.nodeType === 1)
            for (; (R = Y[M++]); ) y.removeAttribute(R);
        },
      }),
      (m = {
        set: function (y, A, R) {
          return A === !1 ? C.removeAttr(y, R) : y.setAttribute(R, R), R;
        },
      }),
      C.each(C.expr.match.bool.source.match(/\w+/g), function (y, A) {
        var R = k[A] || C.find.attr;
        k[A] = function (M, Y, J) {
          var re,
            pe,
            be = Y.toLowerCase();
          return (
            J ||
              ((pe = k[be]),
              (k[be] = re),
              (re = R(M, Y, J) != null ? be : null),
              (k[be] = pe)),
            re
          );
        };
      });
    var N = /^(?:input|select|textarea|button)$/i,
      X = /^(?:a|area)$/i;
    function K(y) {
      return (y.match(Oe) || []).join(" ");
    }
    function ee(y) {
      return (y.getAttribute && y.getAttribute("class")) || "";
    }
    function fe(y) {
      return Array.isArray(y) ? y : (typeof y == "string" && y.match(Oe)) || [];
    }
    C.fn.extend({
      prop: function (y, A) {
        return yt(this, C.prop, y, A, 1 < arguments.length);
      },
      removeProp: function (y) {
        return this.each(function () {
          delete this[C.propFix[y] || y];
        });
      },
    }),
      C.extend({
        prop: function (y, A, R) {
          var M,
            Y,
            J = y.nodeType;
          if (J !== 3 && J !== 8 && J !== 2)
            return (
              (J === 1 && C.isXMLDoc(y)) ||
                ((A = C.propFix[A] || A), (Y = C.propHooks[A])),
              R !== void 0
                ? Y && "set" in Y && (M = Y.set(y, R, A)) !== void 0
                  ? M
                  : (y[A] = R)
                : Y && "get" in Y && (M = Y.get(y, A)) !== null
                ? M
                : y[A]
            );
        },
        propHooks: {
          tabIndex: {
            get: function (y) {
              var A = C.find.attr(y, "tabindex");
              return A
                ? parseInt(A, 10)
                : N.test(y.nodeName) || (X.test(y.nodeName) && y.href)
                ? 0
                : -1;
            },
          },
        },
        propFix: { for: "htmlFor", class: "className" },
      }),
      se.optSelected ||
        (C.propHooks.selected = {
          get: function (y) {
            var A = y.parentNode;
            return A && A.parentNode && A.parentNode.selectedIndex, null;
          },
          set: function (y) {
            var A = y.parentNode;
            A && (A.selectedIndex, A.parentNode && A.parentNode.selectedIndex);
          },
        }),
      C.each(
        [
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable",
        ],
        function () {
          C.propFix[this.toLowerCase()] = this;
        }
      ),
      C.fn.extend({
        addClass: function (y) {
          var A,
            R,
            M,
            Y,
            J,
            re,
            pe,
            be = 0;
          if (le(y))
            return this.each(function (Ee) {
              C(this).addClass(y.call(this, Ee, ee(this)));
            });
          if ((A = fe(y)).length) {
            for (; (R = this[be++]); )
              if (((Y = ee(R)), (M = R.nodeType === 1 && " " + K(Y) + " "))) {
                for (re = 0; (J = A[re++]); )
                  M.indexOf(" " + J + " ") < 0 && (M += J + " ");
                Y !== (pe = K(M)) && R.setAttribute("class", pe);
              }
          }
          return this;
        },
        removeClass: function (y) {
          var A,
            R,
            M,
            Y,
            J,
            re,
            pe,
            be = 0;
          if (le(y))
            return this.each(function (Ee) {
              C(this).removeClass(y.call(this, Ee, ee(this)));
            });
          if (!arguments.length) return this.attr("class", "");
          if ((A = fe(y)).length) {
            for (; (R = this[be++]); )
              if (((Y = ee(R)), (M = R.nodeType === 1 && " " + K(Y) + " "))) {
                for (re = 0; (J = A[re++]); )
                  for (; -1 < M.indexOf(" " + J + " "); )
                    M = M.replace(" " + J + " ", " ");
                Y !== (pe = K(M)) && R.setAttribute("class", pe);
              }
          }
          return this;
        },
        toggleClass: function (y, A) {
          var R = typeof y,
            M = R === "string" || Array.isArray(y);
          return typeof A == "boolean" && M
            ? A
              ? this.addClass(y)
              : this.removeClass(y)
            : le(y)
            ? this.each(function (Y) {
                C(this).toggleClass(y.call(this, Y, ee(this), A), A);
              })
            : this.each(function () {
                var Y, J, re, pe;
                if (M)
                  for (J = 0, re = C(this), pe = fe(y); (Y = pe[J++]); )
                    re.hasClass(Y) ? re.removeClass(Y) : re.addClass(Y);
                else
                  (y !== void 0 && R !== "boolean") ||
                    ((Y = ee(this)) && dt.set(this, "__className__", Y),
                    this.setAttribute &&
                      this.setAttribute(
                        "class",
                        Y || y === !1 ? "" : dt.get(this, "__className__") || ""
                      ));
              });
        },
        hasClass: function (y) {
          var A,
            R,
            M = 0;
          for (A = " " + y + " "; (R = this[M++]); )
            if (R.nodeType === 1 && -1 < (" " + K(ee(R)) + " ").indexOf(A))
              return !0;
          return !1;
        },
      });
    var ge = /\r/g;
    C.fn.extend({
      val: function (y) {
        var A,
          R,
          M,
          Y = this[0];
        return arguments.length
          ? ((M = le(y)),
            this.each(function (J) {
              var re;
              this.nodeType === 1 &&
                ((re = M ? y.call(this, J, C(this).val()) : y) == null
                  ? (re = "")
                  : typeof re == "number"
                  ? (re += "")
                  : Array.isArray(re) &&
                    (re = C.map(re, function (pe) {
                      return pe == null ? "" : pe + "";
                    })),
                ((A =
                  C.valHooks[this.type] ||
                  C.valHooks[this.nodeName.toLowerCase()]) &&
                  "set" in A &&
                  A.set(this, re, "value") !== void 0) ||
                  (this.value = re));
            }))
          : Y
          ? (A = C.valHooks[Y.type] || C.valHooks[Y.nodeName.toLowerCase()]) &&
            "get" in A &&
            (R = A.get(Y, "value")) !== void 0
            ? R
            : typeof (R = Y.value) == "string"
            ? R.replace(ge, "")
            : R ?? ""
          : void 0;
      },
    }),
      C.extend({
        valHooks: {
          option: {
            get: function (y) {
              var A = C.find.attr(y, "value");
              return A ?? K(C.text(y));
            },
          },
          select: {
            get: function (y) {
              var A,
                R,
                M,
                Y = y.options,
                J = y.selectedIndex,
                re = y.type === "select-one",
                pe = re ? null : [],
                be = re ? J + 1 : Y.length;
              for (M = J < 0 ? be : re ? J : 0; M < be; M++)
                if (
                  ((R = Y[M]).selected || M === J) &&
                  !R.disabled &&
                  (!R.parentNode.disabled || !Mt(R.parentNode, "optgroup"))
                ) {
                  if (((A = C(R).val()), re)) return A;
                  pe.push(A);
                }
              return pe;
            },
            set: function (y, A) {
              for (
                var R, M, Y = y.options, J = C.makeArray(A), re = Y.length;
                re--;

              )
                ((M = Y[re]).selected =
                  -1 < C.inArray(C.valHooks.option.get(M), J)) && (R = !0);
              return R || (y.selectedIndex = -1), J;
            },
          },
        },
      }),
      C.each(["radio", "checkbox"], function () {
        (C.valHooks[this] = {
          set: function (y, A) {
            if (Array.isArray(A))
              return (y.checked = -1 < C.inArray(C(y).val(), A));
          },
        }),
          se.checkOn ||
            (C.valHooks[this].get = function (y) {
              return y.getAttribute("value") === null ? "on" : y.value;
            });
      }),
      (se.focusin = "onfocusin" in t);
    var Pe = /^(?:focusinfocus|focusoutblur)$/,
      We = function (y) {
        y.stopPropagation();
      };
    C.extend(C.event, {
      trigger: function (y, A, R, M) {
        var Y,
          J,
          re,
          pe,
          be,
          Ee,
          Ve,
          Ke,
          De = [R || r],
          Me = z.call(y, "type") ? y.type : y,
          Et = z.call(y, "namespace") ? y.namespace.split(".") : [];
        if (
          ((J = Ke = re = R = R || r),
          R.nodeType !== 3 &&
            R.nodeType !== 8 &&
            !Pe.test(Me + C.event.triggered) &&
            (-1 < Me.indexOf(".") &&
              ((Me = (Et = Me.split(".")).shift()), Et.sort()),
            (be = Me.indexOf(":") < 0 && "on" + Me),
            ((y = y[C.expando]
              ? y
              : new C.Event(Me, typeof y == "object" && y)).isTrigger = M
              ? 2
              : 3),
            (y.namespace = Et.join(".")),
            (y.rnamespace = y.namespace
              ? new RegExp("(^|\\.)" + Et.join("\\.(?:.*\\.|)") + "(\\.|$)")
              : null),
            (y.result = void 0),
            y.target || (y.target = R),
            (A = A == null ? [y] : C.makeArray(A, [y])),
            (Ve = C.event.special[Me] || {}),
            M || !Ve.trigger || Ve.trigger.apply(R, A) !== !1))
        ) {
          if (!M && !Ve.noBubble && !he(R)) {
            for (
              pe = Ve.delegateType || Me,
                Pe.test(pe + Me) || (J = J.parentNode);
              J;
              J = J.parentNode
            )
              De.push(J), (re = J);
            re === (R.ownerDocument || r) &&
              De.push(re.defaultView || re.parentWindow || t);
          }
          for (Y = 0; (J = De[Y++]) && !y.isPropagationStopped(); )
            (Ke = J),
              (y.type = 1 < Y ? pe : Ve.bindType || Me),
              (Ee =
                (dt.get(J, "events") || {})[y.type] && dt.get(J, "handle")) &&
                Ee.apply(J, A),
              (Ee = be && J[be]) &&
                Ee.apply &&
                Rt(J) &&
                ((y.result = Ee.apply(J, A)),
                y.result === !1 && y.preventDefault());
          return (
            (y.type = Me),
            M ||
              y.isDefaultPrevented() ||
              (Ve._default && Ve._default.apply(De.pop(), A) !== !1) ||
              !Rt(R) ||
              (be &&
                le(R[Me]) &&
                !he(R) &&
                ((re = R[be]) && (R[be] = null),
                (C.event.triggered = Me),
                y.isPropagationStopped() && Ke.addEventListener(Me, We),
                R[Me](),
                y.isPropagationStopped() && Ke.removeEventListener(Me, We),
                (C.event.triggered = void 0),
                re && (R[be] = re))),
            y.result
          );
        }
      },
      simulate: function (y, A, R) {
        var M = C.extend(new C.Event(), R, { type: y, isSimulated: !0 });
        C.event.trigger(M, null, A);
      },
    }),
      C.fn.extend({
        trigger: function (y, A) {
          return this.each(function () {
            C.event.trigger(y, A, this);
          });
        },
        triggerHandler: function (y, A) {
          var R = this[0];
          if (R) return C.event.trigger(y, A, R, !0);
        },
      }),
      se.focusin ||
        C.each({ focus: "focusin", blur: "focusout" }, function (y, A) {
          var R = function (M) {
            C.event.simulate(A, M.target, C.event.fix(M));
          };
          C.event.special[A] = {
            setup: function () {
              var M = this.ownerDocument || this,
                Y = dt.access(M, A);
              Y || M.addEventListener(y, R, !0), dt.access(M, A, (Y || 0) + 1);
            },
            teardown: function () {
              var M = this.ownerDocument || this,
                Y = dt.access(M, A) - 1;
              Y
                ? dt.access(M, A, Y)
                : (M.removeEventListener(y, R, !0), dt.remove(M, A));
            },
          };
        });
    var ze = t.location,
      ut = Date.now(),
      St = /\?/;
    C.parseXML = function (y) {
      var A;
      if (!y || typeof y != "string") return null;
      try {
        A = new t.DOMParser().parseFromString(y, "text/xml");
      } catch {
        A = void 0;
      }
      return (
        (A && !A.getElementsByTagName("parsererror").length) ||
          C.error("Invalid XML: " + y),
        A
      );
    };
    var zt = /\[\]$/,
      Ot = /\r?\n/g,
      dn = /^(?:submit|button|image|reset|file)$/i,
      Ln = /^(?:input|select|textarea|keygen)/i;
    function wn(y, A, R, M) {
      var Y;
      if (Array.isArray(A))
        C.each(A, function (J, re) {
          R || zt.test(y)
            ? M(y, re)
            : wn(
                y + "[" + (typeof re == "object" && re != null ? J : "") + "]",
                re,
                R,
                M
              );
        });
      else if (R || ce(A) !== "object") M(y, A);
      else for (Y in A) wn(y + "[" + Y + "]", A[Y], R, M);
    }
    (C.param = function (y, A) {
      var R,
        M = [],
        Y = function (J, re) {
          var pe = le(re) ? re() : re;
          M[M.length] =
            encodeURIComponent(J) + "=" + encodeURIComponent(pe ?? "");
        };
      if (y == null) return "";
      if (Array.isArray(y) || (y.jquery && !C.isPlainObject(y)))
        C.each(y, function () {
          Y(this.name, this.value);
        });
      else for (R in y) wn(R, y[R], A, Y);
      return M.join("&");
    }),
      C.fn.extend({
        serialize: function () {
          return C.param(this.serializeArray());
        },
        serializeArray: function () {
          return this.map(function () {
            var y = C.prop(this, "elements");
            return y ? C.makeArray(y) : this;
          })
            .filter(function () {
              var y = this.type;
              return (
                this.name &&
                !C(this).is(":disabled") &&
                Ln.test(this.nodeName) &&
                !dn.test(y) &&
                (this.checked || !$r.test(y))
              );
            })
            .map(function (y, A) {
              var R = C(this).val();
              return R == null
                ? null
                : Array.isArray(R)
                ? C.map(R, function (M) {
                    return {
                      name: A.name,
                      value: M.replace(
                        Ot,
                        `\r
`
                      ),
                    };
                  })
                : {
                    name: A.name,
                    value: R.replace(
                      Ot,
                      `\r
`
                    ),
                  };
            })
            .get();
        },
      });
    var On = /%20/g,
      Sr = /#.*$/,
      Br = /([?&])_=[^&]*/,
      ys = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      Ma = /^(?:GET|HEAD)$/,
      Hr = /^\/\//,
      or = {},
      Ds = {},
      ja = "*/".concat("*"),
      xs = r.createElement("a");
    function cc(y) {
      return function (A, R) {
        typeof A != "string" && ((R = A), (A = "*"));
        var M,
          Y = 0,
          J = A.toLowerCase().match(Oe) || [];
        if (le(R))
          for (; (M = J[Y++]); )
            M[0] === "+"
              ? ((M = M.slice(1) || "*"), (y[M] = y[M] || []).unshift(R))
              : (y[M] = y[M] || []).push(R);
      };
    }
    function mo(y, A, R, M) {
      var Y = {},
        J = y === Ds;
      function re(pe) {
        var be;
        return (
          (Y[pe] = !0),
          C.each(y[pe] || [], function (Ee, Ve) {
            var Ke = Ve(A, R, M);
            return typeof Ke != "string" || J || Y[Ke]
              ? J
                ? !(be = Ke)
                : void 0
              : (A.dataTypes.unshift(Ke), re(Ke), !1);
          }),
          be
        );
      }
      return re(A.dataTypes[0]) || (!Y["*"] && re("*"));
    }
    function Fa(y, A) {
      var R,
        M,
        Y = C.ajaxSettings.flatOptions || {};
      for (R in A) A[R] !== void 0 && ((Y[R] ? y : M || (M = {}))[R] = A[R]);
      return M && C.extend(!0, y, M), y;
    }
    (xs.href = ze.href),
      C.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
          url: ze.href,
          type: "GET",
          isLocal:
            /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(
              ze.protocol
            ),
          global: !0,
          processData: !0,
          async: !0,
          contentType: "application/x-www-form-urlencoded; charset=UTF-8",
          accepts: {
            "*": ja,
            text: "text/plain",
            html: "text/html",
            xml: "application/xml, text/xml",
            json: "application/json, text/javascript",
          },
          contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
          responseFields: {
            xml: "responseXML",
            text: "responseText",
            json: "responseJSON",
          },
          converters: {
            "* text": String,
            "text html": !0,
            "text json": JSON.parse,
            "text xml": C.parseXML,
          },
          flatOptions: { url: !0, context: !0 },
        },
        ajaxSetup: function (y, A) {
          return A ? Fa(Fa(y, C.ajaxSettings), A) : Fa(C.ajaxSettings, y);
        },
        ajaxPrefilter: cc(or),
        ajaxTransport: cc(Ds),
        ajax: function (y, A) {
          typeof y == "object" && ((A = y), (y = void 0)), (A = A || {});
          var R,
            M,
            Y,
            J,
            re,
            pe,
            be,
            Ee,
            Ve,
            Ke,
            De = C.ajaxSetup({}, A),
            Me = De.context || De,
            Et = De.context && (Me.nodeType || Me.jquery) ? C(Me) : C.event,
            jt = C.Deferred(),
            Tt = C.Callbacks("once memory"),
            tr = De.statusCode || {},
            vr = {},
            hi = {},
            Dn = "canceled",
            Gt = {
              readyState: 0,
              getResponseHeader: function (xn) {
                var rr;
                if (be) {
                  if (!J)
                    for (J = {}; (rr = ys.exec(Y)); )
                      J[rr[1].toLowerCase() + " "] = (
                        J[rr[1].toLowerCase() + " "] || []
                      ).concat(rr[2]);
                  rr = J[xn.toLowerCase() + " "];
                }
                return rr == null ? null : rr.join(", ");
              },
              getAllResponseHeaders: function () {
                return be ? Y : null;
              },
              setRequestHeader: function (xn, rr) {
                return (
                  be == null &&
                    ((xn = hi[xn.toLowerCase()] = hi[xn.toLowerCase()] || xn),
                    (vr[xn] = rr)),
                  this
                );
              },
              overrideMimeType: function (xn) {
                return be == null && (De.mimeType = xn), this;
              },
              statusCode: function (xn) {
                var rr;
                if (xn)
                  if (be) Gt.always(xn[Gt.status]);
                  else for (rr in xn) tr[rr] = [tr[rr], xn[rr]];
                return this;
              },
              abort: function (xn) {
                var rr = xn || Dn;
                return R && R.abort(rr), Jr(0, rr), this;
              },
            };
          if (
            (jt.promise(Gt),
            (De.url = ((y || De.url || ze.href) + "").replace(
              Hr,
              ze.protocol + "//"
            )),
            (De.type = A.method || A.type || De.method || De.type),
            (De.dataTypes = (De.dataType || "*").toLowerCase().match(Oe) || [
              "",
            ]),
            De.crossDomain == null)
          ) {
            pe = r.createElement("a");
            try {
              (pe.href = De.url),
                (pe.href = pe.href),
                (De.crossDomain =
                  xs.protocol + "//" + xs.host != pe.protocol + "//" + pe.host);
            } catch {
              De.crossDomain = !0;
            }
          }
          if (
            (De.data &&
              De.processData &&
              typeof De.data != "string" &&
              (De.data = C.param(De.data, De.traditional)),
            mo(or, De, A, Gt),
            be)
          )
            return Gt;
          for (Ve in ((Ee = C.event && De.global) &&
            C.active++ == 0 &&
            C.event.trigger("ajaxStart"),
          (De.type = De.type.toUpperCase()),
          (De.hasContent = !Ma.test(De.type)),
          (M = De.url.replace(Sr, "")),
          De.hasContent
            ? De.data &&
              De.processData &&
              (De.contentType || "").indexOf(
                "application/x-www-form-urlencoded"
              ) === 0 &&
              (De.data = De.data.replace(On, "+"))
            : ((Ke = De.url.slice(M.length)),
              De.data &&
                (De.processData || typeof De.data == "string") &&
                ((M += (St.test(M) ? "&" : "?") + De.data), delete De.data),
              De.cache === !1 &&
                ((M = M.replace(Br, "$1")),
                (Ke = (St.test(M) ? "&" : "?") + "_=" + ut++ + Ke)),
              (De.url = M + Ke)),
          De.ifModified &&
            (C.lastModified[M] &&
              Gt.setRequestHeader("If-Modified-Since", C.lastModified[M]),
            C.etag[M] && Gt.setRequestHeader("If-None-Match", C.etag[M])),
          ((De.data && De.hasContent && De.contentType !== !1) ||
            A.contentType) &&
            Gt.setRequestHeader("Content-Type", De.contentType),
          Gt.setRequestHeader(
            "Accept",
            De.dataTypes[0] && De.accepts[De.dataTypes[0]]
              ? De.accepts[De.dataTypes[0]] +
                  (De.dataTypes[0] !== "*" ? ", " + ja + "; q=0.01" : "")
              : De.accepts["*"]
          ),
          De.headers))
            Gt.setRequestHeader(Ve, De.headers[Ve]);
          if (De.beforeSend && (De.beforeSend.call(Me, Gt, De) === !1 || be))
            return Gt.abort();
          if (
            ((Dn = "abort"),
            Tt.add(De.complete),
            Gt.done(De.success),
            Gt.fail(De.error),
            (R = mo(Ds, De, A, Gt)))
          ) {
            if (
              ((Gt.readyState = 1), Ee && Et.trigger("ajaxSend", [Gt, De]), be)
            )
              return Gt;
            De.async &&
              0 < De.timeout &&
              (re = t.setTimeout(function () {
                Gt.abort("timeout");
              }, De.timeout));
            try {
              (be = !1), R.send(vr, Jr);
            } catch (xn) {
              if (be) throw xn;
              Jr(-1, xn);
            }
          } else Jr(-1, "No Transport");
          function Jr(xn, rr, vo, da) {
            var Ei,
              di,
              fa,
              ei,
              Zs,
              zi = rr;
            be ||
              ((be = !0),
              re && t.clearTimeout(re),
              (R = void 0),
              (Y = da || ""),
              (Gt.readyState = 0 < xn ? 4 : 0),
              (Ei = (200 <= xn && xn < 300) || xn === 304),
              vo &&
                (ei = (function (ir, Er, ti) {
                  for (
                    var Vi, rn, _n, yr, ni = ir.contents, xr = ir.dataTypes;
                    xr[0] === "*";

                  )
                    xr.shift(),
                      Vi === void 0 &&
                        (Vi =
                          ir.mimeType || Er.getResponseHeader("Content-Type"));
                  if (Vi) {
                    for (rn in ni)
                      if (ni[rn] && ni[rn].test(Vi)) {
                        xr.unshift(rn);
                        break;
                      }
                  }
                  if (xr[0] in ti) _n = xr[0];
                  else {
                    for (rn in ti) {
                      if (!xr[0] || ir.converters[rn + " " + xr[0]]) {
                        _n = rn;
                        break;
                      }
                      yr || (yr = rn);
                    }
                    _n = _n || yr;
                  }
                  if (_n) return _n !== xr[0] && xr.unshift(_n), ti[_n];
                })(De, Gt, vo)),
              (ei = (function (ir, Er, ti, Vi) {
                var rn,
                  _n,
                  yr,
                  ni,
                  xr,
                  ki = {},
                  fi = ir.dataTypes.slice();
                if (fi[1])
                  for (yr in ir.converters)
                    ki[yr.toLowerCase()] = ir.converters[yr];
                for (_n = fi.shift(); _n; )
                  if (
                    (ir.responseFields[_n] && (ti[ir.responseFields[_n]] = Er),
                    !xr &&
                      Vi &&
                      ir.dataFilter &&
                      (Er = ir.dataFilter(Er, ir.dataType)),
                    (xr = _n),
                    (_n = fi.shift()))
                  ) {
                    if (_n === "*") _n = xr;
                    else if (xr !== "*" && xr !== _n) {
                      if (!(yr = ki[xr + " " + _n] || ki["* " + _n])) {
                        for (rn in ki)
                          if (
                            (ni = rn.split(" "))[1] === _n &&
                            (yr = ki[xr + " " + ni[0]] || ki["* " + ni[0]])
                          ) {
                            yr === !0
                              ? (yr = ki[rn])
                              : ki[rn] !== !0 &&
                                ((_n = ni[0]), fi.unshift(ni[1]));
                            break;
                          }
                      }
                      if (yr !== !0)
                        if (yr && ir.throws) Er = yr(Er);
                        else
                          try {
                            Er = yr(Er);
                          } catch (Va) {
                            return {
                              state: "parsererror",
                              error: yr
                                ? Va
                                : "No conversion from " + xr + " to " + _n,
                            };
                          }
                    }
                  }
                return { state: "success", data: Er };
              })(De, ei, Gt, Ei)),
              Ei
                ? (De.ifModified &&
                    ((Zs = Gt.getResponseHeader("Last-Modified")) &&
                      (C.lastModified[M] = Zs),
                    (Zs = Gt.getResponseHeader("etag")) && (C.etag[M] = Zs)),
                  xn === 204 || De.type === "HEAD"
                    ? (zi = "nocontent")
                    : xn === 304
                    ? (zi = "notmodified")
                    : ((zi = ei.state),
                      (di = ei.data),
                      (Ei = !(fa = ei.error))))
                : ((fa = zi),
                  (!xn && zi) || ((zi = "error"), xn < 0 && (xn = 0))),
              (Gt.status = xn),
              (Gt.statusText = (rr || zi) + ""),
              Ei
                ? jt.resolveWith(Me, [di, zi, Gt])
                : jt.rejectWith(Me, [Gt, zi, fa]),
              Gt.statusCode(tr),
              (tr = void 0),
              Ee &&
                Et.trigger(Ei ? "ajaxSuccess" : "ajaxError", [
                  Gt,
                  De,
                  Ei ? di : fa,
                ]),
              Tt.fireWith(Me, [Gt, zi]),
              Ee &&
                (Et.trigger("ajaxComplete", [Gt, De]),
                --C.active || C.event.trigger("ajaxStop")));
          }
          return Gt;
        },
        getJSON: function (y, A, R) {
          return C.get(y, A, R, "json");
        },
        getScript: function (y, A) {
          return C.get(y, void 0, A, "script");
        },
      }),
      C.each(["get", "post"], function (y, A) {
        C[A] = function (R, M, Y, J) {
          return (
            le(M) && ((J = J || Y), (Y = M), (M = void 0)),
            C.ajax(
              C.extend(
                { url: R, type: A, dataType: J, data: M, success: Y },
                C.isPlainObject(R) && R
              )
            )
          );
        };
      }),
      (C._evalUrl = function (y, A) {
        return C.ajax({
          url: y,
          type: "GET",
          dataType: "script",
          cache: !0,
          async: !1,
          global: !1,
          converters: { "text script": function () {} },
          dataFilter: function (R) {
            C.globalEval(R, A);
          },
        });
      }),
      C.fn.extend({
        wrapAll: function (y) {
          var A;
          return (
            this[0] &&
              (le(y) && (y = y.call(this[0])),
              (A = C(y, this[0].ownerDocument).eq(0).clone(!0)),
              this[0].parentNode && A.insertBefore(this[0]),
              A.map(function () {
                for (var R = this; R.firstElementChild; )
                  R = R.firstElementChild;
                return R;
              }).append(this)),
            this
          );
        },
        wrapInner: function (y) {
          return le(y)
            ? this.each(function (A) {
                C(this).wrapInner(y.call(this, A));
              })
            : this.each(function () {
                var A = C(this),
                  R = A.contents();
                R.length ? R.wrapAll(y) : A.append(y);
              });
        },
        wrap: function (y) {
          var A = le(y);
          return this.each(function (R) {
            C(this).wrapAll(A ? y.call(this, R) : y);
          });
        },
        unwrap: function (y) {
          return (
            this.parent(y)
              .not("body")
              .each(function () {
                C(this).replaceWith(this.childNodes);
              }),
            this
          );
        },
      }),
      (C.expr.pseudos.hidden = function (y) {
        return !C.expr.pseudos.visible(y);
      }),
      (C.expr.pseudos.visible = function (y) {
        return !!(y.offsetWidth || y.offsetHeight || y.getClientRects().length);
      }),
      (C.ajaxSettings.xhr = function () {
        try {
          return new t.XMLHttpRequest();
        } catch {}
      });
    var mu = { 0: 200, 1223: 204 },
      ha = C.ajaxSettings.xhr();
    (se.cors = !!ha && "withCredentials" in ha),
      (se.ajax = ha = !!ha),
      C.ajaxTransport(function (y) {
        var A, R;
        if (se.cors || (ha && !y.crossDomain))
          return {
            send: function (M, Y) {
              var J,
                re = y.xhr();
              if (
                (re.open(y.type, y.url, y.async, y.username, y.password),
                y.xhrFields)
              )
                for (J in y.xhrFields) re[J] = y.xhrFields[J];
              for (J in (y.mimeType &&
                re.overrideMimeType &&
                re.overrideMimeType(y.mimeType),
              y.crossDomain ||
                M["X-Requested-With"] ||
                (M["X-Requested-With"] = "XMLHttpRequest"),
              M))
                re.setRequestHeader(J, M[J]);
              (A = function (pe) {
                return function () {
                  A &&
                    ((A =
                      R =
                      re.onload =
                      re.onerror =
                      re.onabort =
                      re.ontimeout =
                      re.onreadystatechange =
                        null),
                    pe === "abort"
                      ? re.abort()
                      : pe === "error"
                      ? typeof re.status != "number"
                        ? Y(0, "error")
                        : Y(re.status, re.statusText)
                      : Y(
                          mu[re.status] || re.status,
                          re.statusText,
                          (re.responseType || "text") !== "text" ||
                            typeof re.responseText != "string"
                            ? { binary: re.response }
                            : { text: re.responseText },
                          re.getAllResponseHeaders()
                        ));
                };
              }),
                (re.onload = A()),
                (R = re.onerror = re.ontimeout = A("error")),
                re.onabort !== void 0
                  ? (re.onabort = R)
                  : (re.onreadystatechange = function () {
                      re.readyState === 4 &&
                        t.setTimeout(function () {
                          A && R();
                        });
                    }),
                (A = A("abort"));
              try {
                re.send((y.hasContent && y.data) || null);
              } catch (pe) {
                if (A) throw pe;
              }
            },
            abort: function () {
              A && A();
            },
          };
      }),
      C.ajaxPrefilter(function (y) {
        y.crossDomain && (y.contents.script = !1);
      }),
      C.ajaxSetup({
        accepts: {
          script:
            "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
        },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
          "text script": function (y) {
            return C.globalEval(y), y;
          },
        },
      }),
      C.ajaxPrefilter("script", function (y) {
        y.cache === void 0 && (y.cache = !1), y.crossDomain && (y.type = "GET");
      }),
      C.ajaxTransport("script", function (y) {
        var A, R;
        if (y.crossDomain || y.scriptAttrs)
          return {
            send: function (M, Y) {
              (A = C("<script>")
                .attr(y.scriptAttrs || {})
                .prop({ charset: y.scriptCharset, src: y.url })
                .on(
                  "load error",
                  (R = function (J) {
                    A.remove(),
                      (R = null),
                      J && Y(J.type === "error" ? 404 : 200, J.type);
                  })
                )),
                r.head.appendChild(A[0]);
            },
            abort: function () {
              R && R();
            },
          };
      });
    var uc,
      hc = [],
      rl = /(=)\?(?=&|$)|\?\?/;
    C.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var y = hc.pop() || C.expando + "_" + ut++;
        return (this[y] = !0), y;
      },
    }),
      C.ajaxPrefilter("json jsonp", function (y, A, R) {
        var M,
          Y,
          J,
          re =
            y.jsonp !== !1 &&
            (rl.test(y.url)
              ? "url"
              : typeof y.data == "string" &&
                (y.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) === 0 &&
                rl.test(y.data) &&
                "data");
        if (re || y.dataTypes[0] === "jsonp")
          return (
            (M = y.jsonpCallback =
              le(y.jsonpCallback) ? y.jsonpCallback() : y.jsonpCallback),
            re
              ? (y[re] = y[re].replace(rl, "$1" + M))
              : y.jsonp !== !1 &&
                (y.url += (St.test(y.url) ? "&" : "?") + y.jsonp + "=" + M),
            (y.converters["script json"] = function () {
              return J || C.error(M + " was not called"), J[0];
            }),
            (y.dataTypes[0] = "json"),
            (Y = t[M]),
            (t[M] = function () {
              J = arguments;
            }),
            R.always(function () {
              Y === void 0 ? C(t).removeProp(M) : (t[M] = Y),
                y[M] && ((y.jsonpCallback = A.jsonpCallback), hc.push(M)),
                J && le(Y) && Y(J[0]),
                (J = Y = void 0);
            }),
            "script"
          );
      }),
      (se.createHTMLDocument =
        (((uc = r.implementation.createHTMLDocument("").body).innerHTML =
          "<form></form><form></form>"),
        uc.childNodes.length === 2)),
      (C.parseHTML = function (y, A, R) {
        return typeof y != "string"
          ? []
          : (typeof A == "boolean" && ((R = A), (A = !1)),
            A ||
              (se.createHTMLDocument
                ? (((M = (A =
                    r.implementation.createHTMLDocument("")).createElement(
                    "base"
                  )).href = r.location.href),
                  A.head.appendChild(M))
                : (A = r)),
            (J = !R && []),
            (Y = Vt.exec(y))
              ? [A.createElement(Y[1])]
              : ((Y = Os([y], A, J)),
                J && J.length && C(J).remove(),
                C.merge([], Y.childNodes)));
        var M, Y, J;
      }),
      (C.fn.load = function (y, A, R) {
        var M,
          Y,
          J,
          re = this,
          pe = y.indexOf(" ");
        return (
          -1 < pe && ((M = K(y.slice(pe))), (y = y.slice(0, pe))),
          le(A)
            ? ((R = A), (A = void 0))
            : A && typeof A == "object" && (Y = "POST"),
          0 < re.length &&
            C.ajax({ url: y, type: Y || "GET", dataType: "html", data: A })
              .done(function (be) {
                (J = arguments),
                  re.html(M ? C("<div>").append(C.parseHTML(be)).find(M) : be);
              })
              .always(
                R &&
                  function (be, Ee) {
                    re.each(function () {
                      R.apply(this, J || [be.responseText, Ee, be]);
                    });
                  }
              ),
          this
        );
      }),
      C.each(
        [
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend",
        ],
        function (y, A) {
          C.fn[A] = function (R) {
            return this.on(A, R);
          };
        }
      ),
      (C.expr.pseudos.animated = function (y) {
        return C.grep(C.timers, function (A) {
          return y === A.elem;
        }).length;
      }),
      (C.offset = {
        setOffset: function (y, A, R) {
          var M,
            Y,
            J,
            re,
            pe,
            be,
            Ee = C.css(y, "position"),
            Ve = C(y),
            Ke = {};
          Ee === "static" && (y.style.position = "relative"),
            (pe = Ve.offset()),
            (J = C.css(y, "top")),
            (be = C.css(y, "left")),
            (Ee === "absolute" || Ee === "fixed") &&
            -1 < (J + be).indexOf("auto")
              ? ((re = (M = Ve.position()).top), (Y = M.left))
              : ((re = parseFloat(J) || 0), (Y = parseFloat(be) || 0)),
            le(A) && (A = A.call(y, R, C.extend({}, pe))),
            A.top != null && (Ke.top = A.top - pe.top + re),
            A.left != null && (Ke.left = A.left - pe.left + Y),
            "using" in A ? A.using.call(y, Ke) : Ve.css(Ke);
        },
      }),
      C.fn.extend({
        offset: function (y) {
          if (arguments.length)
            return y === void 0
              ? this
              : this.each(function (Y) {
                  C.offset.setOffset(this, y, Y);
                });
          var A,
            R,
            M = this[0];
          return M
            ? M.getClientRects().length
              ? ((A = M.getBoundingClientRect()),
                (R = M.ownerDocument.defaultView),
                { top: A.top + R.pageYOffset, left: A.left + R.pageXOffset })
              : { top: 0, left: 0 }
            : void 0;
        },
        position: function () {
          if (this[0]) {
            var y,
              A,
              R,
              M = this[0],
              Y = { top: 0, left: 0 };
            if (C.css(M, "position") === "fixed") A = M.getBoundingClientRect();
            else {
              for (
                A = this.offset(),
                  R = M.ownerDocument,
                  y = M.offsetParent || R.documentElement;
                y &&
                (y === R.body || y === R.documentElement) &&
                C.css(y, "position") === "static";

              )
                y = y.parentNode;
              y &&
                y !== M &&
                y.nodeType === 1 &&
                (((Y = C(y).offset()).top += C.css(y, "borderTopWidth", !0)),
                (Y.left += C.css(y, "borderLeftWidth", !0)));
            }
            return {
              top: A.top - Y.top - C.css(M, "marginTop", !0),
              left: A.left - Y.left - C.css(M, "marginLeft", !0),
            };
          }
        },
        offsetParent: function () {
          return this.map(function () {
            for (
              var y = this.offsetParent;
              y && C.css(y, "position") === "static";

            )
              y = y.offsetParent;
            return y || Te;
          });
        },
      }),
      C.each(
        { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
        function (y, A) {
          var R = A === "pageYOffset";
          C.fn[y] = function (M) {
            return yt(
              this,
              function (Y, J, re) {
                var pe;
                if (
                  (he(Y) ? (pe = Y) : Y.nodeType === 9 && (pe = Y.defaultView),
                  re === void 0)
                )
                  return pe ? pe[A] : Y[J];
                pe
                  ? pe.scrollTo(
                      R ? pe.pageXOffset : re,
                      R ? re : pe.pageYOffset
                    )
                  : (Y[J] = re);
              },
              y,
              M,
              arguments.length
            );
          };
        }
      ),
      C.each(["top", "left"], function (y, A) {
        C.cssHooks[A] = Hn(se.pixelPosition, function (R, M) {
          if (M)
            return (M = vs(R, A)), Fi.test(M) ? C(R).position()[A] + "px" : M;
        });
      }),
      C.each({ Height: "height", Width: "width" }, function (y, A) {
        C.each(
          { padding: "inner" + y, content: A, "": "outer" + y },
          function (R, M) {
            C.fn[M] = function (Y, J) {
              var re = arguments.length && (R || typeof Y != "boolean"),
                pe = R || (Y === !0 || J === !0 ? "margin" : "border");
              return yt(
                this,
                function (be, Ee, Ve) {
                  var Ke;
                  return he(be)
                    ? M.indexOf("outer") === 0
                      ? be["inner" + y]
                      : be.document.documentElement["client" + y]
                    : be.nodeType === 9
                    ? ((Ke = be.documentElement),
                      Math.max(
                        be.body["scroll" + y],
                        Ke["scroll" + y],
                        be.body["offset" + y],
                        Ke["offset" + y],
                        Ke["client" + y]
                      ))
                    : Ve === void 0
                    ? C.css(be, Ee, pe)
                    : C.style(be, Ee, Ve, pe);
                },
                A,
                re ? Y : void 0,
                re
              );
            };
          }
        );
      }),
      C.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(
          " "
        ),
        function (y, A) {
          C.fn[A] = function (R, M) {
            return 0 < arguments.length
              ? this.on(A, null, R, M)
              : this.trigger(A);
          };
        }
      ),
      C.fn.extend({
        hover: function (y, A) {
          return this.mouseenter(y).mouseleave(A || y);
        },
      }),
      C.fn.extend({
        bind: function (y, A, R) {
          return this.on(y, null, A, R);
        },
        unbind: function (y, A) {
          return this.off(y, null, A);
        },
        delegate: function (y, A, R, M) {
          return this.on(A, y, R, M);
        },
        undelegate: function (y, A, R) {
          return arguments.length === 1
            ? this.off(y, "**")
            : this.off(A, y || "**", R);
        },
      }),
      (C.proxy = function (y, A) {
        var R, M, Y;
        if ((typeof A == "string" && ((R = y[A]), (A = y), (y = R)), le(y)))
          return (
            (M = o.call(arguments, 2)),
            ((Y = function () {
              return y.apply(A || this, M.concat(o.call(arguments)));
            }).guid = y.guid =
              y.guid || C.guid++),
            Y
          );
      }),
      (C.holdReady = function (y) {
        y ? C.readyWait++ : C.ready(!0);
      }),
      (C.isArray = Array.isArray),
      (C.parseJSON = JSON.parse),
      (C.nodeName = Mt),
      (C.isFunction = le),
      (C.isWindow = he),
      (C.camelCase = $t),
      (C.type = ce),
      (C.now = Date.now),
      (C.isNumeric = function (y) {
        var A = C.type(y);
        return (A === "number" || A === "string") && !isNaN(y - parseFloat(y));
      }),
      typeof define == "function" &&
        define.amd &&
        define("jquery", [], function () {
          return C;
        });
    var za = t.jQuery,
      Qs = t.$;
    return (
      (C.noConflict = function (y) {
        return (
          t.$ === C && (t.$ = Qs), y && t.jQuery === C && (t.jQuery = za), C
        );
      }),
      e || (t.jQuery = t.$ = C),
      C
    );
  });
  /*!
   * Bootstrap v5.3.0-alpha1 (https://getbootstrap.com/)
   * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   */ (function (t, e) {
    typeof hs == "object" && typeof Qr < "u"
      ? (Qr.exports = e())
      : typeof define == "function" && define.amd
      ? define(e)
      : ((t = typeof globalThis < "u" ? globalThis : t || self).bootstrap =
          e());
  })(void 0, function () {
    const t = "transitionend",
      e = (W) => (
        W &&
          window.CSS &&
          window.CSS.escape &&
          (W = W.replace(/#([^\s"#']+)/g, (w, j) => `#${CSS.escape(j)}`)),
        W
      ),
      n = (W) => {
        W.dispatchEvent(new Event(t));
      },
      r = (W) =>
        !(!W || typeof W != "object") &&
        (W.jquery !== void 0 && (W = W[0]), W.nodeType !== void 0),
      a = (W) =>
        r(W)
          ? W.jquery
            ? W[0]
            : W
          : typeof W == "string" && W.length > 0
          ? document.querySelector(e(W))
          : null,
      o = (W) => {
        if (!r(W) || W.getClientRects().length === 0) return !1;
        const w =
            getComputedStyle(W).getPropertyValue("visibility") === "visible",
          j = W.closest("details:not([open])");
        if (!j) return w;
        if (j !== W) {
          const ne = W.closest("summary");
          if ((ne && ne.parentNode !== j) || ne === null) return !1;
        }
        return w;
      },
      u = (W) =>
        !W ||
        W.nodeType !== Node.ELEMENT_NODE ||
        !!W.classList.contains("disabled") ||
        (W.disabled !== void 0
          ? W.disabled
          : W.hasAttribute("disabled") &&
            W.getAttribute("disabled") !== "false"),
      g = (W) => {
        if (!document.documentElement.attachShadow) return null;
        if (typeof W.getRootNode == "function") {
          const w = W.getRootNode();
          return w instanceof ShadowRoot ? w : null;
        }
        return W instanceof ShadowRoot
          ? W
          : W.parentNode
          ? g(W.parentNode)
          : null;
      },
      x = () => {},
      E = (W) => {
        W.offsetHeight;
      },
      L = () =>
        window.jQuery && !document.body.hasAttribute("data-bs-no-jquery")
          ? window.jQuery
          : null,
      z = [],
      B = () => document.documentElement.dir === "rtl",
      ae = (W) => {
        var w;
        (w = () => {
          const j = L();
          if (j) {
            const ne = W.NAME,
              ve = j.fn[ne];
            (j.fn[ne] = W.jQueryInterface),
              (j.fn[ne].Constructor = W),
              (j.fn[ne].noConflict = () => (
                (j.fn[ne] = ve), W.jQueryInterface
              ));
          }
        }),
          document.readyState === "loading"
            ? (z.length ||
                document.addEventListener("DOMContentLoaded", () => {
                  for (const j of z) j();
                }),
              z.push(w))
            : w();
      },
      se = (W, w = [], j = W) => (typeof W == "function" ? W(...w) : j),
      le = (W, w, j = !0) => {
        if (!j) return void se(W);
        const ne =
          ((Le) => {
            if (!Le) return 0;
            let { transitionDuration: Ue, transitionDelay: Qe } =
              window.getComputedStyle(Le);
            const bt = Number.parseFloat(Ue),
              ft = Number.parseFloat(Qe);
            return bt || ft
              ? ((Ue = Ue.split(",")[0]),
                (Qe = Qe.split(",")[0]),
                1e3 * (Number.parseFloat(Ue) + Number.parseFloat(Qe)))
              : 0;
          })(w) + 5;
        let ve = !1;
        const _e = ({ target: Le }) => {
          Le === w && ((ve = !0), w.removeEventListener(t, _e), se(W));
        };
        w.addEventListener(t, _e),
          setTimeout(() => {
            ve || n(w);
          }, ne);
      },
      he = (W, w, j, ne) => {
        const ve = W.length;
        let _e = W.indexOf(w);
        return _e === -1
          ? !j && ne
            ? W[ve - 1]
            : W[0]
          : ((_e += j ? 1 : -1),
            ne && (_e = (_e + ve) % ve),
            W[Math.max(0, Math.min(_e, ve - 1))]);
      },
      oe = /[^.]*(?=\..*)\.|.*/,
      F = /\..*/,
      ce = /::\d+$/,
      ye = {};
    let C = 1;
    const ke = { mouseenter: "mouseover", mouseleave: "mouseout" },
      je = new Set([
        "click",
        "dblclick",
        "mouseup",
        "mousedown",
        "contextmenu",
        "mousewheel",
        "DOMMouseScroll",
        "mouseover",
        "mouseout",
        "mousemove",
        "selectstart",
        "selectend",
        "keydown",
        "keypress",
        "keyup",
        "orientationchange",
        "touchstart",
        "touchmove",
        "touchend",
        "touchcancel",
        "pointerdown",
        "pointermove",
        "pointerup",
        "pointerleave",
        "pointercancel",
        "gesturestart",
        "gesturechange",
        "gestureend",
        "focus",
        "blur",
        "change",
        "reset",
        "select",
        "submit",
        "focusin",
        "focusout",
        "load",
        "unload",
        "beforeunload",
        "resize",
        "move",
        "DOMContentLoaded",
        "readystatechange",
        "error",
        "abort",
        "scroll",
      ]);
    function tt(W, w) {
      return (w && `${w}::${C++}`) || W.uidEvent || C++;
    }
    function Ct(W) {
      const w = tt(W);
      return (W.uidEvent = w), (ye[w] = ye[w] || {}), ye[w];
    }
    function xt(W, w, j = null) {
      return Object.values(W).find(
        (ne) => ne.callable === w && ne.delegationSelector === j
      );
    }
    function pt(W, w, j) {
      const ne = typeof w == "string",
        ve = ne ? j : w || j;
      let _e = ht(W);
      return je.has(_e) || (_e = W), [ne, ve, _e];
    }
    function Mt(W, w, j, ne, ve) {
      if (typeof w != "string" || !W) return;
      let [_e, Le, Ue] = pt(w, j, ne);
      w in ke &&
        (Le = ((en) =>
          function (qt) {
            if (
              !qt.relatedTarget ||
              (qt.relatedTarget !== qt.delegateTarget &&
                !qt.delegateTarget.contains(qt.relatedTarget))
            )
              return en.call(this, qt);
          })(Le));
      const Qe = Ct(W),
        bt = Qe[Ue] || (Qe[Ue] = {}),
        ft = xt(bt, Le, _e ? j : null);
      if (ft) return void (ft.oneOff = ft.oneOff && ve);
      const ot = tt(Le, w.replace(oe, "")),
        Ht = _e
          ? (function (Ut, en, qt) {
              return function tn(Yn) {
                const qn = Ut.querySelectorAll(en);
                for (
                  let { target: yn } = Yn;
                  yn && yn !== this;
                  yn = yn.parentNode
                )
                  for (const Mn of qn)
                    if (Mn === yn)
                      return (
                        Lt(Yn, { delegateTarget: yn }),
                        tn.oneOff && Ie.off(Ut, Yn.type, en, qt),
                        qt.apply(yn, [Yn])
                      );
              };
            })(W, j, Le)
          : (function (Ut, en) {
              return function qt(tn) {
                return (
                  Lt(tn, { delegateTarget: Ut }),
                  qt.oneOff && Ie.off(Ut, tn.type, en),
                  en.apply(Ut, [tn])
                );
              };
            })(W, Le);
      (Ht.delegationSelector = _e ? j : null),
        (Ht.callable = Le),
        (Ht.oneOff = ve),
        (Ht.uidEvent = ot),
        (bt[ot] = Ht),
        W.addEventListener(Ue, Ht, _e);
    }
    function Vt(W, w, j, ne, ve) {
      const _e = xt(w[j], ne, ve);
      _e && (W.removeEventListener(j, _e, !!ve), delete w[j][_e.uidEvent]);
    }
    function It(W, w, j, ne) {
      const ve = w[j] || {};
      for (const [_e, Le] of Object.entries(ve))
        _e.includes(ne) && Vt(W, w, j, Le.callable, Le.delegationSelector);
    }
    function ht(W) {
      return (W = W.replace(F, "")), ke[W] || W;
    }
    const Ie = {
      on(W, w, j, ne) {
        Mt(W, w, j, ne, !1);
      },
      one(W, w, j, ne) {
        Mt(W, w, j, ne, !0);
      },
      off(W, w, j, ne) {
        if (typeof w != "string" || !W) return;
        const [ve, _e, Le] = pt(w, j, ne),
          Ue = Le !== w,
          Qe = Ct(W),
          bt = Qe[Le] || {},
          ft = w.startsWith(".");
        if (_e === void 0) {
          if (ft) for (const ot of Object.keys(Qe)) It(W, Qe, ot, w.slice(1));
          for (const [ot, Ht] of Object.entries(bt)) {
            const Ut = ot.replace(ce, "");
            (Ue && !w.includes(Ut)) ||
              Vt(W, Qe, Le, Ht.callable, Ht.delegationSelector);
          }
        } else {
          if (!Object.keys(bt).length) return;
          Vt(W, Qe, Le, _e, ve ? j : null);
        }
      },
      trigger(W, w, j) {
        if (typeof w != "string" || !W) return null;
        const ne = L();
        let ve = null,
          _e = !0,
          Le = !0,
          Ue = !1;
        w !== ht(w) &&
          ne &&
          ((ve = ne.Event(w, j)),
          ne(W).trigger(ve),
          (_e = !ve.isPropagationStopped()),
          (Le = !ve.isImmediatePropagationStopped()),
          (Ue = ve.isDefaultPrevented()));
        let Qe = new Event(w, { bubbles: _e, cancelable: !0 });
        return (
          (Qe = Lt(Qe, j)),
          Ue && Qe.preventDefault(),
          Le && W.dispatchEvent(Qe),
          Qe.defaultPrevented && ve && ve.preventDefault(),
          Qe
        );
      },
    };
    function Lt(W, w = {}) {
      for (const [j, ne] of Object.entries(w))
        try {
          W[j] = ne;
        } catch {
          Object.defineProperty(W, j, { configurable: !0, get: () => ne });
        }
      return W;
    }
    const we = new Map(),
      Xe = {
        set(W, w, j) {
          we.has(W) || we.set(W, new Map());
          const ne = we.get(W);
          ne.has(w) || ne.size === 0
            ? ne.set(w, j)
            : console.error(
                `Bootstrap doesn't allow more than one instance per element. Bound instance: ${
                  Array.from(ne.keys())[0]
                }.`
              );
        },
        get: (W, w) => (we.has(W) && we.get(W).get(w)) || null,
        remove(W, w) {
          if (!we.has(W)) return;
          const j = we.get(W);
          j.delete(w), j.size === 0 && we.delete(W);
        },
      };
    function Oe(W) {
      if (W === "true") return !0;
      if (W === "false") return !1;
      if (W === Number(W).toString()) return Number(W);
      if (W === "" || W === "null") return null;
      if (typeof W != "string") return W;
      try {
        return JSON.parse(decodeURIComponent(W));
      } catch {
        return W;
      }
    }
    function Ye(W) {
      return W.replace(/[A-Z]/g, (w) => `-${w.toLowerCase()}`);
    }
    const Re = {
      setDataAttribute(W, w, j) {
        W.setAttribute(`data-bs-${Ye(w)}`, j);
      },
      removeDataAttribute(W, w) {
        W.removeAttribute(`data-bs-${Ye(w)}`);
      },
      getDataAttributes(W) {
        if (!W) return {};
        const w = {},
          j = Object.keys(W.dataset).filter(
            (ne) => ne.startsWith("bs") && !ne.startsWith("bsConfig")
          );
        for (const ne of j) {
          let ve = ne.replace(/^bs/, "");
          (ve = ve.charAt(0).toLowerCase() + ve.slice(1, ve.length)),
            (w[ve] = Oe(W.dataset[ne]));
        }
        return w;
      },
      getDataAttribute: (W, w) => Oe(W.getAttribute(`data-bs-${Ye(w)}`)),
    };
    class $e {
      static get Default() {
        return {};
      }
      static get DefaultType() {
        return {};
      }
      static get NAME() {
        throw new Error(
          'You have to implement the static method "NAME", for each component!'
        );
      }
      _getConfig(w) {
        return (
          (w = this._mergeConfigObj(w)),
          (w = this._configAfterMerge(w)),
          this._typeCheckConfig(w),
          w
        );
      }
      _configAfterMerge(w) {
        return w;
      }
      _mergeConfigObj(w, j) {
        const ne = r(j) ? Re.getDataAttribute(j, "config") : {};
        return {
          ...this.constructor.Default,
          ...(typeof ne == "object" ? ne : {}),
          ...(r(j) ? Re.getDataAttributes(j) : {}),
          ...(typeof w == "object" ? w : {}),
        };
      }
      _typeCheckConfig(w, j = this.constructor.DefaultType) {
        for (const [ve, _e] of Object.entries(j)) {
          const Le = w[ve],
            Ue = r(Le)
              ? "element"
              : (ne = Le) == null
              ? `${ne}`
              : Object.prototype.toString
                  .call(ne)
                  .match(/\s([a-z]+)/i)[1]
                  .toLowerCase();
          if (!new RegExp(_e).test(Ue))
            throw new TypeError(
              `${this.constructor.NAME.toUpperCase()}: Option "${ve}" provided type "${Ue}" but expected type "${_e}".`
            );
        }
        var ne;
      }
    }
    class Fe extends $e {
      constructor(w, j) {
        super(),
          (w = a(w)) &&
            ((this._element = w),
            (this._config = this._getConfig(j)),
            Xe.set(this._element, this.constructor.DATA_KEY, this));
      }
      dispose() {
        Xe.remove(this._element, this.constructor.DATA_KEY),
          Ie.off(this._element, this.constructor.EVENT_KEY);
        for (const w of Object.getOwnPropertyNames(this)) this[w] = null;
      }
      _queueCallback(w, j, ne = !0) {
        le(w, j, ne);
      }
      _getConfig(w) {
        return (
          (w = this._mergeConfigObj(w, this._element)),
          (w = this._configAfterMerge(w)),
          this._typeCheckConfig(w),
          w
        );
      }
      static getInstance(w) {
        return Xe.get(a(w), this.DATA_KEY);
      }
      static getOrCreateInstance(w, j = {}) {
        return (
          this.getInstance(w) || new this(w, typeof j == "object" ? j : null)
        );
      }
      static get VERSION() {
        return "5.3.0-alpha1";
      }
      static get DATA_KEY() {
        return `bs.${this.NAME}`;
      }
      static get EVENT_KEY() {
        return `.${this.DATA_KEY}`;
      }
      static eventName(w) {
        return `${w}${this.EVENT_KEY}`;
      }
    }
    const ct = (W) => {
        let w = W.getAttribute("data-bs-target");
        if (!w || w === "#") {
          let j = W.getAttribute("href");
          if (!j || (!j.includes("#") && !j.startsWith("."))) return null;
          j.includes("#") && !j.startsWith("#") && (j = `#${j.split("#")[1]}`),
            (w = j && j !== "#" ? j.trim() : null);
        }
        return e(w);
      },
      de = {
        find: (W, w = document.documentElement) =>
          [].concat(...Element.prototype.querySelectorAll.call(w, W)),
        findOne: (W, w = document.documentElement) =>
          Element.prototype.querySelector.call(w, W),
        children: (W, w) =>
          [].concat(...W.children).filter((j) => j.matches(w)),
        parents(W, w) {
          const j = [];
          let ne = W.parentNode.closest(w);
          for (; ne; ) j.push(ne), (ne = ne.parentNode.closest(w));
          return j;
        },
        prev(W, w) {
          let j = W.previousElementSibling;
          for (; j; ) {
            if (j.matches(w)) return [j];
            j = j.previousElementSibling;
          }
          return [];
        },
        next(W, w) {
          let j = W.nextElementSibling;
          for (; j; ) {
            if (j.matches(w)) return [j];
            j = j.nextElementSibling;
          }
          return [];
        },
        focusableChildren(W) {
          const w = [
            "a",
            "button",
            "input",
            "textarea",
            "select",
            "details",
            "[tabindex]",
            '[contenteditable="true"]',
          ]
            .map((j) => `${j}:not([tabindex^="-"])`)
            .join(",");
          return this.find(w, W).filter((j) => !u(j) && o(j));
        },
        getSelectorFromElement(W) {
          const w = ct(W);
          return w && de.findOne(w) ? w : null;
        },
        getElementFromSelector(W) {
          const w = ct(W);
          return w ? de.findOne(w) : null;
        },
        getMultipleElementsFromSelector(W) {
          const w = ct(W);
          return w ? de.find(w) : [];
        },
      },
      yt = (W, w = "hide") => {
        const j = `click.dismiss${W.EVENT_KEY}`,
          ne = W.NAME;
        Ie.on(document, j, `[data-bs-dismiss="${ne}"]`, function (ve) {
          if (
            (["A", "AREA"].includes(this.tagName) && ve.preventDefault(),
            u(this))
          )
            return;
          const _e = de.getElementFromSelector(this) || this.closest(`.${ne}`);
          W.getOrCreateInstance(_e)[w]();
        });
      };
    class Ze extends Fe {
      static get NAME() {
        return "alert";
      }
      close() {
        if (Ie.trigger(this._element, "close.bs.alert").defaultPrevented)
          return;
        this._element.classList.remove("show");
        const w = this._element.classList.contains("fade");
        this._queueCallback(() => this._destroyElement(), this._element, w);
      }
      _destroyElement() {
        this._element.remove(),
          Ie.trigger(this._element, "closed.bs.alert"),
          this.dispose();
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Ze.getOrCreateInstance(this);
          if (typeof w == "string") {
            if (j[w] === void 0 || w.startsWith("_") || w === "constructor")
              throw new TypeError(`No method named "${w}"`);
            j[w](this);
          }
        });
      }
    }
    yt(Ze, "close"), ae(Ze);
    const Zt = '[data-bs-toggle="button"]';
    class Wt extends Fe {
      static get NAME() {
        return "button";
      }
      toggle() {
        this._element.setAttribute(
          "aria-pressed",
          this._element.classList.toggle("active")
        );
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Wt.getOrCreateInstance(this);
          w === "toggle" && j[w]();
        });
      }
    }
    Ie.on(document, "click.bs.button.data-api", Zt, (W) => {
      W.preventDefault();
      const w = W.target.closest(Zt);
      Wt.getOrCreateInstance(w).toggle();
    }),
      ae(Wt);
    const $t = { endCallback: null, leftCallback: null, rightCallback: null },
      Rt = {
        endCallback: "(function|null)",
        leftCallback: "(function|null)",
        rightCallback: "(function|null)",
      };
    class sn extends $e {
      constructor(w, j) {
        super(),
          (this._element = w),
          w &&
            sn.isSupported() &&
            ((this._config = this._getConfig(j)),
            (this._deltaX = 0),
            (this._supportPointerEvents = !!window.PointerEvent),
            this._initEvents());
      }
      static get Default() {
        return $t;
      }
      static get DefaultType() {
        return Rt;
      }
      static get NAME() {
        return "swipe";
      }
      dispose() {
        Ie.off(this._element, ".bs.swipe");
      }
      _start(w) {
        this._supportPointerEvents
          ? this._eventIsPointerPenTouch(w) && (this._deltaX = w.clientX)
          : (this._deltaX = w.touches[0].clientX);
      }
      _end(w) {
        this._eventIsPointerPenTouch(w) &&
          (this._deltaX = w.clientX - this._deltaX),
          this._handleSwipe(),
          se(this._config.endCallback);
      }
      _move(w) {
        this._deltaX =
          w.touches && w.touches.length > 1
            ? 0
            : w.touches[0].clientX - this._deltaX;
      }
      _handleSwipe() {
        const w = Math.abs(this._deltaX);
        if (w <= 40) return;
        const j = w / this._deltaX;
        (this._deltaX = 0),
          j &&
            se(j > 0 ? this._config.rightCallback : this._config.leftCallback);
      }
      _initEvents() {
        this._supportPointerEvents
          ? (Ie.on(this._element, "pointerdown.bs.swipe", (w) =>
              this._start(w)
            ),
            Ie.on(this._element, "pointerup.bs.swipe", (w) => this._end(w)),
            this._element.classList.add("pointer-event"))
          : (Ie.on(this._element, "touchstart.bs.swipe", (w) => this._start(w)),
            Ie.on(this._element, "touchmove.bs.swipe", (w) => this._move(w)),
            Ie.on(this._element, "touchend.bs.swipe", (w) => this._end(w)));
      }
      _eventIsPointerPenTouch(w) {
        return (
          this._supportPointerEvents &&
          (w.pointerType === "pen" || w.pointerType === "touch")
        );
      }
      static isSupported() {
        return (
          "ontouchstart" in document.documentElement ||
          navigator.maxTouchPoints > 0
        );
      }
    }
    const dt = "next",
      gt = "prev",
      mn = "left",
      Jt = "right",
      Rn = "slid.bs.carousel",
      jr = "carousel",
      vn = "active",
      zn = { ArrowLeft: Jt, ArrowRight: mn },
      Te = {
        interval: 5e3,
        keyboard: !0,
        pause: "hover",
        ride: !1,
        touch: !0,
        wrap: !0,
      },
      st = {
        interval: "(number|boolean)",
        keyboard: "boolean",
        pause: "(string|boolean)",
        ride: "(boolean|string)",
        touch: "boolean",
        wrap: "boolean",
      };
    class Ge extends Fe {
      constructor(w, j) {
        super(w, j),
          (this._interval = null),
          (this._activeElement = null),
          (this._isSliding = !1),
          (this.touchTimeout = null),
          (this._swipeHelper = null),
          (this._indicatorsElement = de.findOne(
            ".carousel-indicators",
            this._element
          )),
          this._addEventListeners(),
          this._config.ride === jr && this.cycle();
      }
      static get Default() {
        return Te;
      }
      static get DefaultType() {
        return st;
      }
      static get NAME() {
        return "carousel";
      }
      next() {
        this._slide(dt);
      }
      nextWhenVisible() {
        !document.hidden && o(this._element) && this.next();
      }
      prev() {
        this._slide(gt);
      }
      pause() {
        this._isSliding && n(this._element), this._clearInterval();
      }
      cycle() {
        this._clearInterval(),
          this._updateInterval(),
          (this._interval = setInterval(
            () => this.nextWhenVisible(),
            this._config.interval
          ));
      }
      _maybeEnableCycle() {
        this._config.ride &&
          (this._isSliding
            ? Ie.one(this._element, Rn, () => this.cycle())
            : this.cycle());
      }
      to(w) {
        const j = this._getItems();
        if (w > j.length - 1 || w < 0) return;
        if (this._isSliding)
          return void Ie.one(this._element, Rn, () => this.to(w));
        const ne = this._getItemIndex(this._getActive());
        if (ne === w) return;
        const ve = w > ne ? dt : gt;
        this._slide(ve, j[w]);
      }
      dispose() {
        this._swipeHelper && this._swipeHelper.dispose(), super.dispose();
      }
      _configAfterMerge(w) {
        return (w.defaultInterval = w.interval), w;
      }
      _addEventListeners() {
        this._config.keyboard &&
          Ie.on(this._element, "keydown.bs.carousel", (w) => this._keydown(w)),
          this._config.pause === "hover" &&
            (Ie.on(this._element, "mouseenter.bs.carousel", () => this.pause()),
            Ie.on(this._element, "mouseleave.bs.carousel", () =>
              this._maybeEnableCycle()
            )),
          this._config.touch &&
            sn.isSupported() &&
            this._addTouchEventListeners();
      }
      _addTouchEventListeners() {
        for (const j of de.find(".carousel-item img", this._element))
          Ie.on(j, "dragstart.bs.carousel", (ne) => ne.preventDefault());
        const w = {
          leftCallback: () => this._slide(this._directionToOrder(mn)),
          rightCallback: () => this._slide(this._directionToOrder(Jt)),
          endCallback: () => {
            this._config.pause === "hover" &&
              (this.pause(),
              this.touchTimeout && clearTimeout(this.touchTimeout),
              (this.touchTimeout = setTimeout(
                () => this._maybeEnableCycle(),
                500 + this._config.interval
              )));
          },
        };
        this._swipeHelper = new sn(this._element, w);
      }
      _keydown(w) {
        if (/input|textarea/i.test(w.target.tagName)) return;
        const j = zn[w.key];
        j && (w.preventDefault(), this._slide(this._directionToOrder(j)));
      }
      _getItemIndex(w) {
        return this._getItems().indexOf(w);
      }
      _setActiveIndicatorElement(w) {
        if (!this._indicatorsElement) return;
        const j = de.findOne(".active", this._indicatorsElement);
        j.classList.remove(vn), j.removeAttribute("aria-current");
        const ne = de.findOne(
          `[data-bs-slide-to="${w}"]`,
          this._indicatorsElement
        );
        ne && (ne.classList.add(vn), ne.setAttribute("aria-current", "true"));
      }
      _updateInterval() {
        const w = this._activeElement || this._getActive();
        if (!w) return;
        const j = Number.parseInt(w.getAttribute("data-bs-interval"), 10);
        this._config.interval = j || this._config.defaultInterval;
      }
      _slide(w, j = null) {
        if (this._isSliding) return;
        const ne = this._getActive(),
          ve = w === dt,
          _e = j || he(this._getItems(), ne, ve, this._config.wrap);
        if (_e === ne) return;
        const Le = this._getItemIndex(_e),
          Ue = (ot) =>
            Ie.trigger(this._element, ot, {
              relatedTarget: _e,
              direction: this._orderToDirection(w),
              from: this._getItemIndex(ne),
              to: Le,
            });
        if (Ue("slide.bs.carousel").defaultPrevented || !ne || !_e) return;
        const Qe = !!this._interval;
        this.pause(),
          (this._isSliding = !0),
          this._setActiveIndicatorElement(Le),
          (this._activeElement = _e);
        const bt = ve ? "carousel-item-start" : "carousel-item-end",
          ft = ve ? "carousel-item-next" : "carousel-item-prev";
        _e.classList.add(ft),
          E(_e),
          ne.classList.add(bt),
          _e.classList.add(bt),
          this._queueCallback(
            () => {
              _e.classList.remove(bt, ft),
                _e.classList.add(vn),
                ne.classList.remove(vn, ft, bt),
                (this._isSliding = !1),
                Ue(Rn);
            },
            ne,
            this._isAnimated()
          ),
          Qe && this.cycle();
      }
      _isAnimated() {
        return this._element.classList.contains("slide");
      }
      _getActive() {
        return de.findOne(".active.carousel-item", this._element);
      }
      _getItems() {
        return de.find(".carousel-item", this._element);
      }
      _clearInterval() {
        this._interval &&
          (clearInterval(this._interval), (this._interval = null));
      }
      _directionToOrder(w) {
        return B() ? (w === mn ? gt : dt) : w === mn ? dt : gt;
      }
      _orderToDirection(w) {
        return B() ? (w === gt ? mn : Jt) : w === gt ? Jt : mn;
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Ge.getOrCreateInstance(this, w);
          if (typeof w != "number") {
            if (typeof w == "string") {
              if (j[w] === void 0 || w.startsWith("_") || w === "constructor")
                throw new TypeError(`No method named "${w}"`);
              j[w]();
            }
          } else j.to(w);
        });
      }
    }
    Ie.on(
      document,
      "click.bs.carousel.data-api",
      "[data-bs-slide], [data-bs-slide-to]",
      function (W) {
        const w = de.getElementFromSelector(this);
        if (!w || !w.classList.contains(jr)) return;
        W.preventDefault();
        const j = Ge.getOrCreateInstance(w),
          ne = this.getAttribute("data-bs-slide-to");
        return ne
          ? (j.to(ne), void j._maybeEnableCycle())
          : Re.getDataAttribute(this, "slide") === "next"
          ? (j.next(), void j._maybeEnableCycle())
          : (j.prev(), void j._maybeEnableCycle());
      }
    ),
      Ie.on(window, "load.bs.carousel.data-api", () => {
        const W = de.find('[data-bs-ride="carousel"]');
        for (const w of W) Ge.getOrCreateInstance(w);
      }),
      ae(Ge);
    const qe = "show",
      Dt = "collapse",
      nn = "collapsing",
      fn = '[data-bs-toggle="collapse"]',
      _r = { parent: null, toggle: !0 },
      $r = { parent: "(null|element)", toggle: "boolean" };
    class ui extends Fe {
      constructor(w, j) {
        super(w, j), (this._isTransitioning = !1), (this._triggerArray = []);
        const ne = de.find(fn);
        for (const ve of ne) {
          const _e = de.getSelectorFromElement(ve),
            Le = de.find(_e).filter((Ue) => Ue === this._element);
          _e !== null && Le.length && this._triggerArray.push(ve);
        }
        this._initializeChildren(),
          this._config.parent ||
            this._addAriaAndCollapsedClass(this._triggerArray, this._isShown()),
          this._config.toggle && this.toggle();
      }
      static get Default() {
        return _r;
      }
      static get DefaultType() {
        return $r;
      }
      static get NAME() {
        return "collapse";
      }
      toggle() {
        this._isShown() ? this.hide() : this.show();
      }
      show() {
        if (this._isTransitioning || this._isShown()) return;
        let w = [];
        if (
          (this._config.parent &&
            (w = this._getFirstLevelChildren(
              ".collapse.show, .collapse.collapsing"
            )
              .filter((ve) => ve !== this._element)
              .map((ve) => ui.getOrCreateInstance(ve, { toggle: !1 }))),
          (w.length && w[0]._isTransitioning) ||
            Ie.trigger(this._element, "show.bs.collapse").defaultPrevented)
        )
          return;
        for (const ve of w) ve.hide();
        const j = this._getDimension();
        this._element.classList.remove(Dt),
          this._element.classList.add(nn),
          (this._element.style[j] = 0),
          this._addAriaAndCollapsedClass(this._triggerArray, !0),
          (this._isTransitioning = !0);
        const ne = `scroll${j[0].toUpperCase() + j.slice(1)}`;
        this._queueCallback(
          () => {
            (this._isTransitioning = !1),
              this._element.classList.remove(nn),
              this._element.classList.add(Dt, qe),
              (this._element.style[j] = ""),
              Ie.trigger(this._element, "shown.bs.collapse");
          },
          this._element,
          !0
        ),
          (this._element.style[j] = `${this._element[ne]}px`);
      }
      hide() {
        if (
          this._isTransitioning ||
          !this._isShown() ||
          Ie.trigger(this._element, "hide.bs.collapse").defaultPrevented
        )
          return;
        const w = this._getDimension();
        (this._element.style[w] = `${
          this._element.getBoundingClientRect()[w]
        }px`),
          E(this._element),
          this._element.classList.add(nn),
          this._element.classList.remove(Dt, qe);
        for (const j of this._triggerArray) {
          const ne = de.getElementFromSelector(j);
          ne && !this._isShown(ne) && this._addAriaAndCollapsedClass([j], !1);
        }
        (this._isTransitioning = !0),
          (this._element.style[w] = ""),
          this._queueCallback(
            () => {
              (this._isTransitioning = !1),
                this._element.classList.remove(nn),
                this._element.classList.add(Dt),
                Ie.trigger(this._element, "hidden.bs.collapse");
            },
            this._element,
            !0
          );
      }
      _isShown(w = this._element) {
        return w.classList.contains(qe);
      }
      _configAfterMerge(w) {
        return (w.toggle = !!w.toggle), (w.parent = a(w.parent)), w;
      }
      _getDimension() {
        return this._element.classList.contains("collapse-horizontal")
          ? "width"
          : "height";
      }
      _initializeChildren() {
        if (!this._config.parent) return;
        const w = this._getFirstLevelChildren(fn);
        for (const j of w) {
          const ne = de.getElementFromSelector(j);
          ne && this._addAriaAndCollapsedClass([j], this._isShown(ne));
        }
      }
      _getFirstLevelChildren(w) {
        const j = de.find(":scope .collapse .collapse", this._config.parent);
        return de.find(w, this._config.parent).filter((ne) => !j.includes(ne));
      }
      _addAriaAndCollapsedClass(w, j) {
        if (w.length)
          for (const ne of w)
            ne.classList.toggle("collapsed", !j),
              ne.setAttribute("aria-expanded", j);
      }
      static jQueryInterface(w) {
        const j = {};
        return (
          typeof w == "string" && /show|hide/.test(w) && (j.toggle = !1),
          this.each(function () {
            const ne = ui.getOrCreateInstance(this, j);
            if (typeof w == "string") {
              if (ne[w] === void 0)
                throw new TypeError(`No method named "${w}"`);
              ne[w]();
            }
          })
        );
      }
    }
    Ie.on(document, "click.bs.collapse.data-api", fn, function (W) {
      (W.target.tagName === "A" ||
        (W.delegateTarget && W.delegateTarget.tagName === "A")) &&
        W.preventDefault();
      for (const w of de.getMultipleElementsFromSelector(this))
        ui.getOrCreateInstance(w, { toggle: !1 }).toggle();
    }),
      ae(ui);
    var mr = "top",
      Vn = "bottom",
      An = "right",
      hr = "left",
      gs = "auto",
      wi = [mr, Vn, An, hr],
      ji = "start",
      Os = "end",
      Ns = "clippingParents",
      Na = "viewport",
      es = "popper",
      ts = "reference",
      ms = wi.reduce(function (W, w) {
        return W.concat([w + "-" + ji, w + "-" + Os]);
      }, []),
      La = [].concat(wi, [gs]).reduce(function (W, w) {
        return W.concat([w, w + "-" + ji, w + "-" + Os]);
      }, []),
      ua = "beforeRead",
      ns = "read",
      Jo = "afterRead",
      el = "beforeMain",
      tl = "main",
      nl = "afterMain",
      Ls = "beforeWrite",
      go = "write",
      _i = "afterWrite",
      qs = [ua, ns, Jo, el, tl, nl, Ls, go, _i];
    function er(W) {
      return W ? (W.nodeName || "").toLowerCase() : null;
    }
    function ar(W) {
      if (W == null) return window;
      if (W.toString() !== "[object Window]") {
        var w = W.ownerDocument;
        return (w && w.defaultView) || window;
      }
      return W;
    }
    function Fi(W) {
      return W instanceof ar(W).Element || W instanceof Element;
    }
    function Pr(W) {
      return W instanceof ar(W).HTMLElement || W instanceof HTMLElement;
    }
    function Da(W) {
      return (
        typeof ShadowRoot < "u" &&
        (W instanceof ar(W).ShadowRoot || W instanceof ShadowRoot)
      );
    }
    const vs = {
      name: "applyStyles",
      enabled: !0,
      phase: "write",
      fn: function (W) {
        var w = W.state;
        Object.keys(w.elements).forEach(function (j) {
          var ne = w.styles[j] || {},
            ve = w.attributes[j] || {},
            _e = w.elements[j];
          Pr(_e) &&
            er(_e) &&
            (Object.assign(_e.style, ne),
            Object.keys(ve).forEach(function (Le) {
              var Ue = ve[Le];
              Ue === !1
                ? _e.removeAttribute(Le)
                : _e.setAttribute(Le, Ue === !0 ? "" : Ue);
            }));
        });
      },
      effect: function (W) {
        var w = W.state,
          j = {
            popper: {
              position: w.options.strategy,
              left: "0",
              top: "0",
              margin: "0",
            },
            arrow: { position: "absolute" },
            reference: {},
          };
        return (
          Object.assign(w.elements.popper.style, j.popper),
          (w.styles = j),
          w.elements.arrow && Object.assign(w.elements.arrow.style, j.arrow),
          function () {
            Object.keys(w.elements).forEach(function (ne) {
              var ve = w.elements[ne],
                _e = w.attributes[ne] || {},
                Le = Object.keys(
                  w.styles.hasOwnProperty(ne) ? w.styles[ne] : j[ne]
                ).reduce(function (Ue, Qe) {
                  return (Ue[Qe] = ""), Ue;
                }, {});
              Pr(ve) &&
                er(ve) &&
                (Object.assign(ve.style, Le),
                Object.keys(_e).forEach(function (Ue) {
                  ve.removeAttribute(Ue);
                }));
            });
          }
        );
      },
      requires: ["computeStyles"],
    };
    function Hn(W) {
      return W.split("-")[0];
    }
    var rs = Math.max,
      Ks = Math.min,
      is = Math.round;
    function Si() {
      var W = navigator.userAgentData;
      return W != null && W.brands
        ? W.brands
            .map(function (w) {
              return w.brand + "/" + w.version;
            })
            .join(" ")
        : navigator.userAgent;
    }
    function U() {
      return !/^((?!chrome|android).)*safari/i.test(Si());
    }
    function i(W, w, j) {
      w === void 0 && (w = !1), j === void 0 && (j = !1);
      var ne = W.getBoundingClientRect(),
        ve = 1,
        _e = 1;
      w &&
        Pr(W) &&
        ((ve = (W.offsetWidth > 0 && is(ne.width) / W.offsetWidth) || 1),
        (_e = (W.offsetHeight > 0 && is(ne.height) / W.offsetHeight) || 1));
      var Le = (Fi(W) ? ar(W) : window).visualViewport,
        Ue = !U() && j,
        Qe = (ne.left + (Ue && Le ? Le.offsetLeft : 0)) / ve,
        bt = (ne.top + (Ue && Le ? Le.offsetTop : 0)) / _e,
        ft = ne.width / ve,
        ot = ne.height / _e;
      return {
        width: ft,
        height: ot,
        top: bt,
        right: Qe + ft,
        bottom: bt + ot,
        left: Qe,
        x: Qe,
        y: bt,
      };
    }
    function s(W) {
      var w = i(W),
        j = W.offsetWidth,
        ne = W.offsetHeight;
      return (
        Math.abs(w.width - j) <= 1 && (j = w.width),
        Math.abs(w.height - ne) <= 1 && (ne = w.height),
        { x: W.offsetLeft, y: W.offsetTop, width: j, height: ne }
      );
    }
    function l(W, w) {
      var j = w.getRootNode && w.getRootNode();
      if (W.contains(w)) return !0;
      if (j && Da(j)) {
        var ne = w;
        do {
          if (ne && W.isSameNode(ne)) return !0;
          ne = ne.parentNode || ne.host;
        } while (ne);
      }
      return !1;
    }
    function c(W) {
      return ar(W).getComputedStyle(W);
    }
    function h(W) {
      return ["table", "td", "th"].indexOf(er(W)) >= 0;
    }
    function d(W) {
      return (
        (Fi(W) ? W.ownerDocument : W.document) || window.document
      ).documentElement;
    }
    function f(W) {
      return er(W) === "html"
        ? W
        : W.assignedSlot || W.parentNode || (Da(W) ? W.host : null) || d(W);
    }
    function p(W) {
      return Pr(W) && c(W).position !== "fixed" ? W.offsetParent : null;
    }
    function v(W) {
      for (var w = ar(W), j = p(W); j && h(j) && c(j).position === "static"; )
        j = p(j);
      return j &&
        (er(j) === "html" || (er(j) === "body" && c(j).position === "static"))
        ? w
        : j ||
            (function (ne) {
              var ve = /firefox/i.test(Si());
              if (/Trident/i.test(Si()) && Pr(ne) && c(ne).position === "fixed")
                return null;
              var _e = f(ne);
              for (
                Da(_e) && (_e = _e.host);
                Pr(_e) && ["html", "body"].indexOf(er(_e)) < 0;

              ) {
                var Le = c(_e);
                if (
                  Le.transform !== "none" ||
                  Le.perspective !== "none" ||
                  Le.contain === "paint" ||
                  ["transform", "perspective"].indexOf(Le.willChange) !== -1 ||
                  (ve && Le.willChange === "filter") ||
                  (ve && Le.filter && Le.filter !== "none")
                )
                  return _e;
                _e = _e.parentNode;
              }
              return null;
            })(W) ||
            w;
    }
    function b(W) {
      return ["top", "bottom"].indexOf(W) >= 0 ? "x" : "y";
    }
    function _(W, w, j) {
      return rs(W, Ks(w, j));
    }
    function S(W) {
      return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, W);
    }
    function T(W, w) {
      return w.reduce(function (j, ne) {
        return (j[ne] = W), j;
      }, {});
    }
    const O = {
      name: "arrow",
      enabled: !0,
      phase: "main",
      fn: function (W) {
        var w,
          j = W.state,
          ne = W.name,
          ve = W.options,
          _e = j.elements.arrow,
          Le = j.modifiersData.popperOffsets,
          Ue = Hn(j.placement),
          Qe = b(Ue),
          bt = [hr, An].indexOf(Ue) >= 0 ? "height" : "width";
        if (_e && Le) {
          var ft = (function (Gn, Bn) {
              return S(
                typeof (Gn =
                  typeof Gn == "function"
                    ? Gn(
                        Object.assign({}, Bn.rects, { placement: Bn.placement })
                      )
                    : Gn) != "number"
                  ? Gn
                  : T(Gn, wi)
              );
            })(ve.padding, j),
            ot = s(_e),
            Ht = Qe === "y" ? mr : hr,
            Ut = Qe === "y" ? Vn : An,
            en =
              j.rects.reference[bt] +
              j.rects.reference[Qe] -
              Le[Qe] -
              j.rects.popper[bt],
            qt = Le[Qe] - j.rects.reference[Qe],
            tn = v(_e),
            Yn = tn
              ? Qe === "y"
                ? tn.clientHeight || 0
                : tn.clientWidth || 0
              : 0,
            qn = en / 2 - qt / 2,
            yn = ft[Ht],
            Mn = Yn - ot[bt] - ft[Ut],
            pn = Yn / 2 - ot[bt] / 2 + qn,
            Sn = _(yn, pn, Mn),
            Wn = Qe;
          j.modifiersData[ne] =
            (((w = {})[Wn] = Sn), (w.centerOffset = Sn - pn), w);
        }
      },
      effect: function (W) {
        var w = W.state,
          j = W.options.element,
          ne = j === void 0 ? "[data-popper-arrow]" : j;
        ne != null &&
          (typeof ne != "string" ||
            (ne = w.elements.popper.querySelector(ne))) &&
          l(w.elements.popper, ne) &&
          (w.elements.arrow = ne);
      },
      requires: ["popperOffsets"],
      requiresIfExists: ["preventOverflow"],
    };
    function D(W) {
      return W.split("-")[1];
    }
    var V = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
    function G(W) {
      var w,
        j = W.popper,
        ne = W.popperRect,
        ve = W.placement,
        _e = W.variation,
        Le = W.offsets,
        Ue = W.position,
        Qe = W.gpuAcceleration,
        bt = W.adaptive,
        ft = W.roundOffsets,
        ot = W.isFixed,
        Ht = Le.x,
        Ut = Ht === void 0 ? 0 : Ht,
        en = Le.y,
        qt = en === void 0 ? 0 : en,
        tn = typeof ft == "function" ? ft({ x: Ut, y: qt }) : { x: Ut, y: qt };
      (Ut = tn.x), (qt = tn.y);
      var Yn = Le.hasOwnProperty("x"),
        qn = Le.hasOwnProperty("y"),
        yn = hr,
        Mn = mr,
        pn = window;
      if (bt) {
        var Sn = v(j),
          Wn = "clientHeight",
          Gn = "clientWidth";
        Sn === ar(j) &&
          c((Sn = d(j))).position !== "static" &&
          Ue === "absolute" &&
          ((Wn = "scrollHeight"), (Gn = "scrollWidth")),
          (ve === mr || ((ve === hr || ve === An) && _e === Os)) &&
            ((Mn = Vn),
            (qt -=
              (ot && Sn === pn && pn.visualViewport
                ? pn.visualViewport.height
                : Sn[Wn]) - ne.height),
            (qt *= Qe ? 1 : -1)),
          (ve !== hr && ((ve !== mr && ve !== Vn) || _e !== Os)) ||
            ((yn = An),
            (Ut -=
              (ot && Sn === pn && pn.visualViewport
                ? pn.visualViewport.width
                : Sn[Gn]) - ne.width),
            (Ut *= Qe ? 1 : -1));
      }
      var Bn,
        kr = Object.assign({ position: Ue }, bt && V),
        as =
          ft === !0
            ? (function (Ms) {
                var Ci = Ms.x,
                  os = Ms.y,
                  ri = window.devicePixelRatio || 1;
                return { x: is(Ci * ri) / ri || 0, y: is(os * ri) / ri || 0 };
              })({ x: Ut, y: qt })
            : { x: Ut, y: qt };
      return (
        (Ut = as.x),
        (qt = as.y),
        Qe
          ? Object.assign(
              {},
              kr,
              (((Bn = {})[Mn] = qn ? "0" : ""),
              (Bn[yn] = Yn ? "0" : ""),
              (Bn.transform =
                (pn.devicePixelRatio || 1) <= 1
                  ? "translate(" + Ut + "px, " + qt + "px)"
                  : "translate3d(" + Ut + "px, " + qt + "px, 0)"),
              Bn)
            )
          : Object.assign(
              {},
              kr,
              (((w = {})[Mn] = qn ? qt + "px" : ""),
              (w[yn] = Yn ? Ut + "px" : ""),
              (w.transform = ""),
              w)
            )
      );
    }
    const Q = {
      name: "computeStyles",
      enabled: !0,
      phase: "beforeWrite",
      fn: function (W) {
        var w = W.state,
          j = W.options,
          ne = j.gpuAcceleration,
          ve = ne === void 0 || ne,
          _e = j.adaptive,
          Le = _e === void 0 || _e,
          Ue = j.roundOffsets,
          Qe = Ue === void 0 || Ue,
          bt = {
            placement: Hn(w.placement),
            variation: D(w.placement),
            popper: w.elements.popper,
            popperRect: w.rects.popper,
            gpuAcceleration: ve,
            isFixed: w.options.strategy === "fixed",
          };
        w.modifiersData.popperOffsets != null &&
          (w.styles.popper = Object.assign(
            {},
            w.styles.popper,
            G(
              Object.assign({}, bt, {
                offsets: w.modifiersData.popperOffsets,
                position: w.options.strategy,
                adaptive: Le,
                roundOffsets: Qe,
              })
            )
          )),
          w.modifiersData.arrow != null &&
            (w.styles.arrow = Object.assign(
              {},
              w.styles.arrow,
              G(
                Object.assign({}, bt, {
                  offsets: w.modifiersData.arrow,
                  position: "absolute",
                  adaptive: !1,
                  roundOffsets: Qe,
                })
              )
            )),
          (w.attributes.popper = Object.assign({}, w.attributes.popper, {
            "data-popper-placement": w.placement,
          }));
      },
      data: {},
    };
    var m = { passive: !0 };
    const k = {
      name: "eventListeners",
      enabled: !0,
      phase: "write",
      fn: function () {},
      effect: function (W) {
        var w = W.state,
          j = W.instance,
          ne = W.options,
          ve = ne.scroll,
          _e = ve === void 0 || ve,
          Le = ne.resize,
          Ue = Le === void 0 || Le,
          Qe = ar(w.elements.popper),
          bt = [].concat(w.scrollParents.reference, w.scrollParents.popper);
        return (
          _e &&
            bt.forEach(function (ft) {
              ft.addEventListener("scroll", j.update, m);
            }),
          Ue && Qe.addEventListener("resize", j.update, m),
          function () {
            _e &&
              bt.forEach(function (ft) {
                ft.removeEventListener("scroll", j.update, m);
              }),
              Ue && Qe.removeEventListener("resize", j.update, m);
          }
        );
      },
      data: {},
    };
    var N = { left: "right", right: "left", bottom: "top", top: "bottom" };
    function X(W) {
      return W.replace(/left|right|bottom|top/g, function (w) {
        return N[w];
      });
    }
    var K = { start: "end", end: "start" };
    function ee(W) {
      return W.replace(/start|end/g, function (w) {
        return K[w];
      });
    }
    function fe(W) {
      var w = ar(W);
      return { scrollLeft: w.pageXOffset, scrollTop: w.pageYOffset };
    }
    function ge(W) {
      return i(d(W)).left + fe(W).scrollLeft;
    }
    function Pe(W) {
      var w = c(W),
        j = w.overflow,
        ne = w.overflowX,
        ve = w.overflowY;
      return /auto|scroll|overlay|hidden/.test(j + ve + ne);
    }
    function We(W) {
      return ["html", "body", "#document"].indexOf(er(W)) >= 0
        ? W.ownerDocument.body
        : Pr(W) && Pe(W)
        ? W
        : We(f(W));
    }
    function ze(W, w) {
      var j;
      w === void 0 && (w = []);
      var ne = We(W),
        ve = ne === ((j = W.ownerDocument) == null ? void 0 : j.body),
        _e = ar(ne),
        Le = ve ? [_e].concat(_e.visualViewport || [], Pe(ne) ? ne : []) : ne,
        Ue = w.concat(Le);
      return ve ? Ue : Ue.concat(ze(f(Le)));
    }
    function ut(W) {
      return Object.assign({}, W, {
        left: W.x,
        top: W.y,
        right: W.x + W.width,
        bottom: W.y + W.height,
      });
    }
    function St(W, w, j) {
      return w === Na
        ? ut(
            (function (ne, ve) {
              var _e = ar(ne),
                Le = d(ne),
                Ue = _e.visualViewport,
                Qe = Le.clientWidth,
                bt = Le.clientHeight,
                ft = 0,
                ot = 0;
              if (Ue) {
                (Qe = Ue.width), (bt = Ue.height);
                var Ht = U();
                (Ht || (!Ht && ve === "fixed")) &&
                  ((ft = Ue.offsetLeft), (ot = Ue.offsetTop));
              }
              return { width: Qe, height: bt, x: ft + ge(ne), y: ot };
            })(W, j)
          )
        : Fi(w)
        ? (function (ne, ve) {
            var _e = i(ne, !1, ve === "fixed");
            return (
              (_e.top = _e.top + ne.clientTop),
              (_e.left = _e.left + ne.clientLeft),
              (_e.bottom = _e.top + ne.clientHeight),
              (_e.right = _e.left + ne.clientWidth),
              (_e.width = ne.clientWidth),
              (_e.height = ne.clientHeight),
              (_e.x = _e.left),
              (_e.y = _e.top),
              _e
            );
          })(w, j)
        : ut(
            (function (ne) {
              var ve,
                _e = d(ne),
                Le = fe(ne),
                Ue = (ve = ne.ownerDocument) == null ? void 0 : ve.body,
                Qe = rs(
                  _e.scrollWidth,
                  _e.clientWidth,
                  Ue ? Ue.scrollWidth : 0,
                  Ue ? Ue.clientWidth : 0
                ),
                bt = rs(
                  _e.scrollHeight,
                  _e.clientHeight,
                  Ue ? Ue.scrollHeight : 0,
                  Ue ? Ue.clientHeight : 0
                ),
                ft = -Le.scrollLeft + ge(ne),
                ot = -Le.scrollTop;
              return (
                c(Ue || _e).direction === "rtl" &&
                  (ft += rs(_e.clientWidth, Ue ? Ue.clientWidth : 0) - Qe),
                { width: Qe, height: bt, x: ft, y: ot }
              );
            })(d(W))
          );
    }
    function zt(W) {
      var w,
        j = W.reference,
        ne = W.element,
        ve = W.placement,
        _e = ve ? Hn(ve) : null,
        Le = ve ? D(ve) : null,
        Ue = j.x + j.width / 2 - ne.width / 2,
        Qe = j.y + j.height / 2 - ne.height / 2;
      switch (_e) {
        case mr:
          w = { x: Ue, y: j.y - ne.height };
          break;
        case Vn:
          w = { x: Ue, y: j.y + j.height };
          break;
        case An:
          w = { x: j.x + j.width, y: Qe };
          break;
        case hr:
          w = { x: j.x - ne.width, y: Qe };
          break;
        default:
          w = { x: j.x, y: j.y };
      }
      var bt = _e ? b(_e) : null;
      if (bt != null) {
        var ft = bt === "y" ? "height" : "width";
        switch (Le) {
          case ji:
            w[bt] = w[bt] - (j[ft] / 2 - ne[ft] / 2);
            break;
          case Os:
            w[bt] = w[bt] + (j[ft] / 2 - ne[ft] / 2);
        }
      }
      return w;
    }
    function Ot(W, w) {
      w === void 0 && (w = {});
      var j = w,
        ne = j.placement,
        ve = ne === void 0 ? W.placement : ne,
        _e = j.strategy,
        Le = _e === void 0 ? W.strategy : _e,
        Ue = j.boundary,
        Qe = Ue === void 0 ? Ns : Ue,
        bt = j.rootBoundary,
        ft = bt === void 0 ? Na : bt,
        ot = j.elementContext,
        Ht = ot === void 0 ? es : ot,
        Ut = j.altBoundary,
        en = Ut !== void 0 && Ut,
        qt = j.padding,
        tn = qt === void 0 ? 0 : qt,
        Yn = S(typeof tn != "number" ? tn : T(tn, wi)),
        qn = Ht === es ? ts : es,
        yn = W.rects.popper,
        Mn = W.elements[en ? qn : Ht],
        pn = (function (Ci, os, ri, Wr) {
          var js =
              os === "clippingParents"
                ? (function (Kn) {
                    var Ti = ze(f(Kn)),
                      pi =
                        ["absolute", "fixed"].indexOf(c(Kn).position) >= 0 &&
                        Pr(Kn)
                          ? v(Kn)
                          : Kn;
                    return Fi(pi)
                      ? Ti.filter(function (Bi) {
                          return Fi(Bi) && l(Bi, pi) && er(Bi) !== "body";
                        })
                      : [];
                  })(Ci)
                : [].concat(os),
            ws = [].concat(js, [ri]),
            ol = ws[0],
            Ur = ws.reduce(function (Kn, Ti) {
              var pi = St(Ci, Ti, Wr);
              return (
                (Kn.top = rs(pi.top, Kn.top)),
                (Kn.right = Ks(pi.right, Kn.right)),
                (Kn.bottom = Ks(pi.bottom, Kn.bottom)),
                (Kn.left = rs(pi.left, Kn.left)),
                Kn
              );
            }, St(Ci, ol, Wr));
          return (
            (Ur.width = Ur.right - Ur.left),
            (Ur.height = Ur.bottom - Ur.top),
            (Ur.x = Ur.left),
            (Ur.y = Ur.top),
            Ur
          );
        })(Fi(Mn) ? Mn : Mn.contextElement || d(W.elements.popper), Qe, ft, Le),
        Sn = i(W.elements.reference),
        Wn = zt({
          reference: Sn,
          element: yn,
          strategy: "absolute",
          placement: ve,
        }),
        Gn = ut(Object.assign({}, yn, Wn)),
        Bn = Ht === es ? Gn : Sn,
        kr = {
          top: pn.top - Bn.top + Yn.top,
          bottom: Bn.bottom - pn.bottom + Yn.bottom,
          left: pn.left - Bn.left + Yn.left,
          right: Bn.right - pn.right + Yn.right,
        },
        as = W.modifiersData.offset;
      if (Ht === es && as) {
        var Ms = as[ve];
        Object.keys(kr).forEach(function (Ci) {
          var os = [An, Vn].indexOf(Ci) >= 0 ? 1 : -1,
            ri = [mr, Vn].indexOf(Ci) >= 0 ? "y" : "x";
          kr[Ci] += Ms[ri] * os;
        });
      }
      return kr;
    }
    function dn(W, w) {
      w === void 0 && (w = {});
      var j = w,
        ne = j.placement,
        ve = j.boundary,
        _e = j.rootBoundary,
        Le = j.padding,
        Ue = j.flipVariations,
        Qe = j.allowedAutoPlacements,
        bt = Qe === void 0 ? La : Qe,
        ft = D(ne),
        ot = ft
          ? Ue
            ? ms
            : ms.filter(function (en) {
                return D(en) === ft;
              })
          : wi,
        Ht = ot.filter(function (en) {
          return bt.indexOf(en) >= 0;
        });
      Ht.length === 0 && (Ht = ot);
      var Ut = Ht.reduce(function (en, qt) {
        return (
          (en[qt] = Ot(W, {
            placement: qt,
            boundary: ve,
            rootBoundary: _e,
            padding: Le,
          })[Hn(qt)]),
          en
        );
      }, {});
      return Object.keys(Ut).sort(function (en, qt) {
        return Ut[en] - Ut[qt];
      });
    }
    const Ln = {
      name: "flip",
      enabled: !0,
      phase: "main",
      fn: function (W) {
        var w = W.state,
          j = W.options,
          ne = W.name;
        if (!w.modifiersData[ne]._skip) {
          for (
            var ve = j.mainAxis,
              _e = ve === void 0 || ve,
              Le = j.altAxis,
              Ue = Le === void 0 || Le,
              Qe = j.fallbackPlacements,
              bt = j.padding,
              ft = j.boundary,
              ot = j.rootBoundary,
              Ht = j.altBoundary,
              Ut = j.flipVariations,
              en = Ut === void 0 || Ut,
              qt = j.allowedAutoPlacements,
              tn = w.options.placement,
              Yn = Hn(tn),
              qn =
                Qe ||
                (Yn !== tn && en
                  ? (function (Kn) {
                      if (Hn(Kn) === gs) return [];
                      var Ti = X(Kn);
                      return [ee(Kn), Ti, ee(Ti)];
                    })(tn)
                  : [X(tn)]),
              yn = [tn].concat(qn).reduce(function (Kn, Ti) {
                return Kn.concat(
                  Hn(Ti) === gs
                    ? dn(w, {
                        placement: Ti,
                        boundary: ft,
                        rootBoundary: ot,
                        padding: bt,
                        flipVariations: en,
                        allowedAutoPlacements: qt,
                      })
                    : Ti
                );
              }, []),
              Mn = w.rects.reference,
              pn = w.rects.popper,
              Sn = new Map(),
              Wn = !0,
              Gn = yn[0],
              Bn = 0;
            Bn < yn.length;
            Bn++
          ) {
            var kr = yn[Bn],
              as = Hn(kr),
              Ms = D(kr) === ji,
              Ci = [mr, Vn].indexOf(as) >= 0,
              os = Ci ? "width" : "height",
              ri = Ot(w, {
                placement: kr,
                boundary: ft,
                rootBoundary: ot,
                altBoundary: Ht,
                padding: bt,
              }),
              Wr = Ci ? (Ms ? An : hr) : Ms ? Vn : mr;
            Mn[os] > pn[os] && (Wr = X(Wr));
            var js = X(Wr),
              ws = [];
            if (
              (_e && ws.push(ri[as] <= 0),
              Ue && ws.push(ri[Wr] <= 0, ri[js] <= 0),
              ws.every(function (Kn) {
                return Kn;
              }))
            ) {
              (Gn = kr), (Wn = !1);
              break;
            }
            Sn.set(kr, ws);
          }
          if (Wn)
            for (
              var ol = function (Kn) {
                  var Ti = yn.find(function (pi) {
                    var Bi = Sn.get(pi);
                    if (Bi)
                      return Bi.slice(0, Kn).every(function (bu) {
                        return bu;
                      });
                  });
                  if (Ti) return (Gn = Ti), "break";
                },
                Ur = en ? 3 : 1;
              Ur > 0 && ol(Ur) !== "break";
              Ur--
            );
          w.placement !== Gn &&
            ((w.modifiersData[ne]._skip = !0),
            (w.placement = Gn),
            (w.reset = !0));
        }
      },
      requiresIfExists: ["offset"],
      data: { _skip: !1 },
    };
    function wn(W, w, j) {
      return (
        j === void 0 && (j = { x: 0, y: 0 }),
        {
          top: W.top - w.height - j.y,
          right: W.right - w.width + j.x,
          bottom: W.bottom - w.height + j.y,
          left: W.left - w.width - j.x,
        }
      );
    }
    function On(W) {
      return [mr, An, Vn, hr].some(function (w) {
        return W[w] >= 0;
      });
    }
    const Sr = {
        name: "hide",
        enabled: !0,
        phase: "main",
        requiresIfExists: ["preventOverflow"],
        fn: function (W) {
          var w = W.state,
            j = W.name,
            ne = w.rects.reference,
            ve = w.rects.popper,
            _e = w.modifiersData.preventOverflow,
            Le = Ot(w, { elementContext: "reference" }),
            Ue = Ot(w, { altBoundary: !0 }),
            Qe = wn(Le, ne),
            bt = wn(Ue, ve, _e),
            ft = On(Qe),
            ot = On(bt);
          (w.modifiersData[j] = {
            referenceClippingOffsets: Qe,
            popperEscapeOffsets: bt,
            isReferenceHidden: ft,
            hasPopperEscaped: ot,
          }),
            (w.attributes.popper = Object.assign({}, w.attributes.popper, {
              "data-popper-reference-hidden": ft,
              "data-popper-escaped": ot,
            }));
        },
      },
      Br = {
        name: "offset",
        enabled: !0,
        phase: "main",
        requires: ["popperOffsets"],
        fn: function (W) {
          var w = W.state,
            j = W.options,
            ne = W.name,
            ve = j.offset,
            _e = ve === void 0 ? [0, 0] : ve,
            Le = La.reduce(function (ft, ot) {
              return (
                (ft[ot] = (function (Ht, Ut, en) {
                  var qt = Hn(Ht),
                    tn = [hr, mr].indexOf(qt) >= 0 ? -1 : 1,
                    Yn =
                      typeof en == "function"
                        ? en(Object.assign({}, Ut, { placement: Ht }))
                        : en,
                    qn = Yn[0],
                    yn = Yn[1];
                  return (
                    (qn = qn || 0),
                    (yn = (yn || 0) * tn),
                    [hr, An].indexOf(qt) >= 0
                      ? { x: yn, y: qn }
                      : { x: qn, y: yn }
                  );
                })(ot, w.rects, _e)),
                ft
              );
            }, {}),
            Ue = Le[w.placement],
            Qe = Ue.x,
            bt = Ue.y;
          w.modifiersData.popperOffsets != null &&
            ((w.modifiersData.popperOffsets.x += Qe),
            (w.modifiersData.popperOffsets.y += bt)),
            (w.modifiersData[ne] = Le);
        },
      },
      ys = {
        name: "popperOffsets",
        enabled: !0,
        phase: "read",
        fn: function (W) {
          var w = W.state,
            j = W.name;
          w.modifiersData[j] = zt({
            reference: w.rects.reference,
            element: w.rects.popper,
            strategy: "absolute",
            placement: w.placement,
          });
        },
        data: {},
      },
      Ma = {
        name: "preventOverflow",
        enabled: !0,
        phase: "main",
        fn: function (W) {
          var w = W.state,
            j = W.options,
            ne = W.name,
            ve = j.mainAxis,
            _e = ve === void 0 || ve,
            Le = j.altAxis,
            Ue = Le !== void 0 && Le,
            Qe = j.boundary,
            bt = j.rootBoundary,
            ft = j.altBoundary,
            ot = j.padding,
            Ht = j.tether,
            Ut = Ht === void 0 || Ht,
            en = j.tetherOffset,
            qt = en === void 0 ? 0 : en,
            tn = Ot(w, {
              boundary: Qe,
              rootBoundary: bt,
              padding: ot,
              altBoundary: ft,
            }),
            Yn = Hn(w.placement),
            qn = D(w.placement),
            yn = !qn,
            Mn = b(Yn),
            pn = Mn === "x" ? "y" : "x",
            Sn = w.modifiersData.popperOffsets,
            Wn = w.rects.reference,
            Gn = w.rects.popper,
            Bn =
              typeof qt == "function"
                ? qt(Object.assign({}, w.rects, { placement: w.placement }))
                : qt,
            kr =
              typeof Bn == "number"
                ? { mainAxis: Bn, altAxis: Bn }
                : Object.assign({ mainAxis: 0, altAxis: 0 }, Bn),
            as = w.modifiersData.offset
              ? w.modifiersData.offset[w.placement]
              : null,
            Ms = { x: 0, y: 0 };
          if (Sn) {
            if (_e) {
              var Ci,
                os = Mn === "y" ? mr : hr,
                ri = Mn === "y" ? Vn : An,
                Wr = Mn === "y" ? "height" : "width",
                js = Sn[Mn],
                ws = js + tn[os],
                ol = js - tn[ri],
                Ur = Ut ? -Gn[Wr] / 2 : 0,
                Kn = qn === ji ? Wn[Wr] : Gn[Wr],
                Ti = qn === ji ? -Gn[Wr] : -Wn[Wr],
                pi = w.elements.arrow,
                Bi = Ut && pi ? s(pi) : { width: 0, height: 0 },
                bu = w.modifiersData["arrow#persistent"]
                  ? w.modifiersData["arrow#persistent"].padding
                  : { top: 0, right: 0, bottom: 0, left: 0 },
                dp = bu[os],
                fp = bu[ri],
                wu = _(0, Wn[Wr], Bi[Wr]),
                cy = yn
                  ? Wn[Wr] / 2 - Ur - wu - dp - kr.mainAxis
                  : Kn - wu - dp - kr.mainAxis,
                ll = yn
                  ? -Wn[Wr] / 2 + Ur + wu + fp + kr.mainAxis
                  : Ti + wu + fp + kr.mainAxis,
                Xh = w.elements.arrow && v(w.elements.arrow),
                uy = Xh
                  ? Mn === "y"
                    ? Xh.clientTop || 0
                    : Xh.clientLeft || 0
                  : 0,
                pp = (Ci = as == null ? void 0 : as[Mn]) != null ? Ci : 0,
                hy = js + ll - pp,
                gp = _(
                  Ut ? Ks(ws, js + cy - pp - uy) : ws,
                  js,
                  Ut ? rs(ol, hy) : ol
                );
              (Sn[Mn] = gp), (Ms[Mn] = gp - js);
            }
            if (Ue) {
              var Ua,
                dy = Mn === "x" ? mr : hr,
                fy = Mn === "x" ? Vn : An,
                Eo = Sn[pn],
                _u = pn === "y" ? "height" : "width",
                mp = Eo + tn[dy],
                mc = Eo - tn[fy],
                Yh = [mr, hr].indexOf(Yn) !== -1,
                vc = (Ua = as == null ? void 0 : as[pn]) != null ? Ua : 0,
                Gh = Yh ? mp : Eo - Wn[_u] - Gn[_u] - vc + kr.altAxis,
                vp = Yh ? Eo + Wn[_u] + Gn[_u] - vc - kr.altAxis : mc,
                yp =
                  Ut && Yh
                    ? (function (py, qh, Kh) {
                        var xp = _(py, qh, Kh);
                        return xp > Kh ? Kh : xp;
                      })(Gh, Eo, vp)
                    : _(Ut ? Gh : mp, Eo, Ut ? vp : mc);
              (Sn[pn] = yp), (Ms[pn] = yp - Eo);
            }
            w.modifiersData[ne] = Ms;
          }
        },
        requiresIfExists: ["offset"],
      };
    function Hr(W, w, j) {
      j === void 0 && (j = !1);
      var ne,
        ve,
        _e = Pr(w),
        Le =
          Pr(w) &&
          (function (ot) {
            var Ht = ot.getBoundingClientRect(),
              Ut = is(Ht.width) / ot.offsetWidth || 1,
              en = is(Ht.height) / ot.offsetHeight || 1;
            return Ut !== 1 || en !== 1;
          })(w),
        Ue = d(w),
        Qe = i(W, Le, j),
        bt = { scrollLeft: 0, scrollTop: 0 },
        ft = { x: 0, y: 0 };
      return (
        (_e || (!_e && !j)) &&
          ((er(w) !== "body" || Pe(Ue)) &&
            (bt =
              (ne = w) !== ar(ne) && Pr(ne)
                ? { scrollLeft: (ve = ne).scrollLeft, scrollTop: ve.scrollTop }
                : fe(ne)),
          Pr(w)
            ? (((ft = i(w, !0)).x += w.clientLeft), (ft.y += w.clientTop))
            : Ue && (ft.x = ge(Ue))),
        {
          x: Qe.left + bt.scrollLeft - ft.x,
          y: Qe.top + bt.scrollTop - ft.y,
          width: Qe.width,
          height: Qe.height,
        }
      );
    }
    function or(W) {
      var w = new Map(),
        j = new Set(),
        ne = [];
      function ve(_e) {
        j.add(_e.name),
          []
            .concat(_e.requires || [], _e.requiresIfExists || [])
            .forEach(function (Le) {
              if (!j.has(Le)) {
                var Ue = w.get(Le);
                Ue && ve(Ue);
              }
            }),
          ne.push(_e);
      }
      return (
        W.forEach(function (_e) {
          w.set(_e.name, _e);
        }),
        W.forEach(function (_e) {
          j.has(_e.name) || ve(_e);
        }),
        ne
      );
    }
    var Ds = { placement: "bottom", modifiers: [], strategy: "absolute" };
    function ja() {
      for (var W = arguments.length, w = new Array(W), j = 0; j < W; j++)
        w[j] = arguments[j];
      return !w.some(function (ne) {
        return !(ne && typeof ne.getBoundingClientRect == "function");
      });
    }
    function xs(W) {
      W === void 0 && (W = {});
      var w = W,
        j = w.defaultModifiers,
        ne = j === void 0 ? [] : j,
        ve = w.defaultOptions,
        _e = ve === void 0 ? Ds : ve;
      return function (Le, Ue, Qe) {
        Qe === void 0 && (Qe = _e);
        var bt,
          ft,
          ot = {
            placement: "bottom",
            orderedModifiers: [],
            options: Object.assign({}, Ds, _e),
            modifiersData: {},
            elements: { reference: Le, popper: Ue },
            attributes: {},
            styles: {},
          },
          Ht = [],
          Ut = !1,
          en = {
            state: ot,
            setOptions: function (tn) {
              var Yn = typeof tn == "function" ? tn(ot.options) : tn;
              qt(),
                (ot.options = Object.assign({}, _e, ot.options, Yn)),
                (ot.scrollParents = {
                  reference: Fi(Le)
                    ? ze(Le)
                    : Le.contextElement
                    ? ze(Le.contextElement)
                    : [],
                  popper: ze(Ue),
                });
              var qn,
                yn,
                Mn = (function (pn) {
                  var Sn = or(pn);
                  return qs.reduce(function (Wn, Gn) {
                    return Wn.concat(
                      Sn.filter(function (Bn) {
                        return Bn.phase === Gn;
                      })
                    );
                  }, []);
                })(
                  ((qn = [].concat(ne, ot.options.modifiers)),
                  (yn = qn.reduce(function (pn, Sn) {
                    var Wn = pn[Sn.name];
                    return (
                      (pn[Sn.name] = Wn
                        ? Object.assign({}, Wn, Sn, {
                            options: Object.assign({}, Wn.options, Sn.options),
                            data: Object.assign({}, Wn.data, Sn.data),
                          })
                        : Sn),
                      pn
                    );
                  }, {})),
                  Object.keys(yn).map(function (pn) {
                    return yn[pn];
                  }))
                );
              return (
                (ot.orderedModifiers = Mn.filter(function (pn) {
                  return pn.enabled;
                })),
                ot.orderedModifiers.forEach(function (pn) {
                  var Sn = pn.name,
                    Wn = pn.options,
                    Gn = Wn === void 0 ? {} : Wn,
                    Bn = pn.effect;
                  if (typeof Bn == "function") {
                    var kr = Bn({
                      state: ot,
                      name: Sn,
                      instance: en,
                      options: Gn,
                    });
                    Ht.push(kr || function () {});
                  }
                }),
                en.update()
              );
            },
            forceUpdate: function () {
              if (!Ut) {
                var tn = ot.elements,
                  Yn = tn.reference,
                  qn = tn.popper;
                if (ja(Yn, qn)) {
                  (ot.rects = {
                    reference: Hr(Yn, v(qn), ot.options.strategy === "fixed"),
                    popper: s(qn),
                  }),
                    (ot.reset = !1),
                    (ot.placement = ot.options.placement),
                    ot.orderedModifiers.forEach(function (Bn) {
                      return (ot.modifiersData[Bn.name] = Object.assign(
                        {},
                        Bn.data
                      ));
                    });
                  for (var yn = 0; yn < ot.orderedModifiers.length; yn++)
                    if (ot.reset !== !0) {
                      var Mn = ot.orderedModifiers[yn],
                        pn = Mn.fn,
                        Sn = Mn.options,
                        Wn = Sn === void 0 ? {} : Sn,
                        Gn = Mn.name;
                      typeof pn == "function" &&
                        (ot =
                          pn({
                            state: ot,
                            options: Wn,
                            name: Gn,
                            instance: en,
                          }) || ot);
                    } else (ot.reset = !1), (yn = -1);
                }
              }
            },
            update:
              ((bt = function () {
                return new Promise(function (tn) {
                  en.forceUpdate(), tn(ot);
                });
              }),
              function () {
                return (
                  ft ||
                    (ft = new Promise(function (tn) {
                      Promise.resolve().then(function () {
                        (ft = void 0), tn(bt());
                      });
                    })),
                  ft
                );
              }),
            destroy: function () {
              qt(), (Ut = !0);
            },
          };
        if (!ja(Le, Ue)) return en;
        function qt() {
          Ht.forEach(function (tn) {
            return tn();
          }),
            (Ht = []);
        }
        return (
          en.setOptions(Qe).then(function (tn) {
            !Ut && Qe.onFirstUpdate && Qe.onFirstUpdate(tn);
          }),
          en
        );
      };
    }
    var cc = xs(),
      mo = xs({ defaultModifiers: [k, ys, Q, vs] }),
      Fa = xs({ defaultModifiers: [k, ys, Q, vs, Br, Ln, Ma, O, Sr] });
    const mu = Object.freeze(
        Object.defineProperty(
          {
            __proto__: null,
            popperGenerator: xs,
            detectOverflow: Ot,
            createPopperBase: cc,
            createPopper: Fa,
            createPopperLite: mo,
            top: mr,
            bottom: Vn,
            right: An,
            left: hr,
            auto: gs,
            basePlacements: wi,
            start: ji,
            end: Os,
            clippingParents: Ns,
            viewport: Na,
            popper: es,
            reference: ts,
            variationPlacements: ms,
            placements: La,
            beforeRead: ua,
            read: ns,
            afterRead: Jo,
            beforeMain: el,
            main: tl,
            afterMain: nl,
            beforeWrite: Ls,
            write: go,
            afterWrite: _i,
            modifierPhases: qs,
            applyStyles: vs,
            arrow: O,
            computeStyles: Q,
            eventListeners: k,
            flip: Ln,
            hide: Sr,
            offset: Br,
            popperOffsets: ys,
            preventOverflow: Ma,
          },
          Symbol.toStringTag,
          { value: "Module" }
        )
      ),
      ha = "dropdown",
      uc = "ArrowUp",
      hc = "ArrowDown",
      rl = "click.bs.dropdown.data-api",
      za = "keydown.bs.dropdown.data-api",
      Qs = "show",
      y = '[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',
      A = `${y}.show`,
      R = ".dropdown-menu",
      M = B() ? "top-end" : "top-start",
      Y = B() ? "top-start" : "top-end",
      J = B() ? "bottom-end" : "bottom-start",
      re = B() ? "bottom-start" : "bottom-end",
      pe = B() ? "left-start" : "right-start",
      be = B() ? "right-start" : "left-start",
      Ee = {
        autoClose: !0,
        boundary: "clippingParents",
        display: "dynamic",
        offset: [0, 2],
        popperConfig: null,
        reference: "toggle",
      },
      Ve = {
        autoClose: "(boolean|string)",
        boundary: "(string|element)",
        display: "string",
        offset: "(array|string|function)",
        popperConfig: "(null|object|function)",
        reference: "(string|element|object)",
      };
    class Ke extends Fe {
      constructor(w, j) {
        super(w, j),
          (this._popper = null),
          (this._parent = this._element.parentNode),
          (this._menu =
            de.next(this._element, R)[0] ||
            de.prev(this._element, R)[0] ||
            de.findOne(R, this._parent)),
          (this._inNavbar = this._detectNavbar());
      }
      static get Default() {
        return Ee;
      }
      static get DefaultType() {
        return Ve;
      }
      static get NAME() {
        return ha;
      }
      toggle() {
        return this._isShown() ? this.hide() : this.show();
      }
      show() {
        if (u(this._element) || this._isShown()) return;
        const w = { relatedTarget: this._element };
        if (
          !Ie.trigger(this._element, "show.bs.dropdown", w).defaultPrevented
        ) {
          if (
            (this._createPopper(),
            "ontouchstart" in document.documentElement &&
              !this._parent.closest(".navbar-nav"))
          )
            for (const j of [].concat(...document.body.children))
              Ie.on(j, "mouseover", x);
          this._element.focus(),
            this._element.setAttribute("aria-expanded", !0),
            this._menu.classList.add(Qs),
            this._element.classList.add(Qs),
            Ie.trigger(this._element, "shown.bs.dropdown", w);
        }
      }
      hide() {
        if (u(this._element) || !this._isShown()) return;
        const w = { relatedTarget: this._element };
        this._completeHide(w);
      }
      dispose() {
        this._popper && this._popper.destroy(), super.dispose();
      }
      update() {
        (this._inNavbar = this._detectNavbar()),
          this._popper && this._popper.update();
      }
      _completeHide(w) {
        if (
          !Ie.trigger(this._element, "hide.bs.dropdown", w).defaultPrevented
        ) {
          if ("ontouchstart" in document.documentElement)
            for (const j of [].concat(...document.body.children))
              Ie.off(j, "mouseover", x);
          this._popper && this._popper.destroy(),
            this._menu.classList.remove(Qs),
            this._element.classList.remove(Qs),
            this._element.setAttribute("aria-expanded", "false"),
            Re.removeDataAttribute(this._menu, "popper"),
            Ie.trigger(this._element, "hidden.bs.dropdown", w);
        }
      }
      _getConfig(w) {
        if (
          typeof (w = super._getConfig(w)).reference == "object" &&
          !r(w.reference) &&
          typeof w.reference.getBoundingClientRect != "function"
        )
          throw new TypeError(
            `${ha.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`
          );
        return w;
      }
      _createPopper() {
        if (mu === void 0)
          throw new TypeError(
            "Bootstrap's dropdowns require Popper (https://popper.js.org)"
          );
        let w = this._element;
        this._config.reference === "parent"
          ? (w = this._parent)
          : r(this._config.reference)
          ? (w = a(this._config.reference))
          : typeof this._config.reference == "object" &&
            (w = this._config.reference);
        const j = this._getPopperConfig();
        this._popper = Fa(w, this._menu, j);
      }
      _isShown() {
        return this._menu.classList.contains(Qs);
      }
      _getPlacement() {
        const w = this._parent;
        if (w.classList.contains("dropend")) return pe;
        if (w.classList.contains("dropstart")) return be;
        if (w.classList.contains("dropup-center")) return "top";
        if (w.classList.contains("dropdown-center")) return "bottom";
        const j =
          getComputedStyle(this._menu)
            .getPropertyValue("--bs-position")
            .trim() === "end";
        return w.classList.contains("dropup") ? (j ? Y : M) : j ? re : J;
      }
      _detectNavbar() {
        return this._element.closest(".navbar") !== null;
      }
      _getOffset() {
        const { offset: w } = this._config;
        return typeof w == "string"
          ? w.split(",").map((j) => Number.parseInt(j, 10))
          : typeof w == "function"
          ? (j) => w(j, this._element)
          : w;
      }
      _getPopperConfig() {
        const w = {
          placement: this._getPlacement(),
          modifiers: [
            {
              name: "preventOverflow",
              options: { boundary: this._config.boundary },
            },
            { name: "offset", options: { offset: this._getOffset() } },
          ],
        };
        return (
          (this._inNavbar || this._config.display === "static") &&
            (Re.setDataAttribute(this._menu, "popper", "static"),
            (w.modifiers = [{ name: "applyStyles", enabled: !1 }])),
          { ...w, ...se(this._config.popperConfig, [w]) }
        );
      }
      _selectMenuItem({ key: w, target: j }) {
        const ne = de
          .find(
            ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",
            this._menu
          )
          .filter((ve) => o(ve));
        ne.length && he(ne, j, w === hc, !ne.includes(j)).focus();
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Ke.getOrCreateInstance(this, w);
          if (typeof w == "string") {
            if (j[w] === void 0) throw new TypeError(`No method named "${w}"`);
            j[w]();
          }
        });
      }
      static clearMenus(w) {
        if (w.button === 2 || (w.type === "keyup" && w.key !== "Tab")) return;
        const j = de.find(A);
        for (const ne of j) {
          const ve = Ke.getInstance(ne);
          if (!ve || ve._config.autoClose === !1) continue;
          const _e = w.composedPath(),
            Le = _e.includes(ve._menu);
          if (
            _e.includes(ve._element) ||
            (ve._config.autoClose === "inside" && !Le) ||
            (ve._config.autoClose === "outside" && Le) ||
            (ve._menu.contains(w.target) &&
              ((w.type === "keyup" && w.key === "Tab") ||
                /input|select|option|textarea|form/i.test(w.target.tagName)))
          )
            continue;
          const Ue = { relatedTarget: ve._element };
          w.type === "click" && (Ue.clickEvent = w), ve._completeHide(Ue);
        }
      }
      static dataApiKeydownHandler(w) {
        const j = /input|textarea/i.test(w.target.tagName),
          ne = w.key === "Escape",
          ve = [uc, hc].includes(w.key);
        if ((!ve && !ne) || (j && !ne)) return;
        w.preventDefault();
        const _e = this.matches(y)
            ? this
            : de.prev(this, y)[0] ||
              de.next(this, y)[0] ||
              de.findOne(y, w.delegateTarget.parentNode),
          Le = Ke.getOrCreateInstance(_e);
        if (ve)
          return w.stopPropagation(), Le.show(), void Le._selectMenuItem(w);
        Le._isShown() && (w.stopPropagation(), Le.hide(), _e.focus());
      }
    }
    Ie.on(document, za, y, Ke.dataApiKeydownHandler),
      Ie.on(document, za, R, Ke.dataApiKeydownHandler),
      Ie.on(document, rl, Ke.clearMenus),
      Ie.on(document, "keyup.bs.dropdown.data-api", Ke.clearMenus),
      Ie.on(document, rl, y, function (W) {
        W.preventDefault(), Ke.getOrCreateInstance(this).toggle();
      }),
      ae(Ke);
    const De = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
      Me = ".sticky-top",
      Et = "padding-right",
      jt = "margin-right";
    class Tt {
      constructor() {
        this._element = document.body;
      }
      getWidth() {
        const w = document.documentElement.clientWidth;
        return Math.abs(window.innerWidth - w);
      }
      hide() {
        const w = this.getWidth();
        this._disableOverFlow(),
          this._setElementAttributes(this._element, Et, (j) => j + w),
          this._setElementAttributes(De, Et, (j) => j + w),
          this._setElementAttributes(Me, jt, (j) => j - w);
      }
      reset() {
        this._resetElementAttributes(this._element, "overflow"),
          this._resetElementAttributes(this._element, Et),
          this._resetElementAttributes(De, Et),
          this._resetElementAttributes(Me, jt);
      }
      isOverflowing() {
        return this.getWidth() > 0;
      }
      _disableOverFlow() {
        this._saveInitialAttribute(this._element, "overflow"),
          (this._element.style.overflow = "hidden");
      }
      _setElementAttributes(w, j, ne) {
        const ve = this.getWidth();
        this._applyManipulationCallback(w, (_e) => {
          if (_e !== this._element && window.innerWidth > _e.clientWidth + ve)
            return;
          this._saveInitialAttribute(_e, j);
          const Le = window.getComputedStyle(_e).getPropertyValue(j);
          _e.style.setProperty(j, `${ne(Number.parseFloat(Le))}px`);
        });
      }
      _saveInitialAttribute(w, j) {
        const ne = w.style.getPropertyValue(j);
        ne && Re.setDataAttribute(w, j, ne);
      }
      _resetElementAttributes(w, j) {
        this._applyManipulationCallback(w, (ne) => {
          const ve = Re.getDataAttribute(ne, j);
          ve !== null
            ? (Re.removeDataAttribute(ne, j), ne.style.setProperty(j, ve))
            : ne.style.removeProperty(j);
        });
      }
      _applyManipulationCallback(w, j) {
        if (r(w)) j(w);
        else for (const ne of de.find(w, this._element)) j(ne);
      }
    }
    const tr = "show",
      vr = "mousedown.bs.backdrop",
      hi = {
        className: "modal-backdrop",
        clickCallback: null,
        isAnimated: !1,
        isVisible: !0,
        rootElement: "body",
      },
      Dn = {
        className: "string",
        clickCallback: "(function|null)",
        isAnimated: "boolean",
        isVisible: "boolean",
        rootElement: "(element|string)",
      };
    class Gt extends $e {
      constructor(w) {
        super(),
          (this._config = this._getConfig(w)),
          (this._isAppended = !1),
          (this._element = null);
      }
      static get Default() {
        return hi;
      }
      static get DefaultType() {
        return Dn;
      }
      static get NAME() {
        return "backdrop";
      }
      show(w) {
        if (!this._config.isVisible) return void se(w);
        this._append();
        const j = this._getElement();
        this._config.isAnimated && E(j),
          j.classList.add(tr),
          this._emulateAnimation(() => {
            se(w);
          });
      }
      hide(w) {
        this._config.isVisible
          ? (this._getElement().classList.remove(tr),
            this._emulateAnimation(() => {
              this.dispose(), se(w);
            }))
          : se(w);
      }
      dispose() {
        this._isAppended &&
          (Ie.off(this._element, vr),
          this._element.remove(),
          (this._isAppended = !1));
      }
      _getElement() {
        if (!this._element) {
          const w = document.createElement("div");
          (w.className = this._config.className),
            this._config.isAnimated && w.classList.add("fade"),
            (this._element = w);
        }
        return this._element;
      }
      _configAfterMerge(w) {
        return (w.rootElement = a(w.rootElement)), w;
      }
      _append() {
        if (this._isAppended) return;
        const w = this._getElement();
        this._config.rootElement.append(w),
          Ie.on(w, vr, () => {
            se(this._config.clickCallback);
          }),
          (this._isAppended = !0);
      }
      _emulateAnimation(w) {
        le(w, this._getElement(), this._config.isAnimated);
      }
    }
    const Jr = ".bs.focustrap",
      xn = "backward",
      rr = { autofocus: !0, trapElement: null },
      vo = { autofocus: "boolean", trapElement: "element" };
    class da extends $e {
      constructor(w) {
        super(),
          (this._config = this._getConfig(w)),
          (this._isActive = !1),
          (this._lastTabNavDirection = null);
      }
      static get Default() {
        return rr;
      }
      static get DefaultType() {
        return vo;
      }
      static get NAME() {
        return "focustrap";
      }
      activate() {
        this._isActive ||
          (this._config.autofocus && this._config.trapElement.focus(),
          Ie.off(document, Jr),
          Ie.on(document, "focusin.bs.focustrap", (w) =>
            this._handleFocusin(w)
          ),
          Ie.on(document, "keydown.tab.bs.focustrap", (w) =>
            this._handleKeydown(w)
          ),
          (this._isActive = !0));
      }
      deactivate() {
        this._isActive && ((this._isActive = !1), Ie.off(document, Jr));
      }
      _handleFocusin(w) {
        const { trapElement: j } = this._config;
        if (w.target === document || w.target === j || j.contains(w.target))
          return;
        const ne = de.focusableChildren(j);
        ne.length === 0
          ? j.focus()
          : this._lastTabNavDirection === xn
          ? ne[ne.length - 1].focus()
          : ne[0].focus();
      }
      _handleKeydown(w) {
        w.key === "Tab" &&
          (this._lastTabNavDirection = w.shiftKey ? xn : "forward");
      }
    }
    const Ei = "hidden.bs.modal",
      di = "show.bs.modal",
      fa = "modal-open",
      ei = "show",
      Zs = "modal-static",
      zi = { backdrop: !0, focus: !0, keyboard: !0 },
      ir = {
        backdrop: "(boolean|string)",
        focus: "boolean",
        keyboard: "boolean",
      };
    class Er extends Fe {
      constructor(w, j) {
        super(w, j),
          (this._dialog = de.findOne(".modal-dialog", this._element)),
          (this._backdrop = this._initializeBackDrop()),
          (this._focustrap = this._initializeFocusTrap()),
          (this._isShown = !1),
          (this._isTransitioning = !1),
          (this._scrollBar = new Tt()),
          this._addEventListeners();
      }
      static get Default() {
        return zi;
      }
      static get DefaultType() {
        return ir;
      }
      static get NAME() {
        return "modal";
      }
      toggle(w) {
        return this._isShown ? this.hide() : this.show(w);
      }
      show(w) {
        this._isShown ||
          this._isTransitioning ||
          Ie.trigger(this._element, di, { relatedTarget: w })
            .defaultPrevented ||
          ((this._isShown = !0),
          (this._isTransitioning = !0),
          this._scrollBar.hide(),
          document.body.classList.add(fa),
          this._adjustDialog(),
          this._backdrop.show(() => this._showElement(w)));
      }
      hide() {
        this._isShown &&
          !this._isTransitioning &&
          (Ie.trigger(this._element, "hide.bs.modal").defaultPrevented ||
            ((this._isShown = !1),
            (this._isTransitioning = !0),
            this._focustrap.deactivate(),
            this._element.classList.remove(ei),
            this._queueCallback(
              () => this._hideModal(),
              this._element,
              this._isAnimated()
            )));
      }
      dispose() {
        for (const w of [window, this._dialog]) Ie.off(w, ".bs.modal");
        this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose();
      }
      handleUpdate() {
        this._adjustDialog();
      }
      _initializeBackDrop() {
        return new Gt({
          isVisible: !!this._config.backdrop,
          isAnimated: this._isAnimated(),
        });
      }
      _initializeFocusTrap() {
        return new da({ trapElement: this._element });
      }
      _showElement(w) {
        document.body.contains(this._element) ||
          document.body.append(this._element),
          (this._element.style.display = "block"),
          this._element.removeAttribute("aria-hidden"),
          this._element.setAttribute("aria-modal", !0),
          this._element.setAttribute("role", "dialog"),
          (this._element.scrollTop = 0);
        const j = de.findOne(".modal-body", this._dialog);
        j && (j.scrollTop = 0),
          E(this._element),
          this._element.classList.add(ei),
          this._queueCallback(
            () => {
              this._config.focus && this._focustrap.activate(),
                (this._isTransitioning = !1),
                Ie.trigger(this._element, "shown.bs.modal", {
                  relatedTarget: w,
                });
            },
            this._dialog,
            this._isAnimated()
          );
      }
      _addEventListeners() {
        Ie.on(this._element, "keydown.dismiss.bs.modal", (w) => {
          if (w.key === "Escape")
            return this._config.keyboard
              ? (w.preventDefault(), void this.hide())
              : void this._triggerBackdropTransition();
        }),
          Ie.on(window, "resize.bs.modal", () => {
            this._isShown && !this._isTransitioning && this._adjustDialog();
          }),
          Ie.on(this._element, "mousedown.dismiss.bs.modal", (w) => {
            Ie.one(this._element, "click.dismiss.bs.modal", (j) => {
              this._element === w.target &&
                this._element === j.target &&
                (this._config.backdrop !== "static"
                  ? this._config.backdrop && this.hide()
                  : this._triggerBackdropTransition());
            });
          });
      }
      _hideModal() {
        (this._element.style.display = "none"),
          this._element.setAttribute("aria-hidden", !0),
          this._element.removeAttribute("aria-modal"),
          this._element.removeAttribute("role"),
          (this._isTransitioning = !1),
          this._backdrop.hide(() => {
            document.body.classList.remove(fa),
              this._resetAdjustments(),
              this._scrollBar.reset(),
              Ie.trigger(this._element, Ei);
          });
      }
      _isAnimated() {
        return this._element.classList.contains("fade");
      }
      _triggerBackdropTransition() {
        if (
          Ie.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented
        )
          return;
        const w =
            this._element.scrollHeight > document.documentElement.clientHeight,
          j = this._element.style.overflowY;
        j === "hidden" ||
          this._element.classList.contains(Zs) ||
          (w || (this._element.style.overflowY = "hidden"),
          this._element.classList.add(Zs),
          this._queueCallback(() => {
            this._element.classList.remove(Zs),
              this._queueCallback(() => {
                this._element.style.overflowY = j;
              }, this._dialog);
          }, this._dialog),
          this._element.focus());
      }
      _adjustDialog() {
        const w =
            this._element.scrollHeight > document.documentElement.clientHeight,
          j = this._scrollBar.getWidth(),
          ne = j > 0;
        if (ne && !w) {
          const ve = B() ? "paddingLeft" : "paddingRight";
          this._element.style[ve] = `${j}px`;
        }
        if (!ne && w) {
          const ve = B() ? "paddingRight" : "paddingLeft";
          this._element.style[ve] = `${j}px`;
        }
      }
      _resetAdjustments() {
        (this._element.style.paddingLeft = ""),
          (this._element.style.paddingRight = "");
      }
      static jQueryInterface(w, j) {
        return this.each(function () {
          const ne = Er.getOrCreateInstance(this, w);
          if (typeof w == "string") {
            if (ne[w] === void 0) throw new TypeError(`No method named "${w}"`);
            ne[w](j);
          }
        });
      }
    }
    Ie.on(
      document,
      "click.bs.modal.data-api",
      '[data-bs-toggle="modal"]',
      function (W) {
        const w = de.getElementFromSelector(this);
        ["A", "AREA"].includes(this.tagName) && W.preventDefault(),
          Ie.one(w, di, (ne) => {
            ne.defaultPrevented ||
              Ie.one(w, Ei, () => {
                o(this) && this.focus();
              });
          });
        const j = de.findOne(".modal.show");
        j && Er.getInstance(j).hide(), Er.getOrCreateInstance(w).toggle(this);
      }
    ),
      yt(Er),
      ae(Er);
    const ti = "show",
      Vi = "showing",
      rn = "hiding",
      _n = ".offcanvas.show",
      yr = "hidePrevented.bs.offcanvas",
      ni = "hidden.bs.offcanvas",
      xr = { backdrop: !0, keyboard: !0, scroll: !1 },
      ki = {
        backdrop: "(boolean|string)",
        keyboard: "boolean",
        scroll: "boolean",
      };
    class fi extends Fe {
      constructor(w, j) {
        super(w, j),
          (this._isShown = !1),
          (this._backdrop = this._initializeBackDrop()),
          (this._focustrap = this._initializeFocusTrap()),
          this._addEventListeners();
      }
      static get Default() {
        return xr;
      }
      static get DefaultType() {
        return ki;
      }
      static get NAME() {
        return "offcanvas";
      }
      toggle(w) {
        return this._isShown ? this.hide() : this.show(w);
      }
      show(w) {
        this._isShown ||
          Ie.trigger(this._element, "show.bs.offcanvas", { relatedTarget: w })
            .defaultPrevented ||
          ((this._isShown = !0),
          this._backdrop.show(),
          this._config.scroll || new Tt().hide(),
          this._element.setAttribute("aria-modal", !0),
          this._element.setAttribute("role", "dialog"),
          this._element.classList.add(Vi),
          this._queueCallback(
            () => {
              (this._config.scroll && !this._config.backdrop) ||
                this._focustrap.activate(),
                this._element.classList.add(ti),
                this._element.classList.remove(Vi),
                Ie.trigger(this._element, "shown.bs.offcanvas", {
                  relatedTarget: w,
                });
            },
            this._element,
            !0
          ));
      }
      hide() {
        this._isShown &&
          (Ie.trigger(this._element, "hide.bs.offcanvas").defaultPrevented ||
            (this._focustrap.deactivate(),
            this._element.blur(),
            (this._isShown = !1),
            this._element.classList.add(rn),
            this._backdrop.hide(),
            this._queueCallback(
              () => {
                this._element.classList.remove(ti, rn),
                  this._element.removeAttribute("aria-modal"),
                  this._element.removeAttribute("role"),
                  this._config.scroll || new Tt().reset(),
                  Ie.trigger(this._element, ni);
              },
              this._element,
              !0
            )));
      }
      dispose() {
        this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose();
      }
      _initializeBackDrop() {
        const w = !!this._config.backdrop;
        return new Gt({
          className: "offcanvas-backdrop",
          isVisible: w,
          isAnimated: !0,
          rootElement: this._element.parentNode,
          clickCallback: w
            ? () => {
                this._config.backdrop !== "static"
                  ? this.hide()
                  : Ie.trigger(this._element, yr);
              }
            : null,
        });
      }
      _initializeFocusTrap() {
        return new da({ trapElement: this._element });
      }
      _addEventListeners() {
        Ie.on(this._element, "keydown.dismiss.bs.offcanvas", (w) => {
          w.key === "Escape" &&
            (this._config.keyboard
              ? this.hide()
              : Ie.trigger(this._element, yr));
        });
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = fi.getOrCreateInstance(this, w);
          if (typeof w == "string") {
            if (j[w] === void 0 || w.startsWith("_") || w === "constructor")
              throw new TypeError(`No method named "${w}"`);
            j[w](this);
          }
        });
      }
    }
    Ie.on(
      document,
      "click.bs.offcanvas.data-api",
      '[data-bs-toggle="offcanvas"]',
      function (W) {
        const w = de.getElementFromSelector(this);
        if (
          (["A", "AREA"].includes(this.tagName) && W.preventDefault(), u(this))
        )
          return;
        Ie.one(w, ni, () => {
          o(this) && this.focus();
        });
        const j = de.findOne(_n);
        j && j !== w && fi.getInstance(j).hide(),
          fi.getOrCreateInstance(w).toggle(this);
      }
    ),
      Ie.on(window, "load.bs.offcanvas.data-api", () => {
        for (const W of de.find(_n)) fi.getOrCreateInstance(W).show();
      }),
      Ie.on(window, "resize.bs.offcanvas", () => {
        for (const W of de.find("[aria-modal][class*=show][class*=offcanvas-]"))
          getComputedStyle(W).position !== "fixed" &&
            fi.getOrCreateInstance(W).hide();
      }),
      yt(fi),
      ae(fi);
    const Va = new Set([
        "background",
        "cite",
        "href",
        "itemtype",
        "longdesc",
        "poster",
        "src",
        "xlink:href",
      ]),
      Bh = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i,
      Hh =
        /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,
      Wh = (W, w) => {
        const j = W.nodeName.toLowerCase();
        return w.includes(j)
          ? !Va.has(j) || !!(Bh.test(W.nodeValue) || Hh.test(W.nodeValue))
          : w.filter((ne) => ne instanceof RegExp).some((ne) => ne.test(j));
      },
      yo = {
        "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
        a: ["target", "href", "title", "rel"],
        area: [],
        b: [],
        br: [],
        col: [],
        code: [],
        div: [],
        em: [],
        hr: [],
        h1: [],
        h2: [],
        h3: [],
        h4: [],
        h5: [],
        h6: [],
        i: [],
        img: ["src", "srcset", "alt", "title", "width", "height"],
        li: [],
        ol: [],
        p: [],
        pre: [],
        s: [],
        small: [],
        span: [],
        sub: [],
        sup: [],
        strong: [],
        u: [],
        ul: [],
      },
      Uh = {
        allowList: yo,
        content: {},
        extraClass: "",
        html: !1,
        sanitize: !0,
        sanitizeFn: null,
        template: "<div></div>",
      },
      il = {
        allowList: "object",
        content: "object",
        extraClass: "(string|function)",
        html: "boolean",
        sanitize: "boolean",
        sanitizeFn: "(null|function)",
        template: "string",
      },
      vu = {
        entry: "(string|element|function|null)",
        selector: "(string|element)",
      };
    class pa extends $e {
      constructor(w) {
        super(), (this._config = this._getConfig(w));
      }
      static get Default() {
        return Uh;
      }
      static get DefaultType() {
        return il;
      }
      static get NAME() {
        return "TemplateFactory";
      }
      getContent() {
        return Object.values(this._config.content)
          .map((w) => this._resolvePossibleFunction(w))
          .filter(Boolean);
      }
      hasContent() {
        return this.getContent().length > 0;
      }
      changeContent(w) {
        return (
          this._checkContent(w),
          (this._config.content = { ...this._config.content, ...w }),
          this
        );
      }
      toHtml() {
        const w = document.createElement("div");
        w.innerHTML = this._maybeSanitize(this._config.template);
        for (const [ve, _e] of Object.entries(this._config.content))
          this._setContent(w, _e, ve);
        const j = w.children[0],
          ne = this._resolvePossibleFunction(this._config.extraClass);
        return ne && j.classList.add(...ne.split(" ")), j;
      }
      _typeCheckConfig(w) {
        super._typeCheckConfig(w), this._checkContent(w.content);
      }
      _checkContent(w) {
        for (const [j, ne] of Object.entries(w))
          super._typeCheckConfig({ selector: j, entry: ne }, vu);
      }
      _setContent(w, j, ne) {
        const ve = de.findOne(ne, w);
        ve &&
          ((j = this._resolvePossibleFunction(j))
            ? r(j)
              ? this._putElementInTemplate(a(j), ve)
              : this._config.html
              ? (ve.innerHTML = this._maybeSanitize(j))
              : (ve.textContent = j)
            : ve.remove());
      }
      _maybeSanitize(w) {
        return this._config.sanitize
          ? (function (j, ne, ve) {
              if (!j.length) return j;
              if (ve && typeof ve == "function") return ve(j);
              const _e = new window.DOMParser().parseFromString(j, "text/html"),
                Le = [].concat(..._e.body.querySelectorAll("*"));
              for (const Ue of Le) {
                const Qe = Ue.nodeName.toLowerCase();
                if (!Object.keys(ne).includes(Qe)) {
                  Ue.remove();
                  continue;
                }
                const bt = [].concat(...Ue.attributes),
                  ft = [].concat(ne["*"] || [], ne[Qe] || []);
                for (const ot of bt)
                  Wh(ot, ft) || Ue.removeAttribute(ot.nodeName);
              }
              return _e.body.innerHTML;
            })(w, this._config.allowList, this._config.sanitizeFn)
          : w;
      }
      _resolvePossibleFunction(w) {
        return se(w, [this]);
      }
      _putElementInTemplate(w, j) {
        if (this._config.html) return (j.innerHTML = ""), void j.append(w);
        j.textContent = w.textContent;
      }
    }
    const yu = new Set(["sanitize", "allowList", "sanitizeFn"]),
      ga = "fade",
      Ai = "show",
      $i = ".modal",
      xo = "hide.bs.modal",
      $a = "hover",
      ss = "focus",
      Ba = {
        AUTO: "auto",
        TOP: "top",
        RIGHT: B() ? "left" : "right",
        BOTTOM: "bottom",
        LEFT: B() ? "right" : "left",
      },
      $n = {
        allowList: yo,
        animation: !0,
        boundary: "clippingParents",
        container: !1,
        customClass: "",
        delay: 0,
        fallbackPlacements: ["top", "right", "bottom", "left"],
        html: !1,
        offset: [0, 0],
        placement: "top",
        popperConfig: null,
        sanitize: !0,
        sanitizeFn: null,
        selector: !1,
        template:
          '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        title: "",
        trigger: "hover focus",
      },
      bo = {
        allowList: "object",
        animation: "boolean",
        boundary: "(string|element)",
        container: "(string|element|boolean)",
        customClass: "(string|function)",
        delay: "(number|object)",
        fallbackPlacements: "array",
        html: "boolean",
        offset: "(array|string|function)",
        placement: "(string|function)",
        popperConfig: "(null|object|function)",
        sanitize: "boolean",
        sanitizeFn: "(null|function)",
        selector: "(string|boolean)",
        template: "string",
        title: "(string|element|function)",
        trigger: "string",
      };
    class Fr extends Fe {
      constructor(w, j) {
        if (mu === void 0)
          throw new TypeError(
            "Bootstrap's tooltips require Popper (https://popper.js.org)"
          );
        super(w, j),
          (this._isEnabled = !0),
          (this._timeout = 0),
          (this._isHovered = null),
          (this._activeTrigger = {}),
          (this._popper = null),
          (this._templateFactory = null),
          (this._newContent = null),
          (this.tip = null),
          this._setListeners(),
          this._config.selector || this._fixTitle();
      }
      static get Default() {
        return $n;
      }
      static get DefaultType() {
        return bo;
      }
      static get NAME() {
        return "tooltip";
      }
      enable() {
        this._isEnabled = !0;
      }
      disable() {
        this._isEnabled = !1;
      }
      toggleEnabled() {
        this._isEnabled = !this._isEnabled;
      }
      toggle() {
        this._isEnabled &&
          ((this._activeTrigger.click = !this._activeTrigger.click),
          this._isShown() ? this._leave() : this._enter());
      }
      dispose() {
        clearTimeout(this._timeout),
          Ie.off(this._element.closest($i), xo, this._hideModalHandler),
          this._element.getAttribute("data-bs-original-title") &&
            this._element.setAttribute(
              "title",
              this._element.getAttribute("data-bs-original-title")
            ),
          this._disposePopper(),
          super.dispose();
      }
      show() {
        if (this._element.style.display === "none")
          throw new Error("Please use show on visible elements");
        if (!this._isWithContent() || !this._isEnabled) return;
        const w = Ie.trigger(this._element, this.constructor.eventName("show")),
          j = (
            g(this._element) || this._element.ownerDocument.documentElement
          ).contains(this._element);
        if (w.defaultPrevented || !j) return;
        this._disposePopper();
        const ne = this._getTipElement();
        this._element.setAttribute("aria-describedby", ne.getAttribute("id"));
        const { container: ve } = this._config;
        if (
          (this._element.ownerDocument.documentElement.contains(this.tip) ||
            (ve.append(ne),
            Ie.trigger(this._element, this.constructor.eventName("inserted"))),
          (this._popper = this._createPopper(ne)),
          ne.classList.add(Ai),
          "ontouchstart" in document.documentElement)
        )
          for (const _e of [].concat(...document.body.children))
            Ie.on(_e, "mouseover", x);
        this._queueCallback(
          () => {
            Ie.trigger(this._element, this.constructor.eventName("shown")),
              this._isHovered === !1 && this._leave(),
              (this._isHovered = !1);
          },
          this.tip,
          this._isAnimated()
        );
      }
      hide() {
        if (
          this._isShown() &&
          !Ie.trigger(this._element, this.constructor.eventName("hide"))
            .defaultPrevented
        ) {
          if (
            (this._getTipElement().classList.remove(Ai),
            "ontouchstart" in document.documentElement)
          )
            for (const w of [].concat(...document.body.children))
              Ie.off(w, "mouseover", x);
          (this._activeTrigger.click = !1),
            (this._activeTrigger.focus = !1),
            (this._activeTrigger.hover = !1),
            (this._isHovered = null),
            this._queueCallback(
              () => {
                this._isWithActiveTrigger() ||
                  (this._isHovered || this._disposePopper(),
                  this._element.removeAttribute("aria-describedby"),
                  Ie.trigger(
                    this._element,
                    this.constructor.eventName("hidden")
                  ));
              },
              this.tip,
              this._isAnimated()
            );
        }
      }
      update() {
        this._popper && this._popper.update();
      }
      _isWithContent() {
        return !!this._getTitle();
      }
      _getTipElement() {
        return (
          this.tip ||
            (this.tip = this._createTipElement(
              this._newContent || this._getContentForTemplate()
            )),
          this.tip
        );
      }
      _createTipElement(w) {
        const j = this._getTemplateFactory(w).toHtml();
        if (!j) return null;
        j.classList.remove(ga, Ai),
          j.classList.add(`bs-${this.constructor.NAME}-auto`);
        const ne = ((ve) => {
          do ve += Math.floor(1e6 * Math.random());
          while (document.getElementById(ve));
          return ve;
        })(this.constructor.NAME).toString();
        return (
          j.setAttribute("id", ne), this._isAnimated() && j.classList.add(ga), j
        );
      }
      setContent(w) {
        (this._newContent = w),
          this._isShown() && (this._disposePopper(), this.show());
      }
      _getTemplateFactory(w) {
        return (
          this._templateFactory
            ? this._templateFactory.changeContent(w)
            : (this._templateFactory = new pa({
                ...this._config,
                content: w,
                extraClass: this._resolvePossibleFunction(
                  this._config.customClass
                ),
              })),
          this._templateFactory
        );
      }
      _getContentForTemplate() {
        return { ".tooltip-inner": this._getTitle() };
      }
      _getTitle() {
        return (
          this._resolvePossibleFunction(this._config.title) ||
          this._element.getAttribute("data-bs-original-title")
        );
      }
      _initializeOnDelegatedTarget(w) {
        return this.constructor.getOrCreateInstance(
          w.delegateTarget,
          this._getDelegateConfig()
        );
      }
      _isAnimated() {
        return (
          this._config.animation ||
          (this.tip && this.tip.classList.contains(ga))
        );
      }
      _isShown() {
        return this.tip && this.tip.classList.contains(Ai);
      }
      _createPopper(w) {
        const j = se(this._config.placement, [this, w, this._element]),
          ne = Ba[j.toUpperCase()];
        return Fa(this._element, w, this._getPopperConfig(ne));
      }
      _getOffset() {
        const { offset: w } = this._config;
        return typeof w == "string"
          ? w.split(",").map((j) => Number.parseInt(j, 10))
          : typeof w == "function"
          ? (j) => w(j, this._element)
          : w;
      }
      _resolvePossibleFunction(w) {
        return se(w, [this._element]);
      }
      _getPopperConfig(w) {
        const j = {
          placement: w,
          modifiers: [
            {
              name: "flip",
              options: { fallbackPlacements: this._config.fallbackPlacements },
            },
            { name: "offset", options: { offset: this._getOffset() } },
            {
              name: "preventOverflow",
              options: { boundary: this._config.boundary },
            },
            {
              name: "arrow",
              options: { element: `.${this.constructor.NAME}-arrow` },
            },
            {
              name: "preSetPlacement",
              enabled: !0,
              phase: "beforeMain",
              fn: (ne) => {
                this._getTipElement().setAttribute(
                  "data-popper-placement",
                  ne.state.placement
                );
              },
            },
          ],
        };
        return { ...j, ...se(this._config.popperConfig, [j]) };
      }
      _setListeners() {
        const w = this._config.trigger.split(" ");
        for (const j of w)
          if (j === "click")
            Ie.on(
              this._element,
              this.constructor.eventName("click"),
              this._config.selector,
              (ne) => {
                this._initializeOnDelegatedTarget(ne).toggle();
              }
            );
          else if (j !== "manual") {
            const ne =
                j === $a
                  ? this.constructor.eventName("mouseenter")
                  : this.constructor.eventName("focusin"),
              ve =
                j === $a
                  ? this.constructor.eventName("mouseleave")
                  : this.constructor.eventName("focusout");
            Ie.on(this._element, ne, this._config.selector, (_e) => {
              const Le = this._initializeOnDelegatedTarget(_e);
              (Le._activeTrigger[_e.type === "focusin" ? ss : $a] = !0),
                Le._enter();
            }),
              Ie.on(this._element, ve, this._config.selector, (_e) => {
                const Le = this._initializeOnDelegatedTarget(_e);
                (Le._activeTrigger[_e.type === "focusout" ? ss : $a] =
                  Le._element.contains(_e.relatedTarget)),
                  Le._leave();
              });
          }
        (this._hideModalHandler = () => {
          this._element && this.hide();
        }),
          Ie.on(this._element.closest($i), xo, this._hideModalHandler);
      }
      _fixTitle() {
        const w = this._element.getAttribute("title");
        w &&
          (this._element.getAttribute("aria-label") ||
            this._element.textContent.trim() ||
            this._element.setAttribute("aria-label", w),
          this._element.setAttribute("data-bs-original-title", w),
          this._element.removeAttribute("title"));
      }
      _enter() {
        this._isShown() || this._isHovered
          ? (this._isHovered = !0)
          : ((this._isHovered = !0),
            this._setTimeout(() => {
              this._isHovered && this.show();
            }, this._config.delay.show));
      }
      _leave() {
        this._isWithActiveTrigger() ||
          ((this._isHovered = !1),
          this._setTimeout(() => {
            this._isHovered || this.hide();
          }, this._config.delay.hide));
      }
      _setTimeout(w, j) {
        clearTimeout(this._timeout), (this._timeout = setTimeout(w, j));
      }
      _isWithActiveTrigger() {
        return Object.values(this._activeTrigger).includes(!0);
      }
      _getConfig(w) {
        const j = Re.getDataAttributes(this._element);
        for (const ne of Object.keys(j)) yu.has(ne) && delete j[ne];
        return (
          (w = { ...j, ...(typeof w == "object" && w ? w : {}) }),
          (w = this._mergeConfigObj(w)),
          (w = this._configAfterMerge(w)),
          this._typeCheckConfig(w),
          w
        );
      }
      _configAfterMerge(w) {
        return (
          (w.container = w.container === !1 ? document.body : a(w.container)),
          typeof w.delay == "number" &&
            (w.delay = { show: w.delay, hide: w.delay }),
          typeof w.title == "number" && (w.title = w.title.toString()),
          typeof w.content == "number" && (w.content = w.content.toString()),
          w
        );
      }
      _getDelegateConfig() {
        const w = {};
        for (const [j, ne] of Object.entries(this._config))
          this.constructor.Default[j] !== ne && (w[j] = ne);
        return (w.selector = !1), (w.trigger = "manual"), w;
      }
      _disposePopper() {
        this._popper && (this._popper.destroy(), (this._popper = null)),
          this.tip && (this.tip.remove(), (this.tip = null));
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Fr.getOrCreateInstance(this, w);
          if (typeof w == "string") {
            if (j[w] === void 0) throw new TypeError(`No method named "${w}"`);
            j[w]();
          }
        });
      }
    }
    ae(Fr);
    const bs = {
        ...Fr.Default,
        content: "",
        offset: [0, 8],
        placement: "right",
        template:
          '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
        trigger: "click",
      },
      dc = { ...Fr.DefaultType, content: "(null|string|element|function)" };
    class wo extends Fr {
      static get Default() {
        return bs;
      }
      static get DefaultType() {
        return dc;
      }
      static get NAME() {
        return "popover";
      }
      _isWithContent() {
        return this._getTitle() || this._getContent();
      }
      _getContentForTemplate() {
        return {
          ".popover-header": this._getTitle(),
          ".popover-body": this._getContent(),
        };
      }
      _getContent() {
        return this._resolvePossibleFunction(this._config.content);
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = wo.getOrCreateInstance(this, w);
          if (typeof w == "string") {
            if (j[w] === void 0) throw new TypeError(`No method named "${w}"`);
            j[w]();
          }
        });
      }
    }
    ae(wo);
    const xu = "click.bs.scrollspy",
      _o = "active",
      fc = "[href]",
      ma = {
        offset: null,
        rootMargin: "0px 0px -25%",
        smoothScroll: !1,
        target: null,
        threshold: [0.1, 0.5, 1],
      },
      pc = {
        offset: "(number|null)",
        rootMargin: "string",
        smoothScroll: "boolean",
        target: "element",
        threshold: "array",
      };
    class Ha extends Fe {
      constructor(w, j) {
        super(w, j),
          (this._targetLinks = new Map()),
          (this._observableSections = new Map()),
          (this._rootElement =
            getComputedStyle(this._element).overflowY === "visible"
              ? null
              : this._element),
          (this._activeTarget = null),
          (this._observer = null),
          (this._previousScrollData = {
            visibleEntryTop: 0,
            parentScrollTop: 0,
          }),
          this.refresh();
      }
      static get Default() {
        return ma;
      }
      static get DefaultType() {
        return pc;
      }
      static get NAME() {
        return "scrollspy";
      }
      refresh() {
        this._initializeTargetsAndObservables(),
          this._maybeEnableSmoothScroll(),
          this._observer
            ? this._observer.disconnect()
            : (this._observer = this._getNewObserver());
        for (const w of this._observableSections.values())
          this._observer.observe(w);
      }
      dispose() {
        this._observer.disconnect(), super.dispose();
      }
      _configAfterMerge(w) {
        return (
          (w.target = a(w.target) || document.body),
          (w.rootMargin = w.offset ? `${w.offset}px 0px -30%` : w.rootMargin),
          typeof w.threshold == "string" &&
            (w.threshold = w.threshold
              .split(",")
              .map((j) => Number.parseFloat(j))),
          w
        );
      }
      _maybeEnableSmoothScroll() {
        this._config.smoothScroll &&
          (Ie.off(this._config.target, xu),
          Ie.on(this._config.target, xu, fc, (w) => {
            const j = this._observableSections.get(w.target.hash);
            if (j) {
              w.preventDefault();
              const ne = this._rootElement || window,
                ve = j.offsetTop - this._element.offsetTop;
              if (ne.scrollTo)
                return void ne.scrollTo({ top: ve, behavior: "smooth" });
              ne.scrollTop = ve;
            }
          }));
      }
      _getNewObserver() {
        const w = {
          root: this._rootElement,
          threshold: this._config.threshold,
          rootMargin: this._config.rootMargin,
        };
        return new IntersectionObserver((j) => this._observerCallback(j), w);
      }
      _observerCallback(w) {
        const j = (Le) => this._targetLinks.get(`#${Le.target.id}`),
          ne = (Le) => {
            (this._previousScrollData.visibleEntryTop = Le.target.offsetTop),
              this._process(j(Le));
          },
          ve = (this._rootElement || document.documentElement).scrollTop,
          _e = ve >= this._previousScrollData.parentScrollTop;
        this._previousScrollData.parentScrollTop = ve;
        for (const Le of w) {
          if (!Le.isIntersecting) {
            (this._activeTarget = null), this._clearActiveClass(j(Le));
            continue;
          }
          const Ue =
            Le.target.offsetTop >= this._previousScrollData.visibleEntryTop;
          if (_e && Ue) {
            if ((ne(Le), !ve)) return;
          } else _e || Ue || ne(Le);
        }
      }
      _initializeTargetsAndObservables() {
        (this._targetLinks = new Map()), (this._observableSections = new Map());
        const w = de.find(fc, this._config.target);
        for (const j of w) {
          if (!j.hash || u(j)) continue;
          const ne = de.findOne(j.hash, this._element);
          o(ne) &&
            (this._targetLinks.set(j.hash, j),
            this._observableSections.set(j.hash, ne));
        }
      }
      _process(w) {
        this._activeTarget !== w &&
          (this._clearActiveClass(this._config.target),
          (this._activeTarget = w),
          w.classList.add(_o),
          this._activateParents(w),
          Ie.trigger(this._element, "activate.bs.scrollspy", {
            relatedTarget: w,
          }));
      }
      _activateParents(w) {
        if (w.classList.contains("dropdown-item"))
          de.findOne(".dropdown-toggle", w.closest(".dropdown")).classList.add(
            _o
          );
        else
          for (const j of de.parents(w, ".nav, .list-group"))
            for (const ne of de.prev(
              j,
              ".nav-link, .nav-item > .nav-link, .list-group-item"
            ))
              ne.classList.add(_o);
      }
      _clearActiveClass(w) {
        w.classList.remove(_o);
        const j = de.find("[href].active", w);
        for (const ne of j) ne.classList.remove(_o);
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Ha.getOrCreateInstance(this, w);
          if (typeof w == "string") {
            if (j[w] === void 0 || w.startsWith("_") || w === "constructor")
              throw new TypeError(`No method named "${w}"`);
            j[w]();
          }
        });
      }
    }
    Ie.on(window, "load.bs.scrollspy.data-api", () => {
      for (const W of de.find('[data-bs-spy="scroll"]'))
        Ha.getOrCreateInstance(W);
    }),
      ae(Ha);
    const sl = "ArrowLeft",
      So = "ArrowRight",
      gc = "ArrowUp",
      va = "ArrowDown",
      Wa = "active",
      al = "fade",
      ie = "show",
      me =
        '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',
      Se = `.nav-link:not(.dropdown-toggle), .list-group-item:not(.dropdown-toggle), [role="tab"]:not(.dropdown-toggle), ${me}`;
    class Be extends Fe {
      constructor(w) {
        super(w),
          (this._parent = this._element.closest(
            '.list-group, .nav, [role="tablist"]'
          )),
          this._parent &&
            (this._setInitialAttributes(this._parent, this._getChildren()),
            Ie.on(this._element, "keydown.bs.tab", (j) => this._keydown(j)));
      }
      static get NAME() {
        return "tab";
      }
      show() {
        const w = this._element;
        if (this._elemIsActive(w)) return;
        const j = this._getActiveElem(),
          ne = j ? Ie.trigger(j, "hide.bs.tab", { relatedTarget: w }) : null;
        Ie.trigger(w, "show.bs.tab", { relatedTarget: j }).defaultPrevented ||
          (ne && ne.defaultPrevented) ||
          (this._deactivate(j, w), this._activate(w, j));
      }
      _activate(w, j) {
        w &&
          (w.classList.add(Wa),
          this._activate(de.getElementFromSelector(w)),
          this._queueCallback(
            () => {
              w.getAttribute("role") === "tab"
                ? (w.removeAttribute("tabindex"),
                  w.setAttribute("aria-selected", !0),
                  this._toggleDropDown(w, !0),
                  Ie.trigger(w, "shown.bs.tab", { relatedTarget: j }))
                : w.classList.add(ie);
            },
            w,
            w.classList.contains(al)
          ));
      }
      _deactivate(w, j) {
        w &&
          (w.classList.remove(Wa),
          w.blur(),
          this._deactivate(de.getElementFromSelector(w)),
          this._queueCallback(
            () => {
              w.getAttribute("role") === "tab"
                ? (w.setAttribute("aria-selected", !1),
                  w.setAttribute("tabindex", "-1"),
                  this._toggleDropDown(w, !1),
                  Ie.trigger(w, "hidden.bs.tab", { relatedTarget: j }))
                : w.classList.remove(ie);
            },
            w,
            w.classList.contains(al)
          ));
      }
      _keydown(w) {
        if (![sl, So, gc, va].includes(w.key)) return;
        w.stopPropagation(), w.preventDefault();
        const j = [So, va].includes(w.key),
          ne = he(
            this._getChildren().filter((ve) => !u(ve)),
            w.target,
            j,
            !0
          );
        ne &&
          (ne.focus({ preventScroll: !0 }), Be.getOrCreateInstance(ne).show());
      }
      _getChildren() {
        return de.find(Se, this._parent);
      }
      _getActiveElem() {
        return this._getChildren().find((w) => this._elemIsActive(w)) || null;
      }
      _setInitialAttributes(w, j) {
        this._setAttributeIfNotExists(w, "role", "tablist");
        for (const ne of j) this._setInitialAttributesOnChild(ne);
      }
      _setInitialAttributesOnChild(w) {
        w = this._getInnerElement(w);
        const j = this._elemIsActive(w),
          ne = this._getOuterElement(w);
        w.setAttribute("aria-selected", j),
          ne !== w && this._setAttributeIfNotExists(ne, "role", "presentation"),
          j || w.setAttribute("tabindex", "-1"),
          this._setAttributeIfNotExists(w, "role", "tab"),
          this._setInitialAttributesOnTargetPanel(w);
      }
      _setInitialAttributesOnTargetPanel(w) {
        const j = de.getElementFromSelector(w);
        j &&
          (this._setAttributeIfNotExists(j, "role", "tabpanel"),
          w.id &&
            this._setAttributeIfNotExists(j, "aria-labelledby", `#${w.id}`));
      }
      _toggleDropDown(w, j) {
        const ne = this._getOuterElement(w);
        if (!ne.classList.contains("dropdown")) return;
        const ve = (_e, Le) => {
          const Ue = de.findOne(_e, ne);
          Ue && Ue.classList.toggle(Le, j);
        };
        ve(".dropdown-toggle", Wa),
          ve(".dropdown-menu", ie),
          ne.setAttribute("aria-expanded", j);
      }
      _setAttributeIfNotExists(w, j, ne) {
        w.hasAttribute(j) || w.setAttribute(j, ne);
      }
      _elemIsActive(w) {
        return w.classList.contains(Wa);
      }
      _getInnerElement(w) {
        return w.matches(Se) ? w : de.findOne(Se, w);
      }
      _getOuterElement(w) {
        return w.closest(".nav-item, .list-group-item") || w;
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Be.getOrCreateInstance(this);
          if (typeof w == "string") {
            if (j[w] === void 0 || w.startsWith("_") || w === "constructor")
              throw new TypeError(`No method named "${w}"`);
            j[w]();
          }
        });
      }
    }
    Ie.on(document, "click.bs.tab", me, function (W) {
      ["A", "AREA"].includes(this.tagName) && W.preventDefault(),
        u(this) || Be.getOrCreateInstance(this).show();
    }),
      Ie.on(window, "load.bs.tab", () => {
        for (const W of de.find(
          '.active[data-bs-toggle="tab"], .active[data-bs-toggle="pill"], .active[data-bs-toggle="list"]'
        ))
          Be.getOrCreateInstance(W);
      }),
      ae(Be);
    const Ce = "hide",
      et = "show",
      nt = "showing",
      mt = { animation: "boolean", autohide: "boolean", delay: "number" },
      _t = { animation: !0, autohide: !0, delay: 5e3 };
    class Xt extends Fe {
      constructor(w, j) {
        super(w, j),
          (this._timeout = null),
          (this._hasMouseInteraction = !1),
          (this._hasKeyboardInteraction = !1),
          this._setListeners();
      }
      static get Default() {
        return _t;
      }
      static get DefaultType() {
        return mt;
      }
      static get NAME() {
        return "toast";
      }
      show() {
        Ie.trigger(this._element, "show.bs.toast").defaultPrevented ||
          (this._clearTimeout(),
          this._config.animation && this._element.classList.add("fade"),
          this._element.classList.remove(Ce),
          E(this._element),
          this._element.classList.add(et, nt),
          this._queueCallback(
            () => {
              this._element.classList.remove(nt),
                Ie.trigger(this._element, "shown.bs.toast"),
                this._maybeScheduleHide();
            },
            this._element,
            this._config.animation
          ));
      }
      hide() {
        this.isShown() &&
          (Ie.trigger(this._element, "hide.bs.toast").defaultPrevented ||
            (this._element.classList.add(nt),
            this._queueCallback(
              () => {
                this._element.classList.add(Ce),
                  this._element.classList.remove(nt, et),
                  Ie.trigger(this._element, "hidden.bs.toast");
              },
              this._element,
              this._config.animation
            )));
      }
      dispose() {
        this._clearTimeout(),
          this.isShown() && this._element.classList.remove(et),
          super.dispose();
      }
      isShown() {
        return this._element.classList.contains(et);
      }
      _maybeScheduleHide() {
        this._config.autohide &&
          (this._hasMouseInteraction ||
            this._hasKeyboardInteraction ||
            (this._timeout = setTimeout(() => {
              this.hide();
            }, this._config.delay)));
      }
      _onInteraction(w, j) {
        switch (w.type) {
          case "mouseover":
          case "mouseout":
            this._hasMouseInteraction = j;
            break;
          case "focusin":
          case "focusout":
            this._hasKeyboardInteraction = j;
        }
        if (j) return void this._clearTimeout();
        const ne = w.relatedTarget;
        this._element === ne ||
          this._element.contains(ne) ||
          this._maybeScheduleHide();
      }
      _setListeners() {
        Ie.on(this._element, "mouseover.bs.toast", (w) =>
          this._onInteraction(w, !0)
        ),
          Ie.on(this._element, "mouseout.bs.toast", (w) =>
            this._onInteraction(w, !1)
          ),
          Ie.on(this._element, "focusin.bs.toast", (w) =>
            this._onInteraction(w, !0)
          ),
          Ie.on(this._element, "focusout.bs.toast", (w) =>
            this._onInteraction(w, !1)
          );
      }
      _clearTimeout() {
        clearTimeout(this._timeout), (this._timeout = null);
      }
      static jQueryInterface(w) {
        return this.each(function () {
          const j = Xt.getOrCreateInstance(this, w);
          if (typeof w == "string") {
            if (j[w] === void 0) throw new TypeError(`No method named "${w}"`);
            j[w](this);
          }
        });
      }
    }
    return (
      yt(Xt),
      ae(Xt),
      {
        Alert: Ze,
        Button: Wt,
        Carousel: Ge,
        Collapse: ui,
        Dropdown: Ke,
        Modal: Er,
        Offcanvas: fi,
        Popover: wo,
        ScrollSpy: Ha,
        Tab: Be,
        Toast: Xt,
        Tooltip: Fr,
      }
    );
  });
  $(function () {
    var t = window.location + "",
      e = t.replace(
        window.location.protocol + "//" + window.location.host + "/",
        ""
      ),
      n = $("ul#sidebarnav a").filter(function () {
        return this.href === t || this.href === e;
      });
    $("#sidebarnav a, #sidebarnav li").removeClass("active selected"),
      n.parentsUntil(".sidebar-nav").each(function (r) {
        $(this).is("li") && $(this).children("a").length !== 0
          ? ($(this).children("a").addClass("active"),
            $(this).parent("ul#sidebarnav").length === 0
              ? $(this).addClass("active")
              : $(this).addClass("selected"))
          : !$(this).is("ul") && $(this).children("a").length === 0
          ? $(this).addClass("selected")
          : $(this).is("ul") && $(this).addClass("in");
      }),
      n.addClass("active"),
      $("#sidebarnav a").on("click", function (r) {
        $("#sidebarnav a, #sidebarnav li").removeClass("active selected"),
          $(this).hasClass("active")
            ? $(this).hasClass("active") &&
              ($(this).removeClass("active"),
              $(this).parents("ul:first").removeClass("active"),
              $(this).next("ul").removeClass("in"))
            : ($("ul", $(this).parents("ul:first")).removeClass("in"),
              $("a", $(this).parents("ul:first")).removeClass("active"),
              $(this).next("ul").addClass("in"),
              $(this).addClass("active"));
      }),
      $("#sidebarnav >li >a.has-arrow").on("click", function (r) {
        r.preventDefault();
      });
  });
  $(function () {
    var t = function () {
      var e = window.innerWidth > 0 ? window.innerWidth : this.screen.width;
      e < 1199
        ? ($("#main-wrapper").attr("data-sidebartype", "mini-sidebar"),
          $("#main-wrapper").addClass("mini-sidebar"))
        : ($("#main-wrapper").attr("data-sidebartype", "full"),
          $("#main-wrapper").removeClass("mini-sidebar"));
    };
    $(window).ready(t),
      $(window).on("resize", t),
      $(".sidebartoggler").on("click", function () {
        $("#main-wrapper").toggleClass("mini-sidebar"),
          $("#main-wrapper").hasClass("mini-sidebar")
            ? ($(".sidebartoggler").prop("checked", !0),
              $("#main-wrapper").attr("data-sidebartype", "mini-sidebar"))
            : ($(".sidebartoggler").prop("checked", !1),
              $("#main-wrapper").attr("data-sidebartype", "full"));
      }),
      $(".sidebartoggler").on("click", function () {
        $("#main-wrapper").toggleClass("show-sidebar");
      });
  });
  (function (t, e) {
    typeof hs == "object" && typeof Qr < "u"
      ? (Qr.exports = e())
      : typeof define == "function" && define.amd
      ? define(e)
      : ((t = t || self), (t.SimpleBar = e()));
  })(void 0, function () {
    var t =
      typeof globalThis < "u"
        ? globalThis
        : typeof window < "u"
        ? window
        : typeof global < "u"
        ? global
        : typeof self < "u"
        ? self
        : {};
    function e(I, H) {
      return (H = { exports: {} }), I(H, H.exports), H.exports;
    }
    var n = "object",
      r = function (I) {
        return I && I.Math == Math && I;
      },
      a =
        r(typeof globalThis == n && globalThis) ||
        r(typeof window == n && window) ||
        r(typeof self == n && self) ||
        r(typeof t == n && t) ||
        Function("return this")(),
      o = function (I) {
        try {
          return !!I();
        } catch {
          return !0;
        }
      },
      u = !o(function () {
        return (
          Object.defineProperty({}, "a", {
            get: function () {
              return 7;
            },
          }).a != 7
        );
      }),
      g = {}.propertyIsEnumerable,
      x = Object.getOwnPropertyDescriptor,
      E = x && !g.call({ 1: 2 }, 1),
      L = E
        ? function (H) {
            var q = x(this, H);
            return !!q && q.enumerable;
          }
        : g,
      z = { f: L },
      B = function (I, H) {
        return {
          enumerable: !(I & 1),
          configurable: !(I & 2),
          writable: !(I & 4),
          value: H,
        };
      },
      ae = {}.toString,
      se = function (I) {
        return ae.call(I).slice(8, -1);
      },
      le = "".split,
      he = o(function () {
        return !Object("z").propertyIsEnumerable(0);
      })
        ? function (I) {
            return se(I) == "String" ? le.call(I, "") : Object(I);
          }
        : Object,
      oe = function (I) {
        if (I == null) throw TypeError("Can't call method on " + I);
        return I;
      },
      F = function (I) {
        return he(oe(I));
      },
      ce = function (I) {
        return typeof I == "object" ? I !== null : typeof I == "function";
      },
      ye = function (I, H) {
        if (!ce(I)) return I;
        var q, te;
        if (
          (H &&
            typeof (q = I.toString) == "function" &&
            !ce((te = q.call(I)))) ||
          (typeof (q = I.valueOf) == "function" && !ce((te = q.call(I)))) ||
          (!H && typeof (q = I.toString) == "function" && !ce((te = q.call(I))))
        )
          return te;
        throw TypeError("Can't convert object to primitive value");
      },
      C = {}.hasOwnProperty,
      ke = function (I, H) {
        return C.call(I, H);
      },
      je = a.document,
      tt = ce(je) && ce(je.createElement),
      Ct = function (I) {
        return tt ? je.createElement(I) : {};
      },
      xt =
        !u &&
        !o(function () {
          return (
            Object.defineProperty(Ct("div"), "a", {
              get: function () {
                return 7;
              },
            }).a != 7
          );
        }),
      pt = Object.getOwnPropertyDescriptor,
      Mt = u
        ? pt
        : function (H, q) {
            if (((H = F(H)), (q = ye(q, !0)), xt))
              try {
                return pt(H, q);
              } catch {}
            if (ke(H, q)) return B(!z.f.call(H, q), H[q]);
          },
      Vt = { f: Mt },
      It = function (I) {
        if (!ce(I)) throw TypeError(String(I) + " is not an object");
        return I;
      },
      ht = Object.defineProperty,
      Ie = u
        ? ht
        : function (H, q, te) {
            if ((It(H), (q = ye(q, !0)), It(te), xt))
              try {
                return ht(H, q, te);
              } catch {}
            if ("get" in te || "set" in te)
              throw TypeError("Accessors not supported");
            return "value" in te && (H[q] = te.value), H;
          },
      Lt = { f: Ie },
      we = u
        ? function (I, H, q) {
            return Lt.f(I, H, B(1, q));
          }
        : function (I, H, q) {
            return (I[H] = q), I;
          },
      Xe = function (I, H) {
        try {
          we(a, I, H);
        } catch {
          a[I] = H;
        }
        return H;
      },
      Oe = e(function (I) {
        var H = "__core-js_shared__",
          q = a[H] || Xe(H, {});
        (I.exports = function (te, Z) {
          return q[te] || (q[te] = Z !== void 0 ? Z : {});
        })("versions", []).push({
          version: "3.2.1",
          mode: "global",
          copyright: "© 2019 Denis Pushkarev (zloirock.ru)",
        });
      }),
      Ye = Oe("native-function-to-string", Function.toString),
      Re = a.WeakMap,
      $e = typeof Re == "function" && /native code/.test(Ye.call(Re)),
      Fe = 0,
      ct = Math.random(),
      de = function (I) {
        return (
          "Symbol(" +
          String(I === void 0 ? "" : I) +
          ")_" +
          (++Fe + ct).toString(36)
        );
      },
      yt = Oe("keys"),
      Ze = function (I) {
        return yt[I] || (yt[I] = de(I));
      },
      Zt = {},
      Wt = a.WeakMap,
      $t,
      Rt,
      sn,
      dt = function (I) {
        return sn(I) ? Rt(I) : $t(I, {});
      },
      gt = function (I) {
        return function (H) {
          var q;
          if (!ce(H) || (q = Rt(H)).type !== I)
            throw TypeError("Incompatible receiver, " + I + " required");
          return q;
        };
      };
    if ($e) {
      var mn = new Wt(),
        Jt = mn.get,
        Rn = mn.has,
        jr = mn.set;
      ($t = function (I, H) {
        return jr.call(mn, I, H), H;
      }),
        (Rt = function (I) {
          return Jt.call(mn, I) || {};
        }),
        (sn = function (I) {
          return Rn.call(mn, I);
        });
    } else {
      var vn = Ze("state");
      (Zt[vn] = !0),
        ($t = function (I, H) {
          return we(I, vn, H), H;
        }),
        (Rt = function (I) {
          return ke(I, vn) ? I[vn] : {};
        }),
        (sn = function (I) {
          return ke(I, vn);
        });
    }
    var zn = { set: $t, get: Rt, has: sn, enforce: dt, getterFor: gt },
      Te = e(function (I) {
        var H = zn.get,
          q = zn.enforce,
          te = String(Ye).split("toString");
        Oe("inspectSource", function (Z) {
          return Ye.call(Z);
        }),
          (I.exports = function (Z, xe, Ae, Ne) {
            var He = Ne ? !!Ne.unsafe : !1,
              at = Ne ? !!Ne.enumerable : !1,
              Je = Ne ? !!Ne.noTargetGet : !1;
            if (
              (typeof Ae == "function" &&
                (typeof xe == "string" && !ke(Ae, "name") && we(Ae, "name", xe),
                (q(Ae).source = te.join(typeof xe == "string" ? xe : ""))),
              Z === a)
            ) {
              at ? (Z[xe] = Ae) : Xe(xe, Ae);
              return;
            } else He ? !Je && Z[xe] && (at = !0) : delete Z[xe];
            at ? (Z[xe] = Ae) : we(Z, xe, Ae);
          })(Function.prototype, "toString", function () {
            return (
              (typeof this == "function" && H(this).source) || Ye.call(this)
            );
          });
      }),
      st = a,
      Ge = function (I) {
        return typeof I == "function" ? I : void 0;
      },
      qe = function (I, H) {
        return arguments.length < 2
          ? Ge(st[I]) || Ge(a[I])
          : (st[I] && st[I][H]) || (a[I] && a[I][H]);
      },
      Dt = Math.ceil,
      nn = Math.floor,
      fn = function (I) {
        return isNaN((I = +I)) ? 0 : (I > 0 ? nn : Dt)(I);
      },
      _r = Math.min,
      $r = function (I) {
        return I > 0 ? _r(fn(I), 9007199254740991) : 0;
      },
      ui = Math.max,
      mr = Math.min,
      Vn = function (I, H) {
        var q = fn(I);
        return q < 0 ? ui(q + H, 0) : mr(q, H);
      },
      An = function (I) {
        return function (H, q, te) {
          var Z = F(H),
            xe = $r(Z.length),
            Ae = Vn(te, xe),
            Ne;
          if (I && q != q) {
            for (; xe > Ae; ) if (((Ne = Z[Ae++]), Ne != Ne)) return !0;
          } else
            for (; xe > Ae; Ae++)
              if ((I || Ae in Z) && Z[Ae] === q) return I || Ae || 0;
          return !I && -1;
        };
      },
      hr = { includes: An(!0), indexOf: An(!1) },
      gs = hr.indexOf,
      wi = function (I, H) {
        var q = F(I),
          te = 0,
          Z = [],
          xe;
        for (xe in q) !ke(Zt, xe) && ke(q, xe) && Z.push(xe);
        for (; H.length > te; )
          ke(q, (xe = H[te++])) && (~gs(Z, xe) || Z.push(xe));
        return Z;
      },
      ji = [
        "constructor",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "toLocaleString",
        "toString",
        "valueOf",
      ],
      Os = ji.concat("length", "prototype"),
      Ns =
        Object.getOwnPropertyNames ||
        function (H) {
          return wi(H, Os);
        },
      Na = { f: Ns },
      es = Object.getOwnPropertySymbols,
      ts = { f: es },
      ms =
        qe("Reflect", "ownKeys") ||
        function (H) {
          var q = Na.f(It(H)),
            te = ts.f;
          return te ? q.concat(te(H)) : q;
        },
      La = function (I, H) {
        for (var q = ms(H), te = Lt.f, Z = Vt.f, xe = 0; xe < q.length; xe++) {
          var Ae = q[xe];
          ke(I, Ae) || te(I, Ae, Z(H, Ae));
        }
      },
      ua = /#|\.prototype\./,
      ns = function (I, H) {
        var q = el[Jo(I)];
        return q == nl
          ? !0
          : q == tl
          ? !1
          : typeof H == "function"
          ? o(H)
          : !!H;
      },
      Jo = (ns.normalize = function (I) {
        return String(I).replace(ua, ".").toLowerCase();
      }),
      el = (ns.data = {}),
      tl = (ns.NATIVE = "N"),
      nl = (ns.POLYFILL = "P"),
      Ls = ns,
      go = Vt.f,
      _i = function (I, H) {
        var q = I.target,
          te = I.global,
          Z = I.stat,
          xe,
          Ae,
          Ne,
          He,
          at,
          Je;
        if (
          (te
            ? (Ae = a)
            : Z
            ? (Ae = a[q] || Xe(q, {}))
            : (Ae = (a[q] || {}).prototype),
          Ae)
        )
          for (Ne in H) {
            if (
              ((at = H[Ne]),
              I.noTargetGet
                ? ((Je = go(Ae, Ne)), (He = Je && Je.value))
                : (He = Ae[Ne]),
              (xe = Ls(te ? Ne : q + (Z ? "." : "#") + Ne, I.forced)),
              !xe && He !== void 0)
            ) {
              if (typeof at == typeof He) continue;
              La(at, He);
            }
            (I.sham || (He && He.sham)) && we(at, "sham", !0),
              Te(Ae, Ne, at, I);
          }
      },
      qs = function (I) {
        if (typeof I != "function")
          throw TypeError(String(I) + " is not a function");
        return I;
      },
      er = function (I, H, q) {
        if ((qs(I), H === void 0)) return I;
        switch (q) {
          case 0:
            return function () {
              return I.call(H);
            };
          case 1:
            return function (te) {
              return I.call(H, te);
            };
          case 2:
            return function (te, Z) {
              return I.call(H, te, Z);
            };
          case 3:
            return function (te, Z, xe) {
              return I.call(H, te, Z, xe);
            };
        }
        return function () {
          return I.apply(H, arguments);
        };
      },
      ar = function (I) {
        return Object(oe(I));
      },
      Fi =
        Array.isArray ||
        function (H) {
          return se(H) == "Array";
        },
      Pr =
        !!Object.getOwnPropertySymbols &&
        !o(function () {
          return !String(Symbol());
        }),
      Da = a.Symbol,
      vs = Oe("wks"),
      Hn = function (I) {
        return (
          vs[I] || (vs[I] = (Pr && Da[I]) || (Pr ? Da : de)("Symbol." + I))
        );
      },
      rs = Hn("species"),
      Ks = function (I, H) {
        var q;
        return (
          Fi(I) &&
            ((q = I.constructor),
            typeof q == "function" && (q === Array || Fi(q.prototype))
              ? (q = void 0)
              : ce(q) && ((q = q[rs]), q === null && (q = void 0))),
          new (q === void 0 ? Array : q)(H === 0 ? 0 : H)
        );
      },
      is = [].push,
      Si = function (I) {
        var H = I == 1,
          q = I == 2,
          te = I == 3,
          Z = I == 4,
          xe = I == 6,
          Ae = I == 5 || xe;
        return function (Ne, He, at, Je) {
          for (
            var wt = ar(Ne),
              Pt = he(wt),
              At = er(He, at, 3),
              Bt = $r(Pt.length),
              bn = 0,
              ln = Je || Ks,
              Qt = H ? ln(Ne, Bt) : q ? ln(Ne, 0) : void 0,
              jn,
              Un;
            Bt > bn;
            bn++
          )
            if ((Ae || bn in Pt) && ((jn = Pt[bn]), (Un = At(jn, bn, wt)), I)) {
              if (H) Qt[bn] = Un;
              else if (Un)
                switch (I) {
                  case 3:
                    return !0;
                  case 5:
                    return jn;
                  case 6:
                    return bn;
                  case 2:
                    is.call(Qt, jn);
                }
              else if (Z) return !1;
            }
          return xe ? -1 : te || Z ? Z : Qt;
        };
      },
      U = {
        forEach: Si(0),
        map: Si(1),
        filter: Si(2),
        some: Si(3),
        every: Si(4),
        find: Si(5),
        findIndex: Si(6),
      },
      i = function (I, H) {
        var q = [][I];
        return (
          !q ||
          !o(function () {
            q.call(
              null,
              H ||
                function () {
                  throw 1;
                },
              1
            );
          })
        );
      },
      s = U.forEach,
      l = i("forEach")
        ? function (H) {
            return s(this, H, arguments.length > 1 ? arguments[1] : void 0);
          }
        : [].forEach;
    _i({ target: "Array", proto: !0, forced: [].forEach != l }, { forEach: l });
    var c = {
      CSSRuleList: 0,
      CSSStyleDeclaration: 0,
      CSSValueList: 0,
      ClientRectList: 0,
      DOMRectList: 0,
      DOMStringList: 0,
      DOMTokenList: 1,
      DataTransferItemList: 0,
      FileList: 0,
      HTMLAllCollection: 0,
      HTMLCollection: 0,
      HTMLFormElement: 0,
      HTMLSelectElement: 0,
      MediaList: 0,
      MimeTypeArray: 0,
      NamedNodeMap: 0,
      NodeList: 1,
      PaintRequestList: 0,
      Plugin: 0,
      PluginArray: 0,
      SVGLengthList: 0,
      SVGNumberList: 0,
      SVGPathSegList: 0,
      SVGPointList: 0,
      SVGStringList: 0,
      SVGTransformList: 0,
      SourceBufferList: 0,
      StyleSheetList: 0,
      TextTrackCueList: 0,
      TextTrackList: 0,
      TouchList: 0,
    };
    for (var h in c) {
      var d = a[h],
        f = d && d.prototype;
      if (f && f.forEach !== l)
        try {
          we(f, "forEach", l);
        } catch {
          f.forEach = l;
        }
    }
    var p = !!(
        typeof window < "u" &&
        window.document &&
        window.document.createElement
      ),
      v = p,
      b = Hn("species"),
      _ = function (I) {
        return !o(function () {
          var H = [],
            q = (H.constructor = {});
          return (
            (q[b] = function () {
              return { foo: 1 };
            }),
            H[I](Boolean).foo !== 1
          );
        });
      },
      S = U.filter;
    _i(
      { target: "Array", proto: !0, forced: !_("filter") },
      {
        filter: function (H) {
          return S(this, H, arguments.length > 1 ? arguments[1] : void 0);
        },
      }
    );
    var T =
        Object.keys ||
        function (H) {
          return wi(H, ji);
        },
      O = u
        ? Object.defineProperties
        : function (H, q) {
            It(H);
            for (var te = T(q), Z = te.length, xe = 0, Ae; Z > xe; )
              Lt.f(H, (Ae = te[xe++]), q[Ae]);
            return H;
          },
      D = qe("document", "documentElement"),
      V = Ze("IE_PROTO"),
      G = "prototype",
      Q = function () {},
      m = function () {
        var I = Ct("iframe"),
          H = ji.length,
          q = "<",
          te = "script",
          Z = ">",
          xe = "java" + te + ":",
          Ae;
        for (
          I.style.display = "none",
            D.appendChild(I),
            I.src = String(xe),
            Ae = I.contentWindow.document,
            Ae.open(),
            Ae.write(q + te + Z + "document.F=Object" + q + "/" + te + Z),
            Ae.close(),
            m = Ae.F;
          H--;

        )
          delete m[G][ji[H]];
        return m();
      },
      k =
        Object.create ||
        function (H, q) {
          var te;
          return (
            H !== null
              ? ((Q[G] = It(H)), (te = new Q()), (Q[G] = null), (te[V] = H))
              : (te = m()),
            q === void 0 ? te : O(te, q)
          );
        };
    Zt[V] = !0;
    var N = Hn("unscopables"),
      X = Array.prototype;
    X[N] == null && we(X, N, k(null));
    var K = function (I) {
        X[N][I] = !0;
      },
      ee = {},
      fe = !o(function () {
        function I() {}
        return (
          (I.prototype.constructor = null),
          Object.getPrototypeOf(new I()) !== I.prototype
        );
      }),
      ge = Ze("IE_PROTO"),
      Pe = Object.prototype,
      We = fe
        ? Object.getPrototypeOf
        : function (I) {
            return (
              (I = ar(I)),
              ke(I, ge)
                ? I[ge]
                : typeof I.constructor == "function" &&
                  I instanceof I.constructor
                ? I.constructor.prototype
                : I instanceof Object
                ? Pe
                : null
            );
          },
      ze = Hn("iterator"),
      ut = !1,
      St = function () {
        return this;
      },
      zt,
      Ot,
      dn;
    [].keys &&
      ((dn = [].keys()),
      "next" in dn
        ? ((Ot = We(We(dn))), Ot !== Object.prototype && (zt = Ot))
        : (ut = !0)),
      zt == null && (zt = {}),
      ke(zt, ze) || we(zt, ze, St);
    var Ln = { IteratorPrototype: zt, BUGGY_SAFARI_ITERATORS: ut },
      wn = Lt.f,
      On = Hn("toStringTag"),
      Sr = function (I, H, q) {
        I &&
          !ke((I = q ? I : I.prototype), On) &&
          wn(I, On, { configurable: !0, value: H });
      },
      Br = Ln.IteratorPrototype,
      ys = function () {
        return this;
      },
      Ma = function (I, H, q) {
        var te = H + " Iterator";
        return (
          (I.prototype = k(Br, { next: B(1, q) })),
          Sr(I, te, !1),
          (ee[te] = ys),
          I
        );
      },
      Hr = function (I) {
        if (!ce(I) && I !== null)
          throw TypeError("Can't set " + String(I) + " as a prototype");
        return I;
      },
      or =
        Object.setPrototypeOf ||
        ("__proto__" in {}
          ? (function () {
              var I = !1,
                H = {},
                q;
              try {
                (q = Object.getOwnPropertyDescriptor(
                  Object.prototype,
                  "__proto__"
                ).set),
                  q.call(H, []),
                  (I = H instanceof Array);
              } catch {}
              return function (Z, xe) {
                return It(Z), Hr(xe), I ? q.call(Z, xe) : (Z.__proto__ = xe), Z;
              };
            })()
          : void 0),
      Ds = Ln.IteratorPrototype,
      ja = Ln.BUGGY_SAFARI_ITERATORS,
      xs = Hn("iterator"),
      cc = "keys",
      mo = "values",
      Fa = "entries",
      mu = function () {
        return this;
      },
      ha = function (I, H, q, te, Z, xe, Ae) {
        Ma(q, H, te);
        var Ne = function (Qt) {
            if (Qt === Z && Pt) return Pt;
            if (!ja && Qt in Je) return Je[Qt];
            switch (Qt) {
              case cc:
                return function () {
                  return new q(this, Qt);
                };
              case mo:
                return function () {
                  return new q(this, Qt);
                };
              case Fa:
                return function () {
                  return new q(this, Qt);
                };
            }
            return function () {
              return new q(this);
            };
          },
          He = H + " Iterator",
          at = !1,
          Je = I.prototype,
          wt = Je[xs] || Je["@@iterator"] || (Z && Je[Z]),
          Pt = (!ja && wt) || Ne(Z),
          At = (H == "Array" && Je.entries) || wt,
          Bt,
          bn,
          ln;
        if (
          (At &&
            ((Bt = We(At.call(new I()))),
            Ds !== Object.prototype &&
              Bt.next &&
              (We(Bt) !== Ds &&
                (or
                  ? or(Bt, Ds)
                  : typeof Bt[xs] != "function" && we(Bt, xs, mu)),
              Sr(Bt, He, !0))),
          Z == mo &&
            wt &&
            wt.name !== mo &&
            ((at = !0),
            (Pt = function () {
              return wt.call(this);
            })),
          Je[xs] !== Pt && we(Je, xs, Pt),
          (ee[H] = Pt),
          Z)
        )
          if (
            ((bn = { values: Ne(mo), keys: xe ? Pt : Ne(cc), entries: Ne(Fa) }),
            Ae)
          )
            for (ln in bn) (ja || at || !(ln in Je)) && Te(Je, ln, bn[ln]);
          else _i({ target: H, proto: !0, forced: ja || at }, bn);
        return bn;
      },
      uc = "Array Iterator",
      hc = zn.set,
      rl = zn.getterFor(uc),
      za = ha(
        Array,
        "Array",
        function (I, H) {
          hc(this, { type: uc, target: F(I), index: 0, kind: H });
        },
        function () {
          var I = rl(this),
            H = I.target,
            q = I.kind,
            te = I.index++;
          return !H || te >= H.length
            ? ((I.target = void 0), { value: void 0, done: !0 })
            : q == "keys"
            ? { value: te, done: !1 }
            : q == "values"
            ? { value: H[te], done: !1 }
            : { value: [te, H[te]], done: !1 };
        },
        "values"
      );
    (ee.Arguments = ee.Array), K("keys"), K("values"), K("entries");
    var Qs = Object.assign,
      y =
        !Qs ||
        o(function () {
          var I = {},
            H = {},
            q = Symbol(),
            te = "abcdefghijklmnopqrst";
          return (
            (I[q] = 7),
            te.split("").forEach(function (Z) {
              H[Z] = Z;
            }),
            Qs({}, I)[q] != 7 || T(Qs({}, H)).join("") != te
          );
        })
          ? function (H, q) {
              for (
                var te = ar(H),
                  Z = arguments.length,
                  xe = 1,
                  Ae = ts.f,
                  Ne = z.f;
                Z > xe;

              )
                for (
                  var He = he(arguments[xe++]),
                    at = Ae ? T(He).concat(Ae(He)) : T(He),
                    Je = at.length,
                    wt = 0,
                    Pt;
                  Je > wt;

                )
                  (Pt = at[wt++]), (!u || Ne.call(He, Pt)) && (te[Pt] = He[Pt]);
              return te;
            }
          : Qs;
    _i(
      { target: "Object", stat: !0, forced: Object.assign !== y },
      { assign: y }
    );
    var A = Hn("toStringTag"),
      R =
        se(
          (function () {
            return arguments;
          })()
        ) == "Arguments",
      M = function (I, H) {
        try {
          return I[H];
        } catch {}
      },
      Y = function (I) {
        var H, q, te;
        return I === void 0
          ? "Undefined"
          : I === null
          ? "Null"
          : typeof (q = M((H = Object(I)), A)) == "string"
          ? q
          : R
          ? se(H)
          : (te = se(H)) == "Object" && typeof H.callee == "function"
          ? "Arguments"
          : te;
      },
      J = Hn("toStringTag"),
      re = {};
    re[J] = "z";
    var pe =
        String(re) !== "[object z]"
          ? function () {
              return "[object " + Y(this) + "]";
            }
          : re.toString,
      be = Object.prototype;
    pe !== be.toString && Te(be, "toString", pe, { unsafe: !0 });
    var Ee = `	
\v\f\r                　\u2028\u2029\uFEFF`,
      Ve = "[" + Ee + "]",
      Ke = RegExp("^" + Ve + Ve + "*"),
      De = RegExp(Ve + Ve + "*$"),
      Me = function (I) {
        return function (H) {
          var q = String(oe(H));
          return (
            I & 1 && (q = q.replace(Ke, "")),
            I & 2 && (q = q.replace(De, "")),
            q
          );
        };
      },
      Et = { start: Me(1), end: Me(2), trim: Me(3) },
      jt = Et.trim,
      Tt = a.parseInt,
      tr = /^[+-]?0[Xx]/,
      vr = Tt(Ee + "08") !== 8 || Tt(Ee + "0x16") !== 22,
      hi = vr
        ? function (H, q) {
            var te = jt(String(H));
            return Tt(te, q >>> 0 || (tr.test(te) ? 16 : 10));
          }
        : Tt;
    _i({ global: !0, forced: parseInt != hi }, { parseInt: hi });
    var Dn = function (I) {
        return function (H, q) {
          var te = String(oe(H)),
            Z = fn(q),
            xe = te.length,
            Ae,
            Ne;
          return Z < 0 || Z >= xe
            ? I
              ? ""
              : void 0
            : ((Ae = te.charCodeAt(Z)),
              Ae < 55296 ||
              Ae > 56319 ||
              Z + 1 === xe ||
              (Ne = te.charCodeAt(Z + 1)) < 56320 ||
              Ne > 57343
                ? I
                  ? te.charAt(Z)
                  : Ae
                : I
                ? te.slice(Z, Z + 2)
                : ((Ae - 55296) << 10) + (Ne - 56320) + 65536);
        };
      },
      Gt = { codeAt: Dn(!1), charAt: Dn(!0) },
      Jr = Gt.charAt,
      xn = "String Iterator",
      rr = zn.set,
      vo = zn.getterFor(xn);
    ha(
      String,
      "String",
      function (I) {
        rr(this, { type: xn, string: String(I), index: 0 });
      },
      function () {
        var H = vo(this),
          q = H.string,
          te = H.index,
          Z;
        return te >= q.length
          ? { value: void 0, done: !0 }
          : ((Z = Jr(q, te)), (H.index += Z.length), { value: Z, done: !1 });
      }
    );
    var da = function (I, H, q) {
        for (var te in H) Te(I, te, H[te], q);
        return I;
      },
      Ei = !o(function () {
        return Object.isExtensible(Object.preventExtensions({}));
      }),
      di = e(function (I) {
        var H = Lt.f,
          q = de("meta"),
          te = 0,
          Z =
            Object.isExtensible ||
            function () {
              return !0;
            },
          xe = function (Je) {
            H(Je, q, { value: { objectID: "O" + ++te, weakData: {} } });
          },
          Ae = function (Je, wt) {
            if (!ce(Je))
              return typeof Je == "symbol"
                ? Je
                : (typeof Je == "string" ? "S" : "P") + Je;
            if (!ke(Je, q)) {
              if (!Z(Je)) return "F";
              if (!wt) return "E";
              xe(Je);
            }
            return Je[q].objectID;
          },
          Ne = function (Je, wt) {
            if (!ke(Je, q)) {
              if (!Z(Je)) return !0;
              if (!wt) return !1;
              xe(Je);
            }
            return Je[q].weakData;
          },
          He = function (Je) {
            return Ei && at.REQUIRED && Z(Je) && !ke(Je, q) && xe(Je), Je;
          },
          at = (I.exports = {
            REQUIRED: !1,
            fastKey: Ae,
            getWeakData: Ne,
            onFreeze: He,
          });
        Zt[q] = !0;
      });
    di.REQUIRED, di.fastKey, di.getWeakData, di.onFreeze;
    var fa = Hn("iterator"),
      ei = Array.prototype,
      Zs = function (I) {
        return I !== void 0 && (ee.Array === I || ei[fa] === I);
      },
      zi = Hn("iterator"),
      ir = function (I) {
        if (I != null) return I[zi] || I["@@iterator"] || ee[Y(I)];
      },
      Er = function (I, H, q, te) {
        try {
          return te ? H(It(q)[0], q[1]) : H(q);
        } catch (xe) {
          var Z = I.return;
          throw (Z !== void 0 && It(Z.call(I)), xe);
        }
      },
      ti = e(function (I) {
        var H = function (te, Z) {
            (this.stopped = te), (this.result = Z);
          },
          q = (I.exports = function (te, Z, xe, Ae, Ne) {
            var He = er(Z, xe, Ae ? 2 : 1),
              at,
              Je,
              wt,
              Pt,
              At,
              Bt;
            if (Ne) at = te;
            else {
              if (((Je = ir(te)), typeof Je != "function"))
                throw TypeError("Target is not iterable");
              if (Zs(Je)) {
                for (wt = 0, Pt = $r(te.length); Pt > wt; wt++)
                  if (
                    ((At = Ae ? He(It((Bt = te[wt]))[0], Bt[1]) : He(te[wt])),
                    At && At instanceof H)
                  )
                    return At;
                return new H(!1);
              }
              at = Je.call(te);
            }
            for (; !(Bt = at.next()).done; )
              if (((At = Er(at, He, Bt.value, Ae)), At && At instanceof H))
                return At;
            return new H(!1);
          });
        q.stop = function (te) {
          return new H(!0, te);
        };
      }),
      Vi = function (I, H, q) {
        if (!(I instanceof H))
          throw TypeError("Incorrect " + (q ? q + " " : "") + "invocation");
        return I;
      },
      rn = Hn("iterator"),
      _n = !1;
    try {
      var yr = 0,
        ni = {
          next: function () {
            return { done: !!yr++ };
          },
          return: function () {
            _n = !0;
          },
        };
      (ni[rn] = function () {
        return this;
      }),
        Array.from(ni, function () {
          throw 2;
        });
    } catch {}
    var xr = function (I, H) {
        if (!H && !_n) return !1;
        var q = !1;
        try {
          var te = {};
          (te[rn] = function () {
            return {
              next: function () {
                return { done: (q = !0) };
              },
            };
          }),
            I(te);
        } catch {}
        return q;
      },
      ki = function (I, H, q) {
        var te, Z;
        return (
          or &&
            typeof (te = H.constructor) == "function" &&
            te !== q &&
            ce((Z = te.prototype)) &&
            Z !== q.prototype &&
            or(I, Z),
          I
        );
      },
      fi = function (I, H, q, te, Z) {
        var xe = a[I],
          Ae = xe && xe.prototype,
          Ne = xe,
          He = te ? "set" : "add",
          at = {},
          Je = function (ln) {
            var Qt = Ae[ln];
            Te(
              Ae,
              ln,
              ln == "add"
                ? function (Un) {
                    return Qt.call(this, Un === 0 ? 0 : Un), this;
                  }
                : ln == "delete"
                ? function (jn) {
                    return Z && !ce(jn) ? !1 : Qt.call(this, jn === 0 ? 0 : jn);
                  }
                : ln == "get"
                ? function (Un) {
                    return Z && !ce(Un)
                      ? void 0
                      : Qt.call(this, Un === 0 ? 0 : Un);
                  }
                : ln == "has"
                ? function (Un) {
                    return Z && !ce(Un) ? !1 : Qt.call(this, Un === 0 ? 0 : Un);
                  }
                : function (Un, Js) {
                    return Qt.call(this, Un === 0 ? 0 : Un, Js), this;
                  }
            );
          };
        if (
          Ls(
            I,
            typeof xe != "function" ||
              !(
                Z ||
                (Ae.forEach &&
                  !o(function () {
                    new xe().entries().next();
                  }))
              )
          )
        )
          (Ne = q.getConstructor(H, I, te, He)), (di.REQUIRED = !0);
        else if (Ls(I, !0)) {
          var wt = new Ne(),
            Pt = wt[He](Z ? {} : -0, 1) != wt,
            At = o(function () {
              wt.has(1);
            }),
            Bt = xr(function (ln) {
              new xe(ln);
            }),
            bn =
              !Z &&
              o(function () {
                for (var ln = new xe(), Qt = 5; Qt--; ) ln[He](Qt, Qt);
                return !ln.has(-0);
              });
          Bt ||
            ((Ne = H(function (ln, Qt) {
              Vi(ln, Ne, I);
              var jn = ki(new xe(), ln, Ne);
              return Qt != null && ti(Qt, jn[He], jn, te), jn;
            })),
            (Ne.prototype = Ae),
            (Ae.constructor = Ne)),
            (At || bn) && (Je("delete"), Je("has"), te && Je("get")),
            (bn || Pt) && Je(He),
            Z && Ae.clear && delete Ae.clear;
        }
        return (
          (at[I] = Ne),
          _i({ global: !0, forced: Ne != xe }, at),
          Sr(Ne, I),
          Z || q.setStrong(Ne, I, te),
          Ne
        );
      },
      Va = di.getWeakData,
      Bh = zn.set,
      Hh = zn.getterFor,
      Wh = U.find,
      yo = U.findIndex,
      Uh = 0,
      il = function (I) {
        return I.frozen || (I.frozen = new vu());
      },
      vu = function () {
        this.entries = [];
      },
      pa = function (I, H) {
        return Wh(I.entries, function (q) {
          return q[0] === H;
        });
      };
    vu.prototype = {
      get: function (I) {
        var H = pa(this, I);
        if (H) return H[1];
      },
      has: function (I) {
        return !!pa(this, I);
      },
      set: function (I, H) {
        var q = pa(this, I);
        q ? (q[1] = H) : this.entries.push([I, H]);
      },
      delete: function (I) {
        var H = yo(this.entries, function (q) {
          return q[0] === I;
        });
        return ~H && this.entries.splice(H, 1), !!~H;
      },
    };
    var yu = {
      getConstructor: function (I, H, q, te) {
        var Z = I(function (Ne, He) {
            Vi(Ne, Z, H),
              Bh(Ne, { type: H, id: Uh++, frozen: void 0 }),
              He != null && ti(He, Ne[te], Ne, q);
          }),
          xe = Hh(H),
          Ae = function (Ne, He, at) {
            var Je = xe(Ne),
              wt = Va(It(He), !0);
            return wt === !0 ? il(Je).set(He, at) : (wt[Je.id] = at), Ne;
          };
        return (
          da(Z.prototype, {
            delete: function (Ne) {
              var He = xe(this);
              if (!ce(Ne)) return !1;
              var at = Va(Ne);
              return at === !0
                ? il(He).delete(Ne)
                : at && ke(at, He.id) && delete at[He.id];
            },
            has: function (He) {
              var at = xe(this);
              if (!ce(He)) return !1;
              var Je = Va(He);
              return Je === !0 ? il(at).has(He) : Je && ke(Je, at.id);
            },
          }),
          da(
            Z.prototype,
            q
              ? {
                  get: function (He) {
                    var at = xe(this);
                    if (ce(He)) {
                      var Je = Va(He);
                      return Je === !0
                        ? il(at).get(He)
                        : Je
                        ? Je[at.id]
                        : void 0;
                    }
                  },
                  set: function (He, at) {
                    return Ae(this, He, at);
                  },
                }
              : {
                  add: function (He) {
                    return Ae(this, He, !0);
                  },
                }
          ),
          Z
        );
      },
    };
    e(function (I) {
      var H = zn.enforce,
        q = !a.ActiveXObject && "ActiveXObject" in a,
        te = Object.isExtensible,
        Z,
        xe = function (Pt) {
          return function () {
            return Pt(this, arguments.length ? arguments[0] : void 0);
          };
        },
        Ae = (I.exports = fi("WeakMap", xe, yu, !0, !0));
      if ($e && q) {
        (Z = yu.getConstructor(xe, "WeakMap", !0)), (di.REQUIRED = !0);
        var Ne = Ae.prototype,
          He = Ne.delete,
          at = Ne.has,
          Je = Ne.get,
          wt = Ne.set;
        da(Ne, {
          delete: function (Pt) {
            if (ce(Pt) && !te(Pt)) {
              var At = H(this);
              return (
                At.frozen || (At.frozen = new Z()),
                He.call(this, Pt) || At.frozen.delete(Pt)
              );
            }
            return He.call(this, Pt);
          },
          has: function (At) {
            if (ce(At) && !te(At)) {
              var Bt = H(this);
              return (
                Bt.frozen || (Bt.frozen = new Z()),
                at.call(this, At) || Bt.frozen.has(At)
              );
            }
            return at.call(this, At);
          },
          get: function (At) {
            if (ce(At) && !te(At)) {
              var Bt = H(this);
              return (
                Bt.frozen || (Bt.frozen = new Z()),
                at.call(this, At) ? Je.call(this, At) : Bt.frozen.get(At)
              );
            }
            return Je.call(this, At);
          },
          set: function (At, Bt) {
            if (ce(At) && !te(At)) {
              var bn = H(this);
              bn.frozen || (bn.frozen = new Z()),
                at.call(this, At)
                  ? wt.call(this, At, Bt)
                  : bn.frozen.set(At, Bt);
            } else wt.call(this, At, Bt);
            return this;
          },
        });
      }
    });
    var ga = Hn("iterator"),
      Ai = Hn("toStringTag"),
      $i = za.values;
    for (var xo in c) {
      var $a = a[xo],
        ss = $a && $a.prototype;
      if (ss) {
        if (ss[ga] !== $i)
          try {
            we(ss, ga, $i);
          } catch {
            ss[ga] = $i;
          }
        if ((ss[Ai] || we(ss, Ai, xo), c[xo])) {
          for (var Ba in za)
            if (ss[Ba] !== za[Ba])
              try {
                we(ss, Ba, za[Ba]);
              } catch {
                ss[Ba] = za[Ba];
              }
        }
      }
    }
    var $n = "Expected a function",
      bo = NaN,
      Fr = "[object Symbol]",
      bs = /^\s+|\s+$/g,
      dc = /^[-+]0x[0-9a-f]+$/i,
      wo = /^0b[01]+$/i,
      xu = /^0o[0-7]+$/i,
      _o = parseInt,
      fc = typeof t == "object" && t && t.Object === Object && t,
      ma = typeof self == "object" && self && self.Object === Object && self,
      pc = fc || ma || Function("return this")(),
      Ha = Object.prototype,
      sl = Ha.toString,
      So = Math.max,
      gc = Math.min,
      va = function () {
        return pc.Date.now();
      };
    function Wa(I, H, q) {
      var te,
        Z,
        xe,
        Ae,
        Ne,
        He,
        at = 0,
        Je = !1,
        wt = !1,
        Pt = !0;
      if (typeof I != "function") throw new TypeError($n);
      (H = Be(H) || 0),
        ie(q) &&
          ((Je = !!q.leading),
          (wt = "maxWait" in q),
          (xe = wt ? So(Be(q.maxWait) || 0, H) : xe),
          (Pt = "trailing" in q ? !!q.trailing : Pt));
      function At(cn) {
        var Rr = te,
          ii = Z;
        return (te = Z = void 0), (at = cn), (Ae = I.apply(ii, Rr)), Ae;
      }
      function Bt(cn) {
        return (at = cn), (Ne = setTimeout(Qt, H)), Je ? At(cn) : Ae;
      }
      function bn(cn) {
        var Rr = cn - He,
          ii = cn - at,
          Ya = H - Rr;
        return wt ? gc(Ya, xe - ii) : Ya;
      }
      function ln(cn) {
        var Rr = cn - He,
          ii = cn - at;
        return He === void 0 || Rr >= H || Rr < 0 || (wt && ii >= xe);
      }
      function Qt() {
        var cn = va();
        if (ln(cn)) return jn(cn);
        Ne = setTimeout(Qt, bn(cn));
      }
      function jn(cn) {
        return (Ne = void 0), Pt && te ? At(cn) : ((te = Z = void 0), Ae);
      }
      function Un() {
        Ne !== void 0 && clearTimeout(Ne),
          (at = 0),
          (te = He = Z = Ne = void 0);
      }
      function Js() {
        return Ne === void 0 ? Ae : jn(va());
      }
      function _s() {
        var cn = va(),
          Rr = ln(cn);
        if (((te = arguments), (Z = this), (He = cn), Rr)) {
          if (Ne === void 0) return Bt(He);
          if (wt) return (Ne = setTimeout(Qt, H)), At(He);
        }
        return Ne === void 0 && (Ne = setTimeout(Qt, H)), Ae;
      }
      return (_s.cancel = Un), (_s.flush = Js), _s;
    }
    function al(I, H, q) {
      var te = !0,
        Z = !0;
      if (typeof I != "function") throw new TypeError($n);
      return (
        ie(q) &&
          ((te = "leading" in q ? !!q.leading : te),
          (Z = "trailing" in q ? !!q.trailing : Z)),
        Wa(I, H, { leading: te, maxWait: H, trailing: Z })
      );
    }
    function ie(I) {
      var H = typeof I;
      return !!I && (H == "object" || H == "function");
    }
    function me(I) {
      return !!I && typeof I == "object";
    }
    function Se(I) {
      return typeof I == "symbol" || (me(I) && sl.call(I) == Fr);
    }
    function Be(I) {
      if (typeof I == "number") return I;
      if (Se(I)) return bo;
      if (ie(I)) {
        var H = typeof I.valueOf == "function" ? I.valueOf() : I;
        I = ie(H) ? H + "" : H;
      }
      if (typeof I != "string") return I === 0 ? I : +I;
      I = I.replace(bs, "");
      var q = wo.test(I);
      return q || xu.test(I) ? _o(I.slice(2), q ? 2 : 8) : dc.test(I) ? bo : +I;
    }
    var Ce = al,
      et = "Expected a function",
      nt = NaN,
      mt = "[object Symbol]",
      _t = /^\s+|\s+$/g,
      Xt = /^[-+]0x[0-9a-f]+$/i,
      W = /^0b[01]+$/i,
      w = /^0o[0-7]+$/i,
      j = parseInt,
      ne = typeof t == "object" && t && t.Object === Object && t,
      ve = typeof self == "object" && self && self.Object === Object && self,
      _e = ne || ve || Function("return this")(),
      Le = Object.prototype,
      Ue = Le.toString,
      Qe = Math.max,
      bt = Math.min,
      ft = function () {
        return _e.Date.now();
      };
    function ot(I, H, q) {
      var te,
        Z,
        xe,
        Ae,
        Ne,
        He,
        at = 0,
        Je = !1,
        wt = !1,
        Pt = !0;
      if (typeof I != "function") throw new TypeError(et);
      (H = qt(H) || 0),
        Ht(q) &&
          ((Je = !!q.leading),
          (wt = "maxWait" in q),
          (xe = wt ? Qe(qt(q.maxWait) || 0, H) : xe),
          (Pt = "trailing" in q ? !!q.trailing : Pt));
      function At(cn) {
        var Rr = te,
          ii = Z;
        return (te = Z = void 0), (at = cn), (Ae = I.apply(ii, Rr)), Ae;
      }
      function Bt(cn) {
        return (at = cn), (Ne = setTimeout(Qt, H)), Je ? At(cn) : Ae;
      }
      function bn(cn) {
        var Rr = cn - He,
          ii = cn - at,
          Ya = H - Rr;
        return wt ? bt(Ya, xe - ii) : Ya;
      }
      function ln(cn) {
        var Rr = cn - He,
          ii = cn - at;
        return He === void 0 || Rr >= H || Rr < 0 || (wt && ii >= xe);
      }
      function Qt() {
        var cn = ft();
        if (ln(cn)) return jn(cn);
        Ne = setTimeout(Qt, bn(cn));
      }
      function jn(cn) {
        return (Ne = void 0), Pt && te ? At(cn) : ((te = Z = void 0), Ae);
      }
      function Un() {
        Ne !== void 0 && clearTimeout(Ne),
          (at = 0),
          (te = He = Z = Ne = void 0);
      }
      function Js() {
        return Ne === void 0 ? Ae : jn(ft());
      }
      function _s() {
        var cn = ft(),
          Rr = ln(cn);
        if (((te = arguments), (Z = this), (He = cn), Rr)) {
          if (Ne === void 0) return Bt(He);
          if (wt) return (Ne = setTimeout(Qt, H)), At(He);
        }
        return Ne === void 0 && (Ne = setTimeout(Qt, H)), Ae;
      }
      return (_s.cancel = Un), (_s.flush = Js), _s;
    }
    function Ht(I) {
      var H = typeof I;
      return !!I && (H == "object" || H == "function");
    }
    function Ut(I) {
      return !!I && typeof I == "object";
    }
    function en(I) {
      return typeof I == "symbol" || (Ut(I) && Ue.call(I) == mt);
    }
    function qt(I) {
      if (typeof I == "number") return I;
      if (en(I)) return nt;
      if (Ht(I)) {
        var H = typeof I.valueOf == "function" ? I.valueOf() : I;
        I = Ht(H) ? H + "" : H;
      }
      if (typeof I != "string") return I === 0 ? I : +I;
      I = I.replace(_t, "");
      var q = W.test(I);
      return q || w.test(I) ? j(I.slice(2), q ? 2 : 8) : Xt.test(I) ? nt : +I;
    }
    var tn = ot,
      Yn = "Expected a function",
      qn = "__lodash_hash_undefined__",
      yn = "[object Function]",
      Mn = "[object GeneratorFunction]",
      pn = /[\\^$.*+?()[\]{}|]/g,
      Sn = /^\[object .+?Constructor\]$/,
      Wn = typeof t == "object" && t && t.Object === Object && t,
      Gn = typeof self == "object" && self && self.Object === Object && self,
      Bn = Wn || Gn || Function("return this")();
    function kr(I, H) {
      return I == null ? void 0 : I[H];
    }
    function as(I) {
      var H = !1;
      if (I != null && typeof I.toString != "function")
        try {
          H = !!(I + "");
        } catch {}
      return H;
    }
    var Ms = Array.prototype,
      Ci = Function.prototype,
      os = Object.prototype,
      ri = Bn["__core-js_shared__"],
      Wr = (function () {
        var I = /[^.]+$/.exec((ri && ri.keys && ri.keys.IE_PROTO) || "");
        return I ? "Symbol(src)_1." + I : "";
      })(),
      js = Ci.toString,
      ws = os.hasOwnProperty,
      ol = os.toString,
      Ur = RegExp(
        "^" +
          js
            .call(ws)
            .replace(pn, "\\$&")
            .replace(
              /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
              "$1.*?"
            ) +
          "$"
      ),
      Kn = Ms.splice,
      Ti = Gh(Bn, "Map"),
      pi = Gh(Object, "create");
    function Bi(I) {
      var H = -1,
        q = I ? I.length : 0;
      for (this.clear(); ++H < q; ) {
        var te = I[H];
        this.set(te[0], te[1]);
      }
    }
    function bu() {
      this.__data__ = pi ? pi(null) : {};
    }
    function dp(I) {
      return this.has(I) && delete this.__data__[I];
    }
    function fp(I) {
      var H = this.__data__;
      if (pi) {
        var q = H[I];
        return q === qn ? void 0 : q;
      }
      return ws.call(H, I) ? H[I] : void 0;
    }
    function wu(I) {
      var H = this.__data__;
      return pi ? H[I] !== void 0 : ws.call(H, I);
    }
    function cy(I, H) {
      var q = this.__data__;
      return (q[I] = pi && H === void 0 ? qn : H), this;
    }
    (Bi.prototype.clear = bu),
      (Bi.prototype.delete = dp),
      (Bi.prototype.get = fp),
      (Bi.prototype.has = wu),
      (Bi.prototype.set = cy);
    function ll(I) {
      var H = -1,
        q = I ? I.length : 0;
      for (this.clear(); ++H < q; ) {
        var te = I[H];
        this.set(te[0], te[1]);
      }
    }
    function Xh() {
      this.__data__ = [];
    }
    function uy(I) {
      var H = this.__data__,
        q = mc(H, I);
      if (q < 0) return !1;
      var te = H.length - 1;
      return q == te ? H.pop() : Kn.call(H, q, 1), !0;
    }
    function pp(I) {
      var H = this.__data__,
        q = mc(H, I);
      return q < 0 ? void 0 : H[q][1];
    }
    function hy(I) {
      return mc(this.__data__, I) > -1;
    }
    function gp(I, H) {
      var q = this.__data__,
        te = mc(q, I);
      return te < 0 ? q.push([I, H]) : (q[te][1] = H), this;
    }
    (ll.prototype.clear = Xh),
      (ll.prototype.delete = uy),
      (ll.prototype.get = pp),
      (ll.prototype.has = hy),
      (ll.prototype.set = gp);
    function Ua(I) {
      var H = -1,
        q = I ? I.length : 0;
      for (this.clear(); ++H < q; ) {
        var te = I[H];
        this.set(te[0], te[1]);
      }
    }
    function dy() {
      this.__data__ = {
        hash: new Bi(),
        map: new (Ti || ll)(),
        string: new Bi(),
      };
    }
    function fy(I) {
      return vc(this, I).delete(I);
    }
    function Eo(I) {
      return vc(this, I).get(I);
    }
    function _u(I) {
      return vc(this, I).has(I);
    }
    function mp(I, H) {
      return vc(this, I).set(I, H), this;
    }
    (Ua.prototype.clear = dy),
      (Ua.prototype.delete = fy),
      (Ua.prototype.get = Eo),
      (Ua.prototype.has = _u),
      (Ua.prototype.set = mp);
    function mc(I, H) {
      for (var q = I.length; q--; ) if (Kh(I[q][0], H)) return q;
      return -1;
    }
    function Yh(I) {
      if (!k_(I) || yp(I)) return !1;
      var H = xp(I) || as(I) ? Ur : Sn;
      return H.test(py(I));
    }
    function vc(I, H) {
      var q = I.__data__;
      return vp(H) ? q[typeof H == "string" ? "string" : "hash"] : q.map;
    }
    function Gh(I, H) {
      var q = kr(I, H);
      return Yh(q) ? q : void 0;
    }
    function vp(I) {
      var H = typeof I;
      return H == "string" || H == "number" || H == "symbol" || H == "boolean"
        ? I !== "__proto__"
        : I === null;
    }
    function yp(I) {
      return !!Wr && Wr in I;
    }
    function py(I) {
      if (I != null) {
        try {
          return js.call(I);
        } catch {}
        try {
          return I + "";
        } catch {}
      }
      return "";
    }
    function qh(I, H) {
      if (typeof I != "function" || (H && typeof H != "function"))
        throw new TypeError(Yn);
      var q = function () {
        var te = arguments,
          Z = H ? H.apply(this, te) : te[0],
          xe = q.cache;
        if (xe.has(Z)) return xe.get(Z);
        var Ae = I.apply(this, te);
        return (q.cache = xe.set(Z, Ae)), Ae;
      };
      return (q.cache = new (qh.Cache || Ua)()), q;
    }
    qh.Cache = Ua;
    function Kh(I, H) {
      return I === H || (I !== I && H !== H);
    }
    function xp(I) {
      var H = k_(I) ? ol.call(I) : "";
      return H == yn || H == Mn;
    }
    function k_(I) {
      var H = typeof I;
      return !!I && (H == "object" || H == "function");
    }
    var FL = qh,
      yc = [],
      zL = function () {
        return yc.some(function (I) {
          return I.activeTargets.length > 0;
        });
      },
      VL = function () {
        return yc.some(function (I) {
          return I.skippedTargets.length > 0;
        });
      },
      A_ = "ResizeObserver loop completed with undelivered notifications.",
      $L = function () {
        var I;
        typeof ErrorEvent == "function"
          ? (I = new ErrorEvent("error", { message: A_ }))
          : ((I = document.createEvent("Event")),
            I.initEvent("error", !1, !1),
            (I.message = A_)),
          window.dispatchEvent(I);
      },
      Qh;
    (function (I) {
      (I.BORDER_BOX = "border-box"),
        (I.CONTENT_BOX = "content-box"),
        (I.DEVICE_PIXEL_CONTENT_BOX = "device-pixel-content-box");
    })(Qh || (Qh = {}));
    var xc = function (I) {
        return Object.freeze(I);
      },
      BL = (function () {
        function I(H, q) {
          (this.inlineSize = H), (this.blockSize = q), xc(this);
        }
        return I;
      })(),
      C_ = (function () {
        function I(H, q, te, Z) {
          return (
            (this.x = H),
            (this.y = q),
            (this.width = te),
            (this.height = Z),
            (this.top = this.y),
            (this.left = this.x),
            (this.bottom = this.top + this.height),
            (this.right = this.left + this.width),
            xc(this)
          );
        }
        return (
          (I.prototype.toJSON = function () {
            var H = this,
              q = H.x,
              te = H.y,
              Z = H.top,
              xe = H.right,
              Ae = H.bottom,
              Ne = H.left,
              He = H.width,
              at = H.height;
            return {
              x: q,
              y: te,
              top: Z,
              right: xe,
              bottom: Ae,
              left: Ne,
              width: He,
              height: at,
            };
          }),
          (I.fromRect = function (H) {
            return new I(H.x, H.y, H.width, H.height);
          }),
          I
        );
      })(),
      gy = function (I) {
        return I instanceof SVGElement && "getBBox" in I;
      },
      T_ = function (I) {
        if (gy(I)) {
          var H = I.getBBox(),
            q = H.width,
            te = H.height;
          return !q && !te;
        }
        var Z = I,
          xe = Z.offsetWidth,
          Ae = Z.offsetHeight;
        return !(xe || Ae || I.getClientRects().length);
      },
      I_ = function (I) {
        var H, q;
        if (I instanceof Element) return !0;
        var te =
          (q = (H = I) === null || H === void 0 ? void 0 : H.ownerDocument) ===
            null || q === void 0
            ? void 0
            : q.defaultView;
        return !!(te && I instanceof te.Element);
      },
      HL = function (I) {
        switch (I.tagName) {
          case "INPUT":
            if (I.type !== "image") break;
          case "VIDEO":
          case "AUDIO":
          case "EMBED":
          case "OBJECT":
          case "CANVAS":
          case "IFRAME":
          case "IMG":
            return !0;
        }
        return !1;
      },
      Zh = typeof window < "u" ? window : {},
      bp = new WeakMap(),
      P_ = /auto|scroll/,
      WL = /^tb|vertical/,
      UL = /msie|trident/i.test(Zh.navigator && Zh.navigator.userAgent),
      Xa = function (I) {
        return parseFloat(I || "0");
      },
      Su = function (I, H, q) {
        return (
          I === void 0 && (I = 0),
          H === void 0 && (H = 0),
          q === void 0 && (q = !1),
          new BL((q ? H : I) || 0, (q ? I : H) || 0)
        );
      },
      R_ = xc({
        devicePixelContentBoxSize: Su(),
        borderBoxSize: Su(),
        contentBoxSize: Su(),
        contentRect: new C_(0, 0, 0, 0),
      }),
      O_ = function (I, H) {
        if ((H === void 0 && (H = !1), bp.has(I) && !H)) return bp.get(I);
        if (T_(I)) return bp.set(I, R_), R_;
        var q = getComputedStyle(I),
          te = gy(I) && I.ownerSVGElement && I.getBBox(),
          Z = !UL && q.boxSizing === "border-box",
          xe = WL.test(q.writingMode || ""),
          Ae = !te && P_.test(q.overflowY || ""),
          Ne = !te && P_.test(q.overflowX || ""),
          He = te ? 0 : Xa(q.paddingTop),
          at = te ? 0 : Xa(q.paddingRight),
          Je = te ? 0 : Xa(q.paddingBottom),
          wt = te ? 0 : Xa(q.paddingLeft),
          Pt = te ? 0 : Xa(q.borderTopWidth),
          At = te ? 0 : Xa(q.borderRightWidth),
          Bt = te ? 0 : Xa(q.borderBottomWidth),
          bn = te ? 0 : Xa(q.borderLeftWidth),
          ln = wt + at,
          Qt = He + Je,
          jn = bn + At,
          Un = Pt + Bt,
          Js = Ne ? I.offsetHeight - Un - I.clientHeight : 0,
          _s = Ae ? I.offsetWidth - jn - I.clientWidth : 0,
          cn = Z ? ln + jn : 0,
          Rr = Z ? Qt + Un : 0,
          ii = te ? te.width : Xa(q.width) - cn - _s,
          Ya = te ? te.height : Xa(q.height) - Rr - Js,
          E2 = ii + ln + _s + jn,
          k2 = Ya + Qt + Js + Un,
          G_ = xc({
            devicePixelContentBoxSize: Su(
              Math.round(ii * devicePixelRatio),
              Math.round(Ya * devicePixelRatio),
              xe
            ),
            borderBoxSize: Su(E2, k2, xe),
            contentBoxSize: Su(ii, Ya, xe),
            contentRect: new C_(wt, He, ii, Ya),
          });
        return bp.set(I, G_), G_;
      },
      N_ = function (I, H, q) {
        var te = O_(I, q),
          Z = te.borderBoxSize,
          xe = te.contentBoxSize,
          Ae = te.devicePixelContentBoxSize;
        switch (H) {
          case Qh.DEVICE_PIXEL_CONTENT_BOX:
            return Ae;
          case Qh.BORDER_BOX:
            return Z;
          default:
            return xe;
        }
      },
      XL = (function () {
        function I(H) {
          var q = O_(H);
          (this.target = H),
            (this.contentRect = q.contentRect),
            (this.borderBoxSize = xc([q.borderBoxSize])),
            (this.contentBoxSize = xc([q.contentBoxSize])),
            (this.devicePixelContentBoxSize = xc([
              q.devicePixelContentBoxSize,
            ]));
        }
        return I;
      })(),
      L_ = function (I) {
        if (T_(I)) return 1 / 0;
        for (var H = 0, q = I.parentNode; q; ) (H += 1), (q = q.parentNode);
        return H;
      },
      YL = function () {
        var I = 1 / 0,
          H = [];
        yc.forEach(function (Ae) {
          if (Ae.activeTargets.length !== 0) {
            var Ne = [];
            Ae.activeTargets.forEach(function (at) {
              var Je = new XL(at.target),
                wt = L_(at.target);
              Ne.push(Je),
                (at.lastReportedSize = N_(at.target, at.observedBox)),
                wt < I && (I = wt);
            }),
              H.push(function () {
                Ae.callback.call(Ae.observer, Ne, Ae.observer);
              }),
              Ae.activeTargets.splice(0, Ae.activeTargets.length);
          }
        });
        for (var q = 0, te = H; q < te.length; q++) {
          var Z = te[q];
          Z();
        }
        return I;
      },
      D_ = function (I) {
        yc.forEach(function (q) {
          q.activeTargets.splice(0, q.activeTargets.length),
            q.skippedTargets.splice(0, q.skippedTargets.length),
            q.observationTargets.forEach(function (Z) {
              Z.isActive() &&
                (L_(Z.target) > I
                  ? q.activeTargets.push(Z)
                  : q.skippedTargets.push(Z));
            });
        });
      },
      GL = function () {
        var I = 0;
        for (D_(I); zL(); ) (I = YL()), D_(I);
        return VL() && $L(), I > 0;
      },
      my,
      M_ = [],
      qL = function () {
        return M_.splice(0).forEach(function (I) {
          return I();
        });
      },
      KL = function (I) {
        if (!my) {
          var H = 0,
            q = document.createTextNode(""),
            te = { characterData: !0 };
          new MutationObserver(function () {
            return qL();
          }).observe(q, te),
            (my = function () {
              q.textContent = "" + (H ? H-- : H++);
            });
        }
        M_.push(I), my();
      },
      QL = function (I) {
        KL(function () {
          requestAnimationFrame(I);
        });
      },
      wp = 0,
      ZL = function () {
        return !!wp;
      },
      JL = 250,
      e2 = { attributes: !0, characterData: !0, childList: !0, subtree: !0 },
      j_ = [
        "resize",
        "load",
        "transitionend",
        "animationend",
        "animationstart",
        "animationiteration",
        "keyup",
        "keydown",
        "mouseup",
        "mousedown",
        "mouseover",
        "mouseout",
        "blur",
        "focus",
      ],
      F_ = function (I) {
        return I === void 0 && (I = 0), Date.now() + I;
      },
      vy = !1,
      t2 = (function () {
        function I() {
          var H = this;
          (this.stopped = !0),
            (this.listener = function () {
              return H.schedule();
            });
        }
        return (
          (I.prototype.run = function (H) {
            var q = this;
            if ((H === void 0 && (H = JL), !vy)) {
              vy = !0;
              var te = F_(H);
              QL(function () {
                var Z = !1;
                try {
                  Z = GL();
                } finally {
                  if (((vy = !1), (H = te - F_()), !ZL())) return;
                  Z ? q.run(1e3) : H > 0 ? q.run(H) : q.start();
                }
              });
            }
          }),
          (I.prototype.schedule = function () {
            this.stop(), this.run();
          }),
          (I.prototype.observe = function () {
            var H = this,
              q = function () {
                return H.observer && H.observer.observe(document.body, e2);
              };
            document.body ? q() : Zh.addEventListener("DOMContentLoaded", q);
          }),
          (I.prototype.start = function () {
            var H = this;
            this.stopped &&
              ((this.stopped = !1),
              (this.observer = new MutationObserver(this.listener)),
              this.observe(),
              j_.forEach(function (q) {
                return Zh.addEventListener(q, H.listener, !0);
              }));
          }),
          (I.prototype.stop = function () {
            var H = this;
            this.stopped ||
              (this.observer && this.observer.disconnect(),
              j_.forEach(function (q) {
                return Zh.removeEventListener(q, H.listener, !0);
              }),
              (this.stopped = !0));
          }),
          I
        );
      })(),
      yy = new t2(),
      z_ = function (I) {
        !wp && I > 0 && yy.start(), (wp += I), !wp && yy.stop();
      },
      n2 = function (I) {
        return !gy(I) && !HL(I) && getComputedStyle(I).display === "inline";
      },
      r2 = (function () {
        function I(H, q) {
          (this.target = H),
            (this.observedBox = q || Qh.CONTENT_BOX),
            (this.lastReportedSize = { inlineSize: 0, blockSize: 0 });
        }
        return (
          (I.prototype.isActive = function () {
            var H = N_(this.target, this.observedBox, !0);
            return (
              n2(this.target) && (this.lastReportedSize = H),
              this.lastReportedSize.inlineSize !== H.inlineSize ||
                this.lastReportedSize.blockSize !== H.blockSize
            );
          }),
          I
        );
      })(),
      i2 = (function () {
        function I(H, q) {
          (this.activeTargets = []),
            (this.skippedTargets = []),
            (this.observationTargets = []),
            (this.observer = H),
            (this.callback = q);
        }
        return I;
      })(),
      _p = new WeakMap(),
      V_ = function (I, H) {
        for (var q = 0; q < I.length; q += 1) if (I[q].target === H) return q;
        return -1;
      },
      Sp = (function () {
        function I() {}
        return (
          (I.connect = function (H, q) {
            var te = new i2(H, q);
            _p.set(H, te);
          }),
          (I.observe = function (H, q, te) {
            var Z = _p.get(H),
              xe = Z.observationTargets.length === 0;
            V_(Z.observationTargets, q) < 0 &&
              (xe && yc.push(Z),
              Z.observationTargets.push(new r2(q, te && te.box)),
              z_(1),
              yy.schedule());
          }),
          (I.unobserve = function (H, q) {
            var te = _p.get(H),
              Z = V_(te.observationTargets, q),
              xe = te.observationTargets.length === 1;
            Z >= 0 &&
              (xe && yc.splice(yc.indexOf(te), 1),
              te.observationTargets.splice(Z, 1),
              z_(-1));
          }),
          (I.disconnect = function (H) {
            var q = this,
              te = _p.get(H);
            te.observationTargets.slice().forEach(function (Z) {
              return q.unobserve(H, Z.target);
            }),
              te.activeTargets.splice(0, te.activeTargets.length);
          }),
          I
        );
      })(),
      s2 = (function () {
        function I(H) {
          if (arguments.length === 0)
            throw new TypeError(
              "Failed to construct 'ResizeObserver': 1 argument required, but only 0 present."
            );
          if (typeof H != "function")
            throw new TypeError(
              "Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function."
            );
          Sp.connect(this, H);
        }
        return (
          (I.prototype.observe = function (H, q) {
            if (arguments.length === 0)
              throw new TypeError(
                "Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present."
              );
            if (!I_(H))
              throw new TypeError(
                "Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element"
              );
            Sp.observe(this, H, q);
          }),
          (I.prototype.unobserve = function (H) {
            if (arguments.length === 0)
              throw new TypeError(
                "Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present."
              );
            if (!I_(H))
              throw new TypeError(
                "Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element"
              );
            Sp.unobserve(this, H);
          }),
          (I.prototype.disconnect = function () {
            Sp.disconnect(this);
          }),
          (I.toString = function () {
            return "function ResizeObserver () { [polyfill code] }";
          }),
          I
        );
      })(),
      $_ = function (I) {
        return function (H, q, te, Z) {
          qs(q);
          var xe = ar(H),
            Ae = he(xe),
            Ne = $r(xe.length),
            He = I ? Ne - 1 : 0,
            at = I ? -1 : 1;
          if (te < 2)
            for (;;) {
              if (He in Ae) {
                (Z = Ae[He]), (He += at);
                break;
              }
              if (((He += at), I ? He < 0 : Ne <= He))
                throw TypeError("Reduce of empty array with no initial value");
            }
          for (; I ? He >= 0 : Ne > He; He += at)
            He in Ae && (Z = q(Z, Ae[He], He, xe));
          return Z;
        };
      },
      a2 = { left: $_(!1), right: $_(!0) },
      o2 = a2.left;
    _i(
      { target: "Array", proto: !0, forced: i("reduce") },
      {
        reduce: function (H) {
          return o2(
            this,
            H,
            arguments.length,
            arguments.length > 1 ? arguments[1] : void 0
          );
        },
      }
    );
    var l2 = Lt.f,
      xy = Function.prototype,
      c2 = xy.toString,
      u2 = /^\s*function ([^ (]*)/,
      B_ = "name";
    u &&
      !(B_ in xy) &&
      l2(xy, B_, {
        configurable: !0,
        get: function () {
          try {
            return c2.call(this).match(u2)[1];
          } catch {
            return "";
          }
        },
      });
    var h2 = function () {
        var I = It(this),
          H = "";
        return (
          I.global && (H += "g"),
          I.ignoreCase && (H += "i"),
          I.multiline && (H += "m"),
          I.dotAll && (H += "s"),
          I.unicode && (H += "u"),
          I.sticky && (H += "y"),
          H
        );
      },
      Ep = RegExp.prototype.exec,
      d2 = String.prototype.replace,
      H_ = Ep,
      by = (function () {
        var I = /a/,
          H = /b*/g;
        return (
          Ep.call(I, "a"),
          Ep.call(H, "a"),
          I.lastIndex !== 0 || H.lastIndex !== 0
        );
      })(),
      wy = /()??/.exec("")[1] !== void 0,
      f2 = by || wy;
    f2 &&
      (H_ = function (H) {
        var q = this,
          te,
          Z,
          xe,
          Ae;
        return (
          wy && (Z = new RegExp("^" + q.source + "$(?!\\s)", h2.call(q))),
          by && (te = q.lastIndex),
          (xe = Ep.call(q, H)),
          by && xe && (q.lastIndex = q.global ? xe.index + xe[0].length : te),
          wy &&
            xe &&
            xe.length > 1 &&
            d2.call(xe[0], Z, function () {
              for (Ae = 1; Ae < arguments.length - 2; Ae++)
                arguments[Ae] === void 0 && (xe[Ae] = void 0);
            }),
          xe
        );
      });
    var kp = H_;
    _i({ target: "RegExp", proto: !0, forced: /./.exec !== kp }, { exec: kp });
    var p2 = Hn("species"),
      g2 = !o(function () {
        var I = /./;
        return (
          (I.exec = function () {
            var H = [];
            return (H.groups = { a: "7" }), H;
          }),
          "".replace(I, "$<a>") !== "7"
        );
      }),
      m2 = !o(function () {
        var I = /(?:)/,
          H = I.exec;
        I.exec = function () {
          return H.apply(this, arguments);
        };
        var q = "ab".split(I);
        return q.length !== 2 || q[0] !== "a" || q[1] !== "b";
      }),
      W_ = function (I, H, q, te) {
        var Z = Hn(I),
          xe = !o(function () {
            var wt = {};
            return (
              (wt[Z] = function () {
                return 7;
              }),
              ""[I](wt) != 7
            );
          }),
          Ae =
            xe &&
            !o(function () {
              var wt = !1,
                Pt = /a/;
              return (
                (Pt.exec = function () {
                  return (wt = !0), null;
                }),
                I === "split" &&
                  ((Pt.constructor = {}),
                  (Pt.constructor[p2] = function () {
                    return Pt;
                  })),
                Pt[Z](""),
                !wt
              );
            });
        if (!xe || !Ae || (I === "replace" && !g2) || (I === "split" && !m2)) {
          var Ne = /./[Z],
            He = q(Z, ""[I], function (wt, Pt, At, Bt, bn) {
              return Pt.exec === kp
                ? xe && !bn
                  ? { done: !0, value: Ne.call(Pt, At, Bt) }
                  : { done: !0, value: wt.call(At, Pt, Bt) }
                : { done: !1 };
            }),
            at = He[0],
            Je = He[1];
          Te(String.prototype, I, at),
            Te(
              RegExp.prototype,
              Z,
              H == 2
                ? function (wt, Pt) {
                    return Je.call(wt, this, Pt);
                  }
                : function (wt) {
                    return Je.call(wt, this);
                  }
            ),
            te && we(RegExp.prototype[Z], "sham", !0);
        }
      },
      v2 = Gt.charAt,
      U_ = function (I, H, q) {
        return H + (q ? v2(I, H).length : 1);
      },
      _y = function (I, H) {
        var q = I.exec;
        if (typeof q == "function") {
          var te = q.call(I, H);
          if (typeof te != "object")
            throw TypeError(
              "RegExp exec method returned something other than an Object or null"
            );
          return te;
        }
        if (se(I) !== "RegExp")
          throw TypeError("RegExp#exec called on incompatible receiver");
        return kp.call(I, H);
      };
    W_("match", 1, function (I, H, q) {
      return [
        function (Z) {
          var xe = oe(this),
            Ae = Z == null ? void 0 : Z[I];
          return Ae !== void 0 ? Ae.call(Z, xe) : new RegExp(Z)[I](String(xe));
        },
        function (te) {
          var Z = q(H, te, this);
          if (Z.done) return Z.value;
          var xe = It(te),
            Ae = String(this);
          if (!xe.global) return _y(xe, Ae);
          var Ne = xe.unicode;
          xe.lastIndex = 0;
          for (var He = [], at = 0, Je; (Je = _y(xe, Ae)) !== null; ) {
            var wt = String(Je[0]);
            (He[at] = wt),
              wt === "" && (xe.lastIndex = U_(Ae, $r(xe.lastIndex), Ne)),
              at++;
          }
          return at === 0 ? null : He;
        },
      ];
    });
    var y2 = Math.max,
      x2 = Math.min,
      b2 = Math.floor,
      w2 = /\$([$&'`]|\d\d?|<[^>]*>)/g,
      _2 = /\$([$&'`]|\d\d?)/g,
      S2 = function (I) {
        return I === void 0 ? I : String(I);
      };
    W_("replace", 2, function (I, H, q) {
      return [
        function (xe, Ae) {
          var Ne = oe(this),
            He = xe == null ? void 0 : xe[I];
          return He !== void 0
            ? He.call(xe, Ne, Ae)
            : H.call(String(Ne), xe, Ae);
        },
        function (Z, xe) {
          var Ae = q(H, Z, this, xe);
          if (Ae.done) return Ae.value;
          var Ne = It(Z),
            He = String(this),
            at = typeof xe == "function";
          at || (xe = String(xe));
          var Je = Ne.global;
          if (Je) {
            var wt = Ne.unicode;
            Ne.lastIndex = 0;
          }
          for (var Pt = []; ; ) {
            var At = _y(Ne, He);
            if (At === null || (Pt.push(At), !Je)) break;
            var Bt = String(At[0]);
            Bt === "" && (Ne.lastIndex = U_(He, $r(Ne.lastIndex), wt));
          }
          for (var bn = "", ln = 0, Qt = 0; Qt < Pt.length; Qt++) {
            At = Pt[Qt];
            for (
              var jn = String(At[0]),
                Un = y2(x2(fn(At.index), He.length), 0),
                Js = [],
                _s = 1;
              _s < At.length;
              _s++
            )
              Js.push(S2(At[_s]));
            var cn = At.groups;
            if (at) {
              var Rr = [jn].concat(Js, Un, He);
              cn !== void 0 && Rr.push(cn);
              var ii = String(xe.apply(void 0, Rr));
            } else ii = te(jn, He, Un, Js, cn, xe);
            Un >= ln && ((bn += He.slice(ln, Un) + ii), (ln = Un + jn.length));
          }
          return bn + He.slice(ln);
        },
      ];
      function te(Z, xe, Ae, Ne, He, at) {
        var Je = Ae + Z.length,
          wt = Ne.length,
          Pt = _2;
        return (
          He !== void 0 && ((He = ar(He)), (Pt = w2)),
          H.call(at, Pt, function (At, Bt) {
            var bn;
            switch (Bt.charAt(0)) {
              case "$":
                return "$";
              case "&":
                return Z;
              case "`":
                return xe.slice(0, Ae);
              case "'":
                return xe.slice(Je);
              case "<":
                bn = He[Bt.slice(1, -1)];
                break;
              default:
                var ln = +Bt;
                if (ln === 0) return At;
                if (ln > wt) {
                  var Qt = b2(ln / 10);
                  return Qt === 0
                    ? At
                    : Qt <= wt
                    ? Ne[Qt - 1] === void 0
                      ? Bt.charAt(1)
                      : Ne[Qt - 1] + Bt.charAt(1)
                    : At;
                }
                bn = Ne[ln - 1];
            }
            return bn === void 0 ? "" : bn;
          })
        );
      }
    });
    var Ap = function (H) {
      var q = Array.prototype.reduce.call(
        H,
        function (te, Z) {
          var xe = Z.name.match(/data-simplebar-(.+)/);
          if (xe) {
            var Ae = xe[1].replace(/\W+(.)/g, function (Ne, He) {
              return He.toUpperCase();
            });
            switch (Z.value) {
              case "true":
                te[Ae] = !0;
                break;
              case "false":
                te[Ae] = !1;
                break;
              case void 0:
                te[Ae] = !0;
                break;
              default:
                te[Ae] = Z.value;
            }
          }
          return te;
        },
        {}
      );
      return q;
    };
    function cl(I) {
      return !I || !I.ownerDocument || !I.ownerDocument.defaultView
        ? window
        : I.ownerDocument.defaultView;
    }
    function Cp(I) {
      return !I || !I.ownerDocument ? document : I.ownerDocument;
    }
    var Eu = null,
      X_ = null;
    v &&
      window.addEventListener("resize", function () {
        X_ !== window.devicePixelRatio &&
          ((X_ = window.devicePixelRatio), (Eu = null));
      });
    function Y_(I) {
      if (Eu === null) {
        var H = Cp(I);
        if (typeof H > "u") return (Eu = 0), Eu;
        var q = H.body,
          te = H.createElement("div");
        te.classList.add("simplebar-hide-scrollbar"), q.appendChild(te);
        var Z = te.getBoundingClientRect().right;
        q.removeChild(te), (Eu = Z);
      }
      return Eu;
    }
    var Xr = (function () {
      function I(q, te) {
        var Z = this;
        (this.onScroll = function () {
          var xe = cl(Z.el);
          Z.scrollXTicking ||
            (xe.requestAnimationFrame(Z.scrollX), (Z.scrollXTicking = !0)),
            Z.scrollYTicking ||
              (xe.requestAnimationFrame(Z.scrollY), (Z.scrollYTicking = !0));
        }),
          (this.scrollX = function () {
            Z.axis.x.isOverflowing &&
              (Z.showScrollbar("x"), Z.positionScrollbar("x")),
              (Z.scrollXTicking = !1);
          }),
          (this.scrollY = function () {
            Z.axis.y.isOverflowing &&
              (Z.showScrollbar("y"), Z.positionScrollbar("y")),
              (Z.scrollYTicking = !1);
          }),
          (this.onMouseEnter = function () {
            Z.showScrollbar("x"), Z.showScrollbar("y");
          }),
          (this.onMouseMove = function (xe) {
            (Z.mouseX = xe.clientX),
              (Z.mouseY = xe.clientY),
              (Z.axis.x.isOverflowing || Z.axis.x.forceVisible) &&
                Z.onMouseMoveForAxis("x"),
              (Z.axis.y.isOverflowing || Z.axis.y.forceVisible) &&
                Z.onMouseMoveForAxis("y");
          }),
          (this.onMouseLeave = function () {
            Z.onMouseMove.cancel(),
              (Z.axis.x.isOverflowing || Z.axis.x.forceVisible) &&
                Z.onMouseLeaveForAxis("x"),
              (Z.axis.y.isOverflowing || Z.axis.y.forceVisible) &&
                Z.onMouseLeaveForAxis("y"),
              (Z.mouseX = -1),
              (Z.mouseY = -1);
          }),
          (this.onWindowResize = function () {
            (Z.scrollbarWidth = Z.getScrollbarWidth()), Z.hideNativeScrollbar();
          }),
          (this.hideScrollbars = function () {
            (Z.axis.x.track.rect = Z.axis.x.track.el.getBoundingClientRect()),
              (Z.axis.y.track.rect = Z.axis.y.track.el.getBoundingClientRect()),
              Z.isWithinBounds(Z.axis.y.track.rect) ||
                (Z.axis.y.scrollbar.el.classList.remove(Z.classNames.visible),
                (Z.axis.y.isVisible = !1)),
              Z.isWithinBounds(Z.axis.x.track.rect) ||
                (Z.axis.x.scrollbar.el.classList.remove(Z.classNames.visible),
                (Z.axis.x.isVisible = !1));
          }),
          (this.onPointerEvent = function (xe) {
            var Ae, Ne;
            (Z.axis.x.track.rect = Z.axis.x.track.el.getBoundingClientRect()),
              (Z.axis.y.track.rect = Z.axis.y.track.el.getBoundingClientRect()),
              (Z.axis.x.isOverflowing || Z.axis.x.forceVisible) &&
                (Ae = Z.isWithinBounds(Z.axis.x.track.rect)),
              (Z.axis.y.isOverflowing || Z.axis.y.forceVisible) &&
                (Ne = Z.isWithinBounds(Z.axis.y.track.rect)),
              (Ae || Ne) &&
                (xe.preventDefault(),
                xe.stopPropagation(),
                xe.type === "mousedown" &&
                  (Ae &&
                    ((Z.axis.x.scrollbar.rect =
                      Z.axis.x.scrollbar.el.getBoundingClientRect()),
                    Z.isWithinBounds(Z.axis.x.scrollbar.rect)
                      ? Z.onDragStart(xe, "x")
                      : Z.onTrackClick(xe, "x")),
                  Ne &&
                    ((Z.axis.y.scrollbar.rect =
                      Z.axis.y.scrollbar.el.getBoundingClientRect()),
                    Z.isWithinBounds(Z.axis.y.scrollbar.rect)
                      ? Z.onDragStart(xe, "y")
                      : Z.onTrackClick(xe, "y"))));
          }),
          (this.drag = function (xe) {
            var Ae,
              Ne = Z.axis[Z.draggedAxis].track,
              He = Ne.rect[Z.axis[Z.draggedAxis].sizeAttr],
              at = Z.axis[Z.draggedAxis].scrollbar,
              Je = Z.contentWrapperEl[Z.axis[Z.draggedAxis].scrollSizeAttr],
              wt = parseInt(Z.elStyles[Z.axis[Z.draggedAxis].sizeAttr], 10);
            xe.preventDefault(),
              xe.stopPropagation(),
              Z.draggedAxis === "y" ? (Ae = xe.pageY) : (Ae = xe.pageX);
            var Pt =
                Ae -
                Ne.rect[Z.axis[Z.draggedAxis].offsetAttr] -
                Z.axis[Z.draggedAxis].dragOffset,
              At = Pt / (He - at.size),
              Bt = At * (Je - wt);
            Z.draggedAxis === "x" &&
              ((Bt =
                Z.isRtl && I.getRtlHelpers().isRtlScrollbarInverted
                  ? Bt - (He + at.size)
                  : Bt),
              (Bt =
                Z.isRtl && I.getRtlHelpers().isRtlScrollingInverted
                  ? -Bt
                  : Bt)),
              (Z.contentWrapperEl[Z.axis[Z.draggedAxis].scrollOffsetAttr] = Bt);
          }),
          (this.onEndDrag = function (xe) {
            var Ae = Cp(Z.el),
              Ne = cl(Z.el);
            xe.preventDefault(),
              xe.stopPropagation(),
              Z.el.classList.remove(Z.classNames.dragging),
              Ae.removeEventListener("mousemove", Z.drag, !0),
              Ae.removeEventListener("mouseup", Z.onEndDrag, !0),
              (Z.removePreventClickId = Ne.setTimeout(function () {
                Ae.removeEventListener("click", Z.preventClick, !0),
                  Ae.removeEventListener("dblclick", Z.preventClick, !0),
                  (Z.removePreventClickId = null);
              }));
          }),
          (this.preventClick = function (xe) {
            xe.preventDefault(), xe.stopPropagation();
          }),
          (this.el = q),
          (this.minScrollbarWidth = 20),
          (this.options = Object.assign({}, I.defaultOptions, {}, te)),
          (this.classNames = Object.assign(
            {},
            I.defaultOptions.classNames,
            {},
            this.options.classNames
          )),
          (this.axis = {
            x: {
              scrollOffsetAttr: "scrollLeft",
              sizeAttr: "width",
              scrollSizeAttr: "scrollWidth",
              offsetSizeAttr: "offsetWidth",
              offsetAttr: "left",
              overflowAttr: "overflowX",
              dragOffset: 0,
              isOverflowing: !0,
              isVisible: !1,
              forceVisible: !1,
              track: {},
              scrollbar: {},
            },
            y: {
              scrollOffsetAttr: "scrollTop",
              sizeAttr: "height",
              scrollSizeAttr: "scrollHeight",
              offsetSizeAttr: "offsetHeight",
              offsetAttr: "top",
              overflowAttr: "overflowY",
              dragOffset: 0,
              isOverflowing: !0,
              isVisible: !1,
              forceVisible: !1,
              track: {},
              scrollbar: {},
            },
          }),
          (this.removePreventClickId = null),
          !I.instances.has(this.el) &&
            ((this.recalculate = Ce(this.recalculate.bind(this), 64)),
            (this.onMouseMove = Ce(this.onMouseMove.bind(this), 64)),
            (this.hideScrollbars = tn(
              this.hideScrollbars.bind(this),
              this.options.timeout
            )),
            (this.onWindowResize = tn(this.onWindowResize.bind(this), 64, {
              leading: !0,
            })),
            (I.getRtlHelpers = FL(I.getRtlHelpers)),
            this.init());
      }
      (I.getRtlHelpers = function () {
        var te = document.createElement("div");
        te.innerHTML =
          '<div class="hs-dummy-scrollbar-size"><div style="height: 200%; width: 200%; margin: 10px 0;"></div></div>';
        var Z = te.firstElementChild;
        document.body.appendChild(Z);
        var xe = Z.firstElementChild;
        Z.scrollLeft = 0;
        var Ae = I.getOffset(Z),
          Ne = I.getOffset(xe);
        Z.scrollLeft = 999;
        var He = I.getOffset(xe);
        return {
          isRtlScrollingInverted:
            Ae.left !== Ne.left && Ne.left - He.left !== 0,
          isRtlScrollbarInverted: Ae.left !== Ne.left,
        };
      }),
        (I.getOffset = function (te) {
          var Z = te.getBoundingClientRect(),
            xe = Cp(te),
            Ae = cl(te);
          return {
            top: Z.top + (Ae.pageYOffset || xe.documentElement.scrollTop),
            left: Z.left + (Ae.pageXOffset || xe.documentElement.scrollLeft),
          };
        });
      var H = I.prototype;
      return (
        (H.init = function () {
          I.instances.set(this.el, this),
            v &&
              (this.initDOM(),
              this.setAccessibilityAttributes(),
              (this.scrollbarWidth = this.getScrollbarWidth()),
              this.recalculate(),
              this.initListeners());
        }),
        (H.initDOM = function () {
          var te = this;
          if (
            Array.prototype.filter.call(this.el.children, function (Ae) {
              return Ae.classList.contains(te.classNames.wrapper);
            }).length
          )
            (this.wrapperEl = this.el.querySelector(
              "." + this.classNames.wrapper
            )),
              (this.contentWrapperEl =
                this.options.scrollableNode ||
                this.el.querySelector("." + this.classNames.contentWrapper)),
              (this.contentEl =
                this.options.contentNode ||
                this.el.querySelector("." + this.classNames.contentEl)),
              (this.offsetEl = this.el.querySelector(
                "." + this.classNames.offset
              )),
              (this.maskEl = this.el.querySelector("." + this.classNames.mask)),
              (this.placeholderEl = this.findChild(
                this.wrapperEl,
                "." + this.classNames.placeholder
              )),
              (this.heightAutoObserverWrapperEl = this.el.querySelector(
                "." + this.classNames.heightAutoObserverWrapperEl
              )),
              (this.heightAutoObserverEl = this.el.querySelector(
                "." + this.classNames.heightAutoObserverEl
              )),
              (this.axis.x.track.el = this.findChild(
                this.el,
                "." + this.classNames.track + "." + this.classNames.horizontal
              )),
              (this.axis.y.track.el = this.findChild(
                this.el,
                "." + this.classNames.track + "." + this.classNames.vertical
              ));
          else {
            for (
              this.wrapperEl = document.createElement("div"),
                this.contentWrapperEl = document.createElement("div"),
                this.offsetEl = document.createElement("div"),
                this.maskEl = document.createElement("div"),
                this.contentEl = document.createElement("div"),
                this.placeholderEl = document.createElement("div"),
                this.heightAutoObserverWrapperEl =
                  document.createElement("div"),
                this.heightAutoObserverEl = document.createElement("div"),
                this.wrapperEl.classList.add(this.classNames.wrapper),
                this.contentWrapperEl.classList.add(
                  this.classNames.contentWrapper
                ),
                this.offsetEl.classList.add(this.classNames.offset),
                this.maskEl.classList.add(this.classNames.mask),
                this.contentEl.classList.add(this.classNames.contentEl),
                this.placeholderEl.classList.add(this.classNames.placeholder),
                this.heightAutoObserverWrapperEl.classList.add(
                  this.classNames.heightAutoObserverWrapperEl
                ),
                this.heightAutoObserverEl.classList.add(
                  this.classNames.heightAutoObserverEl
                );
              this.el.firstChild;

            )
              this.contentEl.appendChild(this.el.firstChild);
            this.contentWrapperEl.appendChild(this.contentEl),
              this.offsetEl.appendChild(this.contentWrapperEl),
              this.maskEl.appendChild(this.offsetEl),
              this.heightAutoObserverWrapperEl.appendChild(
                this.heightAutoObserverEl
              ),
              this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl),
              this.wrapperEl.appendChild(this.maskEl),
              this.wrapperEl.appendChild(this.placeholderEl),
              this.el.appendChild(this.wrapperEl);
          }
          if (!this.axis.x.track.el || !this.axis.y.track.el) {
            var Z = document.createElement("div"),
              xe = document.createElement("div");
            Z.classList.add(this.classNames.track),
              xe.classList.add(this.classNames.scrollbar),
              Z.appendChild(xe),
              (this.axis.x.track.el = Z.cloneNode(!0)),
              this.axis.x.track.el.classList.add(this.classNames.horizontal),
              (this.axis.y.track.el = Z.cloneNode(!0)),
              this.axis.y.track.el.classList.add(this.classNames.vertical),
              this.el.appendChild(this.axis.x.track.el),
              this.el.appendChild(this.axis.y.track.el);
          }
          (this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(
            "." + this.classNames.scrollbar
          )),
            (this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(
              "." + this.classNames.scrollbar
            )),
            this.options.autoHide ||
              (this.axis.x.scrollbar.el.classList.add(this.classNames.visible),
              this.axis.y.scrollbar.el.classList.add(this.classNames.visible)),
            this.el.setAttribute("data-simplebar", "init");
        }),
        (H.setAccessibilityAttributes = function () {
          var te = this.options.ariaLabel || "scrollable content";
          this.contentWrapperEl.setAttribute("tabindex", "0"),
            this.contentWrapperEl.setAttribute("role", "region"),
            this.contentWrapperEl.setAttribute("aria-label", te);
        }),
        (H.initListeners = function () {
          var te = this,
            Z = cl(this.el);
          this.options.autoHide &&
            this.el.addEventListener("mouseenter", this.onMouseEnter),
            ["mousedown", "click", "dblclick"].forEach(function (Ne) {
              te.el.addEventListener(Ne, te.onPointerEvent, !0);
            }),
            ["touchstart", "touchend", "touchmove"].forEach(function (Ne) {
              te.el.addEventListener(Ne, te.onPointerEvent, {
                capture: !0,
                passive: !0,
              });
            }),
            this.el.addEventListener("mousemove", this.onMouseMove),
            this.el.addEventListener("mouseleave", this.onMouseLeave),
            this.contentWrapperEl.addEventListener("scroll", this.onScroll),
            Z.addEventListener("resize", this.onWindowResize);
          var xe = !1,
            Ae = Z.ResizeObserver || s2;
          (this.resizeObserver = new Ae(function () {
            xe && te.recalculate();
          })),
            this.resizeObserver.observe(this.el),
            this.resizeObserver.observe(this.contentEl),
            Z.requestAnimationFrame(function () {
              xe = !0;
            }),
            (this.mutationObserver = new Z.MutationObserver(this.recalculate)),
            this.mutationObserver.observe(this.contentEl, {
              childList: !0,
              subtree: !0,
              characterData: !0,
            });
        }),
        (H.recalculate = function () {
          var te = cl(this.el);
          (this.elStyles = te.getComputedStyle(this.el)),
            (this.isRtl = this.elStyles.direction === "rtl");
          var Z = this.heightAutoObserverEl.offsetHeight <= 1,
            xe = this.heightAutoObserverEl.offsetWidth <= 1,
            Ae = this.contentEl.offsetWidth,
            Ne = this.contentWrapperEl.offsetWidth,
            He = this.elStyles.overflowX,
            at = this.elStyles.overflowY;
          (this.contentEl.style.padding =
            this.elStyles.paddingTop +
            " " +
            this.elStyles.paddingRight +
            " " +
            this.elStyles.paddingBottom +
            " " +
            this.elStyles.paddingLeft),
            (this.wrapperEl.style.margin =
              "-" +
              this.elStyles.paddingTop +
              " -" +
              this.elStyles.paddingRight +
              " -" +
              this.elStyles.paddingBottom +
              " -" +
              this.elStyles.paddingLeft);
          var Je = this.contentEl.scrollHeight,
            wt = this.contentEl.scrollWidth;
          (this.contentWrapperEl.style.height = Z ? "auto" : "100%"),
            (this.placeholderEl.style.width = xe ? Ae + "px" : "auto"),
            (this.placeholderEl.style.height = Je + "px");
          var Pt = this.contentWrapperEl.offsetHeight;
          (this.axis.x.isOverflowing = wt > Ae),
            (this.axis.y.isOverflowing = Je > Pt),
            (this.axis.x.isOverflowing =
              He === "hidden" ? !1 : this.axis.x.isOverflowing),
            (this.axis.y.isOverflowing =
              at === "hidden" ? !1 : this.axis.y.isOverflowing),
            (this.axis.x.forceVisible =
              this.options.forceVisible === "x" ||
              this.options.forceVisible === !0),
            (this.axis.y.forceVisible =
              this.options.forceVisible === "y" ||
              this.options.forceVisible === !0),
            this.hideNativeScrollbar();
          var At = this.axis.x.isOverflowing ? this.scrollbarWidth : 0,
            Bt = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;
          (this.axis.x.isOverflowing =
            this.axis.x.isOverflowing && wt > Ne - Bt),
            (this.axis.y.isOverflowing =
              this.axis.y.isOverflowing && Je > Pt - At),
            (this.axis.x.scrollbar.size = this.getScrollbarSize("x")),
            (this.axis.y.scrollbar.size = this.getScrollbarSize("y")),
            (this.axis.x.scrollbar.el.style.width =
              this.axis.x.scrollbar.size + "px"),
            (this.axis.y.scrollbar.el.style.height =
              this.axis.y.scrollbar.size + "px"),
            this.positionScrollbar("x"),
            this.positionScrollbar("y"),
            this.toggleTrackVisibility("x"),
            this.toggleTrackVisibility("y");
        }),
        (H.getScrollbarSize = function (te) {
          if ((te === void 0 && (te = "y"), !this.axis[te].isOverflowing))
            return 0;
          var Z = this.contentEl[this.axis[te].scrollSizeAttr],
            xe = this.axis[te].track.el[this.axis[te].offsetSizeAttr],
            Ae,
            Ne = xe / Z;
          return (
            (Ae = Math.max(~~(Ne * xe), this.options.scrollbarMinSize)),
            this.options.scrollbarMaxSize &&
              (Ae = Math.min(Ae, this.options.scrollbarMaxSize)),
            Ae
          );
        }),
        (H.positionScrollbar = function (te) {
          if ((te === void 0 && (te = "y"), !!this.axis[te].isOverflowing)) {
            var Z = this.contentWrapperEl[this.axis[te].scrollSizeAttr],
              xe = this.axis[te].track.el[this.axis[te].offsetSizeAttr],
              Ae = parseInt(this.elStyles[this.axis[te].sizeAttr], 10),
              Ne = this.axis[te].scrollbar,
              He = this.contentWrapperEl[this.axis[te].scrollOffsetAttr];
            He =
              te === "x" &&
              this.isRtl &&
              I.getRtlHelpers().isRtlScrollingInverted
                ? -He
                : He;
            var at = He / (Z - Ae),
              Je = ~~((xe - Ne.size) * at);
            (Je =
              te === "x" &&
              this.isRtl &&
              I.getRtlHelpers().isRtlScrollbarInverted
                ? Je + (xe - Ne.size)
                : Je),
              (Ne.el.style.transform =
                te === "x"
                  ? "translate3d(" + Je + "px, 0, 0)"
                  : "translate3d(0, " + Je + "px, 0)");
          }
        }),
        (H.toggleTrackVisibility = function (te) {
          te === void 0 && (te = "y");
          var Z = this.axis[te].track.el,
            xe = this.axis[te].scrollbar.el;
          this.axis[te].isOverflowing || this.axis[te].forceVisible
            ? ((Z.style.visibility = "visible"),
              (this.contentWrapperEl.style[this.axis[te].overflowAttr] =
                "scroll"))
            : ((Z.style.visibility = "hidden"),
              (this.contentWrapperEl.style[this.axis[te].overflowAttr] =
                "hidden")),
            this.axis[te].isOverflowing
              ? (xe.style.display = "block")
              : (xe.style.display = "none");
        }),
        (H.hideNativeScrollbar = function () {
          (this.offsetEl.style[this.isRtl ? "left" : "right"] =
            this.axis.y.isOverflowing || this.axis.y.forceVisible
              ? "-" + this.scrollbarWidth + "px"
              : 0),
            (this.offsetEl.style.bottom =
              this.axis.x.isOverflowing || this.axis.x.forceVisible
                ? "-" + this.scrollbarWidth + "px"
                : 0);
        }),
        (H.onMouseMoveForAxis = function (te) {
          te === void 0 && (te = "y"),
            (this.axis[te].track.rect =
              this.axis[te].track.el.getBoundingClientRect()),
            (this.axis[te].scrollbar.rect =
              this.axis[te].scrollbar.el.getBoundingClientRect());
          var Z = this.isWithinBounds(this.axis[te].scrollbar.rect);
          Z
            ? this.axis[te].scrollbar.el.classList.add(this.classNames.hover)
            : this.axis[te].scrollbar.el.classList.remove(
                this.classNames.hover
              ),
            this.isWithinBounds(this.axis[te].track.rect)
              ? (this.showScrollbar(te),
                this.axis[te].track.el.classList.add(this.classNames.hover))
              : this.axis[te].track.el.classList.remove(this.classNames.hover);
        }),
        (H.onMouseLeaveForAxis = function (te) {
          te === void 0 && (te = "y"),
            this.axis[te].track.el.classList.remove(this.classNames.hover),
            this.axis[te].scrollbar.el.classList.remove(this.classNames.hover);
        }),
        (H.showScrollbar = function (te) {
          te === void 0 && (te = "y");
          var Z = this.axis[te].scrollbar.el;
          this.axis[te].isVisible ||
            (Z.classList.add(this.classNames.visible),
            (this.axis[te].isVisible = !0)),
            this.options.autoHide && this.hideScrollbars();
        }),
        (H.onDragStart = function (te, Z) {
          Z === void 0 && (Z = "y");
          var xe = Cp(this.el),
            Ae = cl(this.el),
            Ne = this.axis[Z].scrollbar,
            He = Z === "y" ? te.pageY : te.pageX;
          (this.axis[Z].dragOffset = He - Ne.rect[this.axis[Z].offsetAttr]),
            (this.draggedAxis = Z),
            this.el.classList.add(this.classNames.dragging),
            xe.addEventListener("mousemove", this.drag, !0),
            xe.addEventListener("mouseup", this.onEndDrag, !0),
            this.removePreventClickId === null
              ? (xe.addEventListener("click", this.preventClick, !0),
                xe.addEventListener("dblclick", this.preventClick, !0))
              : (Ae.clearTimeout(this.removePreventClickId),
                (this.removePreventClickId = null));
        }),
        (H.onTrackClick = function (te, Z) {
          var xe = this;
          if ((Z === void 0 && (Z = "y"), !!this.options.clickOnTrack)) {
            var Ae = cl(this.el);
            this.axis[Z].scrollbar.rect =
              this.axis[Z].scrollbar.el.getBoundingClientRect();
            var Ne = this.axis[Z].scrollbar,
              He = Ne.rect[this.axis[Z].offsetAttr],
              at = parseInt(this.elStyles[this.axis[Z].sizeAttr], 10),
              Je = this.contentWrapperEl[this.axis[Z].scrollOffsetAttr],
              wt = Z === "y" ? this.mouseY - He : this.mouseX - He,
              Pt = wt < 0 ? -1 : 1,
              At = Pt === -1 ? Je - at : Je + at,
              Bt = function bn() {
                if (Pt === -1) {
                  if (Je > At) {
                    var ln;
                    (Je -= xe.options.clickOnTrackSpeed),
                      xe.contentWrapperEl.scrollTo(
                        ((ln = {}), (ln[xe.axis[Z].offsetAttr] = Je), ln)
                      ),
                      Ae.requestAnimationFrame(bn);
                  }
                } else if (Je < At) {
                  var Qt;
                  (Je += xe.options.clickOnTrackSpeed),
                    xe.contentWrapperEl.scrollTo(
                      ((Qt = {}), (Qt[xe.axis[Z].offsetAttr] = Je), Qt)
                    ),
                    Ae.requestAnimationFrame(bn);
                }
              };
            Bt();
          }
        }),
        (H.getContentElement = function () {
          return this.contentEl;
        }),
        (H.getScrollElement = function () {
          return this.contentWrapperEl;
        }),
        (H.getScrollbarWidth = function () {
          try {
            return getComputedStyle(
              this.contentWrapperEl,
              "::-webkit-scrollbar"
            ).display === "none" ||
              "scrollbarWidth" in document.documentElement.style ||
              "-ms-overflow-style" in document.documentElement.style
              ? 0
              : Y_(this.el);
          } catch {
            return Y_(this.el);
          }
        }),
        (H.removeListeners = function () {
          var te = this,
            Z = cl(this.el);
          this.options.autoHide &&
            this.el.removeEventListener("mouseenter", this.onMouseEnter),
            ["mousedown", "click", "dblclick"].forEach(function (xe) {
              te.el.removeEventListener(xe, te.onPointerEvent, !0);
            }),
            ["touchstart", "touchend", "touchmove"].forEach(function (xe) {
              te.el.removeEventListener(xe, te.onPointerEvent, {
                capture: !0,
                passive: !0,
              });
            }),
            this.el.removeEventListener("mousemove", this.onMouseMove),
            this.el.removeEventListener("mouseleave", this.onMouseLeave),
            this.contentWrapperEl &&
              this.contentWrapperEl.removeEventListener(
                "scroll",
                this.onScroll
              ),
            Z.removeEventListener("resize", this.onWindowResize),
            this.mutationObserver && this.mutationObserver.disconnect(),
            this.resizeObserver && this.resizeObserver.disconnect(),
            this.recalculate.cancel(),
            this.onMouseMove.cancel(),
            this.hideScrollbars.cancel(),
            this.onWindowResize.cancel();
        }),
        (H.unMount = function () {
          this.removeListeners(), I.instances.delete(this.el);
        }),
        (H.isWithinBounds = function (te) {
          return (
            this.mouseX >= te.left &&
            this.mouseX <= te.left + te.width &&
            this.mouseY >= te.top &&
            this.mouseY <= te.top + te.height
          );
        }),
        (H.findChild = function (te, Z) {
          var xe =
            te.matches ||
            te.webkitMatchesSelector ||
            te.mozMatchesSelector ||
            te.msMatchesSelector;
          return Array.prototype.filter.call(te.children, function (Ae) {
            return xe.call(Ae, Z);
          })[0];
        }),
        I
      );
    })();
    return (
      (Xr.defaultOptions = {
        autoHide: !0,
        forceVisible: !1,
        clickOnTrack: !0,
        clickOnTrackSpeed: 40,
        classNames: {
          contentEl: "simplebar-content",
          contentWrapper: "simplebar-content-wrapper",
          offset: "simplebar-offset",
          mask: "simplebar-mask",
          wrapper: "simplebar-wrapper",
          placeholder: "simplebar-placeholder",
          scrollbar: "simplebar-scrollbar",
          track: "simplebar-track",
          heightAutoObserverWrapperEl: "simplebar-height-auto-observer-wrapper",
          heightAutoObserverEl: "simplebar-height-auto-observer",
          visible: "simplebar-visible",
          horizontal: "simplebar-horizontal",
          vertical: "simplebar-vertical",
          hover: "simplebar-hover",
          dragging: "simplebar-dragging",
        },
        scrollbarMinSize: 25,
        scrollbarMaxSize: 0,
        timeout: 1e3,
      }),
      (Xr.instances = new WeakMap()),
      (Xr.initDOMLoadedElements = function () {
        document.removeEventListener(
          "DOMContentLoaded",
          this.initDOMLoadedElements
        ),
          window.removeEventListener("load", this.initDOMLoadedElements),
          Array.prototype.forEach.call(
            document.querySelectorAll("[data-simplebar]"),
            function (I) {
              I.getAttribute("data-simplebar") !== "init" &&
                !Xr.instances.has(I) &&
                new Xr(I, Ap(I.attributes));
            }
          );
      }),
      (Xr.removeObserver = function () {
        this.globalObserver.disconnect();
      }),
      (Xr.initHtmlApi = function () {
        (this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this)),
          typeof MutationObserver < "u" &&
            ((this.globalObserver = new MutationObserver(Xr.handleMutations)),
            this.globalObserver.observe(document, {
              childList: !0,
              subtree: !0,
            })),
          document.readyState === "complete" ||
          (document.readyState !== "loading" &&
            !document.documentElement.doScroll)
            ? window.setTimeout(this.initDOMLoadedElements)
            : (document.addEventListener(
                "DOMContentLoaded",
                this.initDOMLoadedElements
              ),
              window.addEventListener("load", this.initDOMLoadedElements));
      }),
      (Xr.handleMutations = function (I) {
        I.forEach(function (H) {
          Array.prototype.forEach.call(H.addedNodes, function (q) {
            q.nodeType === 1 &&
              (q.hasAttribute("data-simplebar")
                ? !Xr.instances.has(q) &&
                  document.documentElement.contains(q) &&
                  new Xr(q, Ap(q.attributes))
                : Array.prototype.forEach.call(
                    q.querySelectorAll("[data-simplebar]"),
                    function (te) {
                      te.getAttribute("data-simplebar") !== "init" &&
                        !Xr.instances.has(te) &&
                        document.documentElement.contains(te) &&
                        new Xr(te, Ap(te.attributes));
                    }
                  ));
          }),
            Array.prototype.forEach.call(H.removedNodes, function (q) {
              q.nodeType === 1 &&
                (q.getAttribute("data-simplebar") === "init"
                  ? Xr.instances.has(q) &&
                    !document.documentElement.contains(q) &&
                    Xr.instances.get(q).unMount()
                  : Array.prototype.forEach.call(
                      q.querySelectorAll('[data-simplebar="init"]'),
                      function (te) {
                        Xr.instances.has(te) &&
                          !document.documentElement.contains(te) &&
                          Xr.instances.get(te).unMount();
                      }
                    ));
            });
        });
      }),
      (Xr.getOptions = Ap),
      v && Xr.initHtmlApi(),
      Xr
    );
  });
});
export default Uq();
